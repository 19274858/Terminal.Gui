### YamlMime:ManagedReference
items:
- uid: UICatalog.Scenarios.Animation.BitmapToBraille
  commentId: T:UICatalog.Scenarios.Animation.BitmapToBraille
  id: Animation.BitmapToBraille
  parent: UICatalog.Scenarios
  children:
  - UICatalog.Scenarios.Animation.BitmapToBraille.#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Boolean})
  - UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_HEIGHT
  - UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_WIDTH
  - UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
  - UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  - UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  - UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  langs:
  - csharp
  - vb
  name: Animation.BitmapToBraille
  nameWithType: Animation.BitmapToBraille
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille
  type: Class
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BitmapToBraille
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 76
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  summary: Renders an image as unicode Braille.
  example: []
  syntax:
    content: public class Animation.BitmapToBraille
    content.vb: Public Class Animation.BitmapToBraille
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_WIDTH
  commentId: F:UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_WIDTH
  id: CHAR_WIDTH
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: CHAR_WIDTH
  nameWithType: Animation.BitmapToBraille.CHAR_WIDTH
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_WIDTH
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CHAR_WIDTH
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 78
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public const int CHAR_WIDTH = 2
    return:
      type: System.Int32
    content.vb: Public Const CHAR_WIDTH As Integer = 2
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_HEIGHT
  commentId: F:UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_HEIGHT
  id: CHAR_HEIGHT
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: CHAR_HEIGHT
  nameWithType: Animation.BitmapToBraille.CHAR_HEIGHT
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.CHAR_HEIGHT
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CHAR_HEIGHT
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 79
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public const int CHAR_HEIGHT = 4
    return:
      type: System.Int32
    content.vb: Public Const CHAR_HEIGHT As Integer = 4
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  commentId: P:UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  id: WidthPixels
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: WidthPixels
  nameWithType: Animation.BitmapToBraille.WidthPixels
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  type: Property
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: WidthPixels
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 83
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public int WidthPixels { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property WidthPixels As Integer
  overload: UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels*
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  commentId: P:UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  id: HeightPixels
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: HeightPixels
  nameWithType: Animation.BitmapToBraille.HeightPixels
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  type: Property
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HeightPixels
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 84
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public int HeightPixels { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HeightPixels As Integer
  overload: UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels*
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  commentId: P:UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  id: PixelIsLit
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: PixelIsLit
  nameWithType: Animation.BitmapToBraille.PixelIsLit
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  type: Property
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PixelIsLit
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 86
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public Func<int, int, bool> PixelIsLit { get; }
    parameters: []
    return:
      type: System.Func{System.Int32,System.Int32,System.Boolean}
    content.vb: Public ReadOnly Property PixelIsLit As Func(Of Integer, Integer, Boolean)
  overload: UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit*
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Boolean})
  commentId: M:UICatalog.Scenarios.Animation.BitmapToBraille.#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Boolean})
  id: '#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Boolean})'
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: BitmapToBraille(int, int, Func<int, int, bool>)
  nameWithType: Animation.BitmapToBraille.BitmapToBraille(int, int, Func<int, int, bool>)
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.BitmapToBraille(int, int, System.Func<int, int, bool>)
  type: Constructor
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 88
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public BitmapToBraille(int widthPixels, int heightPixels, Func<int, int, bool> pixelIsLit)
    parameters:
    - id: widthPixels
      type: System.Int32
    - id: heightPixels
      type: System.Int32
    - id: pixelIsLit
      type: System.Func{System.Int32,System.Int32,System.Boolean}
    content.vb: Public Sub New(widthPixels As Integer, heightPixels As Integer, pixelIsLit As Func(Of Integer, Integer, Boolean))
  overload: UICatalog.Scenarios.Animation.BitmapToBraille.#ctor*
  nameWithType.vb: Animation.BitmapToBraille.New(Integer, Integer, Func(Of Integer, Integer, Boolean))
  fullName.vb: UICatalog.Scenarios.Animation.BitmapToBraille.New(Integer, Integer, System.Func(Of Integer, Integer, Boolean))
  name.vb: New(Integer, Integer, Func(Of Integer, Integer, Boolean))
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
  commentId: M:UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
  id: GenerateImage
  parent: UICatalog.Scenarios.Animation.BitmapToBraille
  langs:
  - csharp
  - vb
  name: GenerateImage()
  nameWithType: Animation.BitmapToBraille.GenerateImage()
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage()
  type: Method
  source:
    remote:
      path: UICatalog/Scenarios/Animation.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GenerateImage
    path: ../UICatalog/Scenarios/Animation.cs
    startLine: 95
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public string GenerateImage()
    return:
      type: System.String
    content.vb: Public Function GenerateImage() As String
  overload: UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage*
references:
- uid: UICatalog.Scenarios
  commentId: N:UICatalog.Scenarios
  href: UICatalog.html
  name: UICatalog.Scenarios
  nameWithType: UICatalog.Scenarios
  fullName: UICatalog.Scenarios
  spec.csharp:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
  spec.vb:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  parent: UICatalog.Scenarios.EventExtensions
  definition: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  isExternal: true
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UICatalog.Scenarios.EventExtensions
  commentId: T:UICatalog.Scenarios.EventExtensions
  parent: UICatalog.Scenarios
  href: UICatalog.Scenarios.EventExtensions.html
  name: EventExtensions
  nameWithType: EventExtensions
  fullName: UICatalog.Scenarios.EventExtensions
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels*
  commentId: Overload:UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  href: UICatalog.Scenarios.Animation.BitmapToBraille.html#UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
  name: WidthPixels
  nameWithType: Animation.BitmapToBraille.WidthPixels
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.WidthPixels
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels*
  commentId: Overload:UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  href: UICatalog.Scenarios.Animation.BitmapToBraille.html#UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
  name: HeightPixels
  nameWithType: Animation.BitmapToBraille.HeightPixels
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.HeightPixels
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit*
  commentId: Overload:UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  href: UICatalog.Scenarios.Animation.BitmapToBraille.html#UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
  name: PixelIsLit
  nameWithType: Animation.BitmapToBraille.PixelIsLit
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.PixelIsLit
- uid: System.Func{System.Int32,System.Int32,System.Boolean}
  commentId: T:System.Func{System.Int32,System.Int32,System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<int, int, bool>
  nameWithType: Func<int, int, bool>
  fullName: System.Func<int, int, bool>
  nameWithType.vb: Func(Of Integer, Integer, Boolean)
  fullName.vb: System.Func(Of Integer, Integer, Boolean)
  name.vb: Func(Of Integer, Integer, Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.#ctor*
  commentId: Overload:UICatalog.Scenarios.Animation.BitmapToBraille.#ctor
  href: UICatalog.Scenarios.Animation.BitmapToBraille.html#UICatalog.Scenarios.Animation.BitmapToBraille.#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Boolean})
  name: BitmapToBraille
  nameWithType: Animation.BitmapToBraille.BitmapToBraille
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.BitmapToBraille
  nameWithType.vb: Animation.BitmapToBraille.New
  fullName.vb: UICatalog.Scenarios.Animation.BitmapToBraille.New
  name.vb: New
- uid: UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage*
  commentId: Overload:UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
  href: UICatalog.Scenarios.Animation.BitmapToBraille.html#UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
  name: GenerateImage
  nameWithType: Animation.BitmapToBraille.GenerateImage
  fullName: UICatalog.Scenarios.Animation.BitmapToBraille.GenerateImage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
