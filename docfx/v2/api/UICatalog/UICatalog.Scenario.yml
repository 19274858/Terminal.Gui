### YamlMime:ManagedReference
items:
- uid: UICatalog.Scenario
  commentId: T:UICatalog.Scenario
  id: Scenario
  parent: UICatalog
  children:
  - UICatalog.Scenario.Dispose
  - UICatalog.Scenario.Dispose(System.Boolean)
  - UICatalog.Scenario.GetCategories
  - UICatalog.Scenario.GetDescription
  - UICatalog.Scenario.GetName
  - UICatalog.Scenario.GetScenarios
  - UICatalog.Scenario.Init
  - UICatalog.Scenario.RequestStop
  - UICatalog.Scenario.Run
  - UICatalog.Scenario.Setup
  - UICatalog.Scenario.Theme
  - UICatalog.Scenario.TopLevelColorScheme
  - UICatalog.Scenario.ToString
  - UICatalog.Scenario.Win
  langs:
  - csharp
  - vb
  name: Scenario
  nameWithType: Scenario
  fullName: UICatalog.Scenario
  type: Class
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Scenario
    path: ../UICatalog/Scenario.cs
    startLine: 46
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: >-
    <p>Base class for each demo/scenario.</p>

    <p>
     To define a new scenario:
     <ol><li>Create a new <code>.cs</code> file in the <cs>Scenarios</cs> directory that derives from <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref>.</li><li>Annotate the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> derived class with a <xref href="UICatalog.Scenario.ScenarioMetadata" data-throw-if-not-resolved="false"></xref> attribute specifying the scenario's name and description.</li><li>Add one or more <xref href="UICatalog.Scenario.ScenarioCategory" data-throw-if-not-resolved="false"></xref> attributes to the class specifying which categories the scenario belongs to. If you don't specify a category the scenario will show up in "_All".</li><li>Implement the <xref href="UICatalog.Scenario.Setup" data-throw-if-not-resolved="false"></xref> override which will be called when a user selects the scenario to run.</li><li>Optionally, implement the <xref href="UICatalog.Scenario.Init" data-throw-if-not-resolved="false"></xref> and/or <xref href="UICatalog.Scenario.Run" data-throw-if-not-resolved="false"></xref> overrides to provide a custom implementation.</li></ol>
    </p>

    <p>

    The UI Catalog program uses reflection to find all scenarios and adds them to the

    ListViews. Press ENTER to run the selected scenario. Press the default quit key to quit.	/

    </p>
  example:
  - >-
    The example below is provided in the `Scenarios` directory as a generic sample that can be copied and re-named:

    <pre><code class="lang-csharp">using Terminal.Gui;


    namespace UICatalog {
    	[ScenarioMetadata (Name: "Generic", Description: "Generic sample - A template for creating new Scenarios")]
    	[ScenarioCategory ("Controls")]
    	class MyScenario : Scenario {
    		public override void Setup ()
    		{
    			// Put your scenario code here, e.g.
    			Win.Add (new Button ("Press me!") {
    				X = Pos.Center (),
    				Y = Pos.Center (),
    				Clicked = () =&gt; MessageBox.Query (20, 7, "Hi", "Neat?", "Yes", "No")
    			});
    		}
    	}
    }</code></pre>
  syntax:
    content: 'public class Scenario : IDisposable'
    content.vb: Public Class Scenario Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - UICatalog.Scenarios.AllViewsTester
  - UICatalog.Scenarios.Animation
  - UICatalog.Scenarios.ASCIICustomButtonTest
  - UICatalog.Scenarios.AutoSizeAndDirectionText
  - UICatalog.Scenarios.BackgroundWorkerCollection
  - UICatalog.Scenarios.BasicColors
  - UICatalog.Scenarios.Buttons
  - UICatalog.Scenarios.CharacterMap
  - UICatalog.Scenarios.ClassExplorer
  - UICatalog.Scenarios.Clipping
  - UICatalog.Scenarios.CollectionNavigatorTester
  - UICatalog.Scenarios.ColorPickers
  - UICatalog.Scenarios.CombiningMarks
  - UICatalog.Scenarios.ComboBoxIteration
  - UICatalog.Scenarios.ComputedLayout
  - UICatalog.Scenarios.ConfigurationEditor
  - UICatalog.Scenarios.ContextMenus
  - UICatalog.Scenarios.CsvEditor
  - UICatalog.Scenarios.Dialogs
  - UICatalog.Scenarios.DynamicMenuBar
  - UICatalog.Scenarios.DynamicStatusBar
  - UICatalog.Scenarios.Editor
  - UICatalog.Scenarios.FileDialogExamples
  - UICatalog.Scenarios.Frames
  - UICatalog.Scenarios.GraphViewExample
  - UICatalog.Scenarios.HexEditor
  - UICatalog.Scenarios.Images
  - UICatalog.Scenarios.InteractiveTree
  - UICatalog.Scenarios.InvertColors
  - UICatalog.Scenarios.Keys
  - UICatalog.Scenarios.LabelsAsLabels
  - UICatalog.Scenarios.LineCanvasExperiment
  - UICatalog.Scenarios.LineDrawing
  - UICatalog.Scenarios.LineViewExample
  - UICatalog.Scenarios.ListColumns
  - UICatalog.Scenarios.ListsAndCombos
  - UICatalog.Scenarios.ListViewWithSelection
  - UICatalog.Scenarios.Localization
  - UICatalog.Scenarios.MessageBoxes
  - UICatalog.Scenarios.Mouse
  - UICatalog.Scenarios.MultiColouredTable
  - UICatalog.Scenarios.MyScenario
  - UICatalog.Scenarios.Notepad
  - UICatalog.Scenarios.ProcessTable
  - UICatalog.Scenarios.Progress
  - UICatalog.Scenarios.ProgressBarStyles
  - UICatalog.Scenarios.RuneWidthGreaterThanOne
  - UICatalog.Scenarios.RunTExample
  - UICatalog.Scenarios.Scrolling
  - UICatalog.Scenarios.SendKeys
  - UICatalog.Scenarios.SingleBackgroundWorker
  - UICatalog.Scenarios.Sliders
  - UICatalog.Scenarios.Snake
  - UICatalog.Scenarios.SpinnerViewStyles
  - UICatalog.Scenarios.SyntaxHighlighting
  - UICatalog.Scenarios.TableEditor
  - UICatalog.Scenarios.TabViewExample
  - UICatalog.Scenarios.Text
  - UICatalog.Scenarios.TextAlignments
  - UICatalog.Scenarios.TextAlignmentsAndDirections
  - UICatalog.Scenarios.TextFormatterDemo
  - UICatalog.Scenarios.TextViewAutocompletePopup
  - UICatalog.Scenarios.Threading
  - UICatalog.Scenarios.TileViewNesting
  - UICatalog.Scenarios.TimeAndDate
  - UICatalog.Scenarios.TreeUseCases
  - UICatalog.Scenarios.TreeViewFileSystem
  - UICatalog.Scenarios.TrueColors
  - UICatalog.Scenarios.UnicodeInMenu
  - UICatalog.Scenarios.ViewExperiments
  - UICatalog.Scenarios.VkeyPacketSimulator
  - UICatalog.Scenarios.WindowsAndFrameViews
  - UICatalog.Scenarios.WizardAsView
  - UICatalog.Scenarios.Wizards
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
- uid: UICatalog.Scenario.Theme
  commentId: F:UICatalog.Scenario.Theme
  id: Theme
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Theme
  nameWithType: Scenario.Theme
  fullName: UICatalog.Scenario.Theme
  type: Field
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Theme
    path: ../UICatalog/Scenario.cs
    startLine: 49
  assemblies:
  - UICatalog
  namespace: UICatalog
  syntax:
    content: public string Theme
    return:
      type: System.String
    content.vb: Public Theme As String
- uid: UICatalog.Scenario.TopLevelColorScheme
  commentId: F:UICatalog.Scenario.TopLevelColorScheme
  id: TopLevelColorScheme
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: TopLevelColorScheme
  nameWithType: Scenario.TopLevelColorScheme
  fullName: UICatalog.Scenario.TopLevelColorScheme
  type: Field
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TopLevelColorScheme
    path: ../UICatalog/Scenario.cs
    startLine: 50
  assemblies:
  - UICatalog
  namespace: UICatalog
  syntax:
    content: public string TopLevelColorScheme
    return:
      type: System.String
    content.vb: Public TopLevelColorScheme As String
- uid: UICatalog.Scenario.Win
  commentId: P:UICatalog.Scenario.Win
  id: Win
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Win
  nameWithType: Scenario.Win
  fullName: UICatalog.Scenario.Win
  type: Property
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Win
    path: ../UICatalog/Scenario.cs
    startLine: 55
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: The Window for the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref>. This should be set to <xref href="Terminal.Gui.Application.Top" data-throw-if-not-resolved="false"></xref> in most cases.
  example: []
  syntax:
    content: public Window Win { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Window
    content.vb: Public Property Win As Window
  overload: UICatalog.Scenario.Win*
- uid: UICatalog.Scenario.Init
  commentId: M:UICatalog.Scenario.Init
  id: Init
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Scenario.Init()
  fullName: UICatalog.Scenario.Init()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Init
    path: ../UICatalog/Scenario.cs
    startLine: 73
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: >-
    Helper that provides the default <xref href="Terminal.Gui.Window" data-throw-if-not-resolved="false"></xref> implementation with a frame and 

    label showing the name of the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> and logic to exit back to 

    the Scenario picker UI.

    Override <xref href="UICatalog.Scenario.Init" data-throw-if-not-resolved="false"></xref> to provide any <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> behavior needed.
  remarks: >-
    <p>

    The base implementation calls <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> and creates a <xref href="Terminal.Gui.Window" data-throw-if-not-resolved="false"></xref> for <xref href="UICatalog.Scenario.Win" data-throw-if-not-resolved="false"></xref> 

    and adds it to <xref href="Terminal.Gui.Application.Top" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    Overrides that do not call the base.<xref href="UICatalog.Scenario.Run" data-throw-if-not-resolved="false"></xref>, must call <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> 

    before creating any views or calling other Terminal.Gui APIs.

    </p>
  example: []
  syntax:
    content: public virtual void Init()
    content.vb: Public Overridable Sub Init()
  overload: UICatalog.Scenario.Init*
- uid: UICatalog.Scenario.GetName
  commentId: M:UICatalog.Scenario.GetName
  id: GetName
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: GetName()
  nameWithType: Scenario.GetName()
  fullName: UICatalog.Scenario.GetName()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetName
    path: ../UICatalog/Scenario.cs
    startLine: 131
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Helper to get the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> Name (defined in <xref href="UICatalog.Scenario.ScenarioMetadata" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public string GetName()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetName() As String
  overload: UICatalog.Scenario.GetName*
- uid: UICatalog.Scenario.GetDescription
  commentId: M:UICatalog.Scenario.GetDescription
  id: GetDescription
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: GetDescription()
  nameWithType: Scenario.GetDescription()
  fullName: UICatalog.Scenario.GetDescription()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetDescription
    path: ../UICatalog/Scenario.cs
    startLine: 137
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Helper to get the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> Description (defined in <xref href="UICatalog.Scenario.ScenarioMetadata" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public string GetDescription()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetDescription() As String
  overload: UICatalog.Scenario.GetDescription*
- uid: UICatalog.Scenario.GetCategories
  commentId: M:UICatalog.Scenario.GetCategories
  id: GetCategories
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: GetCategories()
  nameWithType: Scenario.GetCategories()
  fullName: UICatalog.Scenario.GetCategories()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetCategories
    path: ../UICatalog/Scenario.cs
    startLine: 174
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Helper function to get the list of categories a <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> belongs to (defined in <xref href="UICatalog.Scenario.ScenarioCategory" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public List<string> GetCategories()
    return:
      type: System.Collections.Generic.List{System.String}
      description: list of category names
    content.vb: Public Function GetCategories() As List(Of String)
  overload: UICatalog.Scenario.GetCategories*
- uid: UICatalog.Scenario.ToString
  commentId: M:UICatalog.Scenario.ToString
  id: ToString
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Scenario.ToString()
  fullName: UICatalog.Scenario.ToString()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../UICatalog/Scenario.cs
    startLine: 183
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: >-
    Gets the Scenario Name + Description with the Description padded

    based on the longest known Scenario name.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: UICatalog.Scenario.ToString*
- uid: UICatalog.Scenario.Setup
  commentId: M:UICatalog.Scenario.Setup
  id: Setup
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Setup()
  nameWithType: Scenario.Setup()
  fullName: UICatalog.Scenario.Setup()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Setup
    path: ../UICatalog/Scenario.cs
    startLine: 189
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Override this to implement the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> setup logic (create controls, etc...).
  remarks: This is typically the best place to put scenario logic code.
  example: []
  syntax:
    content: public virtual void Setup()
    content.vb: Public Overridable Sub Setup()
  overload: UICatalog.Scenario.Setup*
- uid: UICatalog.Scenario.Run
  commentId: M:UICatalog.Scenario.Run
  id: Run
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: Scenario.Run()
  fullName: UICatalog.Scenario.Run()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Run
    path: ../UICatalog/Scenario.cs
    startLine: 200
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: >-
    Runs the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref>. Override to start the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> 

    using a <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> different than `Top`.
  remarks: Overrides that do not call the base.<xref href="UICatalog.Scenario.Run" data-throw-if-not-resolved="false"></xref>, must call <xref href="Terminal.Gui.Application.Shutdown" data-throw-if-not-resolved="false"></xref> before returning.
  example: []
  syntax:
    content: public virtual void Run()
    content.vb: Public Overridable Sub Run()
  overload: UICatalog.Scenario.Run*
- uid: UICatalog.Scenario.RequestStop
  commentId: M:UICatalog.Scenario.RequestStop
  id: RequestStop
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: RequestStop()
  nameWithType: Scenario.RequestStop()
  fullName: UICatalog.Scenario.RequestStop()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RequestStop
    path: ../UICatalog/Scenario.cs
    startLine: 209
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Stops the scenario. Override to change shutdown behavior for the <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual void RequestStop()
    content.vb: Public Overridable Sub RequestStop()
  overload: UICatalog.Scenario.RequestStop*
- uid: UICatalog.Scenario.GetScenarios
  commentId: M:UICatalog.Scenario.GetScenarios
  id: GetScenarios
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: GetScenarios()
  nameWithType: Scenario.GetScenarios()
  fullName: UICatalog.Scenario.GetScenarios()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetScenarios
    path: ../UICatalog/Scenario.cs
    startLine: 238
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: >-
    Returns a list of all <xref href="UICatalog.Scenario" data-throw-if-not-resolved="false"></xref> instanaces defined in the project, sorted by <xref href="UICatalog.Scenario.ScenarioMetadata.Name" data-throw-if-not-resolved="false"></xref>.

    https://stackoverflow.com/questions/5411694/get-all-inherited-classes-of-an-abstract-class
  example: []
  syntax:
    content: public static List<Scenario> GetScenarios()
    return:
      type: System.Collections.Generic.List{UICatalog.Scenario}
    content.vb: Public Shared Function GetScenarios() As List(Of Scenario)
  overload: UICatalog.Scenario.GetScenarios*
- uid: UICatalog.Scenario.Dispose(System.Boolean)
  commentId: M:UICatalog.Scenario.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: Scenario.Dispose(bool)
  fullName: UICatalog.Scenario.Dispose(bool)
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dispose
    path: ../UICatalog/Scenario.cs
    startLine: 250
  assemblies:
  - UICatalog
  namespace: UICatalog
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: UICatalog.Scenario.Dispose*
  nameWithType.vb: Scenario.Dispose(Boolean)
  fullName.vb: UICatalog.Scenario.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: UICatalog.Scenario.Dispose
  commentId: M:UICatalog.Scenario.Dispose
  id: Dispose
  parent: UICatalog.Scenario
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Scenario.Dispose()
  fullName: UICatalog.Scenario.Dispose()
  type: Method
  source:
    remote:
      path: UICatalog/Scenario.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dispose
    path: ../UICatalog/Scenario.cs
    startLine: 263
  assemblies:
  - UICatalog
  namespace: UICatalog
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: UICatalog.Scenario.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: UICatalog.Scenario
  commentId: T:UICatalog.Scenario
  parent: UICatalog
  href: UICatalog.Scenario.html
  name: Scenario
  nameWithType: Scenario
  fullName: UICatalog.Scenario
- uid: UICatalog.Scenario.ScenarioMetadata
  commentId: T:UICatalog.Scenario.ScenarioMetadata
  parent: UICatalog
  href: UICatalog.Scenario.html
  name: Scenario.ScenarioMetadata
  nameWithType: Scenario.ScenarioMetadata
  fullName: UICatalog.Scenario.ScenarioMetadata
  spec.csharp:
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: .
  - uid: UICatalog.Scenario.ScenarioMetadata
    name: ScenarioMetadata
    href: UICatalog.Scenario.ScenarioMetadata.html
  spec.vb:
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: .
  - uid: UICatalog.Scenario.ScenarioMetadata
    name: ScenarioMetadata
    href: UICatalog.Scenario.ScenarioMetadata.html
- uid: UICatalog.Scenario.ScenarioCategory
  commentId: T:UICatalog.Scenario.ScenarioCategory
  parent: UICatalog
  href: UICatalog.Scenario.html
  name: Scenario.ScenarioCategory
  nameWithType: Scenario.ScenarioCategory
  fullName: UICatalog.Scenario.ScenarioCategory
  spec.csharp:
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: .
  - uid: UICatalog.Scenario.ScenarioCategory
    name: ScenarioCategory
    href: UICatalog.Scenario.ScenarioCategory.html
  spec.vb:
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: .
  - uid: UICatalog.Scenario.ScenarioCategory
    name: ScenarioCategory
    href: UICatalog.Scenario.ScenarioCategory.html
- uid: UICatalog.Scenario.Setup
  commentId: M:UICatalog.Scenario.Setup
  parent: UICatalog.Scenario
  href: UICatalog.Scenario.html#UICatalog.Scenario.Setup
  name: Setup()
  nameWithType: Scenario.Setup()
  fullName: UICatalog.Scenario.Setup()
  spec.csharp:
  - uid: UICatalog.Scenario.Setup
    name: Setup
    href: UICatalog.Scenario.html#UICatalog.Scenario.Setup
  - name: (
  - name: )
  spec.vb:
  - uid: UICatalog.Scenario.Setup
    name: Setup
    href: UICatalog.Scenario.html#UICatalog.Scenario.Setup
  - name: (
  - name: )
- uid: UICatalog.Scenario.Init
  commentId: M:UICatalog.Scenario.Init
  parent: UICatalog.Scenario
  href: UICatalog.Scenario.html#UICatalog.Scenario.Init
  name: Init()
  nameWithType: Scenario.Init()
  fullName: UICatalog.Scenario.Init()
  spec.csharp:
  - uid: UICatalog.Scenario.Init
    name: Init
    href: UICatalog.Scenario.html#UICatalog.Scenario.Init
  - name: (
  - name: )
  spec.vb:
  - uid: UICatalog.Scenario.Init
    name: Init
    href: UICatalog.Scenario.html#UICatalog.Scenario.Init
  - name: (
  - name: )
- uid: UICatalog.Scenario.Run
  commentId: M:UICatalog.Scenario.Run
  parent: UICatalog.Scenario
  href: UICatalog.Scenario.html#UICatalog.Scenario.Run
  name: Run()
  nameWithType: Scenario.Run()
  fullName: UICatalog.Scenario.Run()
  spec.csharp:
  - uid: UICatalog.Scenario.Run
    name: Run
    href: UICatalog.Scenario.html#UICatalog.Scenario.Run
  - name: (
  - name: )
  spec.vb:
  - uid: UICatalog.Scenario.Run
    name: Run
    href: UICatalog.Scenario.html#UICatalog.Scenario.Run
  - name: (
  - name: )
- uid: UICatalog
  commentId: N:UICatalog
  href: UICatalog.html
  name: UICatalog
  nameWithType: UICatalog
  fullName: UICatalog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  parent: UICatalog.Scenarios.EventExtensions
  definition: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  isExternal: true
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UICatalog.Scenarios.EventExtensions
  commentId: T:UICatalog.Scenarios.EventExtensions
  parent: UICatalog.Scenarios
  href: UICatalog.Scenarios.EventExtensions.html
  name: EventExtensions
  nameWithType: EventExtensions
  fullName: UICatalog.Scenarios.EventExtensions
- uid: UICatalog.Scenarios
  commentId: N:UICatalog.Scenarios
  href: UICatalog.html
  name: UICatalog.Scenarios
  nameWithType: UICatalog.Scenarios
  fullName: UICatalog.Scenarios
  spec.csharp:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
  spec.vb:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.Application.Top
  commentId: P:Terminal.Gui.Application.Top
  name: Top
  nameWithType: Application.Top
  fullName: Terminal.Gui.Application.Top
- uid: UICatalog.Scenario.Win*
  commentId: Overload:UICatalog.Scenario.Win
  href: UICatalog.Scenario.html#UICatalog.Scenario.Win
  name: Win
  nameWithType: Scenario.Win
  fullName: UICatalog.Scenario.Win
- uid: Terminal.Gui.Window
  commentId: T:Terminal.Gui.Window
  parent: Terminal.Gui
  name: Window
  nameWithType: Window
  fullName: Terminal.Gui.Window
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
  - name: .
  - uid: Terminal.Gui
    name: Gui
  spec.vb:
  - uid: Terminal
    name: Terminal
  - name: .
  - uid: Terminal.Gui
    name: Gui
- uid: Terminal.Gui.Toplevel
  commentId: T:Terminal.Gui.Toplevel
  parent: Terminal.Gui
  name: Toplevel
  nameWithType: Toplevel
  fullName: Terminal.Gui.Toplevel
- uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  name: Init(ConsoleDriver)
  nameWithType: Application.Init(ConsoleDriver)
  fullName: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  spec.csharp:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
  - name: )
- uid: UICatalog.Scenario.Win
  commentId: P:UICatalog.Scenario.Win
  parent: UICatalog.Scenario
  href: UICatalog.Scenario.html#UICatalog.Scenario.Win
  name: Win
  nameWithType: Scenario.Win
  fullName: UICatalog.Scenario.Win
- uid: UICatalog.Scenario.Init*
  commentId: Overload:UICatalog.Scenario.Init
  href: UICatalog.Scenario.html#UICatalog.Scenario.Init
  name: Init
  nameWithType: Scenario.Init
  fullName: UICatalog.Scenario.Init
- uid: UICatalog.Scenario.GetName*
  commentId: Overload:UICatalog.Scenario.GetName
  href: UICatalog.Scenario.html#UICatalog.Scenario.GetName
  name: GetName
  nameWithType: Scenario.GetName
  fullName: UICatalog.Scenario.GetName
- uid: UICatalog.Scenario.GetDescription*
  commentId: Overload:UICatalog.Scenario.GetDescription
  href: UICatalog.Scenario.html#UICatalog.Scenario.GetDescription
  name: GetDescription
  nameWithType: Scenario.GetDescription
  fullName: UICatalog.Scenario.GetDescription
- uid: UICatalog.Scenario.GetCategories*
  commentId: Overload:UICatalog.Scenario.GetCategories
  href: UICatalog.Scenario.html#UICatalog.Scenario.GetCategories
  name: GetCategories
  nameWithType: Scenario.GetCategories
  fullName: UICatalog.Scenario.GetCategories
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: UICatalog.Scenario.ToString*
  commentId: Overload:UICatalog.Scenario.ToString
  href: UICatalog.Scenario.html#UICatalog.Scenario.ToString
  name: ToString
  nameWithType: Scenario.ToString
  fullName: UICatalog.Scenario.ToString
- uid: UICatalog.Scenario.Setup*
  commentId: Overload:UICatalog.Scenario.Setup
  href: UICatalog.Scenario.html#UICatalog.Scenario.Setup
  name: Setup
  nameWithType: Scenario.Setup
  fullName: UICatalog.Scenario.Setup
- uid: Terminal.Gui.Application.Shutdown
  commentId: M:Terminal.Gui.Application.Shutdown
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: Terminal.Gui.Application.Shutdown()
  spec.csharp:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
  - name: (
  - name: )
- uid: UICatalog.Scenario.Run*
  commentId: Overload:UICatalog.Scenario.Run
  href: UICatalog.Scenario.html#UICatalog.Scenario.Run
  name: Run
  nameWithType: Scenario.Run
  fullName: UICatalog.Scenario.Run
- uid: UICatalog.Scenario.RequestStop*
  commentId: Overload:UICatalog.Scenario.RequestStop
  href: UICatalog.Scenario.html#UICatalog.Scenario.RequestStop
  name: RequestStop
  nameWithType: Scenario.RequestStop
  fullName: UICatalog.Scenario.RequestStop
- uid: UICatalog.Scenario.ScenarioMetadata.Name
  commentId: P:UICatalog.Scenario.ScenarioMetadata.Name
  href: UICatalog.Scenario.ScenarioMetadata.html#UICatalog.Scenario.ScenarioMetadata.Name
  name: Name
  nameWithType: Scenario.ScenarioMetadata.Name
  fullName: UICatalog.Scenario.ScenarioMetadata.Name
- uid: UICatalog.Scenario.GetScenarios*
  commentId: Overload:UICatalog.Scenario.GetScenarios
  href: UICatalog.Scenario.html#UICatalog.Scenario.GetScenarios
  name: GetScenarios
  nameWithType: Scenario.GetScenarios
  fullName: UICatalog.Scenario.GetScenarios
- uid: System.Collections.Generic.List{UICatalog.Scenario}
  commentId: T:System.Collections.Generic.List{UICatalog.Scenario}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Scenario>
  nameWithType: List<Scenario>
  fullName: System.Collections.Generic.List<UICatalog.Scenario>
  nameWithType.vb: List(Of Scenario)
  fullName.vb: System.Collections.Generic.List(Of UICatalog.Scenario)
  name.vb: List(Of Scenario)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UICatalog.Scenario
    name: Scenario
    href: UICatalog.Scenario.html
  - name: )
- uid: UICatalog.Scenario.Dispose*
  commentId: Overload:UICatalog.Scenario.Dispose
  href: UICatalog.Scenario.html#UICatalog.Scenario.Dispose(System.Boolean)
  name: Dispose
  nameWithType: Scenario.Dispose
  fullName: UICatalog.Scenario.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
