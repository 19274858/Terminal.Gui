### YamlMime:ManagedReference
items:
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  commentId: T:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  id: DynamicMenuBar.DynamicMenuItem
  parent: UICatalog.Scenarios
  children:
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.Boolean)
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,Terminal.Gui.MenuItemCheckStyle,System.String,System.Boolean)
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.action
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.allowNullChecked
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.checkStyle
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.hasSubMenu
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.help
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.isTopLevel
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.shortcut
  - UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.title
  langs:
  - csharp
  - vb
  name: DynamicMenuBar.DynamicMenuItem
  nameWithType: DynamicMenuBar.DynamicMenuItem
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  type: Class
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DynamicMenuItem
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 35
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public class DynamicMenuBar.DynamicMenuItem
    content.vb: Public Class DynamicMenuBar.DynamicMenuItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.title
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.title
  id: title
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: title
  nameWithType: DynamicMenuBar.DynamicMenuItem.title
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.title
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: title
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 36
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public string title
    return:
      type: System.String
    content.vb: Public title As String
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.help
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.help
  id: help
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: help
  nameWithType: DynamicMenuBar.DynamicMenuItem.help
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.help
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: help
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 37
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public string help
    return:
      type: System.String
    content.vb: Public help As String
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.action
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.action
  id: action
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: action
  nameWithType: DynamicMenuBar.DynamicMenuItem.action
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.action
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: action
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 38
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public string action
    return:
      type: System.String
    content.vb: Public action As String
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.isTopLevel
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.isTopLevel
  id: isTopLevel
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: isTopLevel
  nameWithType: DynamicMenuBar.DynamicMenuItem.isTopLevel
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.isTopLevel
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: isTopLevel
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 39
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public bool isTopLevel
    return:
      type: System.Boolean
    content.vb: Public isTopLevel As Boolean
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.hasSubMenu
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.hasSubMenu
  id: hasSubMenu
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: hasSubMenu
  nameWithType: DynamicMenuBar.DynamicMenuItem.hasSubMenu
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.hasSubMenu
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: hasSubMenu
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 40
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public bool hasSubMenu
    return:
      type: System.Boolean
    content.vb: Public hasSubMenu As Boolean
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.checkStyle
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.checkStyle
  id: checkStyle
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: checkStyle
  nameWithType: DynamicMenuBar.DynamicMenuItem.checkStyle
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.checkStyle
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: checkStyle
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 41
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public MenuItemCheckStyle checkStyle
    return:
      type: Terminal.Gui.MenuItemCheckStyle
    content.vb: Public checkStyle As MenuItemCheckStyle
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.shortcut
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.shortcut
  id: shortcut
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: shortcut
  nameWithType: DynamicMenuBar.DynamicMenuItem.shortcut
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.shortcut
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: shortcut
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 42
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public string shortcut
    return:
      type: System.String
    content.vb: Public shortcut As String
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.allowNullChecked
  commentId: F:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.allowNullChecked
  id: allowNullChecked
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: allowNullChecked
  nameWithType: DynamicMenuBar.DynamicMenuItem.allowNullChecked
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.allowNullChecked
  type: Field
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: allowNullChecked
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 43
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public bool allowNullChecked
    return:
      type: System.Boolean
    content.vb: Public allowNullChecked As Boolean
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor
  commentId: M:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor
  id: '#ctor'
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: DynamicMenuItem()
  nameWithType: DynamicMenuBar.DynamicMenuItem.DynamicMenuItem()
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.DynamicMenuItem()
  type: Constructor
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 45
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public DynamicMenuItem()
    content.vb: Public Sub New()
  overload: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor*
  nameWithType.vb: DynamicMenuBar.DynamicMenuItem.New()
  fullName.vb: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.New()
  name.vb: New()
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.Boolean)
  commentId: M:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: DynamicMenuItem(string, bool)
  nameWithType: DynamicMenuBar.DynamicMenuItem.DynamicMenuItem(string, bool)
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.DynamicMenuItem(string, bool)
  type: Constructor
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 47
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public DynamicMenuItem(string title, bool hasSubMenu = false)
    parameters:
    - id: title
      type: System.String
    - id: hasSubMenu
      type: System.Boolean
    content.vb: Public Sub New(title As String, hasSubMenu As Boolean = False)
  overload: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor*
  nameWithType.vb: DynamicMenuBar.DynamicMenuItem.New(String, Boolean)
  fullName.vb: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,Terminal.Gui.MenuItemCheckStyle,System.String,System.Boolean)
  commentId: M:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,Terminal.Gui.MenuItemCheckStyle,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean,Terminal.Gui.MenuItemCheckStyle,System.String,System.Boolean)'
  parent: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem
  langs:
  - csharp
  - vb
  name: DynamicMenuItem(string, string, string, bool, bool, MenuItemCheckStyle, string, bool)
  nameWithType: DynamicMenuBar.DynamicMenuItem.DynamicMenuItem(string, string, string, bool, bool, MenuItemCheckStyle, string, bool)
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.DynamicMenuItem(string, string, string, bool, bool, Terminal.Gui.MenuItemCheckStyle, string, bool)
  type: Constructor
  source:
    remote:
      path: UICatalog/Scenarios/DynamicMenuBar.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../UICatalog/Scenarios/DynamicMenuBar.cs
    startLine: 53
  assemblies:
  - UICatalog
  namespace: UICatalog.Scenarios
  syntax:
    content: public DynamicMenuItem(string title, string help, string action, bool isTopLevel, bool hasSubMenu, MenuItemCheckStyle checkStyle = MenuItemCheckStyle.NoCheck, string shortcut = null, bool allowNullChecked = false)
    parameters:
    - id: title
      type: System.String
    - id: help
      type: System.String
    - id: action
      type: System.String
    - id: isTopLevel
      type: System.Boolean
    - id: hasSubMenu
      type: System.Boolean
    - id: checkStyle
      type: Terminal.Gui.MenuItemCheckStyle
    - id: shortcut
      type: System.String
    - id: allowNullChecked
      type: System.Boolean
    content.vb: Public Sub New(title As String, help As String, action As String, isTopLevel As Boolean, hasSubMenu As Boolean, checkStyle As MenuItemCheckStyle = MenuItemCheckStyle.NoCheck, shortcut As String = Nothing, allowNullChecked As Boolean = False)
  overload: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor*
  nameWithType.vb: DynamicMenuBar.DynamicMenuItem.New(String, String, String, Boolean, Boolean, MenuItemCheckStyle, String, Boolean)
  fullName.vb: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.New(String, String, String, Boolean, Boolean, Terminal.Gui.MenuItemCheckStyle, String, Boolean)
  name.vb: New(String, String, String, Boolean, Boolean, MenuItemCheckStyle, String, Boolean)
references:
- uid: UICatalog.Scenarios
  commentId: N:UICatalog.Scenarios
  href: UICatalog.html
  name: UICatalog.Scenarios
  nameWithType: UICatalog.Scenarios
  fullName: UICatalog.Scenarios
  spec.csharp:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
  spec.vb:
  - uid: UICatalog
    name: UICatalog
    href: UICatalog.html
  - name: .
  - uid: UICatalog.Scenarios
    name: Scenarios
    href: UICatalog.Scenarios.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  parent: UICatalog.Scenarios.EventExtensions
  definition: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  commentId: M:UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  isExternal: true
  href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  name: ClearEventHandlers(object, string)
  nameWithType: EventExtensions.ClearEventHandlers(object, string)
  fullName: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(object, string)
  nameWithType.vb: EventExtensions.ClearEventHandlers(Object, String)
  fullName.vb: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(Object, String)
  name.vb: ClearEventHandlers(Object, String)
  spec.csharp:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
    name: ClearEventHandlers
    href: UICatalog.Scenarios.EventExtensions.html#UICatalog.Scenarios.EventExtensions.ClearEventHandlers(System.Object,System.String)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: UICatalog.Scenarios.EventExtensions
  commentId: T:UICatalog.Scenarios.EventExtensions
  parent: UICatalog.Scenarios
  href: UICatalog.Scenarios.EventExtensions.html
  name: EventExtensions
  nameWithType: EventExtensions
  fullName: UICatalog.Scenarios.EventExtensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.MenuItemCheckStyle
  commentId: T:Terminal.Gui.MenuItemCheckStyle
  parent: Terminal.Gui
  name: MenuItemCheckStyle
  nameWithType: MenuItemCheckStyle
  fullName: Terminal.Gui.MenuItemCheckStyle
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
  - name: .
  - uid: Terminal.Gui
    name: Gui
  spec.vb:
  - uid: Terminal
    name: Terminal
  - name: .
  - uid: Terminal.Gui
    name: Gui
- uid: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor*
  commentId: Overload:UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor
  href: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.html#UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.#ctor
  name: DynamicMenuItem
  nameWithType: DynamicMenuBar.DynamicMenuItem.DynamicMenuItem
  fullName: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.DynamicMenuItem
  nameWithType.vb: DynamicMenuBar.DynamicMenuItem.New
  fullName.vb: UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.New
  name.vb: New
