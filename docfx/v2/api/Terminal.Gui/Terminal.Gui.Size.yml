### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Size
  commentId: T:Terminal.Gui.Size
  id: Size
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Size.#ctor(System.Int32,System.Int32)
  - Terminal.Gui.Size.#ctor(Terminal.Gui.Point)
  - Terminal.Gui.Size.Add(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.Empty
  - Terminal.Gui.Size.Equals(System.Object)
  - Terminal.Gui.Size.GetHashCode
  - Terminal.Gui.Size.Height
  - Terminal.Gui.Size.IsEmpty
  - Terminal.Gui.Size.op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.op_Explicit(Terminal.Gui.Size)~Terminal.Gui.Point
  - Terminal.Gui.Size.op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.Subtract(Terminal.Gui.Size,Terminal.Gui.Size)
  - Terminal.Gui.Size.ToString
  - Terminal.Gui.Size.Width
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Size
  fullName: Terminal.Gui.Size
  type: Struct
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Size
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 16
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Stores an ordered pair of integers, which specify a Height and Width.
  example: []
  syntax:
    content: public struct Size
    content.vb: Public Structure Size
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.Size.Empty
  commentId: F:Terminal.Gui.Size.Empty
  id: Empty
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Size.Empty
  fullName: Terminal.Gui.Size.Empty
  type: Field
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Empty
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 23
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a Size structure that has a Height and Width value of 0.
  example: []
  syntax:
    content: public static readonly Size Empty
    return:
      type: Terminal.Gui.Size
    content.vb: Public Shared ReadOnly Empty As Size
- uid: Terminal.Gui.Size.op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
  id: op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: operator +(Size, Size)
  nameWithType: Size.operator +(Size, Size)
  fullName: Terminal.Gui.Size.operator +(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Addition
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 33
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Addition Operator
  remarks: Addition of two Size structures.
  example: []
  syntax:
    content: public static Size operator +(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
    - id: sz2
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.Size
    content.vb: Public Shared Operator +(sz1 As Size, sz2 As Size) As Size
  overload: Terminal.Gui.Size.op_Addition*
  nameWithType.vb: Size.+(Size, Size)
  fullName.vb: Terminal.Gui.Size.+(Terminal.Gui.Size, Terminal.Gui.Size)
  name.vb: +(Size, Size)
- uid: Terminal.Gui.Size.op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
  id: op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: operator ==(Size, Size)
  nameWithType: Size.operator ==(Size, Size)
  fullName: Terminal.Gui.Size.operator ==(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Equality
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 49
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Equality Operator
  remarks: >-
    Compares two Size objects. The return value is

    based on the equivalence of the Width and Height 

    properties of the two Sizes.
  example: []
  syntax:
    content: public static bool operator ==(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
    - id: sz2
      type: Terminal.Gui.Size
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(sz1 As Size, sz2 As Size) As Boolean
  overload: Terminal.Gui.Size.op_Equality*
  nameWithType.vb: Size.=(Size, Size)
  fullName.vb: Terminal.Gui.Size.=(Terminal.Gui.Size, Terminal.Gui.Size)
  name.vb: =(Size, Size)
- uid: Terminal.Gui.Size.op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
  id: op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: operator !=(Size, Size)
  nameWithType: Size.operator !=(Size, Size)
  fullName: Terminal.Gui.Size.operator !=(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Inequality
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 65
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Inequality Operator
  remarks: >-
    Compares two Size objects. The return value is

    based on the equivalence of the Width and Height 

    properties of the two Sizes.
  example: []
  syntax:
    content: public static bool operator !=(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
    - id: sz2
      type: Terminal.Gui.Size
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(sz1 As Size, sz2 As Size) As Boolean
  overload: Terminal.Gui.Size.op_Inequality*
  nameWithType.vb: Size.<>(Size, Size)
  fullName.vb: Terminal.Gui.Size.<>(Terminal.Gui.Size, Terminal.Gui.Size)
  name.vb: <>(Size, Size)
- uid: Terminal.Gui.Size.op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
  id: op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: operator -(Size, Size)
  nameWithType: Size.operator -(Size, Size)
  fullName: Terminal.Gui.Size.operator -(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 79
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Subtraction Operator
  remarks: Subtracts two Size structures.
  example: []
  syntax:
    content: public static Size operator -(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
    - id: sz2
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.Size
    content.vb: Public Shared Operator -(sz1 As Size, sz2 As Size) As Size
  overload: Terminal.Gui.Size.op_Subtraction*
  nameWithType.vb: Size.-(Size, Size)
  fullName.vb: Terminal.Gui.Size.-(Terminal.Gui.Size, Terminal.Gui.Size)
  name.vb: -(Size, Size)
- uid: Terminal.Gui.Size.op_Explicit(Terminal.Gui.Size)~Terminal.Gui.Point
  commentId: M:Terminal.Gui.Size.op_Explicit(Terminal.Gui.Size)~Terminal.Gui.Point
  id: op_Explicit(Terminal.Gui.Size)~Terminal.Gui.Point
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: explicit operator Point(Size)
  nameWithType: Size.explicit operator Point(Size)
  fullName: Terminal.Gui.Size.explicit operator Terminal.Gui.Point(Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Explicit
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 94
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Size to Point Conversion
  remarks: >-
    Returns a Point based on the dimensions of a given 

    Size. Requires explicit cast.
  example: []
  syntax:
    content: public static explicit operator Point(Size size)
    parameters:
    - id: size
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.Point
    content.vb: Public Shared Narrowing Operator CType(size As Size) As Point
  overload: Terminal.Gui.Size.op_Explicit*
  nameWithType.vb: Size.CType(Size)
  fullName.vb: Terminal.Gui.Size.CType(Terminal.Gui.Size)
  name.vb: CType(Size)
- uid: Terminal.Gui.Size.#ctor(Terminal.Gui.Point)
  commentId: M:Terminal.Gui.Size.#ctor(Terminal.Gui.Point)
  id: '#ctor(Terminal.Gui.Point)'
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Size(Point)
  nameWithType: Size.Size(Point)
  fullName: Terminal.Gui.Size.Size(Terminal.Gui.Point)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 107
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Size Constructor
  remarks: Creates a Size from a Point value.
  example: []
  syntax:
    content: public Size(Point pt)
    parameters:
    - id: pt
      type: Terminal.Gui.Point
    content.vb: Public Sub New(pt As Point)
  overload: Terminal.Gui.Size.#ctor*
  nameWithType.vb: Size.New(Point)
  fullName.vb: Terminal.Gui.Size.New(Terminal.Gui.Point)
  name.vb: New(Point)
- uid: Terminal.Gui.Size.#ctor(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.Size.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Size(int, int)
  nameWithType: Size.Size(int, int)
  fullName: Terminal.Gui.Size.Size(int, int)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 121
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Size Constructor
  remarks: Creates a Size from specified dimensions.
  example: []
  syntax:
    content: public Size(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    content.vb: Public Sub New(width As Integer, height As Integer)
  overload: Terminal.Gui.Size.#ctor*
  nameWithType.vb: Size.New(Integer, Integer)
  fullName.vb: Terminal.Gui.Size.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: Terminal.Gui.Size.IsEmpty
  commentId: P:Terminal.Gui.Size.IsEmpty
  id: IsEmpty
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: Terminal.Gui.Size.IsEmpty
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsEmpty
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 138
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: IsEmpty Property
  remarks: Indicates if both Width and Height are zero.
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: Terminal.Gui.Size.IsEmpty*
- uid: Terminal.Gui.Size.Width
  commentId: P:Terminal.Gui.Size.Width
  id: Width
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Size.Width
  fullName: Terminal.Gui.Size.Width
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Width
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 152
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Width Property
  remarks: The Width coordinate of the Size.
  example: []
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Terminal.Gui.Size.Width*
- uid: Terminal.Gui.Size.Height
  commentId: P:Terminal.Gui.Size.Height
  id: Height
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Size.Height
  fullName: Terminal.Gui.Size.Height
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Height
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 171
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Height Property
  remarks: The Height coordinate of the Size.
  example: []
  syntax:
    content: public int Height { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Height As Integer
  overload: Terminal.Gui.Size.Height*
- uid: Terminal.Gui.Size.Equals(System.Object)
  commentId: M:Terminal.Gui.Size.Equals(System.Object)
  id: Equals(System.Object)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Size.Equals(object)
  fullName: Terminal.Gui.Size.Equals(object)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 190
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Equals Method
  remarks: Checks equivalence of this Size and another object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Terminal.Gui.Size.Equals*
  nameWithType.vb: Size.Equals(Object)
  fullName.vb: Terminal.Gui.Size.Equals(Object)
  name.vb: Equals(Object)
- uid: Terminal.Gui.Size.GetHashCode
  commentId: M:Terminal.Gui.Size.GetHashCode
  id: GetHashCode
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Size.GetHashCode()
  fullName: Terminal.Gui.Size.GetHashCode()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHashCode
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 206
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: GetHashCode Method
  remarks: Calculates a hashing value.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Terminal.Gui.Size.GetHashCode*
- uid: Terminal.Gui.Size.ToString
  commentId: M:Terminal.Gui.Size.ToString
  id: ToString
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Size.ToString()
  fullName: Terminal.Gui.Size.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 219
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: ToString Method
  remarks: Formats the Size as a string in coordinate notation.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Terminal.Gui.Size.ToString*
- uid: Terminal.Gui.Size.Add(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.Add(Terminal.Gui.Size,Terminal.Gui.Size)
  id: Add(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Add(Size, Size)
  nameWithType: Size.Add(Size, Size)
  fullName: Terminal.Gui.Size.Add(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 230
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds the width and height of one Size structure to the width and height of another Size structure.
  example: []
  syntax:
    content: public static Size Add(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
      description: The first Size structure to add.
    - id: sz2
      type: Terminal.Gui.Size
      description: The second Size structure to add.
    return:
      type: Terminal.Gui.Size
      description: The add.
    content.vb: Public Shared Function Add(sz1 As Size, sz2 As Size) As Size
  overload: Terminal.Gui.Size.Add*
- uid: Terminal.Gui.Size.Subtract(Terminal.Gui.Size,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.Size.Subtract(Terminal.Gui.Size,Terminal.Gui.Size)
  id: Subtract(Terminal.Gui.Size,Terminal.Gui.Size)
  parent: Terminal.Gui.Size
  langs:
  - csharp
  - vb
  name: Subtract(Size, Size)
  nameWithType: Size.Subtract(Size, Size)
  fullName: Terminal.Gui.Size.Subtract(Terminal.Gui.Size, Terminal.Gui.Size)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/Size.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Subtract
    path: ../Terminal.Gui/Types/Size.cs
    startLine: 243
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Subtracts the width and height of one Size structure to the width and height of another Size structure.
  example: []
  syntax:
    content: public static Size Subtract(Size sz1, Size sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.Size
      description: The first Size structure to subtract.
    - id: sz2
      type: Terminal.Gui.Size
      description: The second Size structure to subtract.
    return:
      type: Terminal.Gui.Size
      description: The subtract.
    content.vb: Public Shared Function Subtract(sz1 As Size, sz2 As Size) As Size
  overload: Terminal.Gui.Size.Subtract*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.Size
  commentId: T:Terminal.Gui.Size
  parent: Terminal.Gui
  href: Terminal.Gui.Size.html
  name: Size
  nameWithType: Size
  fullName: Terminal.Gui.Size
- uid: Terminal.Gui.Size.op_Addition*
  commentId: Overload:Terminal.Gui.Size.op_Addition
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
  name: operator +
  nameWithType: Size.operator +
  fullName: Terminal.Gui.Size.operator +
  nameWithType.vb: Size.+
  fullName.vb: Terminal.Gui.Size.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Size.op_Addition*
    name: +
    href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Addition(Terminal.Gui.Size,Terminal.Gui.Size)
- uid: Terminal.Gui.Size.op_Equality*
  commentId: Overload:Terminal.Gui.Size.op_Equality
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
  name: operator ==
  nameWithType: Size.operator ==
  fullName: Terminal.Gui.Size.operator ==
  nameWithType.vb: Size.=
  fullName.vb: Terminal.Gui.Size.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Size.op_Equality*
    name: ==
    href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Equality(Terminal.Gui.Size,Terminal.Gui.Size)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.Size.op_Inequality*
  commentId: Overload:Terminal.Gui.Size.op_Inequality
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
  name: operator !=
  nameWithType: Size.operator !=
  fullName: Terminal.Gui.Size.operator !=
  nameWithType.vb: Size.<>
  fullName.vb: Terminal.Gui.Size.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Size.op_Inequality*
    name: '!='
    href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Inequality(Terminal.Gui.Size,Terminal.Gui.Size)
- uid: Terminal.Gui.Size.op_Subtraction*
  commentId: Overload:Terminal.Gui.Size.op_Subtraction
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
  name: operator -
  nameWithType: Size.operator -
  fullName: Terminal.Gui.Size.operator -
  nameWithType.vb: Size.-
  fullName.vb: Terminal.Gui.Size.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Size.op_Subtraction*
    name: '-'
    href: Terminal.Gui.Size.html#Terminal.Gui.Size.op_Subtraction(Terminal.Gui.Size,Terminal.Gui.Size)
- uid: Terminal.Gui.Size.op_Explicit*
  commentId: Overload:Terminal.Gui.Size.op_Explicit
  name: explicit operator
  nameWithType: Size.explicit operator
  fullName: Terminal.Gui.Size.explicit operator
  nameWithType.vb: Size.CType
  fullName.vb: Terminal.Gui.Size.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: Terminal.Gui.Point
  commentId: T:Terminal.Gui.Point
  parent: Terminal.Gui
  href: Terminal.Gui.Point.html
  name: Point
  nameWithType: Point
  fullName: Terminal.Gui.Point
- uid: Terminal.Gui.Size.#ctor*
  commentId: Overload:Terminal.Gui.Size.#ctor
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.#ctor(Terminal.Gui.Point)
  name: Size
  nameWithType: Size.Size
  fullName: Terminal.Gui.Size.Size
  nameWithType.vb: Size.New
  fullName.vb: Terminal.Gui.Size.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.Size.IsEmpty*
  commentId: Overload:Terminal.Gui.Size.IsEmpty
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.IsEmpty
  name: IsEmpty
  nameWithType: Size.IsEmpty
  fullName: Terminal.Gui.Size.IsEmpty
- uid: Terminal.Gui.Size.Width*
  commentId: Overload:Terminal.Gui.Size.Width
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.Width
  name: Width
  nameWithType: Size.Width
  fullName: Terminal.Gui.Size.Width
- uid: Terminal.Gui.Size.Height*
  commentId: Overload:Terminal.Gui.Size.Height
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.Height
  name: Height
  nameWithType: Size.Height
  fullName: Terminal.Gui.Size.Height
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Terminal.Gui.Size.Equals*
  commentId: Overload:Terminal.Gui.Size.Equals
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.Equals(System.Object)
  name: Equals
  nameWithType: Size.Equals
  fullName: Terminal.Gui.Size.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Terminal.Gui.Size.GetHashCode*
  commentId: Overload:Terminal.Gui.Size.GetHashCode
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.GetHashCode
  name: GetHashCode
  nameWithType: Size.GetHashCode
  fullName: Terminal.Gui.Size.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.Size.ToString*
  commentId: Overload:Terminal.Gui.Size.ToString
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.ToString
  name: ToString
  nameWithType: Size.ToString
  fullName: Terminal.Gui.Size.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.Size.Add*
  commentId: Overload:Terminal.Gui.Size.Add
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.Add(Terminal.Gui.Size,Terminal.Gui.Size)
  name: Add
  nameWithType: Size.Add
  fullName: Terminal.Gui.Size.Add
- uid: Terminal.Gui.Size.Subtract*
  commentId: Overload:Terminal.Gui.Size.Subtract
  href: Terminal.Gui.Size.html#Terminal.Gui.Size.Subtract(Terminal.Gui.Size,Terminal.Gui.Size)
  name: Subtract
  nameWithType: Size.Subtract
  fullName: Terminal.Gui.Size.Subtract
shouldSkipMarkup: true
