### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.IFileOperations
  commentId: T:Terminal.Gui.IFileOperations
  id: IFileOperations
  parent: Terminal.Gui
  children:
  - Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo})
  - Terminal.Gui.IFileOperations.New(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IDirectoryInfo)
  - Terminal.Gui.IFileOperations.Rename(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IFileSystemInfo)
  langs:
  - csharp
  - vb
  name: IFileOperations
  nameWithType: IFileOperations
  fullName: Terminal.Gui.IFileOperations
  type: Interface
  source:
    remote:
      path: Terminal.Gui/FileServices/IFileOperations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IFileOperations
    path: ../Terminal.Gui/FileServices/IFileOperations.cs
    startLine: 9
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Interface for defining how to handle file/directory 

    deletion, rename and newing attempts in <xref href="Terminal.Gui.FileDialog" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IFileOperations
    content.vb: Public Interface IFileOperations
- uid: Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo})
  commentId: M:Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo})
  id: Delete(System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo})
  parent: Terminal.Gui.IFileOperations
  langs:
  - csharp
  - vb
  name: Delete(IEnumerable<IFileSystemInfo>)
  nameWithType: IFileOperations.Delete(IEnumerable<IFileSystemInfo>)
  fullName: Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable<System.IO.Abstractions.IFileSystemInfo>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/IFileOperations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Delete
    path: ../Terminal.Gui/FileServices/IFileOperations.cs
    startLine: 19
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Specifies how to handle file/directory deletion attempts

    in <xref href="Terminal.Gui.FileDialog" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Ensure you use a try/catch block with appropriate
        error handling (e.g. showing a <xref href="Terminal.Gui.MessageBox" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: bool Delete(IEnumerable<IFileSystemInfo> toDelete)
    parameters:
    - id: toDelete
      type: System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
      description: ''
    return:
      type: System.Boolean
      description: >-
        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if operation was completed or 
            <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if cancelled
    content.vb: Function Delete(toDelete As IEnumerable(Of IFileSystemInfo)) As Boolean
  overload: Terminal.Gui.IFileOperations.Delete*
  nameWithType.vb: IFileOperations.Delete(IEnumerable(Of IFileSystemInfo))
  fullName.vb: Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable(Of System.IO.Abstractions.IFileSystemInfo))
  name.vb: Delete(IEnumerable(Of IFileSystemInfo))
- uid: Terminal.Gui.IFileOperations.Rename(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.IFileOperations.Rename(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IFileSystemInfo)
  id: Rename(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.IFileOperations
  langs:
  - csharp
  - vb
  name: Rename(IFileSystem, IFileSystemInfo)
  nameWithType: IFileOperations.Rename(IFileSystem, IFileSystemInfo)
  fullName: Terminal.Gui.IFileOperations.Rename(System.IO.Abstractions.IFileSystem, System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/IFileOperations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Rename
    path: ../Terminal.Gui/FileServices/IFileOperations.cs
    startLine: 30
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Specifies how to handle file/directory rename attempts

    in <xref href="Terminal.Gui.FileDialog" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Ensure you use a try/catch block with appropriate
        error handling (e.g. showing a <xref href="Terminal.Gui.MessageBox" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: IFileSystemInfo Rename(IFileSystem fileSystem, IFileSystemInfo toRename)
    parameters:
    - id: fileSystem
      type: System.IO.Abstractions.IFileSystem
      description: ''
    - id: toRename
      type: System.IO.Abstractions.IFileSystemInfo
      description: ''
    return:
      type: System.IO.Abstractions.IFileSystemInfo
      description: The new name for the file or null if cancelled
    content.vb: Function Rename(fileSystem As IFileSystem, toRename As IFileSystemInfo) As IFileSystemInfo
  overload: Terminal.Gui.IFileOperations.Rename*
- uid: Terminal.Gui.IFileOperations.New(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IDirectoryInfo)
  commentId: M:Terminal.Gui.IFileOperations.New(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IDirectoryInfo)
  id: New(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IDirectoryInfo)
  parent: Terminal.Gui.IFileOperations
  langs:
  - csharp
  - vb
  name: New(IFileSystem, IDirectoryInfo)
  nameWithType: IFileOperations.New(IFileSystem, IDirectoryInfo)
  fullName: Terminal.Gui.IFileOperations.New(System.IO.Abstractions.IFileSystem, System.IO.Abstractions.IDirectoryInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/IFileOperations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: New
    path: ../Terminal.Gui/FileServices/IFileOperations.cs
    startLine: 42
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Specifies how to handle 'new directory' operation

    in <xref href="Terminal.Gui.FileDialog" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Ensure you use a try/catch block with appropriate
        error handling (e.g. showing a <xref href="Terminal.Gui.MessageBox" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: IFileSystemInfo New(IFileSystem fileSystem, IDirectoryInfo inDirectory)
    parameters:
    - id: fileSystem
      type: System.IO.Abstractions.IFileSystem
      description: ''
    - id: inDirectory
      type: System.IO.Abstractions.IDirectoryInfo
      description: >-
        The parent directory in which the new
            directory should be created
    return:
      type: System.IO.Abstractions.IFileSystemInfo
      description: The newly created directory or null if cancelled.
    content.vb: Function [New](fileSystem As IFileSystem, inDirectory As IDirectoryInfo) As IFileSystemInfo
  overload: Terminal.Gui.IFileOperations.New*
references:
- uid: Terminal.Gui.FileDialog
  commentId: T:Terminal.Gui.FileDialog
  parent: Terminal.Gui
  href: Terminal.Gui.FileDialog.html
  name: FileDialog
  nameWithType: FileDialog
  fullName: Terminal.Gui.FileDialog
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: Terminal.Gui.MessageBox
  commentId: T:Terminal.Gui.MessageBox
  href: Terminal.Gui.MessageBox.html
  name: MessageBox
  nameWithType: MessageBox
  fullName: Terminal.Gui.MessageBox
- uid: Terminal.Gui.IFileOperations.Delete*
  commentId: Overload:Terminal.Gui.IFileOperations.Delete
  href: Terminal.Gui.IFileOperations.html#Terminal.Gui.IFileOperations.Delete(System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo})
  name: Delete
  nameWithType: IFileOperations.Delete
  fullName: Terminal.Gui.IFileOperations.Delete
- uid: System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFileSystemInfo>
  nameWithType: IEnumerable<IFileSystemInfo>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Abstractions.IFileSystemInfo>
  nameWithType.vb: IEnumerable(Of IFileSystemInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IO.Abstractions.IFileSystemInfo)
  name.vb: IEnumerable(Of IFileSystemInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.IFileOperations.Rename*
  commentId: Overload:Terminal.Gui.IFileOperations.Rename
  href: Terminal.Gui.IFileOperations.html#Terminal.Gui.IFileOperations.Rename(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IFileSystemInfo)
  name: Rename
  nameWithType: IFileOperations.Rename
  fullName: Terminal.Gui.IFileOperations.Rename
- uid: System.IO.Abstractions.IFileSystem
  commentId: T:System.IO.Abstractions.IFileSystem
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: System.IO.Abstractions.IFileSystem
- uid: System.IO.Abstractions.IFileSystemInfo
  commentId: T:System.IO.Abstractions.IFileSystemInfo
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystemInfo
  nameWithType: IFileSystemInfo
  fullName: System.IO.Abstractions.IFileSystemInfo
- uid: System.IO.Abstractions
  commentId: N:System.IO.Abstractions
  isExternal: true
  name: System.IO.Abstractions
  nameWithType: System.IO.Abstractions
  fullName: System.IO.Abstractions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
- uid: Terminal.Gui.IFileOperations.New*
  commentId: Overload:Terminal.Gui.IFileOperations.New
  href: Terminal.Gui.IFileOperations.html#Terminal.Gui.IFileOperations.New(System.IO.Abstractions.IFileSystem,System.IO.Abstractions.IDirectoryInfo)
  name: New
  nameWithType: IFileOperations.New
  fullName: Terminal.Gui.IFileOperations.New
- uid: System.IO.Abstractions.IDirectoryInfo
  commentId: T:System.IO.Abstractions.IDirectoryInfo
  parent: System.IO.Abstractions
  isExternal: true
  name: IDirectoryInfo
  nameWithType: IDirectoryInfo
  fullName: System.IO.Abstractions.IDirectoryInfo
shouldSkipMarkup: true
