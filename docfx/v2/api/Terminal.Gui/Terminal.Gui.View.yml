### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  id: View
  parent: Terminal.Gui
  children:
  - Terminal.Gui.View.#ctor
  - Terminal.Gui.View.#ctor(System.Int32,System.Int32,System.String)
  - Terminal.Gui.View.#ctor(System.String,Terminal.Gui.TextDirection)
  - Terminal.Gui.View.#ctor(Terminal.Gui.Rect,System.String)
  - Terminal.Gui.View.#ctor(Terminal.Gui.Rect)
  - Terminal.Gui.View.Add(Terminal.Gui.View)
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  - Terminal.Gui.View.Added
  - Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  - Terminal.Gui.View.AutoSize
  - Terminal.Gui.View.BeginInit
  - Terminal.Gui.View.Border
  - Terminal.Gui.View.BorderStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  - Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.CanFocus
  - Terminal.Gui.View.CanFocusChanged
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  - Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  - Terminal.Gui.View.ClearKeyBindings
  - Terminal.Gui.View.ClearLayoutNeeded
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.ClearOnVisibleFalse
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  - Terminal.Gui.View.Data
  - Terminal.Gui.View.Dispose(System.Boolean)
  - Terminal.Gui.View.Draw
  - Terminal.Gui.View.DrawContent
  - Terminal.Gui.View.DrawContentComplete
  - Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Enabled
  - Terminal.Gui.View.EnabledChanged
  - Terminal.Gui.View.EndInit
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.ForceValidatePosDim
  - Terminal.Gui.View.Frame
  - Terminal.Gui.View.FrameToScreen
  - Terminal.Gui.View.GetAutoSize
  - Terminal.Gui.View.GetBoundsOffset
  - Terminal.Gui.View.GetFocusColor
  - Terminal.Gui.View.GetFramesThickness
  - Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  - Terminal.Gui.View.GetHotNormalColor
  - Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  - Terminal.Gui.View.GetNormalColor
  - Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  - Terminal.Gui.View.GetSupportedCommands
  - Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  - Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.HotKey
  - Terminal.Gui.View.HotKeyChanged
  - Terminal.Gui.View.HotKeySpecifier
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.Initialized
  - Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.IsAdded
  - Terminal.Gui.View.IsCurrentTop
  - Terminal.Gui.View.IsInitialized
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.KeyPressed
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.LayoutComplete
  - Terminal.Gui.View.LayoutStarted
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.LineCanvas
  - Terminal.Gui.View.Margin
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.MouseClick
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.NeedsDisplay
  - Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  - Terminal.Gui.View.OnCanFocusChanged
  - Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  - Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - Terminal.Gui.View.OnDrawFrames
  - Terminal.Gui.View.OnEnabledChanged
  - Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  - Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  - Terminal.Gui.View.OnRenderLineCanvas
  - Terminal.Gui.View.OnResizeNeeded
  - Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  - Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  - Terminal.Gui.View.OnVisibleChanged
  - Terminal.Gui.View.Padding
  - Terminal.Gui.View.PositionCursor
  - Terminal.Gui.View.PreserveTrailingSpaces
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.Remove(Terminal.Gui.View)
  - Terminal.Gui.View.RemoveAll
  - Terminal.Gui.View.Removed
  - Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  - Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  - Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SetFocus
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.SetSubViewNeedsDisplay
  - Terminal.Gui.View.Shortcut
  - Terminal.Gui.View.ShortcutAction
  - Terminal.Gui.View.ShortcutTag
  - Terminal.Gui.View.SubViewNeedsDisplay
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.SuperViewRendersLineCanvas
  - Terminal.Gui.View.TabIndex
  - Terminal.Gui.View.TabIndexes
  - Terminal.Gui.View.TabStop
  - Terminal.Gui.View.Text
  - Terminal.Gui.View.TextAlignment
  - Terminal.Gui.View.TextDirection
  - Terminal.Gui.View.TextFormatter
  - Terminal.Gui.View.Title
  - Terminal.Gui.View.TitleChanged
  - Terminal.Gui.View.TitleChanging
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.UpdateTextFormatterText
  - Terminal.Gui.View.VerticalTextAlignment
  - Terminal.Gui.View.Visible
  - Terminal.Gui.View.VisibleChanged
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  langs:
  - csharp
  - vb
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
  type: Class
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: View
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 5
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    View is the base class for all views on the screen and represents a visible element that can render itself and 

    contains zero or more nested views, called SubViews.
  remarks: >-
    <p>
       The View defines the base functionality for user interface elements in Terminal.Gui. Views
       can contain one or more subviews, can respond to user input and render themselves on the screen.
    </p>

    <p>

    SubView - A View that is contained in another view and will be rendered as part of the containing view's ContentArea. 

    SubViews are added to another view via the <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref>` method. A View may only be a SubView of a single View. 

    </p>

    <p>

    SuperView - The View that is a container for SubViews. 

    </p>

    <p>

    Focus is a concept that is used to describe which Responder is currently receiving user input. Only views that are

    <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Visible" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.CanFocus" data-throw-if-not-resolved="false"></xref> will receive focus.

    </p>

    <p>
       Views that are focusable should implement the <xref href="Terminal.Gui.View.PositionCursor" data-throw-if-not-resolved="false"></xref> to make sure that
       the cursor is placed in a location that makes sense. Unix terminals do not have
       a way of hiding the cursor, so it can be distracting to have the cursor left at
       the last focused view. So views should make sure that they place the cursor
       in a visually sensible place.
    </p>

    <p>
       The View defines the base functionality for user interface elements in Terminal.Gui. Views
       can contain one or more subviews, can respond to user input and render themselves on the screen.
    </p>

    <p>
       Views supports two layout styles: <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>. 
       The choice as to which layout style is used by the View 
       is determined when the View is initialized. To create a View using Absolute layout, call a constructor that takes a
       Rect parameter to specify the absolute position and size (the View.<xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>). To create a View 
       using Computed layout use a constructor that does not take a Rect parameter and set the X, Y, Width and Height 
       properties on the view. Both approaches use coordinates that are relative to the container they are being added to. 
    </p>

    <p>
       To switch between Absolute and Computed layout, use the <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> property. 
    </p>

    <p>
       Computed layout is more flexible and supports dynamic console apps where controls adjust layout
       as the terminal resizes or other Views change size or position. The X, Y, Width and Height 
       properties are Dim and Pos objects that dynamically update the position of a view.
       The X and Y properties are of type <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref>
       and you can use either absolute positions, percentages or anchor
       points. The Width and Height properties are of type
       <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> and can use absolute position,
       percentages and anchors. These are useful as they will take
       care of repositioning views when view's frames are resized or
       if the terminal size changes.
    </p>

    <p>
       Absolute layout requires specifying coordinates and sizes of Views explicitly, and the
       View will typically stay in a fixed position and size. To change the position and size use the
       <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> property.
    </p>

    <p>
       Subviews (child views) can be added to a View by calling the <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> method. 
       The container of a View can be accessed with the <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref> property.
    </p>

    <p>
       To flag a region of the View's <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> to be redrawn call <xref href="Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref>. 
       To flag the entire view for redraw call <xref href="Terminal.Gui.View.SetNeedsDisplay" data-throw-if-not-resolved="false"></xref>.
    </p>

    <p>
       The <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> method is invoked when the size or layout of a view has
       changed. The default processing system will keep the size and dimensions
       for views that use the <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref>, and will recompute the
       frames for the vies that use <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>.
    </p>

    <p>
       Views have a <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> property that defines the default colors that subviews
       should use for rendering. This ensures that the views fit in the context where
       they are being used, and allows for themes to be plugged in. For example, the
       default colors for windows and Toplevels uses a blue background, while it uses
       a white background for dialog boxes and a red background for errors.
    </p>

    <p>
       Subclasses should not rely on <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> being
       set at construction time. If a <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> is not set on a view, the view will inherit the
       value from its <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref> and the value might only be valid once a view has been
       added to a SuperView. 
    </p>

    <p>
       By using  <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> applications will work both
       in color as well as black and white displays.
    </p>

    <p>
        Views can also opt-in to more sophisticated initialization
        by implementing overrides to <xref href="System.ComponentModel.ISupportInitialize.BeginInit" data-throw-if-not-resolved="false"></xref> and
        <xref href="System.ComponentModel.ISupportInitialize.EndInit" data-throw-if-not-resolved="false"></xref> which will be called
        when the view is added to a <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>. 
    </p>

    <p>
        If first-run-only initialization is preferred, overrides to <xref href="System.ComponentModel.ISupportInitializeNotification" data-throw-if-not-resolved="false"></xref>
        can be implemented, in which case the <xref href="System.ComponentModel.ISupportInitialize" data-throw-if-not-resolved="false"></xref>
        methods will only be called if <xref href="System.ComponentModel.ISupportInitializeNotification.IsInitialized" data-throw-if-not-resolved="false"></xref>
        is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This allows proper <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> inheritance hierarchies
        to override base class layout code optimally by doing so only on first run,
        instead of on every run.
      </p>
  example: []
  syntax:
    content: 'public class View : Responder, IDisposable, ISupportInitializeNotification, ISupportInitialize'
    content.vb: Public Class View Inherits Responder Implements IDisposable, ISupportInitializeNotification, ISupportInitialize
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  derivedClasses:
  - Terminal.Gui.Button
  - Terminal.Gui.CheckBox
  - Terminal.Gui.ColorPicker
  - Terminal.Gui.ComboBox
  - Terminal.Gui.Frame
  - Terminal.Gui.FrameView
  - Terminal.Gui.GraphView
  - Terminal.Gui.HexView
  - Terminal.Gui.Label
  - Terminal.Gui.Line
  - Terminal.Gui.LineView
  - Terminal.Gui.ListView
  - Terminal.Gui.MenuBar
  - Terminal.Gui.ProgressBar
  - Terminal.Gui.RadioGroup
  - Terminal.Gui.ScrollBarView
  - Terminal.Gui.ScrollView
  - Terminal.Gui.Slider`1
  - Terminal.Gui.SpinnerView
  - Terminal.Gui.StatusBar
  - Terminal.Gui.TableView
  - Terminal.Gui.TabView
  - Terminal.Gui.TextField
  - Terminal.Gui.TextValidateField
  - Terminal.Gui.TextView
  - Terminal.Gui.TileView
  - Terminal.Gui.Toplevel
  - Terminal.Gui.TreeView`1
  implements:
  - System.IDisposable
  - System.ComponentModel.ISupportInitializeNotification
  - System.ComponentModel.ISupportInitialize
  inheritedMembers:
  - Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.Responder.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  id: Frame
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Frame
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 46
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the frame for the view. The frame is relative to the <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>'s <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>
       Change the Frame when using the <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> layout style to move or resize views. 
    </p>

    <p>
       Altering the Frame of a view will trigger the redrawing of the
       view as well as the redrawing of the affected regions of the <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>.
    </p>
  example: []
  syntax:
    content: public virtual Rect Frame { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Rect
      description: The frame.
    content.vb: Public Overridable Property Frame As Rect
  overload: Terminal.Gui.View.Frame*
- uid: Terminal.Gui.View.Margin
  commentId: P:Terminal.Gui.View.Margin
  id: Margin
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Margin
  nameWithType: View.Margin
  fullName: Terminal.Gui.View.Margin
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Margin
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 74
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The frame (specified as a <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref>) that separates a View from other SubViews of the same SuperView. 

    The margin offsets the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> from the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    The frames (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>) are not part of the View's content

    and are not clipped by the View's Clip Area.

    </p>

    <p>

    Changing the size of a frame (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, or <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>)

    will change the size of the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> and trigger <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> to update the layout of the

    <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref> and its <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public Frame Margin { get; }
    parameters: []
    return:
      type: Terminal.Gui.Frame
    content.vb: Public Property Margin As Frame
  overload: Terminal.Gui.View.Margin*
- uid: Terminal.Gui.View.Border
  commentId: P:Terminal.Gui.View.Border
  id: Border
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: View.Border
  fullName: Terminal.Gui.View.Border
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Border
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 96
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The frame (specified as a <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref>) inside of the view that offsets the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> from the <xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>. 
     The Border provides the space for a visual border (drawn using line-drawing glyphs) and the Title. 
     The Border expands inward; in other words if `Border.Thickness.Top == 2` the border and 
     title will take up the first row and the second row will be filled with spaces.
  remarks: >-
    <p>

    <xref href="Terminal.Gui.View.BorderStyle" data-throw-if-not-resolved="false"></xref> provides a simple helper for turning a simple border frame on or off.

    </p>

    <p>

    The frames (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>) are not part of the View's content

    and are not clipped by the View's Clip Area.

    </p>

    <p>

    Changing the size of a frame (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, or <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>)

    will change the size of the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> and trigger <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> to update the layout of the

    <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref> and its <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public Frame Border { get; }
    parameters: []
    return:
      type: Terminal.Gui.Frame
    content.vb: Public Property Border As Frame
  overload: Terminal.Gui.View.Border*
- uid: Terminal.Gui.View.BorderStyle
  commentId: P:Terminal.Gui.View.BorderStyle
  id: BorderStyle
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BorderStyle
  nameWithType: View.BorderStyle
  fullName: Terminal.Gui.View.BorderStyle
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BorderStyle
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 115
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets whether the view has a one row/col thick border.
  remarks: >-
    <p>

    This is a helper for manipulating the view's <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>. Setting this property to any value other than

    <xref href="Terminal.Gui.LineStyle.None" data-throw-if-not-resolved="false"></xref> is equivalent to setting <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>'s <xref href="Terminal.Gui.Frame.Thickness" data-throw-if-not-resolved="false"></xref> 

    to `1` and <xref href="Terminal.Gui.View.BorderStyle" data-throw-if-not-resolved="false"></xref> to the value. 

    </p>

    <p>

    Setting this property to <xref href="Terminal.Gui.LineStyle.None" data-throw-if-not-resolved="false"></xref> is equivalent to setting <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>'s <xref href="Terminal.Gui.Frame.Thickness" data-throw-if-not-resolved="false"></xref> 

    to `0` and <xref href="Terminal.Gui.View.BorderStyle" data-throw-if-not-resolved="false"></xref> to <xref href="Terminal.Gui.LineStyle.None" data-throw-if-not-resolved="false"></xref>. 

    </p>

    <p>

    For more advanced customization of the view's border, manipulate see <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref> directly.

    </p>
  example: []
  syntax:
    content: public LineStyle BorderStyle { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.LineStyle
    content.vb: Public Property BorderStyle As LineStyle
  overload: Terminal.Gui.View.BorderStyle*
- uid: Terminal.Gui.View.Padding
  commentId: P:Terminal.Gui.View.Padding
  id: Padding
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Padding
  nameWithType: View.Padding
  fullName: Terminal.Gui.View.Padding
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Padding
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 148
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The frame (specified as a <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref>) inside of the view that offsets the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> from the <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    The frames (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>) are not part of the View's content

    and are not clipped by the View's Clip Area.

    </p>

    <p>

    Changing the size of a frame (<xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, or <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>)

    will change the size of the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> and trigger <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> to update the layout of the

    <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref> and its <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public Frame Padding { get; }
    parameters: []
    return:
      type: Terminal.Gui.Frame
    content.vb: Public Property Padding As Frame
  overload: Terminal.Gui.View.Padding*
- uid: Terminal.Gui.View.GetFramesThickness
  commentId: M:Terminal.Gui.View.GetFramesThickness
  id: GetFramesThickness
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetFramesThickness()
  nameWithType: View.GetFramesThickness()
  fullName: Terminal.Gui.View.GetFramesThickness()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetFramesThickness
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 154
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Helper to get the total thickness of the <xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Thickness GetFramesThickness()
    return:
      type: Terminal.Gui.Thickness
      description: A thickness that describes the sum of the Frames' thicknesses.
    content.vb: Public Function GetFramesThickness() As Thickness
  overload: Terminal.Gui.View.GetFramesThickness*
- uid: Terminal.Gui.View.GetBoundsOffset
  commentId: M:Terminal.Gui.View.GetBoundsOffset
  id: GetBoundsOffset
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetBoundsOffset()
  nameWithType: View.GetBoundsOffset()
  fullName: Terminal.Gui.View.GetBoundsOffset()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetBoundsOffset
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 167
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Helper to get the X and Y offset of the Bounds from the Frame. This is the sum of the Left and Top properties of

    <xref href="Terminal.Gui.View.Margin" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.View.Padding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Point GetBoundsOffset()
    return:
      type: Terminal.Gui.Point
    content.vb: Public Function GetBoundsOffset() As Point
  overload: Terminal.Gui.View.GetBoundsOffset*
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  id: LayoutStyle
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LayoutStyle
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 219
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Controls how the View's <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> is computed during <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref>. If the style is set to

    <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref>, 

    LayoutSubviews does not change the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>. If the style is <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>

    the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> is updated using

    the <xref href="Terminal.Gui.View.X" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Y" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Width" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> properties.
  example: []
  syntax:
    content: public LayoutStyle LayoutStyle { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.LayoutStyle
      description: The layout style.
    content.vb: Public Property LayoutStyle As LayoutStyle
  overload: Terminal.Gui.View.LayoutStyle*
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  id: Bounds
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Bounds
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 250
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The view's content area.

    <p>

    SubViews are positioned relative to Bounds.

    </p>

    <p>

    Drawing is clipped to Bounds (<xref href="Terminal.Gui.View.Draw" data-throw-if-not-resolved="false"></xref> clips drawing to Bounds.<xref href="Terminal.Gui.Rect.Size?text=Size" data-throw-if-not-resolved="false"></xref>).

    </p>

    <p>

    Mouse events are reported relative to Bounds.

    </p>
  remarks: >-
    <p>

    The <xref href="Terminal.Gui.Rect.Location" data-throw-if-not-resolved="false"></xref> of Bounds is always (0, 0). To obtain the offset of the Bounds from the Frame use 

    <xref href="Terminal.Gui.View.GetBoundsOffset" data-throw-if-not-resolved="false"></xref>.

    </p>

    <p>

    When using <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>, Bounds is not valid until after the view has been initialized (after <xref href="Terminal.Gui.View.EndInit" data-throw-if-not-resolved="false"></xref> has been called and <xref href="Terminal.Gui.View.Initialized" data-throw-if-not-resolved="false"></xref>

    has fired). Accessing this property before the view is initialized is considered an error./&gt;

    </p>
  example: []
  syntax:
    content: public virtual Rect Bounds { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Rect
      description: The view's content area.
    content.vb: Public Overridable Property Bounds As Rect
  overload: Terminal.Gui.View.Bounds*
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  id: X
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: X
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 314
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the X position for the view (the column). Only used if the <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>.
  remarks: If <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> changing this property has no effect and its value is indeterminate.
  example: []
  syntax:
    content: public Pos X { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Pos
      description: The X Position.
    content.vb: Public Property X As Pos
  overload: Terminal.Gui.View.X*
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  id: Y
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Y
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 334
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the Y position for the view (the row). Only used if the <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>.
  remarks: If <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> changing this property has no effect and its value is indeterminate.
  example: []
  syntax:
    content: public Pos Y { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Pos
      description: The y position (line).
    content.vb: Public Property Y As Pos
  overload: Terminal.Gui.View.Y*
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  id: Width
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Width
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 355
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the width of the view. Only used the <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>.
  remarks: If <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> changing this property has no effect and its value is indeterminate.
  example: []
  syntax:
    content: public Dim Width { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Dim
      description: The width.
    content.vb: Public Property Width As [Dim]
  overload: Terminal.Gui.View.Width*
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  id: Height
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Height
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 380
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the height of the view. Only used the <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> is <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Dim Height { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Dim
      description: The height.
    content.vb: Public Property Height As [Dim]
  overload: Terminal.Gui.View.Height*
- uid: Terminal.Gui.View.ForceValidatePosDim
  commentId: P:Terminal.Gui.View.ForceValidatePosDim
  id: ForceValidatePosDim
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ForceValidatePosDim
  nameWithType: View.ForceValidatePosDim
  fullName: Terminal.Gui.View.ForceValidatePosDim
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ForceValidatePosDim
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 404
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Forces validation with <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref> layout
     to avoid breaking the <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> settings.
  example: []
  syntax:
    content: public bool ForceValidatePosDim { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ForceValidatePosDim As Boolean
  overload: Terminal.Gui.View.ForceValidatePosDim*
- uid: Terminal.Gui.View.OnResizeNeeded
  commentId: M:Terminal.Gui.View.OnResizeNeeded
  id: OnResizeNeeded
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnResizeNeeded()
  nameWithType: View.OnResizeNeeded()
  fullName: Terminal.Gui.View.OnResizeNeeded()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnResizeNeeded
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 490
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called whenever the view needs to be resized. Sets <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> and

    triggers a <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> call.
  remarks: Can be overridden if the view resize behavior is different than the default.
  example: []
  syntax:
    content: protected virtual void OnResizeNeeded()
    content.vb: Protected Overridable Sub OnResizeNeeded()
  overload: Terminal.Gui.View.OnResizeNeeded*
- uid: Terminal.Gui.View.ClearLayoutNeeded
  commentId: M:Terminal.Gui.View.ClearLayoutNeeded
  id: ClearLayoutNeeded
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearLayoutNeeded()
  nameWithType: View.ClearLayoutNeeded()
  fullName: Terminal.Gui.View.ClearLayoutNeeded()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearLayoutNeeded
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 538
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes the <xref href="Terminal.Gui.View.SetNeedsLayout" data-throw-if-not-resolved="false"></xref> setting on this view.
  example: []
  syntax:
    content: protected void ClearLayoutNeeded()
    content.vb: Protected Sub ClearLayoutNeeded()
  overload: Terminal.Gui.View.ClearLayoutNeeded*
- uid: Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  id: ScreenToFrame(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ScreenToFrame(int, int)
  nameWithType: View.ScreenToFrame(int, int)
  fullName: Terminal.Gui.View.ScreenToFrame(int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScreenToFrame
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 550
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Converts a screen-relative coordinate to a Frame-relative coordinate. Frame-relative means

    relative to the View's <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>'s <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Point ScreenToFrame(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: Screen-relative column.
    - id: y
      type: System.Int32
      description: Screen-relative row.
    return:
      type: Terminal.Gui.Point
      description: The coordinate relative to the <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>'s <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ScreenToFrame(x As Integer, y As Integer) As Point
  overload: Terminal.Gui.View.ScreenToFrame*
  nameWithType.vb: View.ScreenToFrame(Integer, Integer)
  fullName.vb: Terminal.Gui.View.ScreenToFrame(Integer, Integer)
  name.vb: ScreenToFrame(Integer, Integer)
- uid: Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  id: ScreenToBounds(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ScreenToBounds(int, int)
  nameWithType: View.ScreenToBounds(int, int)
  fullName: Terminal.Gui.View.ScreenToBounds(int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScreenToBounds
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 567
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Converts a screen-relative coordinate to a bounds-relative coordinate.
  example: []
  syntax:
    content: public Point ScreenToBounds(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: Screen-relative column.
    - id: y
      type: System.Int32
      description: Screen-relative row.
    return:
      type: Terminal.Gui.Point
      description: The coordinate relative to this view's <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ScreenToBounds(x As Integer, y As Integer) As Point
  overload: Terminal.Gui.View.ScreenToBounds*
  nameWithType.vb: View.ScreenToBounds(Integer, Integer)
  fullName.vb: Terminal.Gui.View.ScreenToBounds(Integer, Integer)
  name.vb: ScreenToBounds(Integer, Integer)
- uid: Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  commentId: M:Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  id: BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BoundsToScreen(int, int, out int, out int, bool)
  nameWithType: View.BoundsToScreen(int, int, out int, out int, bool)
  fullName: Terminal.Gui.View.BoundsToScreen(int, int, out int, out int, bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BoundsToScreen
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 584
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Converts a <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>-relative coordinate to a screen-relative coordinate. The output is optionally clamped to the screen dimensions.
  example: []
  syntax:
    content: public virtual void BoundsToScreen(int x, int y, out int rx, out int ry, bool clamped = true)
    parameters:
    - id: x
      type: System.Int32
      description: <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>-relative column.
    - id: y
      type: System.Int32
      description: <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>-relative row.
    - id: rx
      type: System.Int32
      description: Absolute column; screen-relative.
    - id: ry
      type: System.Int32
      description: Absolute row; screen-relative.
    - id: clamped
      type: System.Boolean
      description: >-
        If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, <code class="paramref">rx</code> and <code class="paramref">ry</code> will be clamped to the 
            screen dimensions (will never be negative and will always be less than <xref href="Terminal.Gui.ConsoleDriver.Cols" data-throw-if-not-resolved="false"></xref> and
            <xref href="Terminal.Gui.ConsoleDriver.Rows" data-throw-if-not-resolved="false"></xref>, respectively.
    content.vb: Public Overridable Sub BoundsToScreen(x As Integer, y As Integer, rx As Integer, ry As Integer, clamped As Boolean = True)
  overload: Terminal.Gui.View.BoundsToScreen*
  nameWithType.vb: View.BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: Terminal.Gui.View.BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
  name.vb: BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
- uid: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  id: BoundsToScreen(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BoundsToScreen(Rect)
  nameWithType: View.BoundsToScreen(Rect)
  fullName: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BoundsToScreen
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 608
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Converts a <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>-relative region to a screen-relative region.
  example: []
  syntax:
    content: public Rect BoundsToScreen(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
    return:
      type: Terminal.Gui.Rect
    content.vb: Public Function BoundsToScreen(region As Rect) As Rect
  overload: Terminal.Gui.View.BoundsToScreen*
- uid: Terminal.Gui.View.FrameToScreen
  commentId: M:Terminal.Gui.View.FrameToScreen
  id: FrameToScreen
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FrameToScreen()
  nameWithType: View.FrameToScreen()
  fullName: Terminal.Gui.View.FrameToScreen()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FrameToScreen
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 618
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> with a screen-relative location.
  example: []
  syntax:
    content: public virtual Rect FrameToScreen()
    return:
      type: Terminal.Gui.Rect
      description: The location and size of the view in screen-relative coordinates.
    content.vb: Public Overridable Function FrameToScreen() As Rect
  overload: Terminal.Gui.View.FrameToScreen*
- uid: Terminal.Gui.View.LayoutStarted
  commentId: E:Terminal.Gui.View.LayoutStarted
  id: LayoutStarted
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: LayoutStarted
  nameWithType: View.LayoutStarted
  fullName: Terminal.Gui.View.LayoutStarted
  type: Event
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LayoutStarted
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 752
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Fired after the View's <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> method has completed.
  remarks: Subscribe to this event to perform tasks when the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> has been resized or the layout has otherwise changed.
  example: []
  syntax:
    content: public event EventHandler<LayoutEventArgs> LayoutStarted
    return:
      type: System.EventHandler{Terminal.Gui.LayoutEventArgs}
    content.vb: Public Event LayoutStarted As EventHandler(Of LayoutEventArgs)
- uid: Terminal.Gui.View.LayoutComplete
  commentId: E:Terminal.Gui.View.LayoutComplete
  id: LayoutComplete
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: LayoutComplete
  nameWithType: View.LayoutComplete
  fullName: Terminal.Gui.View.LayoutComplete
  type: Event
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LayoutComplete
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 768
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Fired after the View's <xref href="Terminal.Gui.View.LayoutSubviews" data-throw-if-not-resolved="false"></xref> method has completed.
  remarks: Subscribe to this event to perform tasks when the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> has been resized or the layout has otherwise changed.
  example: []
  syntax:
    content: public event EventHandler<LayoutEventArgs> LayoutComplete
    return:
      type: System.EventHandler{Terminal.Gui.LayoutEventArgs}
    content.vb: Public Event LayoutComplete As EventHandler(Of LayoutEventArgs)
- uid: Terminal.Gui.View.Initialized
  commentId: E:Terminal.Gui.View.Initialized
  id: Initialized
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: View.Initialized
  fullName: Terminal.Gui.View.Initialized
  type: Event
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Initialized
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 775
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event called only once when the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> is being initialized for the first time.

    Allows configurations and assignments to be performed before the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> being shown.

    This derived from <xref href="System.ComponentModel.ISupportInitializeNotification" data-throw-if-not-resolved="false"></xref> to allow notify all the views that are being initialized.
  example: []
  syntax:
    content: public event EventHandler Initialized
    return:
      type: System.EventHandler
    content.vb: Public Event Initialized As EventHandler
  implements:
  - System.ComponentModel.ISupportInitializeNotification.Initialized
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  id: LayoutSubviews
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LayoutSubviews
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 951
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Invoked when a view starts executing or when the dimensions of the view have changed, for example in

    response to the container view or terminal resizing.
  remarks: Calls <xref href="Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)" data-throw-if-not-resolved="false"></xref> (which raises the <xref href="Terminal.Gui.View.LayoutComplete" data-throw-if-not-resolved="false"></xref> event) before it returns.
  example: []
  syntax:
    content: public virtual void LayoutSubviews()
    content.vb: Public Overridable Sub LayoutSubviews()
  overload: Terminal.Gui.View.LayoutSubviews*
- uid: Terminal.Gui.View.AutoSize
  commentId: P:Terminal.Gui.View.AutoSize
  id: AutoSize
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: AutoSize
  nameWithType: View.AutoSize
  fullName: Terminal.Gui.View.AutoSize
  type: Property
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AutoSize
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 1011
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets a flag that determines whether the View will be automatically resized to fit the <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> 

    within <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>

    <p>

    The default is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. Set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to turn on AutoSize. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> then

    <xref href="Terminal.Gui.View.Width" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> will be used if <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> can fit; 

    if <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> won't fit the view will be resized as needed.

    </p>

    <p>

    In addition, if <xref href="Terminal.Gui.View.ForceValidatePosDim" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> the new values of <xref href="Terminal.Gui.View.Width" data-throw-if-not-resolved="false"></xref> and

    <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> must be of the same types of the existing one to avoid breaking the <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> settings.

    </p>
  example: []
  syntax:
    content: public virtual bool AutoSize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property AutoSize As Boolean
  overload: Terminal.Gui.View.AutoSize*
- uid: Terminal.Gui.View.GetAutoSize
  commentId: M:Terminal.Gui.View.GetAutoSize
  id: GetAutoSize
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetAutoSize()
  nameWithType: View.GetAutoSize()
  fullName: Terminal.Gui.View.GetAutoSize()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetAutoSize
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 1077
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the Frame dimensions required to fit <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> within <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> using the text <xref href="Terminal.Gui.View.Direction" data-throw-if-not-resolved="false"></xref> specified by the

    <xref href="Terminal.Gui.View.TextFormatter" data-throw-if-not-resolved="false"></xref> property and accounting for any <xref href="Terminal.Gui.View.HotKeySpecifier" data-throw-if-not-resolved="false"></xref> characters.
  example: []
  syntax:
    content: public Size GetAutoSize()
    return:
      type: Terminal.Gui.Size
      description: The <xref href="Terminal.Gui.Size" data-throw-if-not-resolved="false"></xref> of the view required to fit the text.
    content.vb: Public Function GetAutoSize() As Size
  overload: Terminal.Gui.View.GetAutoSize*
- uid: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  commentId: M:Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  id: FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FindDeepestView(View, int, int, out int, out int)
  nameWithType: View.FindDeepestView(View, int, int, out int, out int)
  fullName: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View, int, int, out int, out int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/ViewLayout.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FindDeepestView
    path: ../Terminal.Gui/Text/ViewLayout.cs
    startLine: 1201
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Finds which view that belong to the <code class="paramref">start</code> superview at the provided location.
  example: []
  syntax:
    content: public static View FindDeepestView(View start, int x, int y, out int resx, out int resy)
    parameters:
    - id: start
      type: Terminal.Gui.View
      description: The superview where to look for.
    - id: x
      type: System.Int32
      description: The column location in the superview.
    - id: y
      type: System.Int32
      description: The row location in the superview.
    - id: resx
      type: System.Int32
      description: The found view screen relative column location.
    - id: resy
      type: System.Int32
      description: The found view screen relative row location.
    return:
      type: Terminal.Gui.View
      description: >-
        The view that was found at the <praramref name="x"></praramref> and <praramref name="y"></praramref> coordinates.

        <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no view was found.
    content.vb: Public Shared Function FindDeepestView(start As View, x As Integer, y As Integer, resx As Integer, resy As Integer) As View
  overload: Terminal.Gui.View.FindDeepestView*
  nameWithType.vb: View.FindDeepestView(View, Integer, Integer, Integer, Integer)
  fullName.vb: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View, Integer, Integer, Integer, Integer)
  name.vb: FindDeepestView(View, Integer, Integer, Integer, Integer)
- uid: Terminal.Gui.View.#ctor(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.#ctor(Terminal.Gui.Rect)
  id: '#ctor(Terminal.Gui.Rect)'
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: View(Rect)
  nameWithType: View.View(Rect)
  fullName: Terminal.Gui.View.View(Terminal.Gui.Rect)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/View/View.cs
    startLine: 127
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initializes a new instance of a <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> class with the absolute

    dimensions specified in the <code class="paramref">frame</code> parameter.
  remarks: >-
    This constructor initialize a View with a <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> of <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref>.

    Use <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> to initialize a View with  <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> of <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public View(Rect frame)
    parameters:
    - id: frame
      type: Terminal.Gui.Rect
      description: The region covered by this view.
    content.vb: Public Sub New(frame As Rect)
  overload: Terminal.Gui.View.#ctor*
  nameWithType.vb: View.New(Rect)
  fullName.vb: Terminal.Gui.View.New(Terminal.Gui.Rect)
  name.vb: New(Rect)
- uid: Terminal.Gui.View.#ctor
  commentId: M:Terminal.Gui.View.#ctor
  id: '#ctor'
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: View()
  nameWithType: View.View()
  fullName: Terminal.Gui.View.View()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/View/View.cs
    startLine: 147
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> using <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref> layout.
  remarks: >-
    <p>
      Use <xref href="Terminal.Gui.View.X" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Y" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Width" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> properties to dynamically control the size and location of the view.
      The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> will be created using <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>
      coordinates. The initial size (<xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>) will be 
      adjusted to fit the contents of <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>, including newlines ('\n') for multiple lines. 
    </p>

    <p>
      If <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> is greater than one, word wrapping is provided.
    </p>

    <p>
      This constructor initialize a View with a <xref href="Terminal.Gui.View.LayoutStyle" data-throw-if-not-resolved="false"></xref> of <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>. 
      Use <xref href="Terminal.Gui.View.X" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Y" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.Width" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> properties to dynamically control the size and location of the view.
    </p>
  example: []
  syntax:
    content: public View()
    content.vb: Public Sub New()
  overload: Terminal.Gui.View.#ctor*
  nameWithType.vb: View.New()
  fullName.vb: Terminal.Gui.View.New()
  name.vb: New()
- uid: Terminal.Gui.View.#ctor(System.Int32,System.Int32,System.String)
  commentId: M:Terminal.Gui.View.#ctor(System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.String)'
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: View(int, int, string)
  nameWithType: View.View(int, int, string)
  fullName: Terminal.Gui.View.View(int, int, string)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/View/View.cs
    startLine: 165
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> using <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> layout.
  remarks: >-
    <p>
      The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> will be created at the given
      coordinates with the given string. The size (<xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>) will be 
      adjusted to fit the contents of <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>, including newlines ('\n') for multiple lines. 
    </p>

    <p>
      No line wrapping is provided.
    </p>
  example: []
  syntax:
    content: public View(int x, int y, string text)
    parameters:
    - id: x
      type: System.Int32
      description: column to locate the View.
    - id: y
      type: System.Int32
      description: row to locate the View.
    - id: text
      type: System.String
      description: text to initialize the <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> property with.
    content.vb: Public Sub New(x As Integer, y As Integer, text As String)
  overload: Terminal.Gui.View.#ctor*
  nameWithType.vb: View.New(Integer, Integer, String)
  fullName.vb: Terminal.Gui.View.New(Integer, Integer, String)
  name.vb: New(Integer, Integer, String)
- uid: Terminal.Gui.View.#ctor(Terminal.Gui.Rect,System.String)
  commentId: M:Terminal.Gui.View.#ctor(Terminal.Gui.Rect,System.String)
  id: '#ctor(Terminal.Gui.Rect,System.String)'
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: View(Rect, string)
  nameWithType: View.View(Rect, string)
  fullName: Terminal.Gui.View.View(Terminal.Gui.Rect, string)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/View/View.cs
    startLine: 182
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> using <xref href="Terminal.Gui.LayoutStyle.Absolute" data-throw-if-not-resolved="false"></xref> layout.
  remarks: >-
    <p>
      The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> will be created at the given
      coordinates with the given string. The initial size (<xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>) will be 
      adjusted to fit the contents of <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>, including newlines ('\n') for multiple lines. 
    </p>

    <p>
      If <code>rect.Height</code> is greater than one, word wrapping is provided.
    </p>
  example: []
  syntax:
    content: public View(Rect rect, string text)
    parameters:
    - id: rect
      type: Terminal.Gui.Rect
      description: Location.
    - id: text
      type: System.String
      description: text to initialize the <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> property with.
    content.vb: Public Sub New(rect As Rect, text As String)
  overload: Terminal.Gui.View.#ctor*
  nameWithType.vb: View.New(Rect, String)
  fullName.vb: Terminal.Gui.View.New(Terminal.Gui.Rect, String)
  name.vb: New(Rect, String)
- uid: Terminal.Gui.View.#ctor(System.String,Terminal.Gui.TextDirection)
  commentId: M:Terminal.Gui.View.#ctor(System.String,Terminal.Gui.TextDirection)
  id: '#ctor(System.String,Terminal.Gui.TextDirection)'
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: View(string, TextDirection)
  nameWithType: View.View(string, TextDirection)
  fullName: Terminal.Gui.View.View(string, Terminal.Gui.TextDirection)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/View/View.cs
    startLine: 202
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> using <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref> layout.
  remarks: >-
    <p>
      The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> will be created using <xref href="Terminal.Gui.LayoutStyle.Computed" data-throw-if-not-resolved="false"></xref>
      coordinates with the given string. The initial size (<xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref>) will be 
      adjusted to fit the contents of <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>, including newlines ('\n') for multiple lines. 
    </p>

    <p>
      If <xref href="Terminal.Gui.View.Height" data-throw-if-not-resolved="false"></xref> is greater than one, word wrapping is provided.
    </p>
  example: []
  syntax:
    content: public View(string text, TextDirection direction = TextDirection.LeftRight_TopBottom)
    parameters:
    - id: text
      type: System.String
      description: text to initialize the <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> property with.
    - id: direction
      type: Terminal.Gui.TextDirection
      description: The text direction.
    content.vb: Public Sub New(text As String, direction As TextDirection = TextDirection.LeftRight_TopBottom)
  overload: Terminal.Gui.View.#ctor*
  nameWithType.vb: View.New(String, TextDirection)
  fullName.vb: Terminal.Gui.View.New(String, Terminal.Gui.TextDirection)
  name.vb: New(String, TextDirection)
- uid: Terminal.Gui.View.IsInitialized
  commentId: P:Terminal.Gui.View.IsInitialized
  id: IsInitialized
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: View.IsInitialized
  fullName: Terminal.Gui.View.IsInitialized
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsInitialized
    path: ../Terminal.Gui/View/View.cs
    startLine: 250
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Get or sets if  the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> has been initialized (via <xref href="System.ComponentModel.ISupportInitialize.BeginInit" data-throw-if-not-resolved="false"></xref> 

    and <xref href="System.ComponentModel.ISupportInitialize.EndInit" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public virtual bool IsInitialized { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property IsInitialized As Boolean
  overload: Terminal.Gui.View.IsInitialized*
  implements:
  - System.ComponentModel.ISupportInitializeNotification.IsInitialized
- uid: Terminal.Gui.View.BeginInit
  commentId: M:Terminal.Gui.View.BeginInit
  id: BeginInit
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BeginInit()
  nameWithType: View.BeginInit()
  fullName: Terminal.Gui.View.BeginInit()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BeginInit
    path: ../Terminal.Gui/View/View.cs
    startLine: 271
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Signals the View that initialization is starting. See <xref href="System.ComponentModel.ISupportInitialize" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>
        Views can opt-in to more sophisticated initialization
        by implementing overrides to <xref href="System.ComponentModel.ISupportInitialize.BeginInit" data-throw-if-not-resolved="false"></xref> and
        <xref href="System.ComponentModel.ISupportInitialize.EndInit" data-throw-if-not-resolved="false"></xref> which will be called
        when the view is added to a <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>. 
    </p>

    <p>
        If first-run-only initialization is preferred, overrides to <xref href="System.ComponentModel.ISupportInitializeNotification" data-throw-if-not-resolved="false"></xref>
        can be implemented too, in which case the <xref href="System.ComponentModel.ISupportInitialize" data-throw-if-not-resolved="false"></xref>
        methods will only be called if <xref href="System.ComponentModel.ISupportInitializeNotification.IsInitialized" data-throw-if-not-resolved="false"></xref>
        is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>. This allows proper <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> inheritance hierarchies
        to override base class layout code optimally by doing so only on first run,
        instead of on every run.
      </p>
  example: []
  syntax:
    content: public virtual void BeginInit()
    content.vb: Public Overridable Sub BeginInit()
  overload: Terminal.Gui.View.BeginInit*
  implements:
  - System.ComponentModel.ISupportInitialize.BeginInit
- uid: Terminal.Gui.View.EndInit
  commentId: M:Terminal.Gui.View.EndInit
  id: EndInit
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: EndInit()
  nameWithType: View.EndInit()
  fullName: Terminal.Gui.View.EndInit()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EndInit
    path: ../Terminal.Gui/View/View.cs
    startLine: 302
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Signals the View that initialization is ending. See <xref href="System.ComponentModel.ISupportInitialize" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void EndInit()
    content.vb: Public Sub EndInit()
  overload: Terminal.Gui.View.EndInit*
  implements:
  - System.ComponentModel.ISupportInitialize.EndInit
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  id: Driver
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Driver
    path: ../Terminal.Gui/View/View.cs
    startLine: 321
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Points to the current driver in use by the view, it is a convenience property

    for simplifying the development of new views.
  example: []
  syntax:
    content: public static ConsoleDriver Driver { get; }
    parameters: []
    return:
      type: Terminal.Gui.ConsoleDriver
    content.vb: Public Shared ReadOnly Property Driver As ConsoleDriver
  overload: Terminal.Gui.View.Driver*
- uid: Terminal.Gui.View.Data
  commentId: P:Terminal.Gui.View.Data
  id: Data
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: View.Data
  fullName: Terminal.Gui.View.Data
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Data
    path: ../Terminal.Gui/View/View.cs
    startLine: 327
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets arbitrary data for the view.
  remarks: This property is not used internally.
  example: []
  syntax:
    content: public object Data { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Data As Object
  overload: Terminal.Gui.View.Data*
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  id: Id
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Id
    path: ../Terminal.Gui/View/View.cs
    startLine: 334
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets an identifier for the view;
  remarks: The id should be unique across all Views that share a SuperView.
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
      description: The identifier.
    content.vb: Public Property Id As String
  overload: Terminal.Gui.View.Id*
- uid: Terminal.Gui.View.Title
  commentId: P:Terminal.Gui.View.Title
  id: Title
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: View.Title
  fullName: Terminal.Gui.View.Title
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Title
    path: ../Terminal.Gui/View/View.cs
    startLine: 342
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The title to be displayed for this <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>. The title will be displayed if <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref>.<xref href="Terminal.Gui.Thickness.Top" data-throw-if-not-resolved="false"></xref>

    is greater than 0.
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: The title.
    content.vb: Public Property Title As String
  overload: Terminal.Gui.View.Title*
- uid: Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  commentId: M:Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  id: OnTitleChanging(System.String,System.String)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnTitleChanging(string, string)
  nameWithType: View.OnTitleChanging(string, string)
  fullName: Terminal.Gui.View.OnTitleChanging(string, string)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnTitleChanging
    path: ../Terminal.Gui/View/View.cs
    startLine: 365
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called before the <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> changes. Invokes the <xref href="Terminal.Gui.View.TitleChanging" data-throw-if-not-resolved="false"></xref> event, which can be cancelled.
  example: []
  syntax:
    content: public virtual bool OnTitleChanging(string oldTitle, string newTitle)
    parameters:
    - id: oldTitle
      type: System.String
      description: The <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> that is/has been replaced.
    - id: newTitle
      type: System.String
      description: The new <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> to be replaced.
    return:
      type: System.Boolean
      description: '`true` if an event handler canceled the Title change.'
    content.vb: Public Overridable Function OnTitleChanging(oldTitle As String, newTitle As String) As Boolean
  overload: Terminal.Gui.View.OnTitleChanging*
  nameWithType.vb: View.OnTitleChanging(String, String)
  fullName.vb: Terminal.Gui.View.OnTitleChanging(String, String)
  name.vb: OnTitleChanging(String, String)
- uid: Terminal.Gui.View.TitleChanging
  commentId: E:Terminal.Gui.View.TitleChanging
  id: TitleChanging
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TitleChanging
  nameWithType: View.TitleChanging
  fullName: Terminal.Gui.View.TitleChanging
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TitleChanging
    path: ../Terminal.Gui/View/View.cs
    startLine: 376
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event fired when the <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> is changing. Set <xref href="Terminal.Gui.TitleEventArgs.Cancel" data-throw-if-not-resolved="false"></xref> to 

    `true` to cancel the Title change.
  example: []
  syntax:
    content: public event EventHandler<TitleEventArgs> TitleChanging
    return:
      type: System.EventHandler{Terminal.Gui.TitleEventArgs}
    content.vb: Public Event TitleChanging As EventHandler(Of TitleEventArgs)
- uid: Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  commentId: M:Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  id: OnTitleChanged(System.String,System.String)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnTitleChanged(string, string)
  nameWithType: View.OnTitleChanged(string, string)
  fullName: Terminal.Gui.View.OnTitleChanged(string, string)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnTitleChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 383
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called when the <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> has been changed. Invokes the <xref href="Terminal.Gui.View.TitleChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public virtual void OnTitleChanged(string oldTitle, string newTitle)
    parameters:
    - id: oldTitle
      type: System.String
      description: The <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> that is/has been replaced.
    - id: newTitle
      type: System.String
      description: The new <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> to be replaced.
    content.vb: Public Overridable Sub OnTitleChanged(oldTitle As String, newTitle As String)
  overload: Terminal.Gui.View.OnTitleChanged*
  nameWithType.vb: View.OnTitleChanged(String, String)
  fullName.vb: Terminal.Gui.View.OnTitleChanged(String, String)
  name.vb: OnTitleChanged(String, String)
- uid: Terminal.Gui.View.TitleChanged
  commentId: E:Terminal.Gui.View.TitleChanged
  id: TitleChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TitleChanged
  nameWithType: View.TitleChanged
  fullName: Terminal.Gui.View.TitleChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TitleChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 392
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired after the <xref href="Terminal.Gui.View.Title" data-throw-if-not-resolved="false"></xref> has been changed.
  example: []
  syntax:
    content: public event EventHandler<TitleEventArgs> TitleChanged
    return:
      type: System.EventHandler{Terminal.Gui.TitleEventArgs}
    content.vb: Public Event TitleChanged As EventHandler(Of TitleEventArgs)
- uid: Terminal.Gui.View.EnabledChanged
  commentId: E:Terminal.Gui.View.EnabledChanged
  id: EnabledChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: EnabledChanged
  nameWithType: View.EnabledChanged
  fullName: Terminal.Gui.View.EnabledChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EnabledChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 397
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> value is being changed.
  example: []
  syntax:
    content: public event EventHandler EnabledChanged
    return:
      type: System.EventHandler
    content.vb: Public Event EnabledChanged As EventHandler
- uid: Terminal.Gui.View.OnEnabledChanged
  commentId: M:Terminal.Gui.View.OnEnabledChanged
  id: OnEnabledChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnEnabledChanged()
  nameWithType: View.OnEnabledChanged()
  fullName: Terminal.Gui.View.OnEnabledChanged()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnEnabledChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 400
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when the <xref href="Terminal.Gui.Responder.Enabled" data-throw-if-not-resolved="false"></xref> property from a view is changed.
  example: []
  syntax:
    content: public override void OnEnabledChanged()
    content.vb: Public Overrides Sub OnEnabledChanged()
  overridden: Terminal.Gui.Responder.OnEnabledChanged
  overload: Terminal.Gui.View.OnEnabledChanged*
- uid: Terminal.Gui.View.Enabled
  commentId: P:Terminal.Gui.View.Enabled
  id: Enabled
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: View.Enabled
  fullName: Terminal.Gui.View.Enabled
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Enabled
    path: ../Terminal.Gui/View/View.cs
    startLine: 405
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.Responder" data-throw-if-not-resolved="false"></xref> can respond to user interaction.
  example: []
  syntax:
    content: public override bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property Enabled As Boolean
  overridden: Terminal.Gui.Responder.Enabled
  overload: Terminal.Gui.View.Enabled*
- uid: Terminal.Gui.View.VisibleChanged
  commentId: E:Terminal.Gui.View.VisibleChanged
  id: VisibleChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: VisibleChanged
  nameWithType: View.VisibleChanged
  fullName: Terminal.Gui.View.VisibleChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: VisibleChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 440
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the <xref href="Terminal.Gui.View.Visible" data-throw-if-not-resolved="false"></xref> value is being changed.
  example: []
  syntax:
    content: public event EventHandler VisibleChanged
    return:
      type: System.EventHandler
    content.vb: Public Event VisibleChanged As EventHandler
- uid: Terminal.Gui.View.OnVisibleChanged
  commentId: M:Terminal.Gui.View.OnVisibleChanged
  id: OnVisibleChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnVisibleChanged()
  nameWithType: View.OnVisibleChanged()
  fullName: Terminal.Gui.View.OnVisibleChanged()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnVisibleChanged
    path: ../Terminal.Gui/View/View.cs
    startLine: 443
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when the <xref href="Terminal.Gui.Responder.Visible" data-throw-if-not-resolved="false"></xref> property from a view is changed.
  example: []
  syntax:
    content: public override void OnVisibleChanged()
    content.vb: Public Overrides Sub OnVisibleChanged()
  overridden: Terminal.Gui.Responder.OnVisibleChanged
  overload: Terminal.Gui.View.OnVisibleChanged*
- uid: Terminal.Gui.View.ClearOnVisibleFalse
  commentId: P:Terminal.Gui.View.ClearOnVisibleFalse
  id: ClearOnVisibleFalse
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearOnVisibleFalse
  nameWithType: View.ClearOnVisibleFalse
  fullName: Terminal.Gui.View.ClearOnVisibleFalse
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearOnVisibleFalse
    path: ../Terminal.Gui/View/View.cs
    startLine: 448
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets whether a view is cleared if the <xref href="Terminal.Gui.View.Visible" data-throw-if-not-resolved="false"></xref> property is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool ClearOnVisibleFalse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ClearOnVisibleFalse As Boolean
  overload: Terminal.Gui.View.ClearOnVisibleFalse*
- uid: Terminal.Gui.View.Visible
  commentId: P:Terminal.Gui.View.Visible
  id: Visible
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Visible
  nameWithType: View.Visible
  fullName: Terminal.Gui.View.Visible
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Visible
    path: ../Terminal.Gui/View/View.cs
    startLine: 451
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.Responder" data-throw-if-not-resolved="false"></xref> and all its child controls are displayed.
  example: []
  syntax:
    content: public override bool Visible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property Visible As Boolean
  overridden: Terminal.Gui.Responder.Visible
  overload: Terminal.Gui.View.Visible*
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  id: ToString
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/View/View.cs
    startLine: 488
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Pretty prints the View
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Terminal.Gui.View.ToString*
- uid: Terminal.Gui.View.Dispose(System.Boolean)
  commentId: M:Terminal.Gui.View.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: View.Dispose(bool)
  fullName: Terminal.Gui.View.Dispose(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/View.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dispose
    path: ../Terminal.Gui/View/View.cs
    startLine: 494
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  remarks: >-
    If disposing equals true, the method has been called directly

    or indirectly by a user's code. Managed and unmanaged resources

    can be disposed.

    If disposing equals false, the method has been called by the

    runtime from inside the finalizer and you should not reference

    other objects. Only unmanaged resources can be disposed.
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Terminal.Gui.Responder.Dispose(System.Boolean)
  overload: Terminal.Gui.View.Dispose*
  nameWithType.vb: View.Dispose(Boolean)
  fullName.vb: Terminal.Gui.View.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  id: ColorScheme
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ColorScheme
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 14
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The color scheme for this view, if it is not defined, it returns the <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>'s

    color scheme.
  example: []
  syntax:
    content: public virtual ColorScheme ColorScheme { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.ColorScheme
    content.vb: Public Overridable Property ColorScheme As ColorScheme
  overload: Terminal.Gui.View.ColorScheme*
- uid: Terminal.Gui.View.GetNormalColor
  commentId: M:Terminal.Gui.View.GetNormalColor
  id: GetNormalColor
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetNormalColor()
  nameWithType: View.GetNormalColor()
  fullName: Terminal.Gui.View.GetNormalColor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetNormalColor
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 35
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines the current <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> based on the <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public virtual Attribute GetNormalColor()
    return:
      type: Terminal.Gui.Attribute
      description: >-
        <xref href="Terminal.Gui.ColorScheme.Normal" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
            or <xref href="Terminal.Gui.ColorScheme.Disabled" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
            If it's overridden can return other values.
    content.vb: Public Overridable Function GetNormalColor() As Attribute
  overload: Terminal.Gui.View.GetNormalColor*
- uid: Terminal.Gui.View.GetFocusColor
  commentId: M:Terminal.Gui.View.GetFocusColor
  id: GetFocusColor
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetFocusColor()
  nameWithType: View.GetFocusColor()
  fullName: Terminal.Gui.View.GetFocusColor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetFocusColor
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 50
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines the current <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> based on the <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public virtual Attribute GetFocusColor()
    return:
      type: Terminal.Gui.Attribute
      description: >-
        <xref href="Terminal.Gui.ColorScheme.Focus" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
            or <xref href="Terminal.Gui.ColorScheme.Disabled" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
            If it's overridden can return other values.
    content.vb: Public Overridable Function GetFocusColor() As Attribute
  overload: Terminal.Gui.View.GetFocusColor*
- uid: Terminal.Gui.View.GetHotNormalColor
  commentId: M:Terminal.Gui.View.GetHotNormalColor
  id: GetHotNormalColor
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetHotNormalColor()
  nameWithType: View.GetHotNormalColor()
  fullName: Terminal.Gui.View.GetHotNormalColor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHotNormalColor
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 61
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines the current <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> based on the <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> value.
  example: []
  syntax:
    content: public virtual Attribute GetHotNormalColor()
    return:
      type: Terminal.Gui.Attribute
      description: >-
        <xref href="Terminal.Gui.ColorScheme.HotNormal" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>
            or <xref href="Terminal.Gui.ColorScheme.Disabled" data-throw-if-not-resolved="false"></xref> if <xref href="Terminal.Gui.View.Enabled" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
            If it's overridden can return other values.
    content.vb: Public Overridable Function GetHotNormalColor() As Attribute
  overload: Terminal.Gui.View.GetHotNormalColor*
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  id: AddRune(System.Int32,System.Int32,System.Text.Rune)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: AddRune(int, int, Rune)
  nameWithType: View.AddRune(int, int, Rune)
  fullName: Terminal.Gui.View.AddRune(int, int, System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddRune
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 72
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Displays the specified character in the specified column and row of the View.
  example: []
  syntax:
    content: public void AddRune(int col, int row, Rune ch)
    parameters:
    - id: col
      type: System.Int32
      description: Column (view-relative).
    - id: row
      type: System.Int32
      description: Row (view-relative).
    - id: ch
      type: System.Text.Rune
      description: Ch.
    content.vb: Public Sub AddRune(col As Integer, row As Integer, ch As Rune)
  overload: Terminal.Gui.View.AddRune*
  nameWithType.vb: View.AddRune(Integer, Integer, Rune)
  fullName.vb: Terminal.Gui.View.AddRune(Integer, Integer, System.Text.Rune)
  name.vb: AddRune(Integer, Integer, Rune)
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  id: ClearNeedsDisplay
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearNeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 87
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Clears <xref href="Terminal.Gui.View.NeedsDisplay" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.View.SubViewNeedsDisplay" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected void ClearNeedsDisplay()
    content.vb: Protected Sub ClearNeedsDisplay()
  overload: Terminal.Gui.View.ClearNeedsDisplay*
- uid: Terminal.Gui.View.NeedsDisplay
  commentId: P:Terminal.Gui.View.NeedsDisplay
  id: NeedsDisplay
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: NeedsDisplay
  nameWithType: View.NeedsDisplay
  fullName: Terminal.Gui.View.NeedsDisplay
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 99
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets whether the view needs to be redrawn.
  example: []
  syntax:
    content: public bool NeedsDisplay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NeedsDisplay As Boolean
  overload: Terminal.Gui.View.NeedsDisplay*
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  id: SetNeedsDisplay
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SetNeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 113
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Sets the area of this view needing to be redrawn to <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SetNeedsDisplay()
    content.vb: Public Sub SetNeedsDisplay()
  overload: Terminal.Gui.View.SetNeedsDisplay*
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  id: SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SetNeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 125
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Expands the area of this view needing to be redrawn to include <code class="paramref">region</code>.
  example: []
  syntax:
    content: public void SetNeedsDisplay(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
      description: The view-relative region that needs to be redrawn.
    content.vb: Public Sub SetNeedsDisplay(region As Rect)
  overload: Terminal.Gui.View.SetNeedsDisplay*
- uid: Terminal.Gui.View.SubViewNeedsDisplay
  commentId: P:Terminal.Gui.View.SubViewNeedsDisplay
  id: SubViewNeedsDisplay
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SubViewNeedsDisplay
  nameWithType: View.SubViewNeedsDisplay
  fullName: Terminal.Gui.View.SubViewNeedsDisplay
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SubViewNeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 164
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets whether any Subviews need to be redrawn.
  example: []
  syntax:
    content: public bool SubViewNeedsDisplay { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SubViewNeedsDisplay As Boolean
  overload: Terminal.Gui.View.SubViewNeedsDisplay*
- uid: Terminal.Gui.View.SetSubViewNeedsDisplay
  commentId: M:Terminal.Gui.View.SetSubViewNeedsDisplay
  id: SetSubViewNeedsDisplay
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SetSubViewNeedsDisplay()
  nameWithType: View.SetSubViewNeedsDisplay()
  fullName: Terminal.Gui.View.SetSubViewNeedsDisplay()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SetSubViewNeedsDisplay
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 173
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Indicates that any Subviews (in the <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref> list) need to be repainted.
  example: []
  syntax:
    content: public void SetSubViewNeedsDisplay()
    content.vb: Public Sub SetSubViewNeedsDisplay()
  overload: Terminal.Gui.View.SetSubViewNeedsDisplay*
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  id: Clear
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Clear
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 189
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Clears the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> with the normal background color.
  remarks: >-
    <p>
      This clears the Bounds used by this view.
    </p>
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Terminal.Gui.View.Clear*
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  id: Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Clear
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 200
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Clears the specified screen-relative rectangle with the normal background.
  remarks: ''
  example: []
  syntax:
    content: public void Clear(Rect regionScreen)
    parameters:
    - id: regionScreen
      type: Terminal.Gui.Rect
      description: The screen-relative rectangle to clear.
    content.vb: Public Sub Clear(regionScreen As Rect)
  overload: Terminal.Gui.View.Clear*
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  id: ClipToBounds
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClipToBounds
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 227
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Expands the <xref href="Terminal.Gui.ConsoleDriver" data-throw-if-not-resolved="false"></xref>'s clip region to include <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>

    If <xref href="Terminal.Gui.ConsoleDriver.Clip" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> do not intersect, the clip region will be set to <xref href="Terminal.Gui.Rect.Empty" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public Rect ClipToBounds()
    return:
      type: Terminal.Gui.Rect
      description: The current screen-relative clip region, which can be then re-applied by setting <xref href="Terminal.Gui.ConsoleDriver.Clip" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ClipToBounds() As Rect
  overload: Terminal.Gui.View.ClipToBounds*
- uid: Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  id: DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: DrawHotString(string, Attribute, Attribute)
  nameWithType: View.DrawHotString(string, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(string, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DrawHotString
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 244
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Utility function to draw strings that contain a hotkey.
  remarks: >-
    <p>The hotkey is any character following the hotkey specifier, which is the underscore ('_') character by default.</p>

    <p>The hotkey specifier can be changed via <xref href="Terminal.Gui.View.HotKeySpecifier" data-throw-if-not-resolved="false"></xref></p>
  example: []
  syntax:
    content: public void DrawHotString(string text, Attribute hotColor, Attribute normalColor)
    parameters:
    - id: text
      type: System.String
      description: String to display, the hotkey specifier before a letter flags the next letter as the hotkey.
    - id: hotColor
      type: Terminal.Gui.Attribute
      description: Hot color.
    - id: normalColor
      type: Terminal.Gui.Attribute
      description: Normal color.
    content.vb: Public Sub DrawHotString(text As String, hotColor As Attribute, normalColor As Attribute)
  overload: Terminal.Gui.View.DrawHotString*
  nameWithType.vb: View.DrawHotString(String, Attribute, Attribute)
  fullName.vb: Terminal.Gui.View.DrawHotString(String, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  name.vb: DrawHotString(String, Attribute, Attribute)
- uid: Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  id: DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: DrawHotString(string, bool, ColorScheme)
  nameWithType: View.DrawHotString(string, bool, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(string, bool, Terminal.Gui.ColorScheme)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DrawHotString
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 264
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Utility function to draw strings that contains a hotkey using a <xref href="Terminal.Gui.View.ColorScheme" data-throw-if-not-resolved="false"></xref> and the "focused" state.
  example: []
  syntax:
    content: public void DrawHotString(string text, bool focused, ColorScheme scheme)
    parameters:
    - id: text
      type: System.String
      description: String to display, the underscore before a letter flags the next letter as the hotkey.
    - id: focused
      type: System.Boolean
      description: If set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> this uses the focused colors from the color scheme, otherwise the regular ones.
    - id: scheme
      type: Terminal.Gui.ColorScheme
      description: The color scheme to use.
    content.vb: Public Sub DrawHotString(text As String, focused As Boolean, scheme As ColorScheme)
  overload: Terminal.Gui.View.DrawHotString*
  nameWithType.vb: View.DrawHotString(String, Boolean, ColorScheme)
  fullName.vb: Terminal.Gui.View.DrawHotString(String, Boolean, Terminal.Gui.ColorScheme)
  name.vb: DrawHotString(String, Boolean, ColorScheme)
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  id: Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Move(int, int)
  nameWithType: View.Move(int, int)
  fullName: Terminal.Gui.View.Move(int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Move
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 278
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This moves the cursor to the specified column and row in the view.
  example: []
  syntax:
    content: public void Move(int col, int row)
    parameters:
    - id: col
      type: System.Int32
      description: The column to move to, in view-relative coordinates.
    - id: row
      type: System.Int32
      description: the row to move to, in view-relative coordinates.
    content.vb: Public Sub Move(col As Integer, row As Integer)
  overload: Terminal.Gui.View.Move*
  nameWithType.vb: View.Move(Integer, Integer)
  fullName.vb: Terminal.Gui.View.Move(Integer, Integer)
  name.vb: Move(Integer, Integer)
- uid: Terminal.Gui.View.LineCanvas
  commentId: P:Terminal.Gui.View.LineCanvas
  id: LineCanvas
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: LineCanvas
  nameWithType: View.LineCanvas
  fullName: Terminal.Gui.View.LineCanvas
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LineCanvas
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 291
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The canvas that any line drawing that is to be shared by subviews of this view should add lines to.
  remarks: <xref href="Terminal.Gui.View.Border" data-throw-if-not-resolved="false"></xref> adds border lines to this LineCanvas.
  example: []
  syntax:
    content: public LineCanvas LineCanvas { get; }
    parameters: []
    return:
      type: Terminal.Gui.LineCanvas
    content.vb: Public ReadOnly Property LineCanvas As LineCanvas
  overload: Terminal.Gui.View.LineCanvas*
- uid: Terminal.Gui.View.SuperViewRendersLineCanvas
  commentId: P:Terminal.Gui.View.SuperViewRendersLineCanvas
  id: SuperViewRendersLineCanvas
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SuperViewRendersLineCanvas
  nameWithType: View.SuperViewRendersLineCanvas
  fullName: Terminal.Gui.View.SuperViewRendersLineCanvas
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SuperViewRendersLineCanvas
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 299
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets whether this View will use it's SuperView's <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref> for

    rendering any border lines. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> the rendering of any borders drawn

    by this Frame will be done by it's parent's SuperView. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> (the default)

    this View's <xref href="Terminal.Gui.View.OnDrawFrames" data-throw-if-not-resolved="false"></xref> method will be called to render the borders.
  example: []
  syntax:
    content: public virtual bool SuperViewRendersLineCanvas { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property SuperViewRendersLineCanvas As Boolean
  overload: Terminal.Gui.View.SuperViewRendersLineCanvas*
- uid: Terminal.Gui.View.OnDrawFrames
  commentId: M:Terminal.Gui.View.OnDrawFrames
  id: OnDrawFrames
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnDrawFrames()
  nameWithType: View.OnDrawFrames()
  fullName: Terminal.Gui.View.OnDrawFrames()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnDrawFrames
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 308
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Prepares <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref>. If <xref href="Terminal.Gui.View.SuperViewRendersLineCanvas" data-throw-if-not-resolved="false"></xref> is true, only the <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref> of 

    this view's subviews will be rendered. If <xref href="Terminal.Gui.View.SuperViewRendersLineCanvas" data-throw-if-not-resolved="false"></xref> is false (the default), this 

    method will cause the <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref> be prepared to be rendered.
  example: []
  syntax:
    content: public virtual bool OnDrawFrames()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function OnDrawFrames() As Boolean
  overload: Terminal.Gui.View.OnDrawFrames*
- uid: Terminal.Gui.View.Draw
  commentId: M:Terminal.Gui.View.Draw
  id: Draw
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Draw()
  nameWithType: View.Draw()
  fullName: Terminal.Gui.View.Draw()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Draw
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 340
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Draws the view. Causes the following virtual methods to be called (along with their related events): 

    <xref href="Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>
       Always use <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> (view-relative) when calling <xref href="Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref>, NOT <xref href="Terminal.Gui.View.Frame" data-throw-if-not-resolved="false"></xref> (superview-relative).
    </p>

    <p>
       Views should set the color that they want to use on entry, as otherwise this will inherit
       the last color that was set globally on the driver.
    </p>

    <p>
       Overrides of <xref href="Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref> must ensure they do not set <code>Driver.Clip</code> to a clip region
       larger than the <ref name="Bounds"></ref> property, as this will cause the driver to clip the entire region.
    </p>
  example: []
  syntax:
    content: public void Draw()
    content.vb: Public Sub Draw()
  overload: Terminal.Gui.View.Draw*
- uid: Terminal.Gui.View.OnRenderLineCanvas
  commentId: M:Terminal.Gui.View.OnRenderLineCanvas
  id: OnRenderLineCanvas
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnRenderLineCanvas()
  nameWithType: View.OnRenderLineCanvas()
  fullName: Terminal.Gui.View.OnRenderLineCanvas()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnRenderLineCanvas
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 380
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Renders <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref>. If <xref href="Terminal.Gui.View.SuperViewRendersLineCanvas" data-throw-if-not-resolved="false"></xref> is true, only the <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref> of 

    this view's subviews will be rendered. If <xref href="Terminal.Gui.View.SuperViewRendersLineCanvas" data-throw-if-not-resolved="false"></xref> is false (the default), this 

    method will cause the <xref href="Terminal.Gui.View.LineCanvas" data-throw-if-not-resolved="false"></xref> to be rendered.
  example: []
  syntax:
    content: public virtual bool OnRenderLineCanvas()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function OnRenderLineCanvas() As Boolean
  overload: Terminal.Gui.View.OnRenderLineCanvas*
- uid: Terminal.Gui.View.DrawContent
  commentId: E:Terminal.Gui.View.DrawContent
  id: DrawContent
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: DrawContent
  nameWithType: View.DrawContent
  fullName: Terminal.Gui.View.DrawContent
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DrawContent
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 427
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event invoked when the content area of the View is to be drawn.
  remarks: >-
    <p>

    Will be invoked before any subviews added with <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> have been drawn.

    </p>

    <p>

    Rect provides the view-relative rectangle describing the currently visible viewport into the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public event EventHandler<DrawEventArgs> DrawContent
    return:
      type: System.EventHandler{Terminal.Gui.DrawEventArgs}
    content.vb: Public Event DrawContent As EventHandler(Of DrawEventArgs)
- uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  id: OnDrawContent(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnDrawContent(Rect)
  nameWithType: View.OnDrawContent(Rect)
  fullName: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnDrawContent
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 436
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Enables overrides to draw infinitely scrolled content and/or a background behind added controls.
  remarks: This method will be called before any subviews added with <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> have been drawn.
  example: []
  syntax:
    content: public virtual void OnDrawContent(Rect contentArea)
    parameters:
    - id: contentArea
      type: Terminal.Gui.Rect
      description: The view-relative rectangle describing the currently visible viewport into the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub OnDrawContent(contentArea As Rect)
  overload: Terminal.Gui.View.OnDrawContent*
- uid: Terminal.Gui.View.DrawContentComplete
  commentId: E:Terminal.Gui.View.DrawContentComplete
  id: DrawContentComplete
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: DrawContentComplete
  nameWithType: View.DrawContentComplete
  fullName: Terminal.Gui.View.DrawContentComplete
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DrawContentComplete
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 492
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event invoked when the content area of the View is completed drawing.
  remarks: >-
    <p>

    Will be invoked after any subviews removed with <xref href="Terminal.Gui.View.Remove(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> have been completed drawing.

    </p>

    <p>

    Rect provides the view-relative rectangle describing the currently visible viewport into the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public event EventHandler<DrawEventArgs> DrawContentComplete
    return:
      type: System.EventHandler{Terminal.Gui.DrawEventArgs}
    content.vb: Public Event DrawContentComplete As EventHandler(Of DrawEventArgs)
- uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  id: OnDrawContentComplete(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnDrawContentComplete(Rect)
  nameWithType: View.OnDrawContentComplete(Rect)
  fullName: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewDrawing.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnDrawContentComplete
    path: ../Terminal.Gui/View/ViewDrawing.cs
    startLine: 501
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Enables overrides after completed drawing infinitely scrolled content and/or a background behind removed controls.
  remarks: This method will be called after any subviews removed with <xref href="Terminal.Gui.View.Remove(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> have been completed drawing.
  example: []
  syntax:
    content: public virtual void OnDrawContentComplete(Rect contentArea)
    parameters:
    - id: contentArea
      type: Terminal.Gui.Rect
      description: The view-relative rectangle describing the currently visible viewport into the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overridable Sub OnDrawContentComplete(contentArea As Rect)
  overload: Terminal.Gui.View.OnDrawContentComplete*
- uid: Terminal.Gui.View.HotKeyChanged
  commentId: E:Terminal.Gui.View.HotKeyChanged
  id: HotKeyChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: HotKeyChanged
  nameWithType: View.HotKeyChanged
  fullName: Terminal.Gui.View.HotKeyChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HotKeyChanged
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 13
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event invoked when the <xref href="Terminal.Gui.View.HotKey" data-throw-if-not-resolved="false"></xref> is changed.
  example: []
  syntax:
    content: public event EventHandler<KeyChangedEventArgs> HotKeyChanged
    return:
      type: System.EventHandler{Terminal.Gui.KeyChangedEventArgs}
    content.vb: Public Event HotKeyChanged As EventHandler(Of KeyChangedEventArgs)
- uid: Terminal.Gui.View.HotKey
  commentId: P:Terminal.Gui.View.HotKey
  id: HotKey
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: HotKey
  nameWithType: View.HotKey
  fullName: Terminal.Gui.View.HotKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HotKey
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 20
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the HotKey defined for this view. A user pressing HotKey on the keyboard while this view has focus will cause the Clicked event to fire.
  example: []
  syntax:
    content: public virtual Key HotKey { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public Overridable Property HotKey As Key
  overload: Terminal.Gui.View.HotKey*
- uid: Terminal.Gui.View.HotKeySpecifier
  commentId: P:Terminal.Gui.View.HotKeySpecifier
  id: HotKeySpecifier
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: HotKeySpecifier
  nameWithType: View.HotKeySpecifier
  fullName: Terminal.Gui.View.HotKeySpecifier
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HotKeySpecifier
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 42
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the specifier character for the hotkey (e.g. '_'). Set to '\xffff' to disable hotkey support for this View instance. The default is '\xffff'.
  example: []
  syntax:
    content: public virtual Rune HotKeySpecifier { get; set; }
    parameters: []
    return:
      type: System.Text.Rune
    content.vb: Public Overridable Property HotKeySpecifier As Rune
  overload: Terminal.Gui.View.HotKeySpecifier*
- uid: Terminal.Gui.View.Shortcut
  commentId: P:Terminal.Gui.View.Shortcut
  id: Shortcut
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Shortcut
  nameWithType: View.Shortcut
  fullName: Terminal.Gui.View.Shortcut
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Shortcut
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 59
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This is the global setting that can be used as a global shortcut to invoke an action if provided.
  example: []
  syntax:
    content: public Key Shortcut { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public Property Shortcut As Key
  overload: Terminal.Gui.View.Shortcut*
- uid: Terminal.Gui.View.ShortcutTag
  commentId: P:Terminal.Gui.View.ShortcutTag
  id: ShortcutTag
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ShortcutTag
  nameWithType: View.ShortcutTag
  fullName: Terminal.Gui.View.ShortcutTag
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ShortcutTag
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 71
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The keystroke combination used in the <xref href="Terminal.Gui.View.Shortcut" data-throw-if-not-resolved="false"></xref> as string.
  example: []
  syntax:
    content: public string ShortcutTag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ShortcutTag As String
  overload: Terminal.Gui.View.ShortcutTag*
- uid: Terminal.Gui.View.ShortcutAction
  commentId: P:Terminal.Gui.View.ShortcutAction
  id: ShortcutAction
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ShortcutAction
  nameWithType: View.ShortcutAction
  fullName: Terminal.Gui.View.ShortcutAction
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ShortcutAction
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 76
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The action to run if the <xref href="Terminal.Gui.View.Shortcut" data-throw-if-not-resolved="false"></xref> is defined.
  example: []
  syntax:
    content: public virtual Action ShortcutAction { get; set; }
    parameters: []
    return:
      type: System.Action
    content.vb: Public Overridable Property ShortcutAction As Action
  overload: Terminal.Gui.View.ShortcutAction*
- uid: Terminal.Gui.View.TabIndexes
  commentId: P:Terminal.Gui.View.TabIndexes
  id: TabIndexes
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TabIndexes
  nameWithType: View.TabIndexes
  fullName: Terminal.Gui.View.TabIndexes
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TabIndexes
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 91
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This returns a tab index list of the subviews contained by this view.
  example: []
  syntax:
    content: public IList<View> TabIndexes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Terminal.Gui.View}
      description: The tabIndexes.
    content.vb: Public ReadOnly Property TabIndexes As IList(Of View)
  overload: Terminal.Gui.View.TabIndexes*
- uid: Terminal.Gui.View.TabIndex
  commentId: P:Terminal.Gui.View.TabIndex
  id: TabIndex
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TabIndex
  nameWithType: View.TabIndex
  fullName: Terminal.Gui.View.TabIndex
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TabIndex
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 98
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Indicates the index of the current <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> from the <xref href="Terminal.Gui.View.TabIndexes" data-throw-if-not-resolved="false"></xref> list.
  example: []
  syntax:
    content: public int TabIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TabIndex As Integer
  overload: Terminal.Gui.View.TabIndex*
- uid: Terminal.Gui.View.TabStop
  commentId: P:Terminal.Gui.View.TabStop
  id: TabStop
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TabStop
  nameWithType: View.TabStop
  fullName: Terminal.Gui.View.TabStop
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TabStop
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 150
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    This only be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the <xref href="Terminal.Gui.View.CanFocus" data-throw-if-not-resolved="false"></xref> is also <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> 

    and the focus can be avoided by setting this to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>
  example: []
  syntax:
    content: public bool TabStop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TabStop As Boolean
  overload: Terminal.Gui.View.TabStop*
- uid: Terminal.Gui.View.KeyPressed
  commentId: E:Terminal.Gui.View.KeyPressed
  id: KeyPressed
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: KeyPressed
  nameWithType: View.KeyPressed
  fullName: Terminal.Gui.View.KeyPressed
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyPressed
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 165
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when a character key is pressed and occurs after the key up event.
  example: []
  syntax:
    content: public event EventHandler<KeyEventEventArgs> KeyPressed
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Event KeyPressed As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ProcessKey
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 168
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    If the view is focused, gives the view a

    chance to process the keystroke.
  remarks: >-
    <p>
            Views can override this method if they are
            interested in processing the given keystroke.
            If they consume the keystroke, they must
            return true to stop the keystroke from being
            processed by other widgets or consumed by the
            widget engine.    If they return false, the
            keystroke will be passed using the ProcessColdKey
            method to other views to process.
          </p>
    <p>
            The View implementation does nothing but return false,
            so it is not necessary to call base.ProcessKey if you
            derive directly from View, but you should if you derive
            other View subclasses.
          </p>
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: Contains the details about the key that produced the event.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessKey(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.View.ProcessKey*
- uid: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  id: InvokeKeybindings(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: InvokeKeybindings(KeyEvent)
  nameWithType: View.InvokeKeybindings(KeyEvent)
  fullName: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: InvokeKeybindings
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 192
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Invokes any binding that is registered on this <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>

    and matches the <code class="paramref">keyEvent</code>
  example: []
  syntax:
    content: protected bool? InvokeKeybindings(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: The key event passed.
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Protected Function InvokeKeybindings(keyEvent As KeyEvent) As Boolean?
  overload: Terminal.Gui.View.InvokeKeybindings*
- uid: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  id: AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: AddKeyBinding(Key, params Command[])
  nameWithType: View.AddKeyBinding(Key, params Command[])
  fullName: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key, params Terminal.Gui.Command[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddKeyBinding
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 235
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>Adds a new key combination that will trigger the given <code class="paramref">command</code>

    (if supported by the View - see <xref href="Terminal.Gui.View.GetSupportedCommands" data-throw-if-not-resolved="false"></xref>)

    </p>

    <p>If the key is already bound to a different <xref href="Terminal.Gui.Command" data-throw-if-not-resolved="false"></xref> it will be

    rebound to this one</p>

    <remarks>Commands are only ever applied to the current <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>(i.e. this feature

    cannot be used to switch focus to another view and perform multiple commands there) </remarks>
  example: []
  syntax:
    content: public void AddKeyBinding(Key key, params Command[] command)
    parameters:
    - id: key
      type: Terminal.Gui.Key
      description: ''
    - id: command
      type: Terminal.Gui.Command[]
      description: >-
        The command(s) to run on the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> when <code class="paramref">key</code> is pressed.
            When specifying multiple commands, all commands will be applied in sequence. The bound <code class="paramref">key</code> strike
            will be consumed if any took effect.
    content.vb: Public Sub AddKeyBinding(key As Key, ParamArray command As Command())
  overload: Terminal.Gui.View.AddKeyBinding*
  nameWithType.vb: View.AddKeyBinding(Key, ParamArray Command())
  fullName.vb: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key, ParamArray Terminal.Gui.Command())
  name.vb: AddKeyBinding(Key, ParamArray Command())
- uid: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  id: ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ReplaceKeyBinding(Key, Key)
  nameWithType: View.ReplaceKeyBinding(Key, Key)
  fullName: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key, Terminal.Gui.Key)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ReplaceKeyBinding
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 253
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Replaces a key combination already bound to <xref href="Terminal.Gui.Command" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected void ReplaceKeyBinding(Key fromKey, Key toKey)
    parameters:
    - id: fromKey
      type: Terminal.Gui.Key
      description: The key to be replaced.
    - id: toKey
      type: Terminal.Gui.Key
      description: The new key to be used.
    content.vb: Protected Sub ReplaceKeyBinding(fromKey As Key, toKey As Key)
  overload: Terminal.Gui.View.ReplaceKeyBinding*
- uid: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  id: ContainsKeyBinding(Terminal.Gui.Key)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ContainsKeyBinding(Key)
  nameWithType: View.ContainsKeyBinding(Key)
  fullName: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ContainsKeyBinding
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 267
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Checks if the key binding already exists.
  example: []
  syntax:
    content: public bool ContainsKeyBinding(Key key)
    parameters:
    - id: key
      type: Terminal.Gui.Key
      description: The key to check.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> If the key already exist, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Function ContainsKeyBinding(key As Key) As Boolean
  overload: Terminal.Gui.View.ContainsKeyBinding*
- uid: Terminal.Gui.View.ClearKeyBindings
  commentId: M:Terminal.Gui.View.ClearKeyBindings
  id: ClearKeyBindings
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearKeyBindings()
  nameWithType: View.ClearKeyBindings()
  fullName: Terminal.Gui.View.ClearKeyBindings()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearKeyBindings
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 275
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes all bound keys from the View and resets the default bindings.
  example: []
  syntax:
    content: public void ClearKeyBindings()
    content.vb: Public Sub ClearKeyBindings()
  overload: Terminal.Gui.View.ClearKeyBindings*
- uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  id: ClearKeyBinding(Terminal.Gui.Key)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearKeyBinding(Key)
  nameWithType: View.ClearKeyBinding(Key)
  fullName: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearKeyBinding
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 284
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Clears the existing keybinding (if any) for the given <code class="paramref">key</code>.
  example: []
  syntax:
    content: public void ClearKeyBinding(Key key)
    parameters:
    - id: key
      type: Terminal.Gui.Key
      description: ''
    content.vb: Public Sub ClearKeyBinding(key As Key)
  overload: Terminal.Gui.View.ClearKeyBinding*
- uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  id: ClearKeyBinding(Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ClearKeyBinding(params Command[])
  nameWithType: View.ClearKeyBinding(params Command[])
  fullName: Terminal.Gui.View.ClearKeyBinding(params Terminal.Gui.Command[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearKeyBinding
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 294
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Removes all key bindings that trigger the given command. Views can have multiple different

    keys bound to the same command and this method will clear all of them.
  example: []
  syntax:
    content: public void ClearKeyBinding(params Command[] command)
    parameters:
    - id: command
      type: Terminal.Gui.Command[]
      description: ''
    content.vb: Public Sub ClearKeyBinding(ParamArray command As Command())
  overload: Terminal.Gui.View.ClearKeyBinding*
  nameWithType.vb: View.ClearKeyBinding(ParamArray Command())
  fullName.vb: Terminal.Gui.View.ClearKeyBinding(ParamArray Terminal.Gui.Command())
  name.vb: ClearKeyBinding(ParamArray Command())
- uid: Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  commentId: M:Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  id: AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: AddCommand(Command, Func<bool?>)
  nameWithType: View.AddCommand(Command, Func<bool?>)
  fullName: Terminal.Gui.View.AddCommand(Terminal.Gui.Command, System.Func<bool?>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddCommand
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 310
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>States that the given <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> supports a given <code class="paramref">command</code>

    and what <code class="paramref">f</code> to perform to make that command happen

    </p>

    <p>If the <code class="paramref">command</code> already has an implementation the <code class="paramref">f</code>

    will replace the old one</p>
  example: []
  syntax:
    content: protected void AddCommand(Command command, Func<bool?> f)
    parameters:
    - id: command
      type: Terminal.Gui.Command
      description: The command.
    - id: f
      type: System.Func{System.Nullable{System.Boolean}}
      description: The function.
    content.vb: Protected Sub AddCommand(command As Command, f As Func(Of Boolean?))
  overload: Terminal.Gui.View.AddCommand*
  nameWithType.vb: View.AddCommand(Command, Func(Of Boolean?))
  fullName.vb: Terminal.Gui.View.AddCommand(Terminal.Gui.Command, System.Func(Of Boolean?))
  name.vb: AddCommand(Command, Func(Of Boolean?))
- uid: Terminal.Gui.View.GetSupportedCommands
  commentId: M:Terminal.Gui.View.GetSupportedCommands
  id: GetSupportedCommands
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetSupportedCommands()
  nameWithType: View.GetSupportedCommands()
  fullName: Terminal.Gui.View.GetSupportedCommands()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetSupportedCommands
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 326
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns all commands that are supported by this <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<Command> GetSupportedCommands()
    return:
      type: System.Collections.Generic.IEnumerable{Terminal.Gui.Command}
      description: ''
    content.vb: Public Function GetSupportedCommands() As IEnumerable(Of Command)
  overload: Terminal.Gui.View.GetSupportedCommands*
- uid: Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  id: GetKeyFromCommand(Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetKeyFromCommand(params Command[])
  nameWithType: View.GetKeyFromCommand(params Command[])
  fullName: Terminal.Gui.View.GetKeyFromCommand(params Terminal.Gui.Command[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetKeyFromCommand
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 336
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the key used by a command.
  example: []
  syntax:
    content: public Key GetKeyFromCommand(params Command[] command)
    parameters:
    - id: command
      type: Terminal.Gui.Command[]
      description: The command to search.
    return:
      type: Terminal.Gui.Key
      description: The <xref href="Terminal.Gui.Key" data-throw-if-not-resolved="false"></xref> used by a <xref href="Terminal.Gui.Command" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function GetKeyFromCommand(ParamArray command As Command()) As Key
  overload: Terminal.Gui.View.GetKeyFromCommand*
  nameWithType.vb: View.GetKeyFromCommand(ParamArray Command())
  fullName.vb: Terminal.Gui.View.GetKeyFromCommand(ParamArray Terminal.Gui.Command())
  name.vb: GetKeyFromCommand(ParamArray Command())
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  id: ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ProcessHotKey
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 342
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    This method can be overwritten by view that
      want to provide accelerator functionality
      (Alt-key for example).
  remarks: >-
    <p>
            Before keys are sent to the subview on the
            current view, all the views are
            processed and the key is passed to the widgets
            to allow some of them to process the keystroke
            as a hot-key. </p>
    <p>
            For example, if you implement a button that
            has a hotkey ok "o", you would catch the
            combination Alt-o here.  If the event is
            caught, you must return true to stop the
            keystroke from being dispatched to other
            views.
         </p>
  example: []
  syntax:
    content: public override bool ProcessHotKey(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessHotKey(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.View.ProcessHotKey*
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  id: ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ProcessColdKey
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 366
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    This method can be overwritten by views that
      want to provide accelerator functionality
      (Alt-key for example), but without
      interefering with normal ProcessKey behavior.
  remarks: >-
    <p>
            After keys are sent to the subviews on the
            current view, all the view are
            processed and the key is passed to the views
            to allow some of them to process the keystroke
            as a cold-key. </p>
    <p>
           This functionality is used, for example, by
           default buttons to act on the enter key.
           Processing this as a hot-key would prevent
           non-default buttons from consuming the enter
           keypress when they have the focus.
         </p>
  example: []
  syntax:
    content: public override bool ProcessColdKey(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: Contains the details about the key that produced the event.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessColdKey(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.View.ProcessColdKey*
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  id: KeyDown
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyDown
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 395
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when a key is pressed.
  example: []
  syntax:
    content: public event EventHandler<KeyEventEventArgs> KeyDown
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Event KeyDown As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  id: OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnKeyDown
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 398
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a key is pressed.
  example: []
  syntax:
    content: public override bool OnKeyDown(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: Contains the details about the key that produced the event.
    return:
      type: System.Boolean
      description: true if the event was handled
    content.vb: Public Overrides Function OnKeyDown(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.View.OnKeyDown*
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  id: KeyUp
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyUp
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 425
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when a key is released.
  example: []
  syntax:
    content: public event EventHandler<KeyEventEventArgs> KeyUp
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Event KeyUp As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  id: OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewKeyboard.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnKeyUp
    path: ../Terminal.Gui/View/ViewKeyboard.cs
    startLine: 428
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a key is released.
  example: []
  syntax:
    content: public override bool OnKeyUp(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: Contains the details about the key that produced the event.
    return:
      type: System.Boolean
      description: true if the event was handled
    content.vb: Public Overrides Function OnKeyUp(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.View.OnKeyUp*
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  id: MouseEnter
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseEnter
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 11
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the view receives the mouse event for the first time.
  example: []
  syntax:
    content: public event EventHandler<MouseEventEventArgs> MouseEnter
    return:
      type: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
    content.vb: Public Event MouseEnter As EventHandler(Of MouseEventEventArgs)
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  id: MouseLeave
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseLeave
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 16
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the view receives a mouse event for the last time.
  example: []
  syntax:
    content: public event EventHandler<MouseEventEventArgs> MouseLeave
    return:
      type: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
    content.vb: Public Event MouseLeave As EventHandler(Of MouseEventEventArgs)
- uid: Terminal.Gui.View.MouseClick
  commentId: E:Terminal.Gui.View.MouseClick
  id: MouseClick
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: MouseClick
  nameWithType: View.MouseClick
  fullName: Terminal.Gui.View.MouseClick
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseClick
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 21
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when a mouse event is generated.
  example: []
  syntax:
    content: public event EventHandler<MouseEventEventArgs> MouseClick
    return:
      type: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
    content.vb: Public Event MouseClick As EventHandler(Of MouseEventEventArgs)
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  id: OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnMouseEnter
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 24
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called when the mouse first enters the view; the view will now

    receives mouse events until the mouse leaves the view. At which time, <xref href="Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)" data-throw-if-not-resolved="false"></xref>

    will be called.
  example: []
  syntax:
    content: public override bool OnMouseEnter(MouseEvent mouseEvent)
    parameters:
    - id: mouseEvent
      type: Terminal.Gui.MouseEvent
      description: ''
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function OnMouseEnter(mouseEvent As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.View.OnMouseEnter*
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  id: OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnMouseLeave
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 41
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called when the mouse has moved outside of the view; the view will no longer receive mouse events (until

    the mouse moves within the view again and <xref href="Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)" data-throw-if-not-resolved="false"></xref> is called).
  example: []
  syntax:
    content: public override bool OnMouseLeave(MouseEvent mouseEvent)
    parameters:
    - id: mouseEvent
      type: Terminal.Gui.MouseEvent
      description: ''
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function OnMouseLeave(mouseEvent As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.View.OnMouseLeave*
- uid: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  id: OnMouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnMouseEvent(MouseEvent)
  nameWithType: View.OnMouseEvent(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnMouseEvent
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 62
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a mouse event is generated
  example: []
  syntax:
    content: public virtual bool OnMouseEvent(MouseEvent mouseEvent)
    parameters:
    - id: mouseEvent
      type: Terminal.Gui.MouseEvent
      description: ''
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, if the event was handled, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Overridable Function OnMouseEvent(mouseEvent As MouseEvent) As Boolean
  overload: Terminal.Gui.View.OnMouseEvent*
- uid: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  commentId: M:Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  id: OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnMouseClick(MouseEventEventArgs)
  nameWithType: View.OnMouseClick(MouseEventEventArgs)
  fullName: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnMouseClick
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 92
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invokes the MouseClick event.
  example: []
  syntax:
    content: protected bool OnMouseClick(MouseEventEventArgs args)
    parameters:
    - id: args
      type: Terminal.Gui.MouseEventEventArgs
    return:
      type: System.Boolean
    content.vb: Protected Function OnMouseClick(args As MouseEventEventArgs) As Boolean
  overload: Terminal.Gui.View.OnMouseClick*
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  id: WantMousePositionReports
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: WantMousePositionReports
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 106
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> wants mouse position reports.
  example: []
  syntax:
    content: public virtual bool WantMousePositionReports { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if want mouse position reports; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overridable Property WantMousePositionReports As Boolean
  overload: Terminal.Gui.View.WantMousePositionReports*
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  id: WantContinuousButtonPressed
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewMouse.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: WantContinuousButtonPressed
    path: ../Terminal.Gui/View/ViewMouse.cs
    startLine: 111
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> want continuous button pressed event.
  example: []
  syntax:
    content: public virtual bool WantContinuousButtonPressed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property WantContinuousButtonPressed As Boolean
  overload: Terminal.Gui.View.WantContinuousButtonPressed*
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  id: SuperView
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SuperView
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 16
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the container for this view, or null if this view has not been added to a container.
  example: []
  syntax:
    content: public virtual View SuperView { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.View
      description: The super view.
    content.vb: Public Overridable Property SuperView As View
  overload: Terminal.Gui.View.SuperView*
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  id: Subviews
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Subviews
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 30
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This returns a list of the subviews contained by this view.
  example: []
  syntax:
    content: public IList<View> Subviews { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Terminal.Gui.View}
      description: The subviews.
    content.vb: Public ReadOnly Property Subviews As IList(Of View)
  overload: Terminal.Gui.View.Subviews*
- uid: Terminal.Gui.View.IsCurrentTop
  commentId: P:Terminal.Gui.View.IsCurrentTop
  id: IsCurrentTop
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsCurrentTop
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 39
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns a value indicating if this View is currently on Top (Active)
  example: []
  syntax:
    content: public bool IsCurrentTop { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCurrentTop As Boolean
  overload: Terminal.Gui.View.IsCurrentTop*
- uid: Terminal.Gui.View.Added
  commentId: E:Terminal.Gui.View.Added
  id: Added
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Added
  nameWithType: View.Added
  fullName: Terminal.Gui.View.Added
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Added
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 44
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when this view is added to another.
  example: []
  syntax:
    content: public event EventHandler<SuperViewChangedEventArgs> Added
    return:
      type: System.EventHandler{Terminal.Gui.SuperViewChangedEventArgs}
    content.vb: Public Event Added As EventHandler(Of SuperViewChangedEventArgs)
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  id: Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 55
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds a subview (child) to this view.
  remarks: >-
    The Views that have been added to this view can be retrieved via the <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref> property. 

    See also <xref href="Terminal.Gui.View.Remove(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> <xref href="Terminal.Gui.View.RemoveAll" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public virtual void Add(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
    content.vb: Public Overridable Sub Add(view As View)
  overload: Terminal.Gui.View.Add*
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  id: Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Add(params View[])
  nameWithType: View.Add(params View[])
  fullName: Terminal.Gui.View.Add(params Terminal.Gui.View[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 102
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds the specified views (children) to the view.
  remarks: >-
    The Views that have been added to this view can be retrieved via the <xref href="Terminal.Gui.View.Subviews" data-throw-if-not-resolved="false"></xref> property. 

    See also <xref href="Terminal.Gui.View.Remove(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> <xref href="Terminal.Gui.View.RemoveAll" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Add(params View[] views)
    parameters:
    - id: views
      type: Terminal.Gui.View[]
      description: Array of one or more views (can be optional parameter).
    content.vb: Public Sub Add(ParamArray views As View())
  overload: Terminal.Gui.View.Add*
  nameWithType.vb: View.Add(ParamArray View())
  fullName.vb: Terminal.Gui.View.Add(ParamArray Terminal.Gui.View())
  name.vb: Add(ParamArray View())
- uid: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  commentId: M:Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  id: OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnAdded(SuperViewChangedEventArgs)
  nameWithType: View.OnAdded(SuperViewChangedEventArgs)
  fullName: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnAdded
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 116
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a subview is being added to this view.
  example: []
  syntax:
    content: public virtual void OnAdded(SuperViewChangedEventArgs e)
    parameters:
    - id: e
      type: Terminal.Gui.SuperViewChangedEventArgs
      description: Event where <xref href="Terminal.Gui.ViewEventArgs.View" data-throw-if-not-resolved="false"></xref> is the subview being added.
    content.vb: Public Overridable Sub OnAdded(e As SuperViewChangedEventArgs)
  overload: Terminal.Gui.View.OnAdded*
- uid: Terminal.Gui.View.IsAdded
  commentId: P:Terminal.Gui.View.IsAdded
  id: IsAdded
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: IsAdded
  nameWithType: View.IsAdded
  fullName: Terminal.Gui.View.IsAdded
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsAdded
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 132
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Indicates whether the view was added to <xref href="Terminal.Gui.View.SuperView" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsAdded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAdded As Boolean
  overload: Terminal.Gui.View.IsAdded*
- uid: Terminal.Gui.View.Removed
  commentId: E:Terminal.Gui.View.Removed
  id: Removed
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Removed
  nameWithType: View.Removed
  fullName: Terminal.Gui.View.Removed
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Removed
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 137
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when this view is removed from another.
  example: []
  syntax:
    content: public event EventHandler<SuperViewChangedEventArgs> Removed
    return:
      type: System.EventHandler{Terminal.Gui.SuperViewChangedEventArgs}
    content.vb: Public Event Removed As EventHandler(Of SuperViewChangedEventArgs)
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  id: RemoveAll
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RemoveAll
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 142
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes all subviews (children) added via <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.View.Add(Terminal.Gui.View%5b%5d)" data-throw-if-not-resolved="false"></xref> from this View.
  example: []
  syntax:
    content: public virtual void RemoveAll()
    content.vb: Public Overridable Sub RemoveAll()
  overload: Terminal.Gui.View.RemoveAll*
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  id: Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Remove
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 158
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes a subview added via <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.View.Add(Terminal.Gui.View%5b%5d)" data-throw-if-not-resolved="false"></xref> from this View.
  remarks: ''
  example: []
  syntax:
    content: public virtual void Remove(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
    content.vb: Public Overridable Sub Remove(view As View)
  overload: Terminal.Gui.View.Remove*
- uid: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  commentId: M:Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  id: OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnRemoved(SuperViewChangedEventArgs)
  nameWithType: View.OnRemoved(SuperViewChangedEventArgs)
  fullName: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnRemoved
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 184
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a subview is being removed from this view.
  example: []
  syntax:
    content: public virtual void OnRemoved(SuperViewChangedEventArgs e)
    parameters:
    - id: e
      type: Terminal.Gui.SuperViewChangedEventArgs
      description: Event args describing the subview being removed.
    content.vb: Public Overridable Sub OnRemoved(e As SuperViewChangedEventArgs)
  overload: Terminal.Gui.View.OnRemoved*
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  id: BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BringSubviewToFront
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 209
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Brings the specified subview to the front so it is drawn on top of any other views.
  remarks: <xref href="Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void BringSubviewToFront(View subview)
    parameters:
    - id: subview
      type: Terminal.Gui.View
      description: The subview to send to the front
    content.vb: Public Sub BringSubviewToFront(subview As View)
  overload: Terminal.Gui.View.BringSubviewToFront*
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  id: SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SendSubviewToBack
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 224
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Sends the specified subview to the front so it is the first view drawn
  remarks: <xref href="Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void SendSubviewToBack(View subview)
    parameters:
    - id: subview
      type: Terminal.Gui.View
      description: The subview to send to the front
    content.vb: Public Sub SendSubviewToBack(subview As View)
  overload: Terminal.Gui.View.SendSubviewToBack*
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  id: SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SendSubviewBackwards
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 239
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the subview backwards in the hierarchy, only one step
  remarks: If you want to send the view all the way to the back use SendSubviewToBack.
  example: []
  syntax:
    content: public void SendSubviewBackwards(View subview)
    parameters:
    - id: subview
      type: Terminal.Gui.View
      description: The subview to send backwards
    content.vb: Public Sub SendSubviewBackwards(subview As View)
  overload: Terminal.Gui.View.SendSubviewBackwards*
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  id: BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BringSubviewForward
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 257
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the subview backwards in the hierarchy, only one step
  remarks: If you want to send the view all the way to the back use SendSubviewToBack.
  example: []
  syntax:
    content: public void BringSubviewForward(View subview)
    parameters:
    - id: subview
      type: Terminal.Gui.View
      description: The subview to send backwards
    content.vb: Public Sub BringSubviewForward(subview As View)
  overload: Terminal.Gui.View.BringSubviewForward*
- uid: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  id: GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetTopSuperView(View, View)
  nameWithType: View.GetTopSuperView(View, View)
  fullName: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View, Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetTopSuperView
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 272
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Get the top superview of a given <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public View GetTopSuperView(View view = null, View superview = null)
    parameters:
    - id: view
      type: Terminal.Gui.View
    - id: superview
      type: Terminal.Gui.View
    return:
      type: Terminal.Gui.View
      description: The superview view.
    content.vb: Public Function GetTopSuperView(view As View = Nothing, superview As View = Nothing) As View
  overload: Terminal.Gui.View.GetTopSuperView*
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  id: Enter
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Enter
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 298
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the view gets focus.
  example: []
  syntax:
    content: public event EventHandler<FocusEventArgs> Enter
    return:
      type: System.EventHandler{Terminal.Gui.FocusEventArgs}
    content.vb: Public Event Enter As EventHandler(Of FocusEventArgs)
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  id: Leave
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Leave
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 303
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the view looses focus.
  example: []
  syntax:
    content: public event EventHandler<FocusEventArgs> Leave
    return:
      type: System.EventHandler{Terminal.Gui.FocusEventArgs}
    content.vb: Public Event Leave As EventHandler(Of FocusEventArgs)
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  id: HasFocus
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HasFocus
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 321
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.Responder" data-throw-if-not-resolved="false"></xref> has focus.
  example: []
  syntax:
    content: public override bool HasFocus { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if has focus; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property HasFocus As Boolean
  overridden: Terminal.Gui.Responder.HasFocus
  overload: Terminal.Gui.View.HasFocus*
- uid: Terminal.Gui.View.CanFocusChanged
  commentId: E:Terminal.Gui.View.CanFocusChanged
  id: CanFocusChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: CanFocusChanged
  nameWithType: View.CanFocusChanged
  fullName: Terminal.Gui.View.CanFocusChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanFocusChanged
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 347
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the <xref href="Terminal.Gui.View.CanFocus" data-throw-if-not-resolved="false"></xref> value is being changed.
  example: []
  syntax:
    content: public event EventHandler CanFocusChanged
    return:
      type: System.EventHandler
    content.vb: Public Event CanFocusChanged As EventHandler
- uid: Terminal.Gui.View.OnCanFocusChanged
  commentId: M:Terminal.Gui.View.OnCanFocusChanged
  id: OnCanFocusChanged
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnCanFocusChanged()
  nameWithType: View.OnCanFocusChanged()
  fullName: Terminal.Gui.View.OnCanFocusChanged()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnCanFocusChanged
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 350
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when the <xref href="Terminal.Gui.Responder.CanFocus" data-throw-if-not-resolved="false"></xref> property from a view is changed.
  example: []
  syntax:
    content: public override void OnCanFocusChanged()
    content.vb: Public Overrides Sub OnCanFocusChanged()
  overridden: Terminal.Gui.Responder.OnCanFocusChanged
  overload: Terminal.Gui.View.OnCanFocusChanged*
- uid: Terminal.Gui.View.CanFocus
  commentId: P:Terminal.Gui.View.CanFocus
  id: CanFocus
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: CanFocus
  nameWithType: View.CanFocus
  fullName: Terminal.Gui.View.CanFocus
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanFocus
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 354
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets a value indicating whether this <xref href="Terminal.Gui.Responder" data-throw-if-not-resolved="false"></xref> can focus.
  example: []
  syntax:
    content: public override bool CanFocus { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if can focus; otherwise, <code>false</code>.
    content.vb: Public Overrides Property CanFocus As Boolean
  overridden: Terminal.Gui.Responder.CanFocus
  overload: Terminal.Gui.View.CanFocus*
- uid: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  id: OnEnter(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnEnter(View)
  nameWithType: View.OnEnter(View)
  fullName: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnEnter
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 418
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a view gets focus.
  example: []
  syntax:
    content: public override bool OnEnter(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The view that is losing focus.
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function OnEnter(view As View) As Boolean
  overridden: Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  overload: Terminal.Gui.View.OnEnter*
- uid: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  id: OnLeave(Terminal.Gui.View)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: OnLeave(View)
  nameWithType: View.OnLeave(View)
  fullName: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnLeave
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 433
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a view loses focus.
  example: []
  syntax:
    content: public override bool OnLeave(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The view that is getting focus.
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function OnLeave(view As View) As Boolean
  overridden: Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  overload: Terminal.Gui.View.OnLeave*
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  id: Focused
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Focused
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 452
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the currently focused view inside this view, or null if nothing is focused.
  example: []
  syntax:
    content: public View Focused { get; }
    parameters: []
    return:
      type: Terminal.Gui.View
      description: The focused.
    content.vb: Public ReadOnly Property Focused As View
  overload: Terminal.Gui.View.Focused*
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  id: MostFocused
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MostFocused
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 458
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the most focused view in the chain of subviews (the leaf view that has the focus).
  example: []
  syntax:
    content: public View MostFocused { get; }
    parameters: []
    return:
      type: Terminal.Gui.View
      description: The most focused View.
    content.vb: Public ReadOnly Property MostFocused As View
  overload: Terminal.Gui.View.MostFocused*
- uid: Terminal.Gui.View.SetFocus
  commentId: M:Terminal.Gui.View.SetFocus
  id: SetFocus
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: SetFocus()
  nameWithType: View.SetFocus()
  fullName: Terminal.Gui.View.SetFocus()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SetFocus
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 519
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Causes the specified view and the entire parent hierarchy to have the focused order updated.
  example: []
  syntax:
    content: public void SetFocus()
    content.vb: Public Sub SetFocus()
  overload: Terminal.Gui.View.SetFocus*
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  id: EnsureFocus
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EnsureFocus
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 538
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Finds the first view in the hierarchy that wants to get the focus if nothing is currently focused, otherwise, does nothing.
  example: []
  syntax:
    content: public void EnsureFocus()
    content.vb: Public Sub EnsureFocus()
  overload: Terminal.Gui.View.EnsureFocus*
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  id: FocusFirst
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FocusFirst
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 552
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Focuses the first focusable subview if one exists.
  example: []
  syntax:
    content: public void FocusFirst()
    content.vb: Public Sub FocusFirst()
  overload: Terminal.Gui.View.FocusFirst*
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  id: FocusLast
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FocusLast
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 574
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Focuses the last focusable subview if one exists.
  example: []
  syntax:
    content: public void FocusLast()
    content.vb: Public Sub FocusLast()
  overload: Terminal.Gui.View.FocusLast*
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  id: FocusPrev
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FocusPrev
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 600
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Focuses the previous view.
  example: []
  syntax:
    content: public bool FocusPrev()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if previous was focused, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Function FocusPrev() As Boolean
  overload: Terminal.Gui.View.FocusPrev*
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  id: FocusNext
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FocusNext
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 647
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Focuses the next view.
  example: []
  syntax:
    content: public bool FocusNext()
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if next was focused, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Function FocusNext() As Boolean
  overload: Terminal.Gui.View.FocusNext*
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  id: PositionCursor
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewSubViews.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PositionCursor
    path: ../Terminal.Gui/View/ViewSubViews.cs
    startLine: 705
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Positions the cursor in the right position based on the currently focused view in the chain.
  example: []
  syntax:
    content: public virtual void PositionCursor()
    content.vb: Public Overridable Sub PositionCursor()
  overload: Terminal.Gui.View.PositionCursor*
- uid: Terminal.Gui.View.Text
  commentId: P:Terminal.Gui.View.Text
  id: Text
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: View.Text
  fullName: Terminal.Gui.View.Text
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Text
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 28
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The text displayed by the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    <p>
     The text will be drawn before any subviews are drawn.
    </p>

    <p>
     The text will be drawn starting at the view origin (0, 0) and will be formatted according
     to <xref href="Terminal.Gui.View.TextAlignment" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.View.TextDirection" data-throw-if-not-resolved="false"></xref>. 
    </p>

    <p>
     The text will word-wrap to additional lines if it does not fit horizontally. If <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref>'s height
     is 1, the text will be clipped.	
     </p>
    <p>
     Set the <xref href="Terminal.Gui.View.HotKeySpecifier" data-throw-if-not-resolved="false"></xref> to enable hotkey support. To disable hotkey support set <xref href="Terminal.Gui.View.HotKeySpecifier" data-throw-if-not-resolved="false"></xref> to
     <code>(Rune)0xffff</code>.
    </p>
  example: []
  syntax:
    content: public virtual string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Text As String
  overload: Terminal.Gui.View.Text*
- uid: Terminal.Gui.View.TextFormatter
  commentId: P:Terminal.Gui.View.TextFormatter
  id: TextFormatter
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TextFormatter
  nameWithType: View.TextFormatter
  fullName: Terminal.Gui.View.TextFormatter
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TextFormatter
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 48
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the <xref href="Terminal.Gui.TextFormatter" data-throw-if-not-resolved="false"></xref> used to format <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextFormatter TextFormatter { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.TextFormatter
    content.vb: Public Property TextFormatter As TextFormatter
  overload: Terminal.Gui.View.TextFormatter*
- uid: Terminal.Gui.View.UpdateTextFormatterText
  commentId: M:Terminal.Gui.View.UpdateTextFormatterText
  id: UpdateTextFormatterText
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: UpdateTextFormatterText()
  nameWithType: View.UpdateTextFormatterText()
  fullName: Terminal.Gui.View.UpdateTextFormatterText()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UpdateTextFormatterText
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 59
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Can be overridden if the <xref href="Terminal.Gui.TextFormatter.Text" data-throw-if-not-resolved="false"></xref> has
     different format than the default.
  example: []
  syntax:
    content: protected virtual void UpdateTextFormatterText()
    content.vb: Protected Overridable Sub UpdateTextFormatterText()
  overload: Terminal.Gui.View.UpdateTextFormatterText*
- uid: Terminal.Gui.View.PreserveTrailingSpaces
  commentId: P:Terminal.Gui.View.PreserveTrailingSpaces
  id: PreserveTrailingSpaces
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: PreserveTrailingSpaces
  nameWithType: View.PreserveTrailingSpaces
  fullName: Terminal.Gui.View.PreserveTrailingSpaces
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PreserveTrailingSpaces
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 72
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets whether trailing spaces at the end of word-wrapped lines are preserved

    or not when <xref href="Terminal.Gui.TextFormatter.WordWrap" data-throw-if-not-resolved="false"></xref> is enabled. 

    If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> trailing spaces at the end of wrapped lines will be removed when 

    <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> is formatted for display. The default is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public virtual bool PreserveTrailingSpaces { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property PreserveTrailingSpaces As Boolean
  overload: Terminal.Gui.View.PreserveTrailingSpaces*
- uid: Terminal.Gui.View.TextAlignment
  commentId: P:Terminal.Gui.View.TextAlignment
  id: TextAlignment
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TextAlignment
  nameWithType: View.TextAlignment
  fullName: Terminal.Gui.View.TextAlignment
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TextAlignment
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 86
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets how the View's <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> is aligned horizontally when drawn. Changing this property will redisplay the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual TextAlignment TextAlignment { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.TextAlignment
      description: The text alignment.
    content.vb: Public Overridable Property TextAlignment As TextAlignment
  overload: Terminal.Gui.View.TextAlignment*
- uid: Terminal.Gui.View.VerticalTextAlignment
  commentId: P:Terminal.Gui.View.VerticalTextAlignment
  id: VerticalTextAlignment
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: VerticalTextAlignment
  nameWithType: View.VerticalTextAlignment
  fullName: Terminal.Gui.View.VerticalTextAlignment
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: VerticalTextAlignment
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 99
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets how the View's <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> is aligned vertically when drawn. Changing this property will redisplay the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual VerticalTextAlignment VerticalTextAlignment { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.VerticalTextAlignment
      description: The text alignment.
    content.vb: Public Overridable Property VerticalTextAlignment As VerticalTextAlignment
  overload: Terminal.Gui.View.VerticalTextAlignment*
- uid: Terminal.Gui.View.TextDirection
  commentId: P:Terminal.Gui.View.TextDirection
  id: TextDirection
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: TextDirection
  nameWithType: View.TextDirection
  fullName: Terminal.Gui.View.TextDirection
  type: Property
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TextDirection
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 111
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the direction of the View's <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref>. Changing this property will redisplay the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual TextDirection TextDirection { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.TextDirection
      description: The text alignment.
    content.vb: Public Overridable Property TextDirection As TextDirection
  overload: Terminal.Gui.View.TextDirection*
- uid: Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  commentId: M:Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  id: GetHotKeySpecifierLength(System.Boolean)
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetHotKeySpecifierLength(bool)
  nameWithType: View.GetHotKeySpecifierLength(bool)
  fullName: Terminal.Gui.View.GetHotKeySpecifierLength(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHotKeySpecifierLength
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 153
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the width or height of the <xref href="Terminal.Gui.TextFormatter.HotKeySpecifier" data-throw-if-not-resolved="false"></xref> characters 

    in the <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> property.
  remarks: Only the first hotkey specifier found in <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> is supported.
  example: []
  syntax:
    content: public int GetHotKeySpecifierLength(bool isWidth = true)
    parameters:
    - id: isWidth
      type: System.Boolean
      description: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> (the default) the width required for the hotkey specifier is returned. Otherwise the height is returned.
    return:
      type: System.Int32
      description: >-
        The number of characters required for the <xref href="Terminal.Gui.TextFormatter.HotKeySpecifier" data-throw-if-not-resolved="false"></xref>. If the text direction specified
            by <xref href="Terminal.Gui.View.TextDirection" data-throw-if-not-resolved="false"></xref> does not match the <code class="paramref">isWidth</code> parameter, <code>0</code> is returned.
    content.vb: Public Function GetHotKeySpecifierLength(isWidth As Boolean = True) As Integer
  overload: Terminal.Gui.View.GetHotKeySpecifierLength*
  nameWithType.vb: View.GetHotKeySpecifierLength(Boolean)
  fullName.vb: Terminal.Gui.View.GetHotKeySpecifierLength(Boolean)
  name.vb: GetHotKeySpecifierLength(Boolean)
- uid: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  commentId: M:Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  id: GetSizeNeededForTextWithoutHotKey
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetSizeNeededForTextWithoutHotKey()
  nameWithType: View.GetSizeNeededForTextWithoutHotKey()
  fullName: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetSizeNeededForTextWithoutHotKey
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 170
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the dimensions required for <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> ignoring a <xref href="Terminal.Gui.TextFormatter.HotKeySpecifier" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Size GetSizeNeededForTextWithoutHotKey()
    return:
      type: Terminal.Gui.Size
      description: ''
    content.vb: Public Function GetSizeNeededForTextWithoutHotKey() As Size
  overload: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey*
- uid: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  commentId: M:Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  id: GetTextFormatterSizeNeededForTextAndHotKey
  parent: Terminal.Gui.View
  langs:
  - csharp
  - vb
  name: GetTextFormatterSizeNeededForTextAndHotKey()
  nameWithType: View.GetTextFormatterSizeNeededForTextAndHotKey()
  fullName: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey()
  type: Method
  source:
    remote:
      path: Terminal.Gui/View/ViewText.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetTextFormatterSizeNeededForTextAndHotKey
    path: ../Terminal.Gui/View/ViewText.cs
    startLine: 180
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the dimensions required for <xref href="Terminal.Gui.View.Text" data-throw-if-not-resolved="false"></xref> accounting for a <xref href="Terminal.Gui.TextFormatter.HotKeySpecifier" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public Size GetTextFormatterSizeNeededForTextAndHotKey()
    return:
      type: Terminal.Gui.Size
      description: ''
    content.vb: Public Function GetTextFormatterSizeNeededForTextAndHotKey() As Size
  overload: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey*
references:
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.Enabled
  commentId: P:Terminal.Gui.View.Enabled
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Enabled
  name: Enabled
  nameWithType: View.Enabled
  fullName: Terminal.Gui.View.Enabled
- uid: Terminal.Gui.View.Visible
  commentId: P:Terminal.Gui.View.Visible
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Visible
  name: Visible
  nameWithType: View.Visible
  fullName: Terminal.Gui.View.Visible
- uid: Terminal.Gui.View.CanFocus
  commentId: P:Terminal.Gui.View.CanFocus
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.CanFocus
  name: CanFocus
  nameWithType: View.CanFocus
  fullName: Terminal.Gui.View.CanFocus
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  - name: (
  - name: )
- uid: Terminal.Gui.LayoutStyle.Absolute
  commentId: F:Terminal.Gui.LayoutStyle.Absolute
  href: Terminal.Gui.LayoutStyle.html#Terminal.Gui.LayoutStyle.Absolute
  name: Absolute
  nameWithType: LayoutStyle.Absolute
  fullName: Terminal.Gui.LayoutStyle.Absolute
- uid: Terminal.Gui.LayoutStyle.Computed
  commentId: F:Terminal.Gui.LayoutStyle.Computed
  href: Terminal.Gui.LayoutStyle.html#Terminal.Gui.LayoutStyle.Computed
  name: Computed
  nameWithType: LayoutStyle.Computed
  fullName: Terminal.Gui.LayoutStyle.Computed
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Frame
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutStyle
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.Pos
  commentId: T:Terminal.Gui.Pos
  parent: Terminal.Gui
  href: Terminal.Gui.Pos.html
  name: Pos
  nameWithType: Pos
  fullName: Terminal.Gui.Pos
- uid: Terminal.Gui.Dim
  commentId: T:Terminal.Gui.Dim
  parent: Terminal.Gui
  href: Terminal.Gui.Dim.html
  name: Dim
  nameWithType: Dim
  fullName: Terminal.Gui.Dim
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperView
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Bounds
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  - name: (
  - name: )
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  - name: (
  - name: )
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ColorScheme
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: System.ComponentModel.ISupportInitialize.BeginInit
  commentId: M:System.ComponentModel.ISupportInitialize.BeginInit
  parent: System.ComponentModel.ISupportInitialize
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.begininit
  name: BeginInit()
  nameWithType: ISupportInitialize.BeginInit()
  fullName: System.ComponentModel.ISupportInitialize.BeginInit()
  spec.csharp:
  - uid: System.ComponentModel.ISupportInitialize.BeginInit
    name: BeginInit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.begininit
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.ISupportInitialize.BeginInit
    name: BeginInit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.begininit
  - name: (
  - name: )
- uid: System.ComponentModel.ISupportInitialize.EndInit
  commentId: M:System.ComponentModel.ISupportInitialize.EndInit
  parent: System.ComponentModel.ISupportInitialize
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.endinit
  name: EndInit()
  nameWithType: ISupportInitialize.EndInit()
  fullName: System.ComponentModel.ISupportInitialize.EndInit()
  spec.csharp:
  - uid: System.ComponentModel.ISupportInitialize.EndInit
    name: EndInit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.endinit
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.ISupportInitialize.EndInit
    name: EndInit
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize.endinit
  - name: (
  - name: )
- uid: System.ComponentModel.ISupportInitializeNotification
  commentId: T:System.ComponentModel.ISupportInitializeNotification
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitializenotification
  name: ISupportInitializeNotification
  nameWithType: ISupportInitializeNotification
  fullName: System.ComponentModel.ISupportInitializeNotification
- uid: System.ComponentModel.ISupportInitialize
  commentId: T:System.ComponentModel.ISupportInitialize
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize
  name: ISupportInitialize
  nameWithType: ISupportInitialize
  fullName: System.ComponentModel.ISupportInitialize
- uid: System.ComponentModel.ISupportInitializeNotification.IsInitialized
  commentId: P:System.ComponentModel.ISupportInitializeNotification.IsInitialized
  parent: System.ComponentModel.ISupportInitializeNotification
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitializenotification.isinitialized
  name: IsInitialized
  nameWithType: ISupportInitializeNotification.IsInitialized
  fullName: System.ComponentModel.ISupportInitializeNotification.IsInitialized
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  href: Terminal.Gui.View.html
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  href: Terminal.Gui.Responder.html
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.Responder.Dispose
  commentId: M:Terminal.Gui.Responder.Dispose
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  name: Dispose()
  nameWithType: Responder.Dispose()
  fullName: Terminal.Gui.Responder.Dispose()
  spec.csharp:
  - uid: Terminal.Gui.Responder.Dispose
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.Dispose
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.View.Frame*
  commentId: Overload:Terminal.Gui.View.Frame
  href: Terminal.Gui.View.html#Terminal.Gui.View.Frame
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  href: Terminal.Gui.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.Thickness
  commentId: T:Terminal.Gui.Thickness
  parent: Terminal.Gui
  href: Terminal.Gui.Thickness.html
  name: Thickness
  nameWithType: Thickness
  fullName: Terminal.Gui.Thickness
- uid: Terminal.Gui.View.Margin
  commentId: P:Terminal.Gui.View.Margin
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Margin
  name: Margin
  nameWithType: View.Margin
  fullName: Terminal.Gui.View.Margin
- uid: Terminal.Gui.View.Border
  commentId: P:Terminal.Gui.View.Border
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Border
  name: Border
  nameWithType: View.Border
  fullName: Terminal.Gui.View.Border
- uid: Terminal.Gui.View.Padding
  commentId: P:Terminal.Gui.View.Padding
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Padding
  name: Padding
  nameWithType: View.Padding
  fullName: Terminal.Gui.View.Padding
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Subviews
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.Margin*
  commentId: Overload:Terminal.Gui.View.Margin
  href: Terminal.Gui.View.html#Terminal.Gui.View.Margin
  name: Margin
  nameWithType: View.Margin
  fullName: Terminal.Gui.View.Margin
- uid: Terminal.Gui.Frame
  commentId: T:Terminal.Gui.Frame
  parent: Terminal.Gui
  href: Terminal.Gui.Frame.html
  name: Frame
  nameWithType: Frame
  fullName: Terminal.Gui.Frame
- uid: Terminal.Gui.View.BorderStyle
  commentId: P:Terminal.Gui.View.BorderStyle
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BorderStyle
  name: BorderStyle
  nameWithType: View.BorderStyle
  fullName: Terminal.Gui.View.BorderStyle
- uid: Terminal.Gui.View.Border*
  commentId: Overload:Terminal.Gui.View.Border
  href: Terminal.Gui.View.html#Terminal.Gui.View.Border
  name: Border
  nameWithType: View.Border
  fullName: Terminal.Gui.View.Border
- uid: Terminal.Gui.LineStyle.None
  commentId: F:Terminal.Gui.LineStyle.None
  href: Terminal.Gui.LineStyle.html#Terminal.Gui.LineStyle.None
  name: None
  nameWithType: LineStyle.None
  fullName: Terminal.Gui.LineStyle.None
- uid: Terminal.Gui.Frame.Thickness
  commentId: P:Terminal.Gui.Frame.Thickness
  href: Terminal.Gui.Frame.html#Terminal.Gui.Frame.Thickness
  name: Thickness
  nameWithType: Frame.Thickness
  fullName: Terminal.Gui.Frame.Thickness
- uid: Terminal.Gui.View.BorderStyle*
  commentId: Overload:Terminal.Gui.View.BorderStyle
  href: Terminal.Gui.View.html#Terminal.Gui.View.BorderStyle
  name: BorderStyle
  nameWithType: View.BorderStyle
  fullName: Terminal.Gui.View.BorderStyle
- uid: Terminal.Gui.LineStyle
  commentId: T:Terminal.Gui.LineStyle
  parent: Terminal.Gui
  href: Terminal.Gui.LineStyle.html
  name: LineStyle
  nameWithType: LineStyle
  fullName: Terminal.Gui.LineStyle
- uid: Terminal.Gui.View.Padding*
  commentId: Overload:Terminal.Gui.View.Padding
  href: Terminal.Gui.View.html#Terminal.Gui.View.Padding
  name: Padding
  nameWithType: View.Padding
  fullName: Terminal.Gui.View.Padding
- uid: Terminal.Gui.View.GetFramesThickness*
  commentId: Overload:Terminal.Gui.View.GetFramesThickness
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetFramesThickness
  name: GetFramesThickness
  nameWithType: View.GetFramesThickness
  fullName: Terminal.Gui.View.GetFramesThickness
- uid: Terminal.Gui.View.GetBoundsOffset*
  commentId: Overload:Terminal.Gui.View.GetBoundsOffset
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  name: GetBoundsOffset
  nameWithType: View.GetBoundsOffset
  fullName: Terminal.Gui.View.GetBoundsOffset
- uid: Terminal.Gui.Point
  commentId: T:Terminal.Gui.Point
  parent: Terminal.Gui
  href: Terminal.Gui.Point.html
  name: Point
  nameWithType: Point
  fullName: Terminal.Gui.Point
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.X
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Y
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Width
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Height
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.LayoutStyle*
  commentId: Overload:Terminal.Gui.View.LayoutStyle
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutStyle
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.LayoutStyle
  commentId: T:Terminal.Gui.LayoutStyle
  parent: Terminal.Gui
  href: Terminal.Gui.LayoutStyle.html
  name: LayoutStyle
  nameWithType: LayoutStyle
  fullName: Terminal.Gui.LayoutStyle
- uid: Terminal.Gui.View.Draw
  commentId: M:Terminal.Gui.View.Draw
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  name: Draw()
  nameWithType: View.Draw()
  fullName: Terminal.Gui.View.Draw()
  spec.csharp:
  - uid: Terminal.Gui.View.Draw
    name: Draw
    href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Draw
    name: Draw
    href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  - name: (
  - name: )
- uid: Terminal.Gui.Rect.Size
  commentId: P:Terminal.Gui.Rect.Size
  href: Terminal.Gui.Rect.html#Terminal.Gui.Rect.Size
  name: Size
  nameWithType: Rect.Size
  fullName: Terminal.Gui.Rect.Size
- uid: Terminal.Gui.Rect.Location
  commentId: P:Terminal.Gui.Rect.Location
  href: Terminal.Gui.Rect.html#Terminal.Gui.Rect.Location
  name: Location
  nameWithType: Rect.Location
  fullName: Terminal.Gui.Rect.Location
- uid: Terminal.Gui.View.GetBoundsOffset
  commentId: M:Terminal.Gui.View.GetBoundsOffset
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  name: GetBoundsOffset()
  nameWithType: View.GetBoundsOffset()
  fullName: Terminal.Gui.View.GetBoundsOffset()
  spec.csharp:
  - uid: Terminal.Gui.View.GetBoundsOffset
    name: GetBoundsOffset
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetBoundsOffset
    name: GetBoundsOffset
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  - name: (
  - name: )
- uid: Terminal.Gui.View.EndInit
  commentId: M:Terminal.Gui.View.EndInit
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  name: EndInit()
  nameWithType: View.EndInit()
  fullName: Terminal.Gui.View.EndInit()
  spec.csharp:
  - uid: Terminal.Gui.View.EndInit
    name: EndInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.EndInit
    name: EndInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  - name: (
  - name: )
- uid: Terminal.Gui.View.Initialized
  commentId: E:Terminal.Gui.View.Initialized
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Initialized
  name: Initialized
  nameWithType: View.Initialized
  fullName: Terminal.Gui.View.Initialized
- uid: Terminal.Gui.View.Bounds*
  commentId: Overload:Terminal.Gui.View.Bounds
  href: Terminal.Gui.View.html#Terminal.Gui.View.Bounds
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X*
  commentId: Overload:Terminal.Gui.View.X
  href: Terminal.Gui.View.html#Terminal.Gui.View.X
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y*
  commentId: Overload:Terminal.Gui.View.Y
  href: Terminal.Gui.View.html#Terminal.Gui.View.Y
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width*
  commentId: Overload:Terminal.Gui.View.Width
  href: Terminal.Gui.View.html#Terminal.Gui.View.Width
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height*
  commentId: Overload:Terminal.Gui.View.Height
  href: Terminal.Gui.View.html#Terminal.Gui.View.Height
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.ForceValidatePosDim*
  commentId: Overload:Terminal.Gui.View.ForceValidatePosDim
  href: Terminal.Gui.View.html#Terminal.Gui.View.ForceValidatePosDim
  name: ForceValidatePosDim
  nameWithType: View.ForceValidatePosDim
  fullName: Terminal.Gui.View.ForceValidatePosDim
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.View.OnResizeNeeded*
  commentId: Overload:Terminal.Gui.View.OnResizeNeeded
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnResizeNeeded
  name: OnResizeNeeded
  nameWithType: View.OnResizeNeeded
  fullName: Terminal.Gui.View.OnResizeNeeded
- uid: Terminal.Gui.View.SetNeedsLayout
  commentId: M:Terminal.Gui.View.SetNeedsLayout
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsLayout
  name: SetNeedsLayout()
  nameWithType: View.SetNeedsLayout()
  fullName: Terminal.Gui.View.SetNeedsLayout()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsLayout
    name: SetNeedsLayout
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsLayout
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsLayout
    name: SetNeedsLayout
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsLayout
  - name: (
  - name: )
- uid: Terminal.Gui.View.ClearLayoutNeeded*
  commentId: Overload:Terminal.Gui.View.ClearLayoutNeeded
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearLayoutNeeded
  name: ClearLayoutNeeded
  nameWithType: View.ClearLayoutNeeded
  fullName: Terminal.Gui.View.ClearLayoutNeeded
- uid: Terminal.Gui.View.ScreenToFrame*
  commentId: Overload:Terminal.Gui.View.ScreenToFrame
  href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  name: ScreenToFrame
  nameWithType: View.ScreenToFrame
  fullName: Terminal.Gui.View.ScreenToFrame
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.View.ScreenToBounds*
  commentId: Overload:Terminal.Gui.View.ScreenToBounds
  href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  name: ScreenToBounds
  nameWithType: View.ScreenToBounds
  fullName: Terminal.Gui.View.ScreenToBounds
- uid: Terminal.Gui.ConsoleDriver.Cols
  commentId: P:Terminal.Gui.ConsoleDriver.Cols
  parent: Terminal.Gui.ConsoleDriver
  href: Terminal.Gui.ConsoleDriver.html#Terminal.Gui.ConsoleDriver.Cols
  name: Cols
  nameWithType: ConsoleDriver.Cols
  fullName: Terminal.Gui.ConsoleDriver.Cols
- uid: Terminal.Gui.ConsoleDriver.Rows
  commentId: P:Terminal.Gui.ConsoleDriver.Rows
  parent: Terminal.Gui.ConsoleDriver
  href: Terminal.Gui.ConsoleDriver.html#Terminal.Gui.ConsoleDriver.Rows
  name: Rows
  nameWithType: ConsoleDriver.Rows
  fullName: Terminal.Gui.ConsoleDriver.Rows
- uid: Terminal.Gui.View.BoundsToScreen*
  commentId: Overload:Terminal.Gui.View.BoundsToScreen
  href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  name: BoundsToScreen
  nameWithType: View.BoundsToScreen
  fullName: Terminal.Gui.View.BoundsToScreen
- uid: Terminal.Gui.ConsoleDriver
  commentId: T:Terminal.Gui.ConsoleDriver
  parent: Terminal.Gui
  href: Terminal.Gui.ConsoleDriver.html
  name: ConsoleDriver
  nameWithType: ConsoleDriver
  fullName: Terminal.Gui.ConsoleDriver
- uid: Terminal.Gui.View.FrameToScreen*
  commentId: Overload:Terminal.Gui.View.FrameToScreen
  href: Terminal.Gui.View.html#Terminal.Gui.View.FrameToScreen
  name: FrameToScreen
  nameWithType: View.FrameToScreen
  fullName: Terminal.Gui.View.FrameToScreen
- uid: System.EventHandler{Terminal.Gui.LayoutEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.LayoutEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<LayoutEventArgs>
  nameWithType: EventHandler<LayoutEventArgs>
  fullName: System.EventHandler<Terminal.Gui.LayoutEventArgs>
  nameWithType.vb: EventHandler(Of LayoutEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.LayoutEventArgs)
  name.vb: EventHandler(Of LayoutEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.LayoutEventArgs
    name: LayoutEventArgs
    href: Terminal.Gui.LayoutEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.LayoutEventArgs
    name: LayoutEventArgs
    href: Terminal.Gui.LayoutEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.ComponentModel.ISupportInitializeNotification.Initialized
  commentId: E:System.ComponentModel.ISupportInitializeNotification.Initialized
  parent: System.ComponentModel.ISupportInitializeNotification
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitializenotification.initialized
  name: Initialized
  nameWithType: ISupportInitializeNotification.Initialized
  fullName: System.ComponentModel.ISupportInitializeNotification.Initialized
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  commentId: M:Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  name: OnLayoutComplete(LayoutEventArgs)
  nameWithType: View.OnLayoutComplete(LayoutEventArgs)
  fullName: Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  spec.csharp:
  - uid: Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
    name: OnLayoutComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  - name: (
  - uid: Terminal.Gui.LayoutEventArgs
    name: LayoutEventArgs
    href: Terminal.Gui.LayoutEventArgs.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
    name: OnLayoutComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnLayoutComplete(Terminal.Gui.LayoutEventArgs)
  - name: (
  - uid: Terminal.Gui.LayoutEventArgs
    name: LayoutEventArgs
    href: Terminal.Gui.LayoutEventArgs.html
  - name: )
- uid: Terminal.Gui.View.LayoutComplete
  commentId: E:Terminal.Gui.View.LayoutComplete
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutComplete
  name: LayoutComplete
  nameWithType: View.LayoutComplete
  fullName: Terminal.Gui.View.LayoutComplete
- uid: Terminal.Gui.View.LayoutSubviews*
  commentId: Overload:Terminal.Gui.View.LayoutSubviews
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  name: LayoutSubviews
  nameWithType: View.LayoutSubviews
  fullName: Terminal.Gui.View.LayoutSubviews
- uid: Terminal.Gui.View.Text
  commentId: P:Terminal.Gui.View.Text
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Text
  name: Text
  nameWithType: View.Text
  fullName: Terminal.Gui.View.Text
- uid: Terminal.Gui.View.ForceValidatePosDim
  commentId: P:Terminal.Gui.View.ForceValidatePosDim
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ForceValidatePosDim
  name: ForceValidatePosDim
  nameWithType: View.ForceValidatePosDim
  fullName: Terminal.Gui.View.ForceValidatePosDim
- uid: Terminal.Gui.View.AutoSize*
  commentId: Overload:Terminal.Gui.View.AutoSize
  href: Terminal.Gui.View.html#Terminal.Gui.View.AutoSize
  name: AutoSize
  nameWithType: View.AutoSize
  fullName: Terminal.Gui.View.AutoSize
- uid: Terminal.Gui.View.Direction
  commentId: T:Terminal.Gui.View.Direction
  href: Terminal.Gui.View.html
  name: View.Direction
  nameWithType: View.Direction
  fullName: Terminal.Gui.View.Direction
  spec.csharp:
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: .
  - uid: Terminal.Gui.View.Direction
    name: Direction
    href: Terminal.Gui.View.Direction.html
  spec.vb:
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: .
  - uid: Terminal.Gui.View.Direction
    name: Direction
    href: Terminal.Gui.View.Direction.html
- uid: Terminal.Gui.View.TextFormatter
  commentId: P:Terminal.Gui.View.TextFormatter
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextFormatter
  name: TextFormatter
  nameWithType: View.TextFormatter
  fullName: Terminal.Gui.View.TextFormatter
- uid: Terminal.Gui.View.HotKeySpecifier
  commentId: P:Terminal.Gui.View.HotKeySpecifier
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKeySpecifier
  name: HotKeySpecifier
  nameWithType: View.HotKeySpecifier
  fullName: Terminal.Gui.View.HotKeySpecifier
- uid: Terminal.Gui.Size
  commentId: T:Terminal.Gui.Size
  parent: Terminal.Gui
  href: Terminal.Gui.Size.html
  name: Size
  nameWithType: Size
  fullName: Terminal.Gui.Size
- uid: Terminal.Gui.View.GetAutoSize*
  commentId: Overload:Terminal.Gui.View.GetAutoSize
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetAutoSize
  name: GetAutoSize
  nameWithType: View.GetAutoSize
  fullName: Terminal.Gui.View.GetAutoSize
- uid: Terminal.Gui.View.FindDeepestView*
  commentId: Overload:Terminal.Gui.View.FindDeepestView
  href: Terminal.Gui.View.html#Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  name: FindDeepestView
  nameWithType: View.FindDeepestView
  fullName: Terminal.Gui.View.FindDeepestView
- uid: Terminal.Gui.View.#ctor*
  commentId: Overload:Terminal.Gui.View.#ctor
  href: Terminal.Gui.View.html#Terminal.Gui.View.#ctor(Terminal.Gui.Rect)
  name: View
  nameWithType: View.View
  fullName: Terminal.Gui.View.View
  nameWithType.vb: View.New
  fullName.vb: Terminal.Gui.View.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.TextDirection
  commentId: T:Terminal.Gui.TextDirection
  parent: Terminal.Gui
  href: Terminal.Gui.TextDirection.html
  name: TextDirection
  nameWithType: TextDirection
  fullName: Terminal.Gui.TextDirection
- uid: Terminal.Gui.View.IsInitialized*
  commentId: Overload:Terminal.Gui.View.IsInitialized
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsInitialized
  name: IsInitialized
  nameWithType: View.IsInitialized
  fullName: Terminal.Gui.View.IsInitialized
- uid: Terminal.Gui.View.BeginInit*
  commentId: Overload:Terminal.Gui.View.BeginInit
  href: Terminal.Gui.View.html#Terminal.Gui.View.BeginInit
  name: BeginInit
  nameWithType: View.BeginInit
  fullName: Terminal.Gui.View.BeginInit
- uid: Terminal.Gui.View.EndInit*
  commentId: Overload:Terminal.Gui.View.EndInit
  href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  name: EndInit
  nameWithType: View.EndInit
  fullName: Terminal.Gui.View.EndInit
- uid: Terminal.Gui.View.Driver*
  commentId: Overload:Terminal.Gui.View.Driver
  href: Terminal.Gui.View.html#Terminal.Gui.View.Driver
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Data*
  commentId: Overload:Terminal.Gui.View.Data
  href: Terminal.Gui.View.html#Terminal.Gui.View.Data
  name: Data
  nameWithType: View.Data
  fullName: Terminal.Gui.View.Data
- uid: Terminal.Gui.View.Id*
  commentId: Overload:Terminal.Gui.View.Id
  href: Terminal.Gui.View.html#Terminal.Gui.View.Id
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.Thickness.Top
  commentId: F:Terminal.Gui.Thickness.Top
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Top
  name: Top
  nameWithType: Thickness.Top
  fullName: Terminal.Gui.Thickness.Top
- uid: Terminal.Gui.View.Title*
  commentId: Overload:Terminal.Gui.View.Title
  href: Terminal.Gui.View.html#Terminal.Gui.View.Title
  name: Title
  nameWithType: View.Title
  fullName: Terminal.Gui.View.Title
- uid: Terminal.Gui.View.Title
  commentId: P:Terminal.Gui.View.Title
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Title
  name: Title
  nameWithType: View.Title
  fullName: Terminal.Gui.View.Title
- uid: Terminal.Gui.View.TitleChanging
  commentId: E:Terminal.Gui.View.TitleChanging
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TitleChanging
  name: TitleChanging
  nameWithType: View.TitleChanging
  fullName: Terminal.Gui.View.TitleChanging
- uid: Terminal.Gui.View.OnTitleChanging*
  commentId: Overload:Terminal.Gui.View.OnTitleChanging
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  name: OnTitleChanging
  nameWithType: View.OnTitleChanging
  fullName: Terminal.Gui.View.OnTitleChanging
- uid: Terminal.Gui.TitleEventArgs.Cancel
  commentId: P:Terminal.Gui.TitleEventArgs.Cancel
  href: Terminal.Gui.TitleEventArgs.html#Terminal.Gui.TitleEventArgs.Cancel
  name: Cancel
  nameWithType: TitleEventArgs.Cancel
  fullName: Terminal.Gui.TitleEventArgs.Cancel
- uid: System.EventHandler{Terminal.Gui.TitleEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.TitleEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TitleEventArgs>
  nameWithType: EventHandler<TitleEventArgs>
  fullName: System.EventHandler<Terminal.Gui.TitleEventArgs>
  nameWithType.vb: EventHandler(Of TitleEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.TitleEventArgs)
  name.vb: EventHandler(Of TitleEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.TitleEventArgs
    name: TitleEventArgs
    href: Terminal.Gui.TitleEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.TitleEventArgs
    name: TitleEventArgs
    href: Terminal.Gui.TitleEventArgs.html
  - name: )
- uid: Terminal.Gui.View.TitleChanged
  commentId: E:Terminal.Gui.View.TitleChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TitleChanged
  name: TitleChanged
  nameWithType: View.TitleChanged
  fullName: Terminal.Gui.View.TitleChanged
- uid: Terminal.Gui.View.OnTitleChanged*
  commentId: Overload:Terminal.Gui.View.OnTitleChanged
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  name: OnTitleChanged
  nameWithType: View.OnTitleChanged
  fullName: Terminal.Gui.View.OnTitleChanged
- uid: Terminal.Gui.Responder.Enabled
  commentId: P:Terminal.Gui.Responder.Enabled
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Enabled
  name: Enabled
  nameWithType: Responder.Enabled
  fullName: Terminal.Gui.Responder.Enabled
- uid: Terminal.Gui.Responder.OnEnabledChanged
  commentId: M:Terminal.Gui.Responder.OnEnabledChanged
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnabledChanged
  name: OnEnabledChanged()
  nameWithType: Responder.OnEnabledChanged()
  fullName: Terminal.Gui.Responder.OnEnabledChanged()
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnEnabledChanged
    name: OnEnabledChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnabledChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnEnabledChanged
    name: OnEnabledChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnabledChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.OnEnabledChanged*
  commentId: Overload:Terminal.Gui.View.OnEnabledChanged
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnabledChanged
  name: OnEnabledChanged
  nameWithType: View.OnEnabledChanged
  fullName: Terminal.Gui.View.OnEnabledChanged
- uid: Terminal.Gui.View.Enabled*
  commentId: Overload:Terminal.Gui.View.Enabled
  href: Terminal.Gui.View.html#Terminal.Gui.View.Enabled
  name: Enabled
  nameWithType: View.Enabled
  fullName: Terminal.Gui.View.Enabled
- uid: Terminal.Gui.Responder.Visible
  commentId: P:Terminal.Gui.Responder.Visible
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Visible
  name: Visible
  nameWithType: Responder.Visible
  fullName: Terminal.Gui.Responder.Visible
- uid: Terminal.Gui.Responder.OnVisibleChanged
  commentId: M:Terminal.Gui.Responder.OnVisibleChanged
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnVisibleChanged
  name: OnVisibleChanged()
  nameWithType: Responder.OnVisibleChanged()
  fullName: Terminal.Gui.Responder.OnVisibleChanged()
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnVisibleChanged
    name: OnVisibleChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnVisibleChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnVisibleChanged
    name: OnVisibleChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnVisibleChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.OnVisibleChanged*
  commentId: Overload:Terminal.Gui.View.OnVisibleChanged
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnVisibleChanged
  name: OnVisibleChanged
  nameWithType: View.OnVisibleChanged
  fullName: Terminal.Gui.View.OnVisibleChanged
- uid: Terminal.Gui.View.ClearOnVisibleFalse*
  commentId: Overload:Terminal.Gui.View.ClearOnVisibleFalse
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearOnVisibleFalse
  name: ClearOnVisibleFalse
  nameWithType: View.ClearOnVisibleFalse
  fullName: Terminal.Gui.View.ClearOnVisibleFalse
- uid: Terminal.Gui.View.Visible*
  commentId: Overload:Terminal.Gui.View.Visible
  href: Terminal.Gui.View.html#Terminal.Gui.View.Visible
  name: Visible
  nameWithType: View.Visible
  fullName: Terminal.Gui.View.Visible
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.View.ToString*
  commentId: Overload:Terminal.Gui.View.ToString
  href: Terminal.Gui.View.html#Terminal.Gui.View.ToString
  name: ToString
  nameWithType: View.ToString
  fullName: Terminal.Gui.View.ToString
- uid: Terminal.Gui.Responder.Dispose(System.Boolean)
  commentId: M:Terminal.Gui.Responder.Dispose(System.Boolean)
  parent: Terminal.Gui.Responder
  isExternal: true
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose(System.Boolean)
  name: Dispose(bool)
  nameWithType: Responder.Dispose(bool)
  fullName: Terminal.Gui.Responder.Dispose(bool)
  nameWithType.vb: Responder.Dispose(Boolean)
  fullName.vb: Terminal.Gui.Responder.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Terminal.Gui.Responder.Dispose(System.Boolean)
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.Dispose(System.Boolean)
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.View.Dispose*
  commentId: Overload:Terminal.Gui.View.Dispose
  href: Terminal.Gui.View.html#Terminal.Gui.View.Dispose(System.Boolean)
  name: Dispose
  nameWithType: View.Dispose
  fullName: Terminal.Gui.View.Dispose
- uid: Terminal.Gui.View.ColorScheme*
  commentId: Overload:Terminal.Gui.View.ColorScheme
  href: Terminal.Gui.View.html#Terminal.Gui.View.ColorScheme
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.ColorScheme
  commentId: T:Terminal.Gui.ColorScheme
  parent: Terminal.Gui
  href: Terminal.Gui.ColorScheme.html
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: Terminal.Gui.ColorScheme
- uid: Terminal.Gui.ColorScheme.Normal
  commentId: P:Terminal.Gui.ColorScheme.Normal
  href: Terminal.Gui.ColorScheme.html#Terminal.Gui.ColorScheme.Normal
  name: Normal
  nameWithType: ColorScheme.Normal
  fullName: Terminal.Gui.ColorScheme.Normal
- uid: Terminal.Gui.ColorScheme.Disabled
  commentId: P:Terminal.Gui.ColorScheme.Disabled
  href: Terminal.Gui.ColorScheme.html#Terminal.Gui.ColorScheme.Disabled
  name: Disabled
  nameWithType: ColorScheme.Disabled
  fullName: Terminal.Gui.ColorScheme.Disabled
- uid: Terminal.Gui.View.GetNormalColor*
  commentId: Overload:Terminal.Gui.View.GetNormalColor
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetNormalColor
  name: GetNormalColor
  nameWithType: View.GetNormalColor
  fullName: Terminal.Gui.View.GetNormalColor
- uid: Terminal.Gui.Attribute
  commentId: T:Terminal.Gui.Attribute
  parent: Terminal.Gui
  href: Terminal.Gui.Attribute.html
  name: Attribute
  nameWithType: Attribute
  fullName: Terminal.Gui.Attribute
- uid: Terminal.Gui.ColorScheme.Focus
  commentId: P:Terminal.Gui.ColorScheme.Focus
  href: Terminal.Gui.ColorScheme.html#Terminal.Gui.ColorScheme.Focus
  name: Focus
  nameWithType: ColorScheme.Focus
  fullName: Terminal.Gui.ColorScheme.Focus
- uid: Terminal.Gui.View.GetFocusColor*
  commentId: Overload:Terminal.Gui.View.GetFocusColor
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetFocusColor
  name: GetFocusColor
  nameWithType: View.GetFocusColor
  fullName: Terminal.Gui.View.GetFocusColor
- uid: Terminal.Gui.ColorScheme.HotNormal
  commentId: P:Terminal.Gui.ColorScheme.HotNormal
  href: Terminal.Gui.ColorScheme.html#Terminal.Gui.ColorScheme.HotNormal
  name: HotNormal
  nameWithType: ColorScheme.HotNormal
  fullName: Terminal.Gui.ColorScheme.HotNormal
- uid: Terminal.Gui.View.GetHotNormalColor*
  commentId: Overload:Terminal.Gui.View.GetHotNormalColor
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotNormalColor
  name: GetHotNormalColor
  nameWithType: View.GetHotNormalColor
  fullName: Terminal.Gui.View.GetHotNormalColor
- uid: Terminal.Gui.View.AddRune*
  commentId: Overload:Terminal.Gui.View.AddRune
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  name: AddRune
  nameWithType: View.AddRune
  fullName: Terminal.Gui.View.AddRune
- uid: System.Text.Rune
  commentId: T:System.Text.Rune
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune
  nameWithType: Rune
  fullName: System.Text.Rune
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Terminal.Gui.View.NeedsDisplay
  commentId: P:Terminal.Gui.View.NeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.NeedsDisplay
  name: NeedsDisplay
  nameWithType: View.NeedsDisplay
  fullName: Terminal.Gui.View.NeedsDisplay
- uid: Terminal.Gui.View.SubViewNeedsDisplay
  commentId: P:Terminal.Gui.View.SubViewNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SubViewNeedsDisplay
  name: SubViewNeedsDisplay
  nameWithType: View.SubViewNeedsDisplay
  fullName: Terminal.Gui.View.SubViewNeedsDisplay
- uid: Terminal.Gui.View.ClearNeedsDisplay*
  commentId: Overload:Terminal.Gui.View.ClearNeedsDisplay
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearNeedsDisplay
  name: ClearNeedsDisplay
  nameWithType: View.ClearNeedsDisplay
  fullName: Terminal.Gui.View.ClearNeedsDisplay
- uid: Terminal.Gui.View.NeedsDisplay*
  commentId: Overload:Terminal.Gui.View.NeedsDisplay
  href: Terminal.Gui.View.html#Terminal.Gui.View.NeedsDisplay
  name: NeedsDisplay
  nameWithType: View.NeedsDisplay
  fullName: Terminal.Gui.View.NeedsDisplay
- uid: Terminal.Gui.View.SetNeedsDisplay*
  commentId: Overload:Terminal.Gui.View.SetNeedsDisplay
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  name: SetNeedsDisplay
  nameWithType: View.SetNeedsDisplay
  fullName: Terminal.Gui.View.SetNeedsDisplay
- uid: Terminal.Gui.View.SubViewNeedsDisplay*
  commentId: Overload:Terminal.Gui.View.SubViewNeedsDisplay
  href: Terminal.Gui.View.html#Terminal.Gui.View.SubViewNeedsDisplay
  name: SubViewNeedsDisplay
  nameWithType: View.SubViewNeedsDisplay
  fullName: Terminal.Gui.View.SubViewNeedsDisplay
- uid: Terminal.Gui.View.SetSubViewNeedsDisplay*
  commentId: Overload:Terminal.Gui.View.SetSubViewNeedsDisplay
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetSubViewNeedsDisplay
  name: SetSubViewNeedsDisplay
  nameWithType: View.SetSubViewNeedsDisplay
  fullName: Terminal.Gui.View.SetSubViewNeedsDisplay
- uid: Terminal.Gui.View.Clear*
  commentId: Overload:Terminal.Gui.View.Clear
  href: Terminal.Gui.View.html#Terminal.Gui.View.Clear
  name: Clear
  nameWithType: View.Clear
  fullName: Terminal.Gui.View.Clear
- uid: Terminal.Gui.ConsoleDriver.Clip
  commentId: P:Terminal.Gui.ConsoleDriver.Clip
  parent: Terminal.Gui.ConsoleDriver
  href: Terminal.Gui.ConsoleDriver.html#Terminal.Gui.ConsoleDriver.Clip
  name: Clip
  nameWithType: ConsoleDriver.Clip
  fullName: Terminal.Gui.ConsoleDriver.Clip
- uid: Terminal.Gui.Rect.Empty
  commentId: F:Terminal.Gui.Rect.Empty
  href: Terminal.Gui.Rect.html#Terminal.Gui.Rect.Empty
  name: Empty
  nameWithType: Rect.Empty
  fullName: Terminal.Gui.Rect.Empty
- uid: Terminal.Gui.View.ClipToBounds*
  commentId: Overload:Terminal.Gui.View.ClipToBounds
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClipToBounds
  name: ClipToBounds
  nameWithType: View.ClipToBounds
  fullName: Terminal.Gui.View.ClipToBounds
- uid: Terminal.Gui.View.DrawHotString*
  commentId: Overload:Terminal.Gui.View.DrawHotString
  href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  name: DrawHotString
  nameWithType: View.DrawHotString
  fullName: Terminal.Gui.View.DrawHotString
- uid: Terminal.Gui.View.Move*
  commentId: Overload:Terminal.Gui.View.Move
  href: Terminal.Gui.View.html#Terminal.Gui.View.Move(System.Int32,System.Int32)
  name: Move
  nameWithType: View.Move
  fullName: Terminal.Gui.View.Move
- uid: Terminal.Gui.View.LineCanvas*
  commentId: Overload:Terminal.Gui.View.LineCanvas
  href: Terminal.Gui.View.html#Terminal.Gui.View.LineCanvas
  name: LineCanvas
  nameWithType: View.LineCanvas
  fullName: Terminal.Gui.View.LineCanvas
- uid: Terminal.Gui.LineCanvas
  commentId: T:Terminal.Gui.LineCanvas
  parent: Terminal.Gui
  href: Terminal.Gui.LineCanvas.html
  name: LineCanvas
  nameWithType: LineCanvas
  fullName: Terminal.Gui.LineCanvas
- uid: Terminal.Gui.View.LineCanvas
  commentId: P:Terminal.Gui.View.LineCanvas
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LineCanvas
  name: LineCanvas
  nameWithType: View.LineCanvas
  fullName: Terminal.Gui.View.LineCanvas
- uid: Terminal.Gui.View.OnDrawFrames
  commentId: M:Terminal.Gui.View.OnDrawFrames
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  name: OnDrawFrames()
  nameWithType: View.OnDrawFrames()
  fullName: Terminal.Gui.View.OnDrawFrames()
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawFrames
    name: OnDrawFrames
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawFrames
    name: OnDrawFrames
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  - name: (
  - name: )
- uid: Terminal.Gui.View.SuperViewRendersLineCanvas*
  commentId: Overload:Terminal.Gui.View.SuperViewRendersLineCanvas
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperViewRendersLineCanvas
  name: SuperViewRendersLineCanvas
  nameWithType: View.SuperViewRendersLineCanvas
  fullName: Terminal.Gui.View.SuperViewRendersLineCanvas
- uid: Terminal.Gui.View.SuperViewRendersLineCanvas
  commentId: P:Terminal.Gui.View.SuperViewRendersLineCanvas
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperViewRendersLineCanvas
  name: SuperViewRendersLineCanvas
  nameWithType: View.SuperViewRendersLineCanvas
  fullName: Terminal.Gui.View.SuperViewRendersLineCanvas
- uid: Terminal.Gui.View.OnDrawFrames*
  commentId: Overload:Terminal.Gui.View.OnDrawFrames
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  name: OnDrawFrames
  nameWithType: View.OnDrawFrames
  fullName: Terminal.Gui.View.OnDrawFrames
- uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  name: OnDrawContent(Rect)
  nameWithType: View.OnDrawContent(Rect)
  fullName: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
    name: OnDrawContent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
    name: OnDrawContent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  name: OnDrawContentComplete(Rect)
  nameWithType: View.OnDrawContentComplete(Rect)
  fullName: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
    name: OnDrawContentComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
    name: OnDrawContentComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.Draw*
  commentId: Overload:Terminal.Gui.View.Draw
  href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  name: Draw
  nameWithType: View.Draw
  fullName: Terminal.Gui.View.Draw
- uid: Terminal.Gui.View.OnRenderLineCanvas*
  commentId: Overload:Terminal.Gui.View.OnRenderLineCanvas
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnRenderLineCanvas
  name: OnRenderLineCanvas
  nameWithType: View.OnRenderLineCanvas
  fullName: Terminal.Gui.View.OnRenderLineCanvas
- uid: System.EventHandler{Terminal.Gui.DrawEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.DrawEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<DrawEventArgs>
  nameWithType: EventHandler<DrawEventArgs>
  fullName: System.EventHandler<Terminal.Gui.DrawEventArgs>
  nameWithType.vb: EventHandler(Of DrawEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.DrawEventArgs)
  name.vb: EventHandler(Of DrawEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.DrawEventArgs
    name: DrawEventArgs
    href: Terminal.Gui.DrawEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.DrawEventArgs
    name: DrawEventArgs
    href: Terminal.Gui.DrawEventArgs.html
  - name: )
- uid: Terminal.Gui.View.OnDrawContent*
  commentId: Overload:Terminal.Gui.View.OnDrawContent
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  name: OnDrawContent
  nameWithType: View.OnDrawContent
  fullName: Terminal.Gui.View.OnDrawContent
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.OnDrawContentComplete*
  commentId: Overload:Terminal.Gui.View.OnDrawContentComplete
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  name: OnDrawContentComplete
  nameWithType: View.OnDrawContentComplete
  fullName: Terminal.Gui.View.OnDrawContentComplete
- uid: Terminal.Gui.View.HotKey
  commentId: P:Terminal.Gui.View.HotKey
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKey
  name: HotKey
  nameWithType: View.HotKey
  fullName: Terminal.Gui.View.HotKey
- uid: System.EventHandler{Terminal.Gui.KeyChangedEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.KeyChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<KeyChangedEventArgs>
  nameWithType: EventHandler<KeyChangedEventArgs>
  fullName: System.EventHandler<Terminal.Gui.KeyChangedEventArgs>
  nameWithType.vb: EventHandler(Of KeyChangedEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.KeyChangedEventArgs)
  name.vb: EventHandler(Of KeyChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.KeyChangedEventArgs
    name: KeyChangedEventArgs
    href: Terminal.Gui.KeyChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.KeyChangedEventArgs
    name: KeyChangedEventArgs
    href: Terminal.Gui.KeyChangedEventArgs.html
  - name: )
- uid: Terminal.Gui.View.HotKey*
  commentId: Overload:Terminal.Gui.View.HotKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKey
  name: HotKey
  nameWithType: View.HotKey
  fullName: Terminal.Gui.View.HotKey
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.View.HotKeySpecifier*
  commentId: Overload:Terminal.Gui.View.HotKeySpecifier
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKeySpecifier
  name: HotKeySpecifier
  nameWithType: View.HotKeySpecifier
  fullName: Terminal.Gui.View.HotKeySpecifier
- uid: Terminal.Gui.View.Shortcut*
  commentId: Overload:Terminal.Gui.View.Shortcut
  href: Terminal.Gui.View.html#Terminal.Gui.View.Shortcut
  name: Shortcut
  nameWithType: View.Shortcut
  fullName: Terminal.Gui.View.Shortcut
- uid: Terminal.Gui.View.Shortcut
  commentId: P:Terminal.Gui.View.Shortcut
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Shortcut
  name: Shortcut
  nameWithType: View.Shortcut
  fullName: Terminal.Gui.View.Shortcut
- uid: Terminal.Gui.View.ShortcutTag*
  commentId: Overload:Terminal.Gui.View.ShortcutTag
  href: Terminal.Gui.View.html#Terminal.Gui.View.ShortcutTag
  name: ShortcutTag
  nameWithType: View.ShortcutTag
  fullName: Terminal.Gui.View.ShortcutTag
- uid: Terminal.Gui.View.ShortcutAction*
  commentId: Overload:Terminal.Gui.View.ShortcutAction
  href: Terminal.Gui.View.html#Terminal.Gui.View.ShortcutAction
  name: ShortcutAction
  nameWithType: View.ShortcutAction
  fullName: Terminal.Gui.View.ShortcutAction
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Terminal.Gui.View.TabIndexes*
  commentId: Overload:Terminal.Gui.View.TabIndexes
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabIndexes
  name: TabIndexes
  nameWithType: View.TabIndexes
  fullName: Terminal.Gui.View.TabIndexes
- uid: System.Collections.Generic.IList{Terminal.Gui.View}
  commentId: T:System.Collections.Generic.IList{Terminal.Gui.View}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<View>
  nameWithType: IList<View>
  fullName: System.Collections.Generic.IList<Terminal.Gui.View>
  nameWithType.vb: IList(Of View)
  fullName.vb: System.Collections.Generic.IList(Of Terminal.Gui.View)
  name.vb: IList(Of View)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Terminal.Gui.View.TabIndexes
  commentId: P:Terminal.Gui.View.TabIndexes
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabIndexes
  name: TabIndexes
  nameWithType: View.TabIndexes
  fullName: Terminal.Gui.View.TabIndexes
- uid: Terminal.Gui.View.TabIndex*
  commentId: Overload:Terminal.Gui.View.TabIndex
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabIndex
  name: TabIndex
  nameWithType: View.TabIndex
  fullName: Terminal.Gui.View.TabIndex
- uid: Terminal.Gui.View.TabStop*
  commentId: Overload:Terminal.Gui.View.TabStop
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabStop
  name: TabStop
  nameWithType: View.TabStop
  fullName: Terminal.Gui.View.TabStop
- uid: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.KeyEventEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<KeyEventEventArgs>
  nameWithType: EventHandler<KeyEventEventArgs>
  fullName: System.EventHandler<Terminal.Gui.KeyEventEventArgs>
  nameWithType.vb: EventHandler(Of KeyEventEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.KeyEventEventArgs)
  name.vb: EventHandler(Of KeyEventEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.KeyEventEventArgs
    name: KeyEventEventArgs
    href: Terminal.Gui.KeyEventEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.KeyEventEventArgs
    name: KeyEventEventArgs
    href: Terminal.Gui.KeyEventEventArgs.html
  - name: )
- uid: Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  name: ProcessKey(KeyEvent)
  nameWithType: Responder.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.ProcessKey*
  commentId: Overload:Terminal.Gui.View.ProcessKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  name: ProcessKey
  nameWithType: View.ProcessKey
  fullName: Terminal.Gui.View.ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  href: Terminal.Gui.KeyEvent.html
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.View.InvokeKeybindings*
  commentId: Overload:Terminal.Gui.View.InvokeKeybindings
  href: Terminal.Gui.View.html#Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  name: InvokeKeybindings
  nameWithType: View.InvokeKeybindings
  fullName: Terminal.Gui.View.InvokeKeybindings
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.View.GetSupportedCommands
  commentId: M:Terminal.Gui.View.GetSupportedCommands
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  name: GetSupportedCommands()
  nameWithType: View.GetSupportedCommands()
  fullName: Terminal.Gui.View.GetSupportedCommands()
  spec.csharp:
  - uid: Terminal.Gui.View.GetSupportedCommands
    name: GetSupportedCommands
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetSupportedCommands
    name: GetSupportedCommands
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  - name: (
  - name: )
- uid: Terminal.Gui.Command
  commentId: T:Terminal.Gui.Command
  parent: Terminal.Gui
  href: Terminal.Gui.Command.html
  name: Command
  nameWithType: Command
  fullName: Terminal.Gui.Command
- uid: Terminal.Gui.View.AddKeyBinding*
  commentId: Overload:Terminal.Gui.View.AddKeyBinding
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  name: AddKeyBinding
  nameWithType: View.AddKeyBinding
  fullName: Terminal.Gui.View.AddKeyBinding
- uid: Terminal.Gui.Command[]
  isExternal: true
  href: Terminal.Gui.Command.html
  name: Command[]
  nameWithType: Command[]
  fullName: Terminal.Gui.Command[]
  nameWithType.vb: Command()
  fullName.vb: Terminal.Gui.Command()
  name.vb: Command()
  spec.csharp:
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: (
  - name: )
- uid: Terminal.Gui.View.ReplaceKeyBinding*
  commentId: Overload:Terminal.Gui.View.ReplaceKeyBinding
  href: Terminal.Gui.View.html#Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  name: ReplaceKeyBinding
  nameWithType: View.ReplaceKeyBinding
  fullName: Terminal.Gui.View.ReplaceKeyBinding
- uid: Terminal.Gui.View.ContainsKeyBinding*
  commentId: Overload:Terminal.Gui.View.ContainsKeyBinding
  href: Terminal.Gui.View.html#Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  name: ContainsKeyBinding
  nameWithType: View.ContainsKeyBinding
  fullName: Terminal.Gui.View.ContainsKeyBinding
- uid: Terminal.Gui.View.ClearKeyBindings*
  commentId: Overload:Terminal.Gui.View.ClearKeyBindings
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBindings
  name: ClearKeyBindings
  nameWithType: View.ClearKeyBindings
  fullName: Terminal.Gui.View.ClearKeyBindings
- uid: Terminal.Gui.View.ClearKeyBinding*
  commentId: Overload:Terminal.Gui.View.ClearKeyBinding
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  name: ClearKeyBinding
  nameWithType: View.ClearKeyBinding
  fullName: Terminal.Gui.View.ClearKeyBinding
- uid: Terminal.Gui.View.AddCommand*
  commentId: Overload:Terminal.Gui.View.AddCommand
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  name: AddCommand
  nameWithType: View.AddCommand
  fullName: Terminal.Gui.View.AddCommand
- uid: System.Func{System.Nullable{System.Boolean}}
  commentId: T:System.Func{System.Nullable{System.Boolean}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool?>
  nameWithType: Func<bool?>
  fullName: System.Func<bool?>
  nameWithType.vb: Func(Of Boolean?)
  fullName.vb: System.Func(Of Boolean?)
  name.vb: Func(Of Boolean?)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Terminal.Gui.View.GetSupportedCommands*
  commentId: Overload:Terminal.Gui.View.GetSupportedCommands
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  name: GetSupportedCommands
  nameWithType: View.GetSupportedCommands
  fullName: Terminal.Gui.View.GetSupportedCommands
- uid: System.Collections.Generic.IEnumerable{Terminal.Gui.Command}
  commentId: T:System.Collections.Generic.IEnumerable{Terminal.Gui.Command}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Command>
  nameWithType: IEnumerable<Command>
  fullName: System.Collections.Generic.IEnumerable<Terminal.Gui.Command>
  nameWithType.vb: IEnumerable(Of Command)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Terminal.Gui.Command)
  name.vb: IEnumerable(Of Command)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.View.GetKeyFromCommand*
  commentId: Overload:Terminal.Gui.View.GetKeyFromCommand
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  name: GetKeyFromCommand
  nameWithType: View.GetKeyFromCommand
  fullName: Terminal.Gui.View.GetKeyFromCommand
- uid: Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  name: ProcessHotKey(KeyEvent)
  nameWithType: Responder.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessHotKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.ProcessHotKey*
  commentId: Overload:Terminal.Gui.View.ProcessHotKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  name: ProcessHotKey
  nameWithType: View.ProcessHotKey
  fullName: Terminal.Gui.View.ProcessHotKey
- uid: Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  name: ProcessColdKey(KeyEvent)
  nameWithType: Responder.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.ProcessColdKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.ProcessColdKey*
  commentId: Overload:Terminal.Gui.View.ProcessColdKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  name: ProcessColdKey
  nameWithType: View.ProcessColdKey
  fullName: Terminal.Gui.View.ProcessColdKey
- uid: Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  name: OnKeyDown(KeyEvent)
  nameWithType: Responder.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyDown(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.OnKeyDown*
  commentId: Overload:Terminal.Gui.View.OnKeyDown
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  name: OnKeyDown
  nameWithType: View.OnKeyDown
  fullName: Terminal.Gui.View.OnKeyDown
- uid: Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  name: OnKeyUp(KeyEvent)
  nameWithType: Responder.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnKeyUp(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.OnKeyUp*
  commentId: Overload:Terminal.Gui.View.OnKeyUp
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  name: OnKeyUp
  nameWithType: View.OnKeyUp
  fullName: Terminal.Gui.View.OnKeyUp
- uid: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.MouseEventEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MouseEventEventArgs>
  nameWithType: EventHandler<MouseEventEventArgs>
  fullName: System.EventHandler<Terminal.Gui.MouseEventEventArgs>
  nameWithType.vb: EventHandler(Of MouseEventEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.MouseEventEventArgs)
  name.vb: EventHandler(Of MouseEventEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: )
- uid: Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  name: OnMouseLeave(MouseEvent)
  nameWithType: Responder.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseLeave(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  name: OnMouseEnter(MouseEvent)
  nameWithType: Responder.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnMouseEnter(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.View.OnMouseEnter*
  commentId: Overload:Terminal.Gui.View.OnMouseEnter
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  name: OnMouseEnter
  nameWithType: View.OnMouseEnter
  fullName: Terminal.Gui.View.OnMouseEnter
- uid: Terminal.Gui.MouseEvent
  commentId: T:Terminal.Gui.MouseEvent
  parent: Terminal.Gui
  href: Terminal.Gui.MouseEvent.html
  name: MouseEvent
  nameWithType: MouseEvent
  fullName: Terminal.Gui.MouseEvent
- uid: Terminal.Gui.View.OnMouseLeave*
  commentId: Overload:Terminal.Gui.View.OnMouseLeave
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  name: OnMouseLeave
  nameWithType: View.OnMouseLeave
  fullName: Terminal.Gui.View.OnMouseLeave
- uid: Terminal.Gui.View.OnMouseEvent*
  commentId: Overload:Terminal.Gui.View.OnMouseEvent
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  name: OnMouseEvent
  nameWithType: View.OnMouseEvent
  fullName: Terminal.Gui.View.OnMouseEvent
- uid: Terminal.Gui.View.OnMouseClick*
  commentId: Overload:Terminal.Gui.View.OnMouseClick
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  name: OnMouseClick
  nameWithType: View.OnMouseClick
  fullName: Terminal.Gui.View.OnMouseClick
- uid: Terminal.Gui.MouseEventEventArgs
  commentId: T:Terminal.Gui.MouseEventEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.MouseEventEventArgs.html
  name: MouseEventEventArgs
  nameWithType: MouseEventEventArgs
  fullName: Terminal.Gui.MouseEventEventArgs
- uid: Terminal.Gui.View.WantMousePositionReports*
  commentId: Overload:Terminal.Gui.View.WantMousePositionReports
  href: Terminal.Gui.View.html#Terminal.Gui.View.WantMousePositionReports
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed*
  commentId: Overload:Terminal.Gui.View.WantContinuousButtonPressed
  href: Terminal.Gui.View.html#Terminal.Gui.View.WantContinuousButtonPressed
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.SuperView*
  commentId: Overload:Terminal.Gui.View.SuperView
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperView
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.Subviews*
  commentId: Overload:Terminal.Gui.View.Subviews
  href: Terminal.Gui.View.html#Terminal.Gui.View.Subviews
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.IsCurrentTop*
  commentId: Overload:Terminal.Gui.View.IsCurrentTop
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsCurrentTop
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
- uid: System.EventHandler{Terminal.Gui.SuperViewChangedEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.SuperViewChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SuperViewChangedEventArgs>
  nameWithType: EventHandler<SuperViewChangedEventArgs>
  fullName: System.EventHandler<Terminal.Gui.SuperViewChangedEventArgs>
  nameWithType.vb: EventHandler(Of SuperViewChangedEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.SuperViewChangedEventArgs)
  name.vb: EventHandler(Of SuperViewChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: )
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  - name: (
  - name: )
- uid: Terminal.Gui.View.Add*
  commentId: Overload:Terminal.Gui.View.Add
  href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  name: Add
  nameWithType: View.Add
  fullName: Terminal.Gui.View.Add
- uid: Terminal.Gui.View[]
  isExternal: true
  href: Terminal.Gui.View.html
  name: View[]
  nameWithType: View[]
  fullName: Terminal.Gui.View[]
  nameWithType.vb: View()
  fullName.vb: Terminal.Gui.View()
  name.vb: View()
  spec.csharp:
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: (
  - name: )
- uid: Terminal.Gui.ViewEventArgs.View
  commentId: P:Terminal.Gui.ViewEventArgs.View
  href: Terminal.Gui.ViewEventArgs.html#Terminal.Gui.ViewEventArgs.View
  name: View
  nameWithType: ViewEventArgs.View
  fullName: Terminal.Gui.ViewEventArgs.View
- uid: Terminal.Gui.View.OnAdded*
  commentId: Overload:Terminal.Gui.View.OnAdded
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  name: OnAdded
  nameWithType: View.OnAdded
  fullName: Terminal.Gui.View.OnAdded
- uid: Terminal.Gui.SuperViewChangedEventArgs
  commentId: T:Terminal.Gui.SuperViewChangedEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.SuperViewChangedEventArgs.html
  name: SuperViewChangedEventArgs
  nameWithType: SuperViewChangedEventArgs
  fullName: Terminal.Gui.SuperViewChangedEventArgs
- uid: Terminal.Gui.View.IsAdded*
  commentId: Overload:Terminal.Gui.View.IsAdded
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsAdded
  name: IsAdded
  nameWithType: View.IsAdded
  fullName: Terminal.Gui.View.IsAdded
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  name: Add(params View[])
  nameWithType: View.Add(params View[])
  fullName: Terminal.Gui.View.Add(params Terminal.Gui.View[])
  nameWithType.vb: View.Add(ParamArray View())
  fullName.vb: Terminal.Gui.View.Add(ParamArray Terminal.Gui.View())
  name.vb: Add(ParamArray View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  - name: (
  - name: params
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: (
  - name: )
  - name: )
- uid: Terminal.Gui.View.RemoveAll*
  commentId: Overload:Terminal.Gui.View.RemoveAll
  href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  name: RemoveAll
  nameWithType: View.RemoveAll
  fullName: Terminal.Gui.View.RemoveAll
- uid: Terminal.Gui.View.Remove*
  commentId: Overload:Terminal.Gui.View.Remove
  href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  name: Remove
  nameWithType: View.Remove
  fullName: Terminal.Gui.View.Remove
- uid: Terminal.Gui.View.OnRemoved*
  commentId: Overload:Terminal.Gui.View.OnRemoved
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  name: OnRemoved
  nameWithType: View.OnRemoved
  fullName: Terminal.Gui.View.OnRemoved
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.BringSubviewToFront*
  commentId: Overload:Terminal.Gui.View.BringSubviewToFront
  href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  name: BringSubviewToFront
  nameWithType: View.BringSubviewToFront
  fullName: Terminal.Gui.View.BringSubviewToFront
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.SendSubviewToBack*
  commentId: Overload:Terminal.Gui.View.SendSubviewToBack
  href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  name: SendSubviewToBack
  nameWithType: View.SendSubviewToBack
  fullName: Terminal.Gui.View.SendSubviewToBack
- uid: Terminal.Gui.View.SendSubviewBackwards*
  commentId: Overload:Terminal.Gui.View.SendSubviewBackwards
  href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  name: SendSubviewBackwards
  nameWithType: View.SendSubviewBackwards
  fullName: Terminal.Gui.View.SendSubviewBackwards
- uid: Terminal.Gui.View.BringSubviewForward*
  commentId: Overload:Terminal.Gui.View.BringSubviewForward
  href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  name: BringSubviewForward
  nameWithType: View.BringSubviewForward
  fullName: Terminal.Gui.View.BringSubviewForward
- uid: Terminal.Gui.View.GetTopSuperView*
  commentId: Overload:Terminal.Gui.View.GetTopSuperView
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  name: GetTopSuperView
  nameWithType: View.GetTopSuperView
  fullName: Terminal.Gui.View.GetTopSuperView
- uid: System.EventHandler{Terminal.Gui.FocusEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.FocusEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<FocusEventArgs>
  nameWithType: EventHandler<FocusEventArgs>
  fullName: System.EventHandler<Terminal.Gui.FocusEventArgs>
  nameWithType.vb: EventHandler(Of FocusEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.FocusEventArgs)
  name.vb: EventHandler(Of FocusEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.FocusEventArgs
    name: FocusEventArgs
    href: Terminal.Gui.FocusEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.FocusEventArgs
    name: FocusEventArgs
    href: Terminal.Gui.FocusEventArgs.html
  - name: )
- uid: Terminal.Gui.Responder.HasFocus
  commentId: P:Terminal.Gui.Responder.HasFocus
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.HasFocus
  name: HasFocus
  nameWithType: Responder.HasFocus
  fullName: Terminal.Gui.Responder.HasFocus
- uid: Terminal.Gui.View.HasFocus*
  commentId: Overload:Terminal.Gui.View.HasFocus
  href: Terminal.Gui.View.html#Terminal.Gui.View.HasFocus
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.Responder.CanFocus
  commentId: P:Terminal.Gui.Responder.CanFocus
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.CanFocus
  name: CanFocus
  nameWithType: Responder.CanFocus
  fullName: Terminal.Gui.Responder.CanFocus
- uid: Terminal.Gui.Responder.OnCanFocusChanged
  commentId: M:Terminal.Gui.Responder.OnCanFocusChanged
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnCanFocusChanged
  name: OnCanFocusChanged()
  nameWithType: Responder.OnCanFocusChanged()
  fullName: Terminal.Gui.Responder.OnCanFocusChanged()
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnCanFocusChanged
    name: OnCanFocusChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnCanFocusChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnCanFocusChanged
    name: OnCanFocusChanged
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnCanFocusChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.OnCanFocusChanged*
  commentId: Overload:Terminal.Gui.View.OnCanFocusChanged
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnCanFocusChanged
  name: OnCanFocusChanged
  nameWithType: View.OnCanFocusChanged
  fullName: Terminal.Gui.View.OnCanFocusChanged
- uid: Terminal.Gui.View.CanFocus*
  commentId: Overload:Terminal.Gui.View.CanFocus
  href: Terminal.Gui.View.html#Terminal.Gui.View.CanFocus
  name: CanFocus
  nameWithType: View.CanFocus
  fullName: Terminal.Gui.View.CanFocus
- uid: Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  name: OnEnter(View)
  nameWithType: Responder.OnEnter(View)
  fullName: Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
    name: OnEnter
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
    name: OnEnter
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnEnter(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.OnEnter*
  commentId: Overload:Terminal.Gui.View.OnEnter
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  name: OnEnter
  nameWithType: View.OnEnter
  fullName: Terminal.Gui.View.OnEnter
- uid: Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  name: OnLeave(View)
  nameWithType: Responder.OnLeave(View)
  fullName: Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
    name: OnLeave
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
    name: OnLeave
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.OnLeave(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.OnLeave*
  commentId: Overload:Terminal.Gui.View.OnLeave
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  name: OnLeave
  nameWithType: View.OnLeave
  fullName: Terminal.Gui.View.OnLeave
- uid: Terminal.Gui.View.Focused*
  commentId: Overload:Terminal.Gui.View.Focused
  href: Terminal.Gui.View.html#Terminal.Gui.View.Focused
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused*
  commentId: Overload:Terminal.Gui.View.MostFocused
  href: Terminal.Gui.View.html#Terminal.Gui.View.MostFocused
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.SetFocus*
  commentId: Overload:Terminal.Gui.View.SetFocus
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetFocus
  name: SetFocus
  nameWithType: View.SetFocus
  fullName: Terminal.Gui.View.SetFocus
- uid: Terminal.Gui.View.EnsureFocus*
  commentId: Overload:Terminal.Gui.View.EnsureFocus
  href: Terminal.Gui.View.html#Terminal.Gui.View.EnsureFocus
  name: EnsureFocus
  nameWithType: View.EnsureFocus
  fullName: Terminal.Gui.View.EnsureFocus
- uid: Terminal.Gui.View.FocusFirst*
  commentId: Overload:Terminal.Gui.View.FocusFirst
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusFirst
  name: FocusFirst
  nameWithType: View.FocusFirst
  fullName: Terminal.Gui.View.FocusFirst
- uid: Terminal.Gui.View.FocusLast*
  commentId: Overload:Terminal.Gui.View.FocusLast
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusLast
  name: FocusLast
  nameWithType: View.FocusLast
  fullName: Terminal.Gui.View.FocusLast
- uid: Terminal.Gui.View.FocusPrev*
  commentId: Overload:Terminal.Gui.View.FocusPrev
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusPrev
  name: FocusPrev
  nameWithType: View.FocusPrev
  fullName: Terminal.Gui.View.FocusPrev
- uid: Terminal.Gui.View.FocusNext*
  commentId: Overload:Terminal.Gui.View.FocusNext
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusNext
  name: FocusNext
  nameWithType: View.FocusNext
  fullName: Terminal.Gui.View.FocusNext
- uid: Terminal.Gui.View.PositionCursor*
  commentId: Overload:Terminal.Gui.View.PositionCursor
  href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  name: PositionCursor
  nameWithType: View.PositionCursor
  fullName: Terminal.Gui.View.PositionCursor
- uid: Terminal.Gui.View.TextAlignment
  commentId: P:Terminal.Gui.View.TextAlignment
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextAlignment
  name: TextAlignment
  nameWithType: View.TextAlignment
  fullName: Terminal.Gui.View.TextAlignment
- uid: Terminal.Gui.View.TextDirection
  commentId: P:Terminal.Gui.View.TextDirection
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextDirection
  name: TextDirection
  nameWithType: View.TextDirection
  fullName: Terminal.Gui.View.TextDirection
- uid: Terminal.Gui.View.Text*
  commentId: Overload:Terminal.Gui.View.Text
  href: Terminal.Gui.View.html#Terminal.Gui.View.Text
  name: Text
  nameWithType: View.Text
  fullName: Terminal.Gui.View.Text
- uid: Terminal.Gui.TextFormatter
  commentId: T:Terminal.Gui.TextFormatter
  parent: Terminal.Gui
  href: Terminal.Gui.TextFormatter.html
  name: TextFormatter
  nameWithType: TextFormatter
  fullName: Terminal.Gui.TextFormatter
- uid: Terminal.Gui.View.TextFormatter*
  commentId: Overload:Terminal.Gui.View.TextFormatter
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextFormatter
  name: TextFormatter
  nameWithType: View.TextFormatter
  fullName: Terminal.Gui.View.TextFormatter
- uid: Terminal.Gui.TextFormatter.Text
  commentId: P:Terminal.Gui.TextFormatter.Text
  href: Terminal.Gui.TextFormatter.html#Terminal.Gui.TextFormatter.Text
  name: Text
  nameWithType: TextFormatter.Text
  fullName: Terminal.Gui.TextFormatter.Text
- uid: Terminal.Gui.View.UpdateTextFormatterText*
  commentId: Overload:Terminal.Gui.View.UpdateTextFormatterText
  href: Terminal.Gui.View.html#Terminal.Gui.View.UpdateTextFormatterText
  name: UpdateTextFormatterText
  nameWithType: View.UpdateTextFormatterText
  fullName: Terminal.Gui.View.UpdateTextFormatterText
- uid: Terminal.Gui.TextFormatter.WordWrap
  commentId: P:Terminal.Gui.TextFormatter.WordWrap
  href: Terminal.Gui.TextFormatter.html#Terminal.Gui.TextFormatter.WordWrap
  name: WordWrap
  nameWithType: TextFormatter.WordWrap
  fullName: Terminal.Gui.TextFormatter.WordWrap
- uid: Terminal.Gui.View.PreserveTrailingSpaces*
  commentId: Overload:Terminal.Gui.View.PreserveTrailingSpaces
  href: Terminal.Gui.View.html#Terminal.Gui.View.PreserveTrailingSpaces
  name: PreserveTrailingSpaces
  nameWithType: View.PreserveTrailingSpaces
  fullName: Terminal.Gui.View.PreserveTrailingSpaces
- uid: Terminal.Gui.View.TextAlignment*
  commentId: Overload:Terminal.Gui.View.TextAlignment
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextAlignment
  name: TextAlignment
  nameWithType: View.TextAlignment
  fullName: Terminal.Gui.View.TextAlignment
- uid: Terminal.Gui.TextAlignment
  commentId: T:Terminal.Gui.TextAlignment
  parent: Terminal.Gui
  href: Terminal.Gui.TextAlignment.html
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: Terminal.Gui.TextAlignment
- uid: Terminal.Gui.View.VerticalTextAlignment*
  commentId: Overload:Terminal.Gui.View.VerticalTextAlignment
  href: Terminal.Gui.View.html#Terminal.Gui.View.VerticalTextAlignment
  name: VerticalTextAlignment
  nameWithType: View.VerticalTextAlignment
  fullName: Terminal.Gui.View.VerticalTextAlignment
- uid: Terminal.Gui.VerticalTextAlignment
  commentId: T:Terminal.Gui.VerticalTextAlignment
  parent: Terminal.Gui
  href: Terminal.Gui.VerticalTextAlignment.html
  name: VerticalTextAlignment
  nameWithType: VerticalTextAlignment
  fullName: Terminal.Gui.VerticalTextAlignment
- uid: Terminal.Gui.View.TextDirection*
  commentId: Overload:Terminal.Gui.View.TextDirection
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextDirection
  name: TextDirection
  nameWithType: View.TextDirection
  fullName: Terminal.Gui.View.TextDirection
- uid: Terminal.Gui.TextFormatter.HotKeySpecifier
  commentId: P:Terminal.Gui.TextFormatter.HotKeySpecifier
  href: Terminal.Gui.TextFormatter.html#Terminal.Gui.TextFormatter.HotKeySpecifier
  name: HotKeySpecifier
  nameWithType: TextFormatter.HotKeySpecifier
  fullName: Terminal.Gui.TextFormatter.HotKeySpecifier
- uid: Terminal.Gui.View.GetHotKeySpecifierLength*
  commentId: Overload:Terminal.Gui.View.GetHotKeySpecifierLength
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  name: GetHotKeySpecifierLength
  nameWithType: View.GetHotKeySpecifierLength
  fullName: Terminal.Gui.View.GetHotKeySpecifierLength
- uid: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey*
  commentId: Overload:Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  name: GetSizeNeededForTextWithoutHotKey
  nameWithType: View.GetSizeNeededForTextWithoutHotKey
  fullName: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
- uid: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey*
  commentId: Overload:Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  name: GetTextFormatterSizeNeededForTextAndHotKey
  nameWithType: View.GetTextFormatterSizeNeededForTextAndHotKey
  fullName: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
shouldSkipMarkup: true
