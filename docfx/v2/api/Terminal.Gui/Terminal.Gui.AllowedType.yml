### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.AllowedType
  commentId: T:Terminal.Gui.AllowedType
  id: AllowedType
  parent: Terminal.Gui
  children:
  - Terminal.Gui.AllowedType.#ctor(System.String,System.String[])
  - Terminal.Gui.AllowedType.Description
  - Terminal.Gui.AllowedType.Extensions
  - Terminal.Gui.AllowedType.IsAllowed(System.String)
  - Terminal.Gui.AllowedType.ToString
  langs:
  - csharp
  - vb
  name: AllowedType
  nameWithType: AllowedType
  fullName: Terminal.Gui.AllowedType
  type: Class
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AllowedType
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 50
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Describes a requirement on what <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref> can be selected.

    This can be combined with other <xref href="Terminal.Gui.IAllowedType" data-throw-if-not-resolved="false"></xref> in a <xref href="Terminal.Gui.FileDialog" data-throw-if-not-resolved="false"></xref>

    to for example show only .csv files but let user change to open any if they want.
  example: []
  syntax:
    content: 'public class AllowedType : IAllowedType'
    content.vb: Public Class AllowedType Implements IAllowedType
  inheritance:
  - System.Object
  implements:
  - Terminal.Gui.IAllowedType
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.AllowedType.#ctor(System.String,System.String[])
  commentId: M:Terminal.Gui.AllowedType.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: Terminal.Gui.AllowedType
  langs:
  - csharp
  - vb
  name: AllowedType(string, params string[])
  nameWithType: AllowedType.AllowedType(string, params string[])
  fullName: Terminal.Gui.AllowedType.AllowedType(string, params string[])
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 57
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of the <xref href="Terminal.Gui.AllowedType" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public AllowedType(string description, params string[] extensions)
    parameters:
    - id: description
      type: System.String
      description: The human readable text to display.
    - id: extensions
      type: System.String[]
      description: Extension(s) to match e.g. .csv.
    content.vb: Public Sub New(description As String, ParamArray extensions As String())
  overload: Terminal.Gui.AllowedType.#ctor*
  nameWithType.vb: AllowedType.New(String, ParamArray String())
  fullName.vb: Terminal.Gui.AllowedType.New(String, ParamArray String())
  name.vb: New(String, ParamArray String())
- uid: Terminal.Gui.AllowedType.Description
  commentId: P:Terminal.Gui.AllowedType.Description
  id: Description
  parent: Terminal.Gui.AllowedType
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: AllowedType.Description
  fullName: Terminal.Gui.AllowedType.Description
  type: Property
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Description
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 71
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or Sets the human readable description for the file type

    e.g. "Comma Separated Values".
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Terminal.Gui.AllowedType.Description*
- uid: Terminal.Gui.AllowedType.Extensions
  commentId: P:Terminal.Gui.AllowedType.Extensions
  id: Extensions
  parent: Terminal.Gui.AllowedType
  langs:
  - csharp
  - vb
  name: Extensions
  nameWithType: AllowedType.Extensions
  fullName: Terminal.Gui.AllowedType.Extensions
  type: Property
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Extensions
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 76
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or Sets the permitted file extension(s) (e.g. ".csv").
  example: []
  syntax:
    content: public string[] Extensions { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Extensions As String()
  overload: Terminal.Gui.AllowedType.Extensions*
- uid: Terminal.Gui.AllowedType.ToString
  commentId: M:Terminal.Gui.AllowedType.ToString
  id: ToString
  parent: Terminal.Gui.AllowedType
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AllowedType.ToString()
  fullName: Terminal.Gui.AllowedType.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 81
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns <xref href="Terminal.Gui.AllowedType.Description" data-throw-if-not-resolved="false"></xref> plus all <xref href="Terminal.Gui.AllowedType.Extensions" data-throw-if-not-resolved="false"></xref> separated by semicolons.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Terminal.Gui.AllowedType.ToString*
- uid: Terminal.Gui.AllowedType.IsAllowed(System.String)
  commentId: M:Terminal.Gui.AllowedType.IsAllowed(System.String)
  id: IsAllowed(System.String)
  parent: Terminal.Gui.AllowedType
  langs:
  - csharp
  - vb
  name: IsAllowed(string)
  nameWithType: AllowedType.IsAllowed(string)
  fullName: Terminal.Gui.AllowedType.IsAllowed(string)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/AllowedType.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsAllowed
    path: ../Terminal.Gui/FileServices/AllowedType.cs
    startLine: 94
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns true if the file at <code class="paramref">path</code> is compatible with this

    allow option.  Note that the file may not exist (e.g. in the case of saving).
  example: []
  syntax:
    content: public bool IsAllowed(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsAllowed(path As String) As Boolean
  overload: Terminal.Gui.AllowedType.IsAllowed*
  implements:
  - Terminal.Gui.IAllowedType.IsAllowed(System.String)
  nameWithType.vb: AllowedType.IsAllowed(String)
  fullName.vb: Terminal.Gui.AllowedType.IsAllowed(String)
  name.vb: IsAllowed(String)
references:
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Terminal.Gui.IAllowedType
  commentId: T:Terminal.Gui.IAllowedType
  parent: Terminal.Gui
  href: Terminal.Gui.IAllowedType.html
  name: IAllowedType
  nameWithType: IAllowedType
  fullName: Terminal.Gui.IAllowedType
- uid: Terminal.Gui.FileDialog
  commentId: T:Terminal.Gui.FileDialog
  parent: Terminal.Gui
  href: Terminal.Gui.FileDialog.html
  name: FileDialog
  nameWithType: FileDialog
  fullName: Terminal.Gui.FileDialog
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.AllowedType
  commentId: T:Terminal.Gui.AllowedType
  href: Terminal.Gui.AllowedType.html
  name: AllowedType
  nameWithType: AllowedType
  fullName: Terminal.Gui.AllowedType
- uid: Terminal.Gui.AllowedType.#ctor*
  commentId: Overload:Terminal.Gui.AllowedType.#ctor
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.#ctor(System.String,System.String[])
  name: AllowedType
  nameWithType: AllowedType.AllowedType
  fullName: Terminal.Gui.AllowedType.AllowedType
  nameWithType.vb: AllowedType.New
  fullName.vb: Terminal.Gui.AllowedType.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Terminal.Gui.AllowedType.Description*
  commentId: Overload:Terminal.Gui.AllowedType.Description
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.Description
  name: Description
  nameWithType: AllowedType.Description
  fullName: Terminal.Gui.AllowedType.Description
- uid: Terminal.Gui.AllowedType.Extensions*
  commentId: Overload:Terminal.Gui.AllowedType.Extensions
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.Extensions
  name: Extensions
  nameWithType: AllowedType.Extensions
  fullName: Terminal.Gui.AllowedType.Extensions
- uid: Terminal.Gui.AllowedType.Description
  commentId: P:Terminal.Gui.AllowedType.Description
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.Description
  name: Description
  nameWithType: AllowedType.Description
  fullName: Terminal.Gui.AllowedType.Description
- uid: Terminal.Gui.AllowedType.Extensions
  commentId: P:Terminal.Gui.AllowedType.Extensions
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.Extensions
  name: Extensions
  nameWithType: AllowedType.Extensions
  fullName: Terminal.Gui.AllowedType.Extensions
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.AllowedType.ToString*
  commentId: Overload:Terminal.Gui.AllowedType.ToString
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.ToString
  name: ToString
  nameWithType: AllowedType.ToString
  fullName: Terminal.Gui.AllowedType.ToString
- uid: Terminal.Gui.AllowedType.IsAllowed*
  commentId: Overload:Terminal.Gui.AllowedType.IsAllowed
  href: Terminal.Gui.AllowedType.html#Terminal.Gui.AllowedType.IsAllowed(System.String)
  name: IsAllowed
  nameWithType: AllowedType.IsAllowed
  fullName: Terminal.Gui.AllowedType.IsAllowed
- uid: Terminal.Gui.IAllowedType.IsAllowed(System.String)
  commentId: M:Terminal.Gui.IAllowedType.IsAllowed(System.String)
  parent: Terminal.Gui.IAllowedType
  isExternal: true
  href: Terminal.Gui.IAllowedType.html#Terminal.Gui.IAllowedType.IsAllowed(System.String)
  name: IsAllowed(string)
  nameWithType: IAllowedType.IsAllowed(string)
  fullName: Terminal.Gui.IAllowedType.IsAllowed(string)
  nameWithType.vb: IAllowedType.IsAllowed(String)
  fullName.vb: Terminal.Gui.IAllowedType.IsAllowed(String)
  name.vb: IsAllowed(String)
  spec.csharp:
  - uid: Terminal.Gui.IAllowedType.IsAllowed(System.String)
    name: IsAllowed
    href: Terminal.Gui.IAllowedType.html#Terminal.Gui.IAllowedType.IsAllowed(System.String)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Terminal.Gui.IAllowedType.IsAllowed(System.String)
    name: IsAllowed
    href: Terminal.Gui.IAllowedType.html#Terminal.Gui.IAllowedType.IsAllowed(System.String)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
shouldSkipMarkup: true
