### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.IListDataSource
  commentId: T:Terminal.Gui.IListDataSource
  id: IListDataSource
  parent: Terminal.Gui
  children:
  - Terminal.Gui.IListDataSource.Count
  - Terminal.Gui.IListDataSource.IsMarked(System.Int32)
  - Terminal.Gui.IListDataSource.Length
  - Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView,Terminal.Gui.ConsoleDriver,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Terminal.Gui.IListDataSource.SetMark(System.Int32,System.Boolean)
  - Terminal.Gui.IListDataSource.ToList
  langs:
  - csharp
  - vb
  name: IListDataSource
  nameWithType: IListDataSource
  fullName: Terminal.Gui.IListDataSource
  type: Interface
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IListDataSource
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 12
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Implement <xref href="Terminal.Gui.IListDataSource" data-throw-if-not-resolved="false"></xref> to provide custom rendering for a <xref href="Terminal.Gui.ListView" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IListDataSource
    content.vb: Public Interface IListDataSource
- uid: Terminal.Gui.IListDataSource.Count
  commentId: P:Terminal.Gui.IListDataSource.Count
  id: Count
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IListDataSource.Count
  fullName: Terminal.Gui.IListDataSource.Count
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Count
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 16
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the number of elements to display
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: Terminal.Gui.IListDataSource.Count*
- uid: Terminal.Gui.IListDataSource.Length
  commentId: P:Terminal.Gui.IListDataSource.Length
  id: Length
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: IListDataSource.Length
  fullName: Terminal.Gui.IListDataSource.Length
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Length
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 21
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the maximum length of elements to display
  example: []
  syntax:
    content: int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Length As Integer
  overload: Terminal.Gui.IListDataSource.Length*
- uid: Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView,Terminal.Gui.ConsoleDriver,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView,Terminal.Gui.ConsoleDriver,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: Render(Terminal.Gui.ListView,Terminal.Gui.ConsoleDriver,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: Render(ListView, ConsoleDriver, bool, int, int, int, int, int)
  nameWithType: IListDataSource.Render(ListView, ConsoleDriver, bool, int, int, int, int, int)
  fullName: Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView, Terminal.Gui.ConsoleDriver, bool, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Render
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 38
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This method is invoked to render a specified item, the method should cover the entire provided width.
  remarks: The default color will be set before this method is invoked, and will be based on whether the item is selected or not.
  example: []
  syntax:
    content: void Render(ListView container, ConsoleDriver driver, bool selected, int item, int col, int line, int width, int start = 0)
    parameters:
    - id: container
      type: Terminal.Gui.ListView
      description: The list view to render.
    - id: driver
      type: Terminal.Gui.ConsoleDriver
      description: The console driver to render.
    - id: selected
      type: System.Boolean
      description: Describes whether the item being rendered is currently selected by the user.
    - id: item
      type: System.Int32
      description: The index of the item to render, zero for the first item and so on.
    - id: col
      type: System.Int32
      description: The column where the rendering will start
    - id: line
      type: System.Int32
      description: The line where the rendering will be done.
    - id: width
      type: System.Int32
      description: The width that must be filled out.
    - id: start
      type: System.Int32
      description: The index of the string to be displayed.
    content.vb: Sub Render(container As ListView, driver As ConsoleDriver, selected As Boolean, item As Integer, col As Integer, line As Integer, width As Integer, start As Integer = 0)
  overload: Terminal.Gui.IListDataSource.Render*
  nameWithType.vb: IListDataSource.Render(ListView, ConsoleDriver, Boolean, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView, Terminal.Gui.ConsoleDriver, Boolean, Integer, Integer, Integer, Integer, Integer)
  name.vb: Render(ListView, ConsoleDriver, Boolean, Integer, Integer, Integer, Integer, Integer)
- uid: Terminal.Gui.IListDataSource.IsMarked(System.Int32)
  commentId: M:Terminal.Gui.IListDataSource.IsMarked(System.Int32)
  id: IsMarked(System.Int32)
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: IsMarked(int)
  nameWithType: IListDataSource.IsMarked(int)
  fullName: Terminal.Gui.IListDataSource.IsMarked(int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsMarked
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 45
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Should return whether the specified item is currently marked.
  example: []
  syntax:
    content: bool IsMarked(int item)
    parameters:
    - id: item
      type: System.Int32
      description: Item index.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, if marked, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Function IsMarked(item As Integer) As Boolean
  overload: Terminal.Gui.IListDataSource.IsMarked*
  nameWithType.vb: IListDataSource.IsMarked(Integer)
  fullName.vb: Terminal.Gui.IListDataSource.IsMarked(Integer)
  name.vb: IsMarked(Integer)
- uid: Terminal.Gui.IListDataSource.SetMark(System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.IListDataSource.SetMark(System.Int32,System.Boolean)
  id: SetMark(System.Int32,System.Boolean)
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: SetMark(int, bool)
  nameWithType: IListDataSource.SetMark(int, bool)
  fullName: Terminal.Gui.IListDataSource.SetMark(int, bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SetMark
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 52
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Flags the item as marked.
  example: []
  syntax:
    content: void SetMark(int item, bool value)
    parameters:
    - id: item
      type: System.Int32
      description: Item index.
    - id: value
      type: System.Boolean
      description: If set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> value.
    content.vb: Sub SetMark(item As Integer, value As Boolean)
  overload: Terminal.Gui.IListDataSource.SetMark*
  nameWithType.vb: IListDataSource.SetMark(Integer, Boolean)
  fullName.vb: Terminal.Gui.IListDataSource.SetMark(Integer, Boolean)
  name.vb: SetMark(Integer, Boolean)
- uid: Terminal.Gui.IListDataSource.ToList
  commentId: M:Terminal.Gui.IListDataSource.ToList
  id: ToList
  parent: Terminal.Gui.IListDataSource
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: IListDataSource.ToList()
  fullName: Terminal.Gui.IListDataSource.ToList()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToList
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 58
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Return the source as IList.
  example: []
  syntax:
    content: IList ToList()
    return:
      type: System.Collections.IList
      description: ''
    content.vb: Function ToList() As IList
  overload: Terminal.Gui.IListDataSource.ToList*
references:
- uid: Terminal.Gui.IListDataSource
  commentId: T:Terminal.Gui.IListDataSource
  parent: Terminal.Gui
  href: Terminal.Gui.IListDataSource.html
  name: IListDataSource
  nameWithType: IListDataSource
  fullName: Terminal.Gui.IListDataSource
- uid: Terminal.Gui.ListView
  commentId: T:Terminal.Gui.ListView
  parent: Terminal.Gui
  href: Terminal.Gui.ListView.html
  name: ListView
  nameWithType: ListView
  fullName: Terminal.Gui.ListView
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: Terminal.Gui.IListDataSource.Count*
  commentId: Overload:Terminal.Gui.IListDataSource.Count
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.Count
  name: Count
  nameWithType: IListDataSource.Count
  fullName: Terminal.Gui.IListDataSource.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.IListDataSource.Length*
  commentId: Overload:Terminal.Gui.IListDataSource.Length
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.Length
  name: Length
  nameWithType: IListDataSource.Length
  fullName: Terminal.Gui.IListDataSource.Length
- uid: Terminal.Gui.IListDataSource.Render*
  commentId: Overload:Terminal.Gui.IListDataSource.Render
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.Render(Terminal.Gui.ListView,Terminal.Gui.ConsoleDriver,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  name: Render
  nameWithType: IListDataSource.Render
  fullName: Terminal.Gui.IListDataSource.Render
- uid: Terminal.Gui.ConsoleDriver
  commentId: T:Terminal.Gui.ConsoleDriver
  parent: Terminal.Gui
  href: Terminal.Gui.ConsoleDriver.html
  name: ConsoleDriver
  nameWithType: ConsoleDriver
  fullName: Terminal.Gui.ConsoleDriver
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.IListDataSource.IsMarked*
  commentId: Overload:Terminal.Gui.IListDataSource.IsMarked
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.IsMarked(System.Int32)
  name: IsMarked
  nameWithType: IListDataSource.IsMarked
  fullName: Terminal.Gui.IListDataSource.IsMarked
- uid: Terminal.Gui.IListDataSource.SetMark*
  commentId: Overload:Terminal.Gui.IListDataSource.SetMark
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.SetMark(System.Int32,System.Boolean)
  name: SetMark
  nameWithType: IListDataSource.SetMark
  fullName: Terminal.Gui.IListDataSource.SetMark
- uid: Terminal.Gui.IListDataSource.ToList*
  commentId: Overload:Terminal.Gui.IListDataSource.ToList
  href: Terminal.Gui.IListDataSource.html#Terminal.Gui.IListDataSource.ToList
  name: ToList
  nameWithType: IListDataSource.ToList
  fullName: Terminal.Gui.IListDataSource.ToList
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
shouldSkipMarkup: true
