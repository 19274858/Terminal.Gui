### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Application
  commentId: T:Terminal.Gui.Application
  id: Application
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  - Terminal.Gui.Application.AlternateBackwardKey
  - Terminal.Gui.Application.AlternateForwardKey
  - Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  - Terminal.Gui.Application.BringOverlappedTopToFront
  - Terminal.Gui.Application.Current
  - Terminal.Gui.Application.Driver
  - Terminal.Gui.Application.End(Terminal.Gui.RunState)
  - Terminal.Gui.Application.EndAfterFirstIteration
  - Terminal.Gui.Application.Force16Colors
  - Terminal.Gui.Application.GetTopOverlappedChild(System.Type,System.String[])
  - Terminal.Gui.Application.GrabbedMouse
  - Terminal.Gui.Application.GrabbingMouse
  - Terminal.Gui.Application.GrabMouse(Terminal.Gui.View)
  - Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  - Terminal.Gui.Application.Invoke(System.Action)
  - Terminal.Gui.Application.IsMouseDisabled
  - Terminal.Gui.Application.Iteration
  - Terminal.Gui.Application.KeyDown
  - Terminal.Gui.Application.KeyPressed
  - Terminal.Gui.Application.KeyUp
  - Terminal.Gui.Application.MouseEvent
  - Terminal.Gui.Application.MouseGrabView
  - Terminal.Gui.Application.MoveToOverlappedChild(Terminal.Gui.Toplevel)
  - Terminal.Gui.Application.NotifyNewRunState
  - Terminal.Gui.Application.NotifyStopRunState
  - Terminal.Gui.Application.OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  - Terminal.Gui.Application.OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  - Terminal.Gui.Application.OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  - Terminal.Gui.Application.OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  - Terminal.Gui.Application.OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  - Terminal.Gui.Application.OverlappedChildren
  - Terminal.Gui.Application.OverlappedMoveNext
  - Terminal.Gui.Application.OverlappedMovePrevious
  - Terminal.Gui.Application.OverlappedTop
  - Terminal.Gui.Application.QuitKey
  - Terminal.Gui.Application.Refresh
  - Terminal.Gui.Application.RemoveTimeout(System.Object)
  - Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  - Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  - Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  - Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  - Terminal.Gui.Application.RunIteration(Terminal.Gui.RunState@,System.Boolean@)
  - Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  - Terminal.Gui.Application.Shutdown
  - Terminal.Gui.Application.SizeChanging
  - Terminal.Gui.Application.SupportedCultures
  - Terminal.Gui.Application.Top
  - Terminal.Gui.Application.UnGrabbedMouse
  - Terminal.Gui.Application.UnGrabbingMouse
  - Terminal.Gui.Application.UngrabMouse
  - Terminal.Gui.Application.UseSystemConsole
  - Terminal.Gui.Application.Wakeup
  - Terminal.Gui.Application.WantContinuousButtonPressedView
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: Application
  fullName: Terminal.Gui.Application
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Application
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 23
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: A static, singleton class representing the application. This class is the entry point for the application.
  remarks: >-
    <p>
     Creates a instance of <xref href="Terminal.Gui.MainLoop" data-throw-if-not-resolved="false"></xref> to process input events, handle timers and
     other sources of data. It is accessible via the <xref href="Terminal.Gui.Application.MainLoop" data-throw-if-not-resolved="false"></xref> property.
    </p>

    <p>
     The <xref href="Terminal.Gui.Application.Iteration" data-throw-if-not-resolved="false"></xref> event is invoked on each iteration of the <xref href="Terminal.Gui.MainLoop" data-throw-if-not-resolved="false"></xref>.
    </p>

    <p>
     When invoked it sets the <xref href="System.Threading.SynchronizationContext" data-throw-if-not-resolved="false"></xref> to one that is tied
     to the <xref href="Terminal.Gui.Application.MainLoop" data-throw-if-not-resolved="false"></xref>, allowing user code to use async/await.
    </p>
  example:
  - >-
    <pre><code class="lang-csharp">// A simple Terminal.Gui app that creates a window with a frame and title with 

    // 5 rows/columns of padding.

    Application.Init();

    var win = new Window ($"Example App ({Application.QuitKey} to quit)") {
      X = 5,
      Y = 5,
      Width = Dim.Fill (5),
      Height = Dim.Fill (5)
    };

    Application.Top.Add(win);

    Application.Run();

    Application.Shutdown();</code></pre>
  syntax:
    content: public static class Application
    content.vb: Public Module Application
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.Application.Driver
  commentId: P:Terminal.Gui.Application.Driver
  id: Driver
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Driver
  nameWithType: Application.Driver
  fullName: Terminal.Gui.Application.Driver
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Driver
    path: ../Terminal.Gui/Application.cs
    startLine: 47
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the <xref href="Terminal.Gui.ConsoleDriver" data-throw-if-not-resolved="false"></xref> that has been selected. See also <xref href="Terminal.Gui.Application.UseSystemConsole" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ConsoleDriver Driver { get; }
    parameters: []
    return:
      type: Terminal.Gui.ConsoleDriver
    content.vb: Public Shared Property Driver As ConsoleDriver
  overload: Terminal.Gui.Application.Driver*
- uid: Terminal.Gui.Application.UseSystemConsole
  commentId: P:Terminal.Gui.Application.UseSystemConsole
  id: UseSystemConsole
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: UseSystemConsole
  nameWithType: Application.UseSystemConsole
  fullName: Terminal.Gui.Application.UseSystemConsole
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UseSystemConsole
    path: ../Terminal.Gui/Application.cs
    startLine: 52
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, forces the use of the System.Console-based (see <xref href="Terminal.Gui.NetDriver" data-throw-if-not-resolved="false"></xref>) driver. The default is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public static bool UseSystemConsole { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property UseSystemConsole As Boolean
  overload: Terminal.Gui.Application.UseSystemConsole*
- uid: Terminal.Gui.Application.Force16Colors
  commentId: P:Terminal.Gui.Application.Force16Colors
  id: Force16Colors
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Force16Colors
  nameWithType: Application.Force16Colors
  fullName: Terminal.Gui.Application.Force16Colors
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Force16Colors
    path: ../Terminal.Gui/Application.cs
    startLine: 60
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets whether <xref href="Terminal.Gui.Application.Driver" data-throw-if-not-resolved="false"></xref> will be forced to output only the 16 colors defined in <xref href="Terminal.Gui.ColorName" data-throw-if-not-resolved="false"></xref>.

    The default is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, meaning 24-bit (TrueColor) colors will be output as long as the selected <xref href="Terminal.Gui.ConsoleDriver" data-throw-if-not-resolved="false"></xref>

    supports TrueColor.
  example: []
  syntax:
    content: public static bool Force16Colors { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property Force16Colors As Boolean
  overload: Terminal.Gui.Application.Force16Colors*
- uid: Terminal.Gui.Application.SupportedCultures
  commentId: P:Terminal.Gui.Application.SupportedCultures
  id: SupportedCultures
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: SupportedCultures
  nameWithType: Application.SupportedCultures
  fullName: Terminal.Gui.Application.SupportedCultures
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SupportedCultures
    path: ../Terminal.Gui/Application.cs
    startLine: 71
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets all cultures supported by the application without the invariant language.
  example: []
  syntax:
    content: public static List<CultureInfo> SupportedCultures { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Globalization.CultureInfo}
    content.vb: Public Shared ReadOnly Property SupportedCultures As List(Of CultureInfo)
  overload: Terminal.Gui.Application.SupportedCultures*
- uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  id: Init(Terminal.Gui.ConsoleDriver)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Init(ConsoleDriver)
  nameWithType: Application.Init(ConsoleDriver)
  fullName: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Init
    path: ../Terminal.Gui/Application.cs
    startLine: 118
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui" data-throw-if-not-resolved="false"></xref> Application.
  example: []
  syntax:
    content: public static void Init(ConsoleDriver driver = null)
    parameters:
    - id: driver
      type: Terminal.Gui.ConsoleDriver
      description: >-
        The <xref href="Terminal.Gui.ConsoleDriver" data-throw-if-not-resolved="false"></xref> to use. If not specified the default driver for the

        platform will be used (see <xref href="Terminal.Gui.WindowsDriver" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.CursesDriver" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.NetDriver" data-throw-if-not-resolved="false"></xref>).
    content.vb: Public Shared Sub Init(driver As ConsoleDriver = Nothing)
  overload: Terminal.Gui.Application.Init*
- uid: Terminal.Gui.Application.Shutdown
  commentId: M:Terminal.Gui.Application.Shutdown
  id: Shutdown
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: Terminal.Gui.Application.Shutdown()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Shutdown
    path: ../Terminal.Gui/Application.cs
    startLine: 202
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Shutdown an application initialized with <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    Shutdown must be called for every call to <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref>

    to ensure all resources are cleaned up (Disposed) and terminal settings are restored.
  example: []
  syntax:
    content: public static void Shutdown()
    content.vb: Public Shared Sub Shutdown()
  overload: Terminal.Gui.Application.Shutdown*
- uid: Terminal.Gui.Application.NotifyNewRunState
  commentId: E:Terminal.Gui.Application.NotifyNewRunState
  id: NotifyNewRunState
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: NotifyNewRunState
  nameWithType: Application.NotifyNewRunState
  fullName: Terminal.Gui.Application.NotifyNewRunState
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NotifyNewRunState
    path: ../Terminal.Gui/Application.cs
    startLine: 265
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Notify that a new <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> was created (<xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> was called). The token is created in 

    <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> and this event will be fired before that function exits.
  remarks: >-
    If <xref href="Terminal.Gui.Application.EndAfterFirstIteration" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> callers to

    <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> must also subscribe to <xref href="Terminal.Gui.Application.NotifyStopRunState" data-throw-if-not-resolved="false"></xref>

    and manually dispose of the <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> token when the application is done.
  example: []
  syntax:
    content: public static event EventHandler<RunStateEventArgs> NotifyNewRunState
    return:
      type: System.EventHandler{Terminal.Gui.RunStateEventArgs}
    content.vb: Public Shared Event NotifyNewRunState As EventHandler(Of RunStateEventArgs)
- uid: Terminal.Gui.Application.NotifyStopRunState
  commentId: E:Terminal.Gui.Application.NotifyStopRunState
  id: NotifyStopRunState
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: NotifyStopRunState
  nameWithType: Application.NotifyStopRunState
  fullName: Terminal.Gui.Application.NotifyStopRunState
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NotifyStopRunState
    path: ../Terminal.Gui/Application.cs
    startLine: 275
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Notify that a existent <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> is stopping (<xref href="Terminal.Gui.Application.End(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> was called).
  remarks: >-
    If <xref href="Terminal.Gui.Application.EndAfterFirstIteration" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> callers to

    <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> must also subscribe to <xref href="Terminal.Gui.Application.NotifyStopRunState" data-throw-if-not-resolved="false"></xref>

    and manually dispose of the <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> token when the application is done.
  example: []
  syntax:
    content: public static event EventHandler<ToplevelEventArgs> NotifyStopRunState
    return:
      type: System.EventHandler{Terminal.Gui.ToplevelEventArgs}
    content.vb: Public Shared Event NotifyStopRunState As EventHandler(Of ToplevelEventArgs)
- uid: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  commentId: M:Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  id: Begin(Terminal.Gui.Toplevel)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Begin(Toplevel)
  nameWithType: Application.Begin(Toplevel)
  fullName: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Begin
    path: ../Terminal.Gui/Application.cs
    startLine: 289
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: 'Building block API: Prepares the provided <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> for execution.'
  remarks: >-
    This method prepares the provided <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> for running with the focus,

    it adds this to the list of <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref>s, lays out the Subviews, focuses the first element, and draws the

    <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> in the screen. This is usually followed by executing

    the <xref href="Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> method, and then the <xref href="Terminal.Gui.Application.End(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> method upon termination which will
     undo these changes.
  example: []
  syntax:
    content: public static RunState Begin(Toplevel Toplevel)
    parameters:
    - id: Toplevel
      type: Terminal.Gui.Toplevel
      description: The <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> to prepare execution for.
    return:
      type: Terminal.Gui.RunState
      description: The <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> handle that needs to be passed to the <xref href="Terminal.Gui.Application.End(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> method upon completion.
    content.vb: Public Shared Function Begin(Toplevel As Toplevel) As RunState
  overload: Terminal.Gui.Application.Begin*
- uid: Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  commentId: M:Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  id: Run(System.Func{System.Exception,System.Boolean})
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Run(Func<Exception, bool>)
  nameWithType: Application.Run(Func<Exception, bool>)
  fullName: Terminal.Gui.Application.Run(System.Func<System.Exception, bool>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Run
    path: ../Terminal.Gui/Application.cs
    startLine: 387
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Runs the application by calling <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> with the value of <xref href="Terminal.Gui.Application.Top" data-throw-if-not-resolved="false"></xref>.
  remarks: See <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> for more details.
  example: []
  syntax:
    content: public static void Run(Func<Exception, bool> errorHandler = null)
    parameters:
    - id: errorHandler
      type: System.Func{System.Exception,System.Boolean}
    content.vb: Public Shared Sub Run(errorHandler As Func(Of Exception, Boolean) = Nothing)
  overload: Terminal.Gui.Application.Run*
  nameWithType.vb: Application.Run(Func(Of Exception, Boolean))
  fullName.vb: Terminal.Gui.Application.Run(System.Func(Of System.Exception, Boolean))
  name.vb: Run(Func(Of Exception, Boolean))
- uid: Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  id: Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Run<T>(Func<Exception, bool>, ConsoleDriver)
  nameWithType: Application.Run<T>(Func<Exception, bool>, ConsoleDriver)
  fullName: Terminal.Gui.Application.Run<T>(System.Func<System.Exception, bool>, Terminal.Gui.ConsoleDriver)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Run
    path: ../Terminal.Gui/Application.cs
    startLine: 408
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Runs the application by calling <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> 

    with a new instance of the specified <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref>-derived class.

    <p>

    Calling <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> first is not needed as this function will initialize the application.

    </p>

    <p>

    <xref href="Terminal.Gui.Application.Shutdown" data-throw-if-not-resolved="false"></xref> must be called when the application is closing (typically after Run&gt; has 

    returned) to ensure resources are cleaned up and terminal settings restored.

    </p>
  remarks: See <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> for more details.
  example: []
  syntax:
    content: 'public static void Run<T>(Func<Exception, bool> errorHandler = null, ConsoleDriver driver = null) where T : Toplevel, new()'
    parameters:
    - id: errorHandler
      type: System.Func{System.Exception,System.Boolean}
      description: ''
    - id: driver
      type: Terminal.Gui.ConsoleDriver
      description: >-
        The <xref href="Terminal.Gui.ConsoleDriver" data-throw-if-not-resolved="false"></xref> to use. If not specified the default driver for the
            platform will be used (<xref href="Terminal.Gui.WindowsDriver" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.CursesDriver" data-throw-if-not-resolved="false"></xref>, or <xref href="Terminal.Gui.NetDriver" data-throw-if-not-resolved="false"></xref>).
            Must be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> has already been called.
    typeParameters:
    - id: T
    content.vb: Public Shared Sub Run(Of T As {Toplevel, New})(errorHandler As Func(Of Exception, Boolean) = Nothing, driver As ConsoleDriver = Nothing)
  overload: Terminal.Gui.Application.Run*
  nameWithType.vb: Application.Run(Of T)(Func(Of Exception, Boolean), ConsoleDriver)
  fullName.vb: Terminal.Gui.Application.Run(Of T)(System.Func(Of System.Exception, Boolean), Terminal.Gui.ConsoleDriver)
  name.vb: Run(Of T)(Func(Of Exception, Boolean), ConsoleDriver)
- uid: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  commentId: M:Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  id: Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Run(Toplevel, Func<Exception, bool>)
  nameWithType: Application.Run(Toplevel, Func<Exception, bool>)
  fullName: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel, System.Func<System.Exception, bool>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Run
    path: ../Terminal.Gui/Application.cs
    startLine: 465
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Runs the main loop on the given <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> container.
  remarks: >-
    <p>
     This method is used to start processing events
     for the main application, but it is also used to
     run other modal <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>s such as <xref href="Terminal.Gui.Dialog" data-throw-if-not-resolved="false"></xref> boxes.
    </p>

    <p>
     To make a <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> stop execution, call <xref href="Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref>.
    </p>

    <p>
     Calling <xref href="Terminal.Gui.Application.Run(Terminal.Gui.Toplevel%2cSystem.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> is equivalent to calling <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref>,
     followed by <xref href="Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref>, and then calling <xref href="Terminal.Gui.Application.End(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref>.
    </p>

    <p>
     Alternatively, to have a program control the main loop and 
     process events manually, call <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> to set things up manually and then
     repeatedly call <xref href="Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> with the wait parameter set to false. By doing this
     the <xref href="Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> method will only process any pending events, timers, idle handlers and
     then return control immediately.
    </p>

    <p>
     RELEASE builds only: When <code class="paramref">errorHandler</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> any exceptions will be rethrown. 
     Otherwise, if <code class="paramref">errorHandler</code> will be called. If <code class="paramref">errorHandler</code> 
     returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> the <xref href="Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> will resume; otherwise 
     this method will exit.
    </p>
  example: []
  syntax:
    content: public static void Run(Toplevel view, Func<Exception, bool> errorHandler = null)
    parameters:
    - id: view
      type: Terminal.Gui.Toplevel
      description: The <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> to run as a modal.
    - id: errorHandler
      type: System.Func{System.Exception,System.Boolean}
      description: 'RELEASE builds only: Handler for any unhandled exceptions (resumes when returns true, rethrows when null).'
    content.vb: Public Shared Sub Run(view As Toplevel, errorHandler As Func(Of Exception, Boolean) = Nothing)
  overload: Terminal.Gui.Application.Run*
  nameWithType.vb: Application.Run(Toplevel, Func(Of Exception, Boolean))
  fullName.vb: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel, System.Func(Of System.Exception, Boolean))
  name.vb: Run(Toplevel, Func(Of Exception, Boolean))
- uid: Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  commentId: M:Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  id: AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: AddTimeout(TimeSpan, Func<bool>)
  nameWithType: Application.AddTimeout(TimeSpan, Func<bool>)
  fullName: Terminal.Gui.Application.AddTimeout(System.TimeSpan, System.Func<bool>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddTimeout
    path: ../Terminal.Gui/Application.cs
    startLine: 505
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds a timeout to the application.
  remarks: >-
    When time specified passes, the callback will be invoked.

    If the callback returns true, the timeout will be reset, repeating

    the invocation. If it returns false, the timeout will stop and be removed.


    The returned value is a token that can be used to stop the timeout

    by calling <xref href="Terminal.Gui.Application.RemoveTimeout(System.Object)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static object AddTimeout(TimeSpan time, Func<bool> callback)
    parameters:
    - id: time
      type: System.TimeSpan
    - id: callback
      type: System.Func{System.Boolean}
    return:
      type: System.Object
    content.vb: Public Shared Function AddTimeout(time As TimeSpan, callback As Func(Of Boolean)) As Object
  overload: Terminal.Gui.Application.AddTimeout*
  nameWithType.vb: Application.AddTimeout(TimeSpan, Func(Of Boolean))
  fullName.vb: Terminal.Gui.Application.AddTimeout(System.TimeSpan, System.Func(Of Boolean))
  name.vb: AddTimeout(TimeSpan, Func(Of Boolean))
- uid: Terminal.Gui.Application.RemoveTimeout(System.Object)
  commentId: M:Terminal.Gui.Application.RemoveTimeout(System.Object)
  id: RemoveTimeout(System.Object)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: RemoveTimeout(object)
  nameWithType: Application.RemoveTimeout(object)
  fullName: Terminal.Gui.Application.RemoveTimeout(object)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RemoveTimeout
    path: ../Terminal.Gui/Application.cs
    startLine: 515
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes a previously scheduled timeout
  remarks: The token parameter is the value returned by <xref href="Terminal.Gui.Application.AddTimeout(System.TimeSpan%2cSystem.Func%7bSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool RemoveTimeout(object token)
    parameters:
    - id: token
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Shared Function RemoveTimeout(token As Object) As Boolean
  overload: Terminal.Gui.Application.RemoveTimeout*
  nameWithType.vb: Application.RemoveTimeout(Object)
  fullName.vb: Terminal.Gui.Application.RemoveTimeout(Object)
  name.vb: RemoveTimeout(Object)
- uid: Terminal.Gui.Application.Invoke(System.Action)
  commentId: M:Terminal.Gui.Application.Invoke(System.Action)
  id: Invoke(System.Action)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Invoke(Action)
  nameWithType: Application.Invoke(Action)
  fullName: Terminal.Gui.Application.Invoke(System.Action)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Invoke
    path: ../Terminal.Gui/Application.cs
    startLine: 522
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Runs <code class="paramref">action</code> on the thread that is processing events
  example: []
  syntax:
    content: public static void Invoke(Action action)
    parameters:
    - id: action
      type: System.Action
      description: the action to be invoked on the main processing thread.
    content.vb: Public Shared Sub Invoke(action As Action)
  overload: Terminal.Gui.Application.Invoke*
- uid: Terminal.Gui.Application.Wakeup
  commentId: M:Terminal.Gui.Application.Wakeup
  id: Wakeup
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Wakeup()
  nameWithType: Application.Wakeup()
  fullName: Terminal.Gui.Application.Wakeup()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Wakeup
    path: ../Terminal.Gui/Application.cs
    startLine: 535
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Wakes up the running application that might be waiting on input.
  example: []
  syntax:
    content: public static void Wakeup()
    content.vb: Public Shared Sub Wakeup()
  overload: Terminal.Gui.Application.Wakeup*
- uid: Terminal.Gui.Application.Refresh
  commentId: M:Terminal.Gui.Application.Refresh
  id: Refresh
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: Application.Refresh()
  fullName: Terminal.Gui.Application.Refresh()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Refresh
    path: ../Terminal.Gui/Application.cs
    startLine: 540
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Triggers a refresh of the entire display.
  example: []
  syntax:
    content: public static void Refresh()
    content.vb: Public Shared Sub Refresh()
  overload: Terminal.Gui.Application.Refresh*
- uid: Terminal.Gui.Application.Iteration
  commentId: E:Terminal.Gui.Application.Iteration
  id: Iteration
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Iteration
  nameWithType: Application.Iteration
  fullName: Terminal.Gui.Application.Iteration
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Iteration
    path: ../Terminal.Gui/Application.cs
    startLine: 563
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: This event is raised on each iteration of the <xref href="Terminal.Gui.Application.MainLoop" data-throw-if-not-resolved="false"></xref>.
  remarks: See also <xref href="Terminal.Gui.Timeout" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static event EventHandler<IterationEventArgs> Iteration
    return:
      type: System.EventHandler{Terminal.Gui.IterationEventArgs}
    content.vb: Public Shared Event Iteration As EventHandler(Of IterationEventArgs)
- uid: Terminal.Gui.Application.EndAfterFirstIteration
  commentId: P:Terminal.Gui.Application.EndAfterFirstIteration
  id: EndAfterFirstIteration
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: EndAfterFirstIteration
  nameWithType: Application.EndAfterFirstIteration
  fullName: Terminal.Gui.Application.EndAfterFirstIteration
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EndAfterFirstIteration
    path: ../Terminal.Gui/Application.cs
    startLine: 575
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Set to true to cause <xref href="Terminal.Gui.Application.End(Terminal.Gui.RunState)" data-throw-if-not-resolved="false"></xref> to be called after the first iteration.

    Set to false (the default) to cause the application to continue running until Application.RequestStop () is called.
  example: []
  syntax:
    content: public static bool EndAfterFirstIteration { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property EndAfterFirstIteration As Boolean
  overload: Terminal.Gui.Application.EndAfterFirstIteration*
- uid: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  commentId: M:Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  id: RunLoop(Terminal.Gui.RunState)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: RunLoop(RunState)
  nameWithType: Application.RunLoop(RunState)
  fullName: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RunLoop
    path: ../Terminal.Gui/Application.cs
    startLine: 617
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: 'Building block API: Runs the <xref href="Terminal.Gui.Application.MainLoop" data-throw-if-not-resolved="false"></xref> for the created <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref>.'
  example: []
  syntax:
    content: public static void RunLoop(RunState state)
    parameters:
    - id: state
      type: Terminal.Gui.RunState
      description: The state returned by the <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: Public Shared Sub RunLoop(state As RunState)
  overload: Terminal.Gui.Application.RunLoop*
- uid: Terminal.Gui.Application.RunIteration(Terminal.Gui.RunState@,System.Boolean@)
  commentId: M:Terminal.Gui.Application.RunIteration(Terminal.Gui.RunState@,System.Boolean@)
  id: RunIteration(Terminal.Gui.RunState@,System.Boolean@)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: RunIteration(ref RunState, ref bool)
  nameWithType: Application.RunIteration(ref RunState, ref bool)
  fullName: Terminal.Gui.Application.RunIteration(ref Terminal.Gui.RunState, ref bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RunIteration
    path: ../Terminal.Gui/Application.cs
    startLine: 641
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Run one application iteration.
  example: []
  syntax:
    content: public static void RunIteration(ref RunState state, ref bool firstIteration)
    parameters:
    - id: state
      type: Terminal.Gui.RunState
      description: The state returned by <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref>.
    - id: firstIteration
      type: System.Boolean
      description: >-
        Set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this is the first run loop iteration. Upon return,
            it will be set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> if at least one iteration happened.
    content.vb: Public Shared Sub RunIteration(state As RunState, firstIteration As Boolean)
  overload: Terminal.Gui.Application.RunIteration*
  nameWithType.vb: Application.RunIteration(RunState, Boolean)
  fullName.vb: Terminal.Gui.Application.RunIteration(Terminal.Gui.RunState, Boolean)
  name.vb: RunIteration(RunState, Boolean)
- uid: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  commentId: M:Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  id: RequestStop(Terminal.Gui.Toplevel)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: RequestStop(Toplevel)
  nameWithType: Application.RequestStop(Toplevel)
  fullName: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RequestStop
    path: ../Terminal.Gui/Application.cs
    startLine: 713
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Stops running the most recent <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> or the <code class="paramref">top</code> if provided.
  remarks: >-
    <p>

    This will cause <xref href="Terminal.Gui.Application.Run(System.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> to return.

    </p>

    <p>
     Calling <xref href="Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> is equivalent to setting the <xref href="Terminal.Gui.Toplevel.Running" data-throw-if-not-resolved="false"></xref> property 
     on the currently running <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> to false.
    </p>
  example: []
  syntax:
    content: public static void RequestStop(Toplevel top = null)
    parameters:
    - id: top
      type: Terminal.Gui.Toplevel
      description: The <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> to stop.
    content.vb: Public Shared Sub RequestStop(top As Toplevel = Nothing)
  overload: Terminal.Gui.Application.RequestStop*
- uid: Terminal.Gui.Application.End(Terminal.Gui.RunState)
  commentId: M:Terminal.Gui.Application.End(Terminal.Gui.RunState)
  id: End(Terminal.Gui.RunState)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: End(RunState)
  nameWithType: Application.End(RunState)
  fullName: Terminal.Gui.Application.End(Terminal.Gui.RunState)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: End
    path: ../Terminal.Gui/Application.cs
    startLine: 788
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: 'Building block API: completes the execution of a <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> that was started with <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> .'
  example: []
  syntax:
    content: public static void End(RunState runState)
    parameters:
    - id: runState
      type: Terminal.Gui.RunState
      description: The <xref href="Terminal.Gui.RunState" data-throw-if-not-resolved="false"></xref> returned by the <xref href="Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)" data-throw-if-not-resolved="false"></xref> method.
    content.vb: Public Shared Sub [End](runState As RunState)
  overload: Terminal.Gui.Application.End*
- uid: Terminal.Gui.Application.Top
  commentId: P:Terminal.Gui.Application.Top
  id: Top
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: Application.Top
  fullName: Terminal.Gui.Application.Top
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Top
    path: ../Terminal.Gui/Application.cs
    startLine: 849
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> object used for the application on startup (<xref href="Terminal.Gui.Application.Top" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: public static Toplevel Top { get; }
    parameters: []
    return:
      type: Terminal.Gui.Toplevel
      description: The top.
    content.vb: Public Shared Property Top As Toplevel
  overload: Terminal.Gui.Application.Top*
- uid: Terminal.Gui.Application.Current
  commentId: P:Terminal.Gui.Application.Current
  id: Current
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: Application.Current
  fullName: Terminal.Gui.Application.Current
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Current
    path: ../Terminal.Gui/Application.cs
    startLine: 856
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The current <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> object. This is updated when <xref href="Terminal.Gui.Application.Run(System.Func%7bSystem.Exception%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref> 

    enters and leaves to point to the current <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static Toplevel Current { get; }
    parameters: []
    return:
      type: Terminal.Gui.Toplevel
      description: The current.
    content.vb: Public Shared Property Current As Toplevel
  overload: Terminal.Gui.Application.Current*
- uid: Terminal.Gui.Application.SizeChanging
  commentId: E:Terminal.Gui.Application.SizeChanging
  id: SizeChanging
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: SizeChanging
  nameWithType: Application.SizeChanging
  fullName: Terminal.Gui.Application.SizeChanging
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SizeChanging
    path: ../Terminal.Gui/Application.cs
    startLine: 973
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when the terminal's size changed. The new size of the terminal is provided.
  remarks: >-
    Event handlers can set <xref href="Terminal.Gui.SizeChangedEventArgs.Cancel" data-throw-if-not-resolved="false"></xref> to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>

    to prevent <xref href="Terminal.Gui.Application" data-throw-if-not-resolved="false"></xref> from changing it's size to match the new terminal size.
  example: []
  syntax:
    content: public static event EventHandler<SizeChangedEventArgs> SizeChanging
    return:
      type: System.EventHandler{Terminal.Gui.SizeChangedEventArgs}
    content.vb: Public Shared Event SizeChanging As EventHandler(Of SizeChangedEventArgs)
- uid: Terminal.Gui.Application.OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  commentId: M:Terminal.Gui.Application.OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  id: OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OnSizeChanging(SizeChangedEventArgs)
  nameWithType: Application.OnSizeChanging(SizeChangedEventArgs)
  fullName: Terminal.Gui.Application.OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnSizeChanging
    path: ../Terminal.Gui/Application.cs
    startLine: 981
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called when the application's size changes. Sets the size of all <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref>s and

    fires the <xref href="Terminal.Gui.Application.SizeChanging" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static bool OnSizeChanging(SizeChangedEventArgs args)
    parameters:
    - id: args
      type: Terminal.Gui.SizeChangedEventArgs
      description: The new size.
    return:
      type: System.Boolean
      description: <see lanword="true"></see>if the size was changed.
    content.vb: Public Shared Function OnSizeChanging(args As SizeChangedEventArgs) As Boolean
  overload: Terminal.Gui.Application.OnSizeChanging*
- uid: Terminal.Gui.Application.IsMouseDisabled
  commentId: P:Terminal.Gui.Application.IsMouseDisabled
  id: IsMouseDisabled
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: IsMouseDisabled
  nameWithType: Application.IsMouseDisabled
  fullName: Terminal.Gui.Application.IsMouseDisabled
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsMouseDisabled
    path: ../Terminal.Gui/Application.cs
    startLine: 1004
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Disable or enable the mouse. The mouse is enabled by default.
  example: []
  syntax:
    content: public static bool IsMouseDisabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsMouseDisabled As Boolean
  overload: Terminal.Gui.Application.IsMouseDisabled*
- uid: Terminal.Gui.Application.WantContinuousButtonPressedView
  commentId: P:Terminal.Gui.Application.WantContinuousButtonPressedView
  id: WantContinuousButtonPressedView
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: WantContinuousButtonPressedView
  nameWithType: Application.WantContinuousButtonPressedView
  fullName: Terminal.Gui.Application.WantContinuousButtonPressedView
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: WantContinuousButtonPressedView
    path: ../Terminal.Gui/Application.cs
    startLine: 1010
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The current <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> object that wants continuous mouse button pressed events.
  example: []
  syntax:
    content: public static View WantContinuousButtonPressedView { get; }
    parameters: []
    return:
      type: Terminal.Gui.View
    content.vb: Public Shared Property WantContinuousButtonPressedView As View
  overload: Terminal.Gui.Application.WantContinuousButtonPressedView*
- uid: Terminal.Gui.Application.MouseGrabView
  commentId: P:Terminal.Gui.Application.MouseGrabView
  id: MouseGrabView
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: MouseGrabView
  nameWithType: Application.MouseGrabView
  fullName: Terminal.Gui.Application.MouseGrabView
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseGrabView
    path: ../Terminal.Gui/Application.cs
    startLine: 1016
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the view that grabbed the mouse (e.g. for dragging). When this is set, all mouse events will be

    routed to this view until the view calls <xref href="Terminal.Gui.Application.UngrabMouse" data-throw-if-not-resolved="false"></xref> or the mouse is released.
  example: []
  syntax:
    content: public static View MouseGrabView { get; }
    parameters: []
    return:
      type: Terminal.Gui.View
    content.vb: Public Shared Property MouseGrabView As View
  overload: Terminal.Gui.Application.MouseGrabView*
- uid: Terminal.Gui.Application.GrabbingMouse
  commentId: E:Terminal.Gui.Application.GrabbingMouse
  id: GrabbingMouse
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: GrabbingMouse
  nameWithType: Application.GrabbingMouse
  fullName: Terminal.Gui.Application.GrabbingMouse
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GrabbingMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1021
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when a view wants to grab the mouse; can be canceled.
  example: []
  syntax:
    content: public static event EventHandler<GrabMouseEventArgs> GrabbingMouse
    return:
      type: System.EventHandler{Terminal.Gui.GrabMouseEventArgs}
    content.vb: Public Shared Event GrabbingMouse As EventHandler(Of GrabMouseEventArgs)
- uid: Terminal.Gui.Application.UnGrabbingMouse
  commentId: E:Terminal.Gui.Application.UnGrabbingMouse
  id: UnGrabbingMouse
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: UnGrabbingMouse
  nameWithType: Application.UnGrabbingMouse
  fullName: Terminal.Gui.Application.UnGrabbingMouse
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UnGrabbingMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1026
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked when a view wants un-grab the mouse; can be canceled.
  example: []
  syntax:
    content: public static event EventHandler<GrabMouseEventArgs> UnGrabbingMouse
    return:
      type: System.EventHandler{Terminal.Gui.GrabMouseEventArgs}
    content.vb: Public Shared Event UnGrabbingMouse As EventHandler(Of GrabMouseEventArgs)
- uid: Terminal.Gui.Application.GrabbedMouse
  commentId: E:Terminal.Gui.Application.GrabbedMouse
  id: GrabbedMouse
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: GrabbedMouse
  nameWithType: Application.GrabbedMouse
  fullName: Terminal.Gui.Application.GrabbedMouse
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GrabbedMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1031
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked after a view has grabbed the mouse.
  example: []
  syntax:
    content: public static event EventHandler<ViewEventArgs> GrabbedMouse
    return:
      type: System.EventHandler{Terminal.Gui.ViewEventArgs}
    content.vb: Public Shared Event GrabbedMouse As EventHandler(Of ViewEventArgs)
- uid: Terminal.Gui.Application.UnGrabbedMouse
  commentId: E:Terminal.Gui.Application.UnGrabbedMouse
  id: UnGrabbedMouse
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: UnGrabbedMouse
  nameWithType: Application.UnGrabbedMouse
  fullName: Terminal.Gui.Application.UnGrabbedMouse
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UnGrabbedMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1036
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invoked after a view has un-grabbed the mouse.
  example: []
  syntax:
    content: public static event EventHandler<ViewEventArgs> UnGrabbedMouse
    return:
      type: System.EventHandler{Terminal.Gui.ViewEventArgs}
    content.vb: Public Shared Event UnGrabbedMouse As EventHandler(Of ViewEventArgs)
- uid: Terminal.Gui.Application.GrabMouse(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Application.GrabMouse(Terminal.Gui.View)
  id: GrabMouse(Terminal.Gui.View)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: GrabMouse(View)
  nameWithType: Application.GrabMouse(View)
  fullName: Terminal.Gui.Application.GrabMouse(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GrabMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1042
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Grabs the mouse, forcing all mouse events to be routed to the specified view until <xref href="Terminal.Gui.Application.UngrabMouse" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public static void GrabMouse(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: View that will receive all mouse events until <xref href="Terminal.Gui.Application.UngrabMouse" data-throw-if-not-resolved="false"></xref> is invoked.
    content.vb: Public Shared Sub GrabMouse(view As View)
  overload: Terminal.Gui.Application.GrabMouse*
- uid: Terminal.Gui.Application.UngrabMouse
  commentId: M:Terminal.Gui.Application.UngrabMouse
  id: UngrabMouse
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: UngrabMouse()
  nameWithType: Application.UngrabMouse()
  fullName: Terminal.Gui.Application.UngrabMouse()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UngrabMouse
    path: ../Terminal.Gui/Application.cs
    startLine: 1056
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Releases the mouse grab, so mouse events will be routed to the view on which the mouse is.
  example: []
  syntax:
    content: public static void UngrabMouse()
    content.vb: Public Shared Sub UngrabMouse()
  overload: Terminal.Gui.Application.UngrabMouse*
- uid: Terminal.Gui.Application.MouseEvent
  commentId: E:Terminal.Gui.Application.MouseEvent
  id: MouseEvent
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: MouseEvent
  nameWithType: Application.MouseEvent
  fullName: Terminal.Gui.Application.MouseEvent
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseEvent
    path: ../Terminal.Gui/Application.cs
    startLine: 1118
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when a mouse move or click occurs. Coordinates are screen relative.
  remarks: >-
    <p>

    Use this event to receive mouse events in screen coordinates. Use <xref href="Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)" data-throw-if-not-resolved="false"></xref> to receive

    mouse events relative to a <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>'s bounds.

    </p>

    <p>

    The <xref href="Terminal.Gui.MouseEvent.View" data-throw-if-not-resolved="false"></xref> will contain the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> that contains the mouse coordinates.

    </p>
  example: []
  syntax:
    content: public static event EventHandler<MouseEventEventArgs> MouseEvent
    return:
      type: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
    content.vb: Public Shared Event MouseEvent As EventHandler(Of MouseEventEventArgs)
- uid: Terminal.Gui.Application.OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  commentId: M:Terminal.Gui.Application.OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  id: OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OnMouseEvent(MouseEventEventArgs)
  nameWithType: Application.OnMouseEvent(MouseEventEventArgs)
  fullName: Terminal.Gui.Application.OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnMouseEvent
    path: ../Terminal.Gui/Application.cs
    startLine: 1127
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called when a mouse event occurs. Fires the <xref href="Terminal.Gui.Application.MouseEvent" data-throw-if-not-resolved="false"></xref> event.
  remarks: This method can be used to simulate a mouse event, e.g. in unit tests.
  example: []
  syntax:
    content: public static void OnMouseEvent(MouseEventEventArgs a)
    parameters:
    - id: a
      type: Terminal.Gui.MouseEventEventArgs
      description: The mouse event with coordinates relative to the screen.
    content.vb: Public Shared Sub OnMouseEvent(a As MouseEventEventArgs)
  overload: Terminal.Gui.Application.OnMouseEvent*
- uid: Terminal.Gui.Application.AlternateForwardKey
  commentId: P:Terminal.Gui.Application.AlternateForwardKey
  id: AlternateForwardKey
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: AlternateForwardKey
  nameWithType: Application.AlternateForwardKey
  fullName: Terminal.Gui.Application.AlternateForwardKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AlternateForwardKey
    path: ../Terminal.Gui/Application.cs
    startLine: 1302
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Alternative key to navigate forwards through views. Ctrl+Tab is the primary key.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(KeyJsonConverter))]

      public static Key AlternateForwardKey { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: >-
      <JsonConverter(GetType(KeyJsonConverter))>

      Public Shared Property AlternateForwardKey As Key
  overload: Terminal.Gui.Application.AlternateForwardKey*
- uid: Terminal.Gui.Application.AlternateBackwardKey
  commentId: P:Terminal.Gui.Application.AlternateBackwardKey
  id: AlternateBackwardKey
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: AlternateBackwardKey
  nameWithType: Application.AlternateBackwardKey
  fullName: Terminal.Gui.Application.AlternateBackwardKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AlternateBackwardKey
    path: ../Terminal.Gui/Application.cs
    startLine: 1326
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Alternative key to navigate backwards through views. Shift+Ctrl+Tab is the primary key.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(KeyJsonConverter))]

      public static Key AlternateBackwardKey { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: >-
      <JsonConverter(GetType(KeyJsonConverter))>

      Public Shared Property AlternateBackwardKey As Key
  overload: Terminal.Gui.Application.AlternateBackwardKey*
- uid: Terminal.Gui.Application.QuitKey
  commentId: P:Terminal.Gui.Application.QuitKey
  id: QuitKey
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: QuitKey
  nameWithType: Application.QuitKey
  fullName: Terminal.Gui.Application.QuitKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: QuitKey
    path: ../Terminal.Gui/Application.cs
    startLine: 1350
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the key to quit the application.
  example: []
  syntax:
    content: >-
      [JsonConverter(typeof(KeyJsonConverter))]

      public static Key QuitKey { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: >-
      <JsonConverter(GetType(KeyJsonConverter))>

      Public Shared Property QuitKey As Key
  overload: Terminal.Gui.Application.QuitKey*
- uid: Terminal.Gui.Application.KeyPressed
  commentId: E:Terminal.Gui.Application.KeyPressed
  id: KeyPressed
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: KeyPressed
  nameWithType: Application.KeyPressed
  fullName: Terminal.Gui.Application.KeyPressed
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyPressed
    path: ../Terminal.Gui/Application.cs
    startLine: 1377
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event fired after a key has been pressed and released.

    <p>Set <xref href="Terminal.Gui.KeyEventEventArgs.Handled" data-throw-if-not-resolved="false"></xref> to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to suppress the event.</p>
  remarks: >-
    All drivers support firing the <xref href="Terminal.Gui.Application.KeyPressed" data-throw-if-not-resolved="false"></xref> event. Some drivers (Curses)

    do not support firing the <xref href="Terminal.Gui.Application.KeyDown" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.Application.KeyUp" data-throw-if-not-resolved="false"></xref> events.
  example: []
  syntax:
    content: public static event EventHandler<KeyEventEventArgs> KeyPressed
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Shared Event KeyPressed As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.Application.OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  commentId: M:Terminal.Gui.Application.OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  id: OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OnKeyPressed(KeyEventEventArgs)
  nameWithType: Application.OnKeyPressed(KeyEventEventArgs)
  fullName: Terminal.Gui.Application.OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnKeyPressed
    path: ../Terminal.Gui/Application.cs
    startLine: 1388
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called after a key has been pressed and released. Fires the <xref href="Terminal.Gui.Application.KeyPressed" data-throw-if-not-resolved="false"></xref> event.

    <p>

    Called for new KeyPressed events before any processing is performed or

    views evaluate. Use for global key handling and/or debugging.

    </p>
  example: []
  syntax:
    content: public static bool OnKeyPressed(KeyEventEventArgs a)
    parameters:
    - id: a
      type: Terminal.Gui.KeyEventEventArgs
      description: ''
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the key was handled.
    content.vb: Public Shared Function OnKeyPressed(a As KeyEventEventArgs) As Boolean
  overload: Terminal.Gui.Application.OnKeyPressed*
- uid: Terminal.Gui.Application.KeyDown
  commentId: E:Terminal.Gui.Application.KeyDown
  id: KeyDown
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: KeyDown
  nameWithType: Application.KeyDown
  fullName: Terminal.Gui.Application.KeyDown
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyDown
    path: ../Terminal.Gui/Application.cs
    startLine: 1430
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when a key is pressed (and not yet released).
  remarks: >-
    All drivers support firing the <xref href="Terminal.Gui.Application.KeyPressed" data-throw-if-not-resolved="false"></xref> event. Some drivers (Curses)

    do not support firing the <xref href="Terminal.Gui.Application.KeyDown" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.Application.KeyUp" data-throw-if-not-resolved="false"></xref> events.
  example: []
  syntax:
    content: public static event EventHandler<KeyEventEventArgs> KeyDown
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Shared Event KeyDown As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.Application.OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  commentId: M:Terminal.Gui.Application.OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  id: OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OnKeyDown(KeyEventEventArgs)
  nameWithType: Application.OnKeyDown(KeyEventEventArgs)
  fullName: Terminal.Gui.Application.OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnKeyDown
    path: ../Terminal.Gui/Application.cs
    startLine: 1436
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called when a key is pressed (and not yet released). Fires the <xref href="Terminal.Gui.Application.KeyDown" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static void OnKeyDown(KeyEventEventArgs a)
    parameters:
    - id: a
      type: Terminal.Gui.KeyEventEventArgs
      description: ''
    content.vb: Public Shared Sub OnKeyDown(a As KeyEventEventArgs)
  overload: Terminal.Gui.Application.OnKeyDown*
- uid: Terminal.Gui.Application.KeyUp
  commentId: E:Terminal.Gui.Application.KeyUp
  id: KeyUp
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: KeyUp
  nameWithType: Application.KeyUp
  fullName: Terminal.Gui.Application.KeyUp
  type: Event
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyUp
    path: ../Terminal.Gui/Application.cs
    startLine: 1455
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when a key is released.
  remarks: >-
    All drivers support firing the <xref href="Terminal.Gui.Application.KeyPressed" data-throw-if-not-resolved="false"></xref> event. Some drivers (Curses)

    do not support firing the <xref href="Terminal.Gui.Application.KeyDown" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.Application.KeyUp" data-throw-if-not-resolved="false"></xref> events.
  example: []
  syntax:
    content: public static event EventHandler<KeyEventEventArgs> KeyUp
    return:
      type: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
    content.vb: Public Shared Event KeyUp As EventHandler(Of KeyEventEventArgs)
- uid: Terminal.Gui.Application.OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  commentId: M:Terminal.Gui.Application.OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  id: OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OnKeyUp(KeyEventEventArgs)
  nameWithType: Application.OnKeyUp(KeyEventEventArgs)
  fullName: Terminal.Gui.Application.OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Application.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnKeyUp
    path: ../Terminal.Gui/Application.cs
    startLine: 1461
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called when a key is released. Fires the <xref href="Terminal.Gui.Application.KeyUp" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static void OnKeyUp(KeyEventEventArgs a)
    parameters:
    - id: a
      type: Terminal.Gui.KeyEventEventArgs
      description: ''
    content.vb: Public Shared Sub OnKeyUp(a As KeyEventEventArgs)
  overload: Terminal.Gui.Application.OnKeyUp*
- uid: Terminal.Gui.Application.OverlappedChildren
  commentId: P:Terminal.Gui.Application.OverlappedChildren
  id: OverlappedChildren
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OverlappedChildren
  nameWithType: Application.OverlappedChildren
  fullName: Terminal.Gui.Application.OverlappedChildren
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OverlappedChildren
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 28
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the list of the Overlapped children which are not modal <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> from the <xref href="Terminal.Gui.Application.OverlappedTop" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static List<Toplevel> OverlappedChildren { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Terminal.Gui.Toplevel}
    content.vb: Public Shared ReadOnly Property OverlappedChildren As List(Of Toplevel)
  overload: Terminal.Gui.Application.OverlappedChildren*
- uid: Terminal.Gui.Application.OverlappedTop
  commentId: P:Terminal.Gui.Application.OverlappedTop
  id: OverlappedTop
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OverlappedTop
  nameWithType: Application.OverlappedTop
  fullName: Terminal.Gui.Application.OverlappedTop
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OverlappedTop
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 46
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The <xref href="Terminal.Gui.Toplevel" data-throw-if-not-resolved="false"></xref> object used for the application on startup which <xref href="Terminal.Gui.Toplevel.IsOverlappedContainer" data-throw-if-not-resolved="false"></xref> is true.
  example: []
  syntax:
    content: public static Toplevel OverlappedTop { get; }
    parameters: []
    return:
      type: Terminal.Gui.Toplevel
    content.vb: Public Shared ReadOnly Property OverlappedTop As Toplevel
  overload: Terminal.Gui.Application.OverlappedTop*
- uid: Terminal.Gui.Application.OverlappedMoveNext
  commentId: M:Terminal.Gui.Application.OverlappedMoveNext
  id: OverlappedMoveNext
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OverlappedMoveNext()
  nameWithType: Application.OverlappedMoveNext()
  fullName: Terminal.Gui.Application.OverlappedMoveNext()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OverlappedMoveNext
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 123
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Move to the next Overlapped child from the <xref href="Terminal.Gui.Application.OverlappedTop" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void OverlappedMoveNext()
    content.vb: Public Shared Sub OverlappedMoveNext()
  overload: Terminal.Gui.Application.OverlappedMoveNext*
- uid: Terminal.Gui.Application.OverlappedMovePrevious
  commentId: M:Terminal.Gui.Application.OverlappedMovePrevious
  id: OverlappedMovePrevious
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: OverlappedMovePrevious()
  nameWithType: Application.OverlappedMovePrevious()
  fullName: Terminal.Gui.Application.OverlappedMovePrevious()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OverlappedMovePrevious
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 146
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Move to the previous Overlapped child from the <xref href="Terminal.Gui.Application.OverlappedTop" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void OverlappedMovePrevious()
    content.vb: Public Shared Sub OverlappedMovePrevious()
  overload: Terminal.Gui.Application.OverlappedMovePrevious*
- uid: Terminal.Gui.Application.MoveToOverlappedChild(Terminal.Gui.Toplevel)
  commentId: M:Terminal.Gui.Application.MoveToOverlappedChild(Terminal.Gui.Toplevel)
  id: MoveToOverlappedChild(Terminal.Gui.Toplevel)
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: MoveToOverlappedChild(Toplevel)
  nameWithType: Application.MoveToOverlappedChild(Toplevel)
  fullName: Terminal.Gui.Application.MoveToOverlappedChild(Terminal.Gui.Toplevel)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MoveToOverlappedChild
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 171
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Move to the next Overlapped child from the <xref href="Terminal.Gui.Application.OverlappedTop" data-throw-if-not-resolved="false"></xref> and set it as the <xref href="Terminal.Gui.Application.Top" data-throw-if-not-resolved="false"></xref> if it is not already.
  example: []
  syntax:
    content: public static bool MoveToOverlappedChild(Toplevel top)
    parameters:
    - id: top
      type: Terminal.Gui.Toplevel
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function MoveToOverlappedChild(top As Toplevel) As Boolean
  overload: Terminal.Gui.Application.MoveToOverlappedChild*
- uid: Terminal.Gui.Application.BringOverlappedTopToFront
  commentId: M:Terminal.Gui.Application.BringOverlappedTopToFront
  id: BringOverlappedTopToFront
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: BringOverlappedTopToFront()
  nameWithType: Application.BringOverlappedTopToFront()
  fullName: Terminal.Gui.Application.BringOverlappedTopToFront()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BringOverlappedTopToFront
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 187
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Brings the superview of the most focused overlapped view is on front.
  example: []
  syntax:
    content: public static void BringOverlappedTopToFront()
    content.vb: Public Shared Sub BringOverlappedTopToFront()
  overload: Terminal.Gui.Application.BringOverlappedTopToFront*
- uid: Terminal.Gui.Application.GetTopOverlappedChild(System.Type,System.String[])
  commentId: M:Terminal.Gui.Application.GetTopOverlappedChild(System.Type,System.String[])
  id: GetTopOverlappedChild(System.Type,System.String[])
  parent: Terminal.Gui.Application
  langs:
  - csharp
  - vb
  name: GetTopOverlappedChild(Type, string[])
  nameWithType: Application.GetTopOverlappedChild(Type, string[])
  fullName: Terminal.Gui.Application.GetTopOverlappedChild(System.Type, string[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ToplevelOverlapped.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetTopOverlappedChild
    path: ../Terminal.Gui/Views/ToplevelOverlapped.cs
    startLine: 205
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the current visible Toplevel overlapped child that matches the arguments pattern.
  example: []
  syntax:
    content: public static Toplevel GetTopOverlappedChild(Type type = null, string[] exclude = null)
    parameters:
    - id: type
      type: System.Type
      description: The type.
    - id: exclude
      type: System.String[]
      description: The strings to exclude.
    return:
      type: Terminal.Gui.Toplevel
      description: The matched view.
    content.vb: Public Shared Function GetTopOverlappedChild(type As Type = Nothing, exclude As String() = Nothing) As Toplevel
  overload: Terminal.Gui.Application.GetTopOverlappedChild*
  nameWithType.vb: Application.GetTopOverlappedChild(Type, String())
  fullName.vb: Terminal.Gui.Application.GetTopOverlappedChild(System.Type, String())
  name.vb: GetTopOverlappedChild(Type, String())
references:
- uid: Terminal.Gui.MainLoop
  commentId: T:Terminal.Gui.MainLoop
  href: Terminal.Gui.MainLoop.html
  name: MainLoop
  nameWithType: MainLoop
  fullName: Terminal.Gui.MainLoop
- uid: Terminal.Gui.Application.MainLoop
  commentId: P:Terminal.Gui.Application.MainLoop
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.MainLoop
  name: MainLoop
  nameWithType: Application.MainLoop
  fullName: Terminal.Gui.Application.MainLoop
- uid: Terminal.Gui.Application.Iteration
  commentId: E:Terminal.Gui.Application.Iteration
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Iteration
  name: Iteration
  nameWithType: Application.Iteration
  fullName: Terminal.Gui.Application.Iteration
- uid: System.Threading.SynchronizationContext
  commentId: T:System.Threading.SynchronizationContext
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.synchronizationcontext
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.ConsoleDriver
  commentId: T:Terminal.Gui.ConsoleDriver
  parent: Terminal.Gui
  href: Terminal.Gui.ConsoleDriver.html
  name: ConsoleDriver
  nameWithType: ConsoleDriver
  fullName: Terminal.Gui.ConsoleDriver
- uid: Terminal.Gui.Application.UseSystemConsole
  commentId: P:Terminal.Gui.Application.UseSystemConsole
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.UseSystemConsole
  name: UseSystemConsole
  nameWithType: Application.UseSystemConsole
  fullName: Terminal.Gui.Application.UseSystemConsole
- uid: Terminal.Gui.Application.Driver*
  commentId: Overload:Terminal.Gui.Application.Driver
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Driver
  name: Driver
  nameWithType: Application.Driver
  fullName: Terminal.Gui.Application.Driver
- uid: Terminal.Gui.NetDriver
  commentId: T:Terminal.Gui.NetDriver
  href: Terminal.Gui.NetDriver.html
  name: NetDriver
  nameWithType: NetDriver
  fullName: Terminal.Gui.NetDriver
- uid: Terminal.Gui.Application.UseSystemConsole*
  commentId: Overload:Terminal.Gui.Application.UseSystemConsole
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.UseSystemConsole
  name: UseSystemConsole
  nameWithType: Application.UseSystemConsole
  fullName: Terminal.Gui.Application.UseSystemConsole
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.Application.Driver
  commentId: P:Terminal.Gui.Application.Driver
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Driver
  name: Driver
  nameWithType: Application.Driver
  fullName: Terminal.Gui.Application.Driver
- uid: Terminal.Gui.ColorName
  commentId: T:Terminal.Gui.ColorName
  parent: Terminal.Gui
  href: Terminal.Gui.ColorName.html
  name: ColorName
  nameWithType: ColorName
  fullName: Terminal.Gui.ColorName
- uid: Terminal.Gui.Application.Force16Colors*
  commentId: Overload:Terminal.Gui.Application.Force16Colors
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Force16Colors
  name: Force16Colors
  nameWithType: Application.Force16Colors
  fullName: Terminal.Gui.Application.Force16Colors
- uid: Terminal.Gui.Application.SupportedCultures*
  commentId: Overload:Terminal.Gui.Application.SupportedCultures
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.SupportedCultures
  name: SupportedCultures
  nameWithType: Application.SupportedCultures
  fullName: Terminal.Gui.Application.SupportedCultures
- uid: System.Collections.Generic.List{System.Globalization.CultureInfo}
  commentId: T:System.Collections.Generic.List{System.Globalization.CultureInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CultureInfo>
  nameWithType: List<CultureInfo>
  fullName: System.Collections.Generic.List<System.Globalization.CultureInfo>
  nameWithType.vb: List(Of CultureInfo)
  fullName.vb: System.Collections.Generic.List(Of System.Globalization.CultureInfo)
  name.vb: List(Of CultureInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Terminal.Gui.Application.Shutdown
  commentId: M:Terminal.Gui.Application.Shutdown
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: Terminal.Gui.Application.Shutdown()
  spec.csharp:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  - name: (
  - name: )
- uid: Terminal.Gui.Toplevel
  commentId: T:Terminal.Gui.Toplevel
  parent: Terminal.Gui
  href: Terminal.Gui.Toplevel.html
  name: Toplevel
  nameWithType: Toplevel
  fullName: Terminal.Gui.Toplevel
- uid: Terminal.Gui.Application.Top
  commentId: P:Terminal.Gui.Application.Top
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Top
  name: Top
  nameWithType: Application.Top
  fullName: Terminal.Gui.Application.Top
- uid: Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  commentId: M:Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  isExternal: true
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  name: Run(Func<Exception, bool>)
  nameWithType: Application.Run(Func<Exception, bool>)
  fullName: Terminal.Gui.Application.Run(System.Func<System.Exception, bool>)
  nameWithType.vb: Application.Run(Func(Of Exception, Boolean))
  fullName.vb: Terminal.Gui.Application.Run(System.Func(Of System.Exception, Boolean))
  name.vb: Run(Func(Of Exception, Boolean))
  spec.csharp:
  - uid: Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  isExternal: true
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  name: Run<T>(Func<Exception, bool>, ConsoleDriver)
  nameWithType: Application.Run<T>(Func<Exception, bool>, ConsoleDriver)
  fullName: Terminal.Gui.Application.Run<T>(System.Func<System.Exception, bool>, Terminal.Gui.ConsoleDriver)
  nameWithType.vb: Application.Run(Of T)(Func(Of Exception, Boolean), ConsoleDriver)
  fullName.vb: Terminal.Gui.Application.Run(Of T)(System.Func(Of System.Exception, Boolean), Terminal.Gui.ConsoleDriver)
  name.vb: Run(Of T)(Func(Of Exception, Boolean), ConsoleDriver)
  spec.csharp:
  - uid: Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run``1(System.Func{System.Exception,System.Boolean},Terminal.Gui.ConsoleDriver)
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
- uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  name: Init(ConsoleDriver)
  nameWithType: Application.Init(ConsoleDriver)
  fullName: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  spec.csharp:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
- uid: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  commentId: M:Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  isExternal: true
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  name: Run(Toplevel, Func<Exception, bool>)
  nameWithType: Application.Run(Toplevel, Func<Exception, bool>)
  fullName: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel, System.Func<System.Exception, bool>)
  nameWithType.vb: Application.Run(Toplevel, Func(Of Exception, Boolean))
  fullName.vb: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel, System.Func(Of System.Exception, Boolean))
  name.vb: Run(Toplevel, Func(Of Exception, Boolean))
  spec.csharp:
  - uid: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
    name: Run
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(Terminal.Gui.Toplevel,System.Func{System.Exception,System.Boolean})
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Terminal.Gui.WindowsDriver
  commentId: T:Terminal.Gui.WindowsDriver
  href: Terminal.Gui.WindowsDriver.html
  name: WindowsDriver
  nameWithType: WindowsDriver
  fullName: Terminal.Gui.WindowsDriver
- uid: Terminal.Gui.CursesDriver
  commentId: T:Terminal.Gui.CursesDriver
  href: Terminal.Gui.CursesDriver.html
  name: CursesDriver
  nameWithType: CursesDriver
  fullName: Terminal.Gui.CursesDriver
- uid: Terminal.Gui.Application.Init*
  commentId: Overload:Terminal.Gui.Application.Init
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  name: Init
  nameWithType: Application.Init
  fullName: Terminal.Gui.Application.Init
- uid: Terminal.Gui.Application.Shutdown*
  commentId: Overload:Terminal.Gui.Application.Shutdown
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  name: Shutdown
  nameWithType: Application.Shutdown
  fullName: Terminal.Gui.Application.Shutdown
- uid: Terminal.Gui.RunState
  commentId: T:Terminal.Gui.RunState
  parent: Terminal.Gui
  href: Terminal.Gui.RunState.html
  name: RunState
  nameWithType: RunState
  fullName: Terminal.Gui.RunState
- uid: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  commentId: M:Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  name: Begin(Toplevel)
  nameWithType: Application.Begin(Toplevel)
  fullName: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  spec.csharp:
  - uid: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
    name: Begin
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
    name: Begin
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: )
- uid: Terminal.Gui.Application.EndAfterFirstIteration
  commentId: P:Terminal.Gui.Application.EndAfterFirstIteration
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.EndAfterFirstIteration
  name: EndAfterFirstIteration
  nameWithType: Application.EndAfterFirstIteration
  fullName: Terminal.Gui.Application.EndAfterFirstIteration
- uid: Terminal.Gui.Application.NotifyStopRunState
  commentId: E:Terminal.Gui.Application.NotifyStopRunState
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.NotifyStopRunState
  name: NotifyStopRunState
  nameWithType: Application.NotifyStopRunState
  fullName: Terminal.Gui.Application.NotifyStopRunState
- uid: System.EventHandler{Terminal.Gui.RunStateEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.RunStateEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<RunStateEventArgs>
  nameWithType: EventHandler<RunStateEventArgs>
  fullName: System.EventHandler<Terminal.Gui.RunStateEventArgs>
  nameWithType.vb: EventHandler(Of RunStateEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.RunStateEventArgs)
  name.vb: EventHandler(Of RunStateEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.RunStateEventArgs
    name: RunStateEventArgs
    href: Terminal.Gui.RunStateEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.RunStateEventArgs
    name: RunStateEventArgs
    href: Terminal.Gui.RunStateEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Terminal.Gui.Application.End(Terminal.Gui.RunState)
  commentId: M:Terminal.Gui.Application.End(Terminal.Gui.RunState)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.End(Terminal.Gui.RunState)
  name: End(RunState)
  nameWithType: Application.End(RunState)
  fullName: Terminal.Gui.Application.End(Terminal.Gui.RunState)
  spec.csharp:
  - uid: Terminal.Gui.Application.End(Terminal.Gui.RunState)
    name: End
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.End(Terminal.Gui.RunState)
  - name: (
  - uid: Terminal.Gui.RunState
    name: RunState
    href: Terminal.Gui.RunState.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.End(Terminal.Gui.RunState)
    name: End
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.End(Terminal.Gui.RunState)
  - name: (
  - uid: Terminal.Gui.RunState
    name: RunState
    href: Terminal.Gui.RunState.html
  - name: )
- uid: System.EventHandler{Terminal.Gui.ToplevelEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.ToplevelEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ToplevelEventArgs>
  nameWithType: EventHandler<ToplevelEventArgs>
  fullName: System.EventHandler<Terminal.Gui.ToplevelEventArgs>
  nameWithType.vb: EventHandler(Of ToplevelEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.ToplevelEventArgs)
  name.vb: EventHandler(Of ToplevelEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.ToplevelEventArgs
    name: ToplevelEventArgs
    href: Terminal.Gui.ToplevelEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ToplevelEventArgs
    name: ToplevelEventArgs
    href: Terminal.Gui.ToplevelEventArgs.html
  - name: )
- uid: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  commentId: M:Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  name: RunLoop(RunState)
  nameWithType: Application.RunLoop(RunState)
  fullName: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  spec.csharp:
  - uid: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
    name: RunLoop
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  - name: (
  - uid: Terminal.Gui.RunState
    name: RunState
    href: Terminal.Gui.RunState.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
    name: RunLoop
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  - name: (
  - uid: Terminal.Gui.RunState
    name: RunState
    href: Terminal.Gui.RunState.html
  - name: )
- uid: Terminal.Gui.Application.Begin*
  commentId: Overload:Terminal.Gui.Application.Begin
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Begin(Terminal.Gui.Toplevel)
  name: Begin
  nameWithType: Application.Begin
  fullName: Terminal.Gui.Application.Begin
- uid: Terminal.Gui.Application.Run*
  commentId: Overload:Terminal.Gui.Application.Run
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Run(System.Func{System.Exception,System.Boolean})
  name: Run
  nameWithType: Application.Run
  fullName: Terminal.Gui.Application.Run
- uid: System.Func{System.Exception,System.Boolean}
  commentId: T:System.Func{System.Exception,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<Exception, bool>
  nameWithType: Func<Exception, bool>
  fullName: System.Func<System.Exception, bool>
  nameWithType.vb: Func(Of Exception, Boolean)
  fullName.vb: System.Func(Of System.Exception, Boolean)
  name.vb: Func(Of Exception, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  href: Terminal.Gui.View.html
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.Dialog
  commentId: T:Terminal.Gui.Dialog
  parent: Terminal.Gui
  href: Terminal.Gui.Dialog.html
  name: Dialog
  nameWithType: Dialog
  fullName: Terminal.Gui.Dialog
- uid: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  commentId: M:Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  name: RequestStop(Toplevel)
  nameWithType: Application.RequestStop(Toplevel)
  fullName: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  spec.csharp:
  - uid: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
    name: RequestStop
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
    name: RequestStop
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  - name: (
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: )
- uid: Terminal.Gui.Application.RemoveTimeout(System.Object)
  commentId: M:Terminal.Gui.Application.RemoveTimeout(System.Object)
  isExternal: true
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RemoveTimeout(System.Object)
  name: RemoveTimeout(object)
  nameWithType: Application.RemoveTimeout(object)
  fullName: Terminal.Gui.Application.RemoveTimeout(object)
  nameWithType.vb: Application.RemoveTimeout(Object)
  fullName.vb: Terminal.Gui.Application.RemoveTimeout(Object)
  name.vb: RemoveTimeout(Object)
  spec.csharp:
  - uid: Terminal.Gui.Application.RemoveTimeout(System.Object)
    name: RemoveTimeout
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RemoveTimeout(System.Object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.RemoveTimeout(System.Object)
    name: RemoveTimeout
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.RemoveTimeout(System.Object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Terminal.Gui.Application.AddTimeout*
  commentId: Overload:Terminal.Gui.Application.AddTimeout
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  name: AddTimeout
  nameWithType: Application.AddTimeout
  fullName: Terminal.Gui.Application.AddTimeout
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  commentId: M:Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  isExternal: true
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  name: AddTimeout(TimeSpan, Func<bool>)
  nameWithType: Application.AddTimeout(TimeSpan, Func<bool>)
  fullName: Terminal.Gui.Application.AddTimeout(System.TimeSpan, System.Func<bool>)
  nameWithType.vb: Application.AddTimeout(TimeSpan, Func(Of Boolean))
  fullName.vb: Terminal.Gui.Application.AddTimeout(System.TimeSpan, System.Func(Of Boolean))
  name.vb: AddTimeout(TimeSpan, Func(Of Boolean))
  spec.csharp:
  - uid: Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
    name: AddTimeout
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
    name: AddTimeout
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.AddTimeout(System.TimeSpan,System.Func{System.Boolean})
  - name: (
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: Terminal.Gui.Application.RemoveTimeout*
  commentId: Overload:Terminal.Gui.Application.RemoveTimeout
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RemoveTimeout(System.Object)
  name: RemoveTimeout
  nameWithType: Application.RemoveTimeout
  fullName: Terminal.Gui.Application.RemoveTimeout
- uid: Terminal.Gui.Application.Invoke*
  commentId: Overload:Terminal.Gui.Application.Invoke
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Invoke(System.Action)
  name: Invoke
  nameWithType: Application.Invoke
  fullName: Terminal.Gui.Application.Invoke
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: Terminal.Gui.Application.Wakeup*
  commentId: Overload:Terminal.Gui.Application.Wakeup
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Wakeup
  name: Wakeup
  nameWithType: Application.Wakeup
  fullName: Terminal.Gui.Application.Wakeup
- uid: Terminal.Gui.Application.Refresh*
  commentId: Overload:Terminal.Gui.Application.Refresh
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Refresh
  name: Refresh
  nameWithType: Application.Refresh
  fullName: Terminal.Gui.Application.Refresh
- uid: Terminal.Gui.Timeout
  commentId: T:Terminal.Gui.Timeout
  href: Terminal.Gui.Timeout.html
  name: Timeout
  nameWithType: Timeout
  fullName: Terminal.Gui.Timeout
- uid: System.EventHandler{Terminal.Gui.IterationEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.IterationEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<IterationEventArgs>
  nameWithType: EventHandler<IterationEventArgs>
  fullName: System.EventHandler<Terminal.Gui.IterationEventArgs>
  nameWithType.vb: EventHandler(Of IterationEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.IterationEventArgs)
  name.vb: EventHandler(Of IterationEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.IterationEventArgs
    name: IterationEventArgs
    href: Terminal.Gui.IterationEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.IterationEventArgs
    name: IterationEventArgs
    href: Terminal.Gui.IterationEventArgs.html
  - name: )
- uid: Terminal.Gui.Application.EndAfterFirstIteration*
  commentId: Overload:Terminal.Gui.Application.EndAfterFirstIteration
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.EndAfterFirstIteration
  name: EndAfterFirstIteration
  nameWithType: Application.EndAfterFirstIteration
  fullName: Terminal.Gui.Application.EndAfterFirstIteration
- uid: Terminal.Gui.Application.RunLoop*
  commentId: Overload:Terminal.Gui.Application.RunLoop
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RunLoop(Terminal.Gui.RunState)
  name: RunLoop
  nameWithType: Application.RunLoop
  fullName: Terminal.Gui.Application.RunLoop
- uid: Terminal.Gui.Application.RunIteration*
  commentId: Overload:Terminal.Gui.Application.RunIteration
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RunIteration(Terminal.Gui.RunState@,System.Boolean@)
  name: RunIteration
  nameWithType: Application.RunIteration
  fullName: Terminal.Gui.Application.RunIteration
- uid: Terminal.Gui.Toplevel.Running
  commentId: P:Terminal.Gui.Toplevel.Running
  parent: Terminal.Gui.Toplevel
  href: Terminal.Gui.Toplevel.html#Terminal.Gui.Toplevel.Running
  name: Running
  nameWithType: Toplevel.Running
  fullName: Terminal.Gui.Toplevel.Running
- uid: Terminal.Gui.Application.RequestStop*
  commentId: Overload:Terminal.Gui.Application.RequestStop
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.RequestStop(Terminal.Gui.Toplevel)
  name: RequestStop
  nameWithType: Application.RequestStop
  fullName: Terminal.Gui.Application.RequestStop
- uid: Terminal.Gui.Application.End*
  commentId: Overload:Terminal.Gui.Application.End
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.End(Terminal.Gui.RunState)
  name: End
  nameWithType: Application.End
  fullName: Terminal.Gui.Application.End
- uid: Terminal.Gui.Application.Top*
  commentId: Overload:Terminal.Gui.Application.Top
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Top
  name: Top
  nameWithType: Application.Top
  fullName: Terminal.Gui.Application.Top
- uid: Terminal.Gui.Application.Current*
  commentId: Overload:Terminal.Gui.Application.Current
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Current
  name: Current
  nameWithType: Application.Current
  fullName: Terminal.Gui.Application.Current
- uid: Terminal.Gui.SizeChangedEventArgs.Cancel
  commentId: P:Terminal.Gui.SizeChangedEventArgs.Cancel
  href: Terminal.Gui.SizeChangedEventArgs.html#Terminal.Gui.SizeChangedEventArgs.Cancel
  name: Cancel
  nameWithType: SizeChangedEventArgs.Cancel
  fullName: Terminal.Gui.SizeChangedEventArgs.Cancel
- uid: Terminal.Gui.Application
  commentId: T:Terminal.Gui.Application
  href: Terminal.Gui.Application.html
  name: Application
  nameWithType: Application
  fullName: Terminal.Gui.Application
- uid: System.EventHandler{Terminal.Gui.SizeChangedEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.SizeChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SizeChangedEventArgs>
  nameWithType: EventHandler<SizeChangedEventArgs>
  fullName: System.EventHandler<Terminal.Gui.SizeChangedEventArgs>
  nameWithType.vb: EventHandler(Of SizeChangedEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.SizeChangedEventArgs)
  name.vb: EventHandler(Of SizeChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.SizeChangedEventArgs
    name: SizeChangedEventArgs
    href: Terminal.Gui.SizeChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.SizeChangedEventArgs
    name: SizeChangedEventArgs
    href: Terminal.Gui.SizeChangedEventArgs.html
  - name: )
- uid: Terminal.Gui.Application.SizeChanging
  commentId: E:Terminal.Gui.Application.SizeChanging
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.SizeChanging
  name: SizeChanging
  nameWithType: Application.SizeChanging
  fullName: Terminal.Gui.Application.SizeChanging
- uid: Terminal.Gui.Application.OnSizeChanging*
  commentId: Overload:Terminal.Gui.Application.OnSizeChanging
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OnSizeChanging(Terminal.Gui.SizeChangedEventArgs)
  name: OnSizeChanging
  nameWithType: Application.OnSizeChanging
  fullName: Terminal.Gui.Application.OnSizeChanging
- uid: Terminal.Gui.SizeChangedEventArgs
  commentId: T:Terminal.Gui.SizeChangedEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.SizeChangedEventArgs.html
  name: SizeChangedEventArgs
  nameWithType: SizeChangedEventArgs
  fullName: Terminal.Gui.SizeChangedEventArgs
- uid: Terminal.Gui.Application.IsMouseDisabled*
  commentId: Overload:Terminal.Gui.Application.IsMouseDisabled
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.IsMouseDisabled
  name: IsMouseDisabled
  nameWithType: Application.IsMouseDisabled
  fullName: Terminal.Gui.Application.IsMouseDisabled
- uid: Terminal.Gui.Application.WantContinuousButtonPressedView*
  commentId: Overload:Terminal.Gui.Application.WantContinuousButtonPressedView
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.WantContinuousButtonPressedView
  name: WantContinuousButtonPressedView
  nameWithType: Application.WantContinuousButtonPressedView
  fullName: Terminal.Gui.Application.WantContinuousButtonPressedView
- uid: Terminal.Gui.Application.UngrabMouse
  commentId: M:Terminal.Gui.Application.UngrabMouse
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.UngrabMouse
  name: UngrabMouse()
  nameWithType: Application.UngrabMouse()
  fullName: Terminal.Gui.Application.UngrabMouse()
  spec.csharp:
  - uid: Terminal.Gui.Application.UngrabMouse
    name: UngrabMouse
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.UngrabMouse
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.UngrabMouse
    name: UngrabMouse
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.UngrabMouse
  - name: (
  - name: )
- uid: Terminal.Gui.Application.MouseGrabView*
  commentId: Overload:Terminal.Gui.Application.MouseGrabView
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.MouseGrabView
  name: MouseGrabView
  nameWithType: Application.MouseGrabView
  fullName: Terminal.Gui.Application.MouseGrabView
- uid: System.EventHandler{Terminal.Gui.GrabMouseEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.GrabMouseEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<GrabMouseEventArgs>
  nameWithType: EventHandler<GrabMouseEventArgs>
  fullName: System.EventHandler<Terminal.Gui.GrabMouseEventArgs>
  nameWithType.vb: EventHandler(Of GrabMouseEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.GrabMouseEventArgs)
  name.vb: EventHandler(Of GrabMouseEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.GrabMouseEventArgs
    name: GrabMouseEventArgs
    href: Terminal.Gui.GrabMouseEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.GrabMouseEventArgs
    name: GrabMouseEventArgs
    href: Terminal.Gui.GrabMouseEventArgs.html
  - name: )
- uid: System.EventHandler{Terminal.Gui.ViewEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.ViewEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ViewEventArgs>
  nameWithType: EventHandler<ViewEventArgs>
  fullName: System.EventHandler<Terminal.Gui.ViewEventArgs>
  nameWithType.vb: EventHandler(Of ViewEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.ViewEventArgs)
  name.vb: EventHandler(Of ViewEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.ViewEventArgs
    name: ViewEventArgs
    href: Terminal.Gui.ViewEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ViewEventArgs
    name: ViewEventArgs
    href: Terminal.Gui.ViewEventArgs.html
  - name: )
- uid: Terminal.Gui.Application.GrabMouse*
  commentId: Overload:Terminal.Gui.Application.GrabMouse
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.GrabMouse(Terminal.Gui.View)
  name: GrabMouse
  nameWithType: Application.GrabMouse
  fullName: Terminal.Gui.Application.GrabMouse
- uid: Terminal.Gui.Application.UngrabMouse*
  commentId: Overload:Terminal.Gui.Application.UngrabMouse
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.UngrabMouse
  name: UngrabMouse
  nameWithType: Application.UngrabMouse
  fullName: Terminal.Gui.Application.UngrabMouse
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.MouseEvent.View
  commentId: P:Terminal.Gui.MouseEvent.View
  href: Terminal.Gui.MouseEvent.html#Terminal.Gui.MouseEvent.View
  name: View
  nameWithType: MouseEvent.View
  fullName: Terminal.Gui.MouseEvent.View
- uid: System.EventHandler{Terminal.Gui.MouseEventEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.MouseEventEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<MouseEventEventArgs>
  nameWithType: EventHandler<MouseEventEventArgs>
  fullName: System.EventHandler<Terminal.Gui.MouseEventEventArgs>
  nameWithType.vb: EventHandler(Of MouseEventEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.MouseEventEventArgs)
  name.vb: EventHandler(Of MouseEventEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: )
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  href: Terminal.Gui.Responder.html
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: Terminal.Gui.Application.MouseEvent
  commentId: E:Terminal.Gui.Application.MouseEvent
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.MouseEvent
  name: MouseEvent
  nameWithType: Application.MouseEvent
  fullName: Terminal.Gui.Application.MouseEvent
- uid: Terminal.Gui.Application.OnMouseEvent*
  commentId: Overload:Terminal.Gui.Application.OnMouseEvent
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OnMouseEvent(Terminal.Gui.MouseEventEventArgs)
  name: OnMouseEvent
  nameWithType: Application.OnMouseEvent
  fullName: Terminal.Gui.Application.OnMouseEvent
- uid: Terminal.Gui.MouseEventEventArgs
  commentId: T:Terminal.Gui.MouseEventEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.MouseEventEventArgs.html
  name: MouseEventEventArgs
  nameWithType: MouseEventEventArgs
  fullName: Terminal.Gui.MouseEventEventArgs
- uid: Terminal.Gui.Application.AlternateForwardKey*
  commentId: Overload:Terminal.Gui.Application.AlternateForwardKey
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.AlternateForwardKey
  name: AlternateForwardKey
  nameWithType: Application.AlternateForwardKey
  fullName: Terminal.Gui.Application.AlternateForwardKey
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.Application.AlternateBackwardKey*
  commentId: Overload:Terminal.Gui.Application.AlternateBackwardKey
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.AlternateBackwardKey
  name: AlternateBackwardKey
  nameWithType: Application.AlternateBackwardKey
  fullName: Terminal.Gui.Application.AlternateBackwardKey
- uid: Terminal.Gui.Application.QuitKey*
  commentId: Overload:Terminal.Gui.Application.QuitKey
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.QuitKey
  name: QuitKey
  nameWithType: Application.QuitKey
  fullName: Terminal.Gui.Application.QuitKey
- uid: Terminal.Gui.KeyEventEventArgs.Handled
  commentId: P:Terminal.Gui.KeyEventEventArgs.Handled
  href: Terminal.Gui.KeyEventEventArgs.html#Terminal.Gui.KeyEventEventArgs.Handled
  name: Handled
  nameWithType: KeyEventEventArgs.Handled
  fullName: Terminal.Gui.KeyEventEventArgs.Handled
- uid: Terminal.Gui.Application.KeyPressed
  commentId: E:Terminal.Gui.Application.KeyPressed
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.KeyPressed
  name: KeyPressed
  nameWithType: Application.KeyPressed
  fullName: Terminal.Gui.Application.KeyPressed
- uid: Terminal.Gui.Application.KeyDown
  commentId: E:Terminal.Gui.Application.KeyDown
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.KeyDown
  name: KeyDown
  nameWithType: Application.KeyDown
  fullName: Terminal.Gui.Application.KeyDown
- uid: Terminal.Gui.Application.KeyUp
  commentId: E:Terminal.Gui.Application.KeyUp
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.KeyUp
  name: KeyUp
  nameWithType: Application.KeyUp
  fullName: Terminal.Gui.Application.KeyUp
- uid: System.EventHandler{Terminal.Gui.KeyEventEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.KeyEventEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<KeyEventEventArgs>
  nameWithType: EventHandler<KeyEventEventArgs>
  fullName: System.EventHandler<Terminal.Gui.KeyEventEventArgs>
  nameWithType.vb: EventHandler(Of KeyEventEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.KeyEventEventArgs)
  name.vb: EventHandler(Of KeyEventEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.KeyEventEventArgs
    name: KeyEventEventArgs
    href: Terminal.Gui.KeyEventEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.KeyEventEventArgs
    name: KeyEventEventArgs
    href: Terminal.Gui.KeyEventEventArgs.html
  - name: )
- uid: Terminal.Gui.Application.OnKeyPressed*
  commentId: Overload:Terminal.Gui.Application.OnKeyPressed
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OnKeyPressed(Terminal.Gui.KeyEventEventArgs)
  name: OnKeyPressed
  nameWithType: Application.OnKeyPressed
  fullName: Terminal.Gui.Application.OnKeyPressed
- uid: Terminal.Gui.KeyEventEventArgs
  commentId: T:Terminal.Gui.KeyEventEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.KeyEventEventArgs.html
  name: KeyEventEventArgs
  nameWithType: KeyEventEventArgs
  fullName: Terminal.Gui.KeyEventEventArgs
- uid: Terminal.Gui.Application.OnKeyDown*
  commentId: Overload:Terminal.Gui.Application.OnKeyDown
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OnKeyDown(Terminal.Gui.KeyEventEventArgs)
  name: OnKeyDown
  nameWithType: Application.OnKeyDown
  fullName: Terminal.Gui.Application.OnKeyDown
- uid: Terminal.Gui.Application.OnKeyUp*
  commentId: Overload:Terminal.Gui.Application.OnKeyUp
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OnKeyUp(Terminal.Gui.KeyEventEventArgs)
  name: OnKeyUp
  nameWithType: Application.OnKeyUp
  fullName: Terminal.Gui.Application.OnKeyUp
- uid: Terminal.Gui.Application.OverlappedTop
  commentId: P:Terminal.Gui.Application.OverlappedTop
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OverlappedTop
  name: OverlappedTop
  nameWithType: Application.OverlappedTop
  fullName: Terminal.Gui.Application.OverlappedTop
- uid: Terminal.Gui.Application.OverlappedChildren*
  commentId: Overload:Terminal.Gui.Application.OverlappedChildren
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OverlappedChildren
  name: OverlappedChildren
  nameWithType: Application.OverlappedChildren
  fullName: Terminal.Gui.Application.OverlappedChildren
- uid: System.Collections.Generic.List{Terminal.Gui.Toplevel}
  commentId: T:System.Collections.Generic.List{Terminal.Gui.Toplevel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Toplevel>
  nameWithType: List<Toplevel>
  fullName: System.Collections.Generic.List<Terminal.Gui.Toplevel>
  nameWithType.vb: List(Of Toplevel)
  fullName.vb: System.Collections.Generic.List(Of Terminal.Gui.Toplevel)
  name.vb: List(Of Toplevel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.Toplevel
    name: Toplevel
    href: Terminal.Gui.Toplevel.html
  - name: )
- uid: Terminal.Gui.Toplevel.IsOverlappedContainer
  commentId: P:Terminal.Gui.Toplevel.IsOverlappedContainer
  parent: Terminal.Gui.Toplevel
  href: Terminal.Gui.Toplevel.html#Terminal.Gui.Toplevel.IsOverlappedContainer
  name: IsOverlappedContainer
  nameWithType: Toplevel.IsOverlappedContainer
  fullName: Terminal.Gui.Toplevel.IsOverlappedContainer
- uid: Terminal.Gui.Application.OverlappedTop*
  commentId: Overload:Terminal.Gui.Application.OverlappedTop
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OverlappedTop
  name: OverlappedTop
  nameWithType: Application.OverlappedTop
  fullName: Terminal.Gui.Application.OverlappedTop
- uid: Terminal.Gui.Application.OverlappedMoveNext*
  commentId: Overload:Terminal.Gui.Application.OverlappedMoveNext
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OverlappedMoveNext
  name: OverlappedMoveNext
  nameWithType: Application.OverlappedMoveNext
  fullName: Terminal.Gui.Application.OverlappedMoveNext
- uid: Terminal.Gui.Application.OverlappedMovePrevious*
  commentId: Overload:Terminal.Gui.Application.OverlappedMovePrevious
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.OverlappedMovePrevious
  name: OverlappedMovePrevious
  nameWithType: Application.OverlappedMovePrevious
  fullName: Terminal.Gui.Application.OverlappedMovePrevious
- uid: Terminal.Gui.Application.MoveToOverlappedChild*
  commentId: Overload:Terminal.Gui.Application.MoveToOverlappedChild
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.MoveToOverlappedChild(Terminal.Gui.Toplevel)
  name: MoveToOverlappedChild
  nameWithType: Application.MoveToOverlappedChild
  fullName: Terminal.Gui.Application.MoveToOverlappedChild
- uid: Terminal.Gui.Application.BringOverlappedTopToFront*
  commentId: Overload:Terminal.Gui.Application.BringOverlappedTopToFront
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.BringOverlappedTopToFront
  name: BringOverlappedTopToFront
  nameWithType: Application.BringOverlappedTopToFront
  fullName: Terminal.Gui.Application.BringOverlappedTopToFront
- uid: Terminal.Gui.Application.GetTopOverlappedChild*
  commentId: Overload:Terminal.Gui.Application.GetTopOverlappedChild
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.GetTopOverlappedChild(System.Type,System.String[])
  name: GetTopOverlappedChild
  nameWithType: Application.GetTopOverlappedChild
  fullName: Terminal.Gui.Application.GetTopOverlappedChild
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
shouldSkipMarkup: true
