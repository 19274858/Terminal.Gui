### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.FileSystemTreeBuilder
  commentId: T:Terminal.Gui.FileSystemTreeBuilder
  id: FileSystemTreeBuilder
  parent: Terminal.Gui
  children:
  - Terminal.Gui.FileSystemTreeBuilder.#ctor
  - Terminal.Gui.FileSystemTreeBuilder.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  - Terminal.Gui.FileSystemTreeBuilder.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  - Terminal.Gui.FileSystemTreeBuilder.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  - Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  - Terminal.Gui.FileSystemTreeBuilder.Sorter
  - Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  langs:
  - csharp
  - vb
  name: FileSystemTreeBuilder
  nameWithType: FileSystemTreeBuilder
  fullName: Terminal.Gui.FileSystemTreeBuilder
  type: Class
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FileSystemTreeBuilder
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 11
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: TreeView builder for creating file system based trees.
  example: []
  syntax:
    content: 'public class FileSystemTreeBuilder : ITreeBuilder<IFileSystemInfo>, IComparer<IFileSystemInfo>'
    content.vb: Public Class FileSystemTreeBuilder Implements ITreeBuilder(Of IFileSystemInfo), IComparer(Of IFileSystemInfo)
  inheritance:
  - System.Object
  implements:
  - Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  - System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.FileSystemTreeBuilder.#ctor
  commentId: M:Terminal.Gui.FileSystemTreeBuilder.#ctor
  id: '#ctor'
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: FileSystemTreeBuilder()
  nameWithType: FileSystemTreeBuilder.FileSystemTreeBuilder()
  fullName: Terminal.Gui.FileSystemTreeBuilder.FileSystemTreeBuilder()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 17
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Creates a new instance of the <xref href="Terminal.Gui.FileSystemTreeBuilder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public FileSystemTreeBuilder()
    content.vb: Public Sub New()
  overload: Terminal.Gui.FileSystemTreeBuilder.#ctor*
  nameWithType.vb: FileSystemTreeBuilder.New()
  fullName.vb: Terminal.Gui.FileSystemTreeBuilder.New()
  name.vb: New()
- uid: Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  commentId: P:Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  id: SupportsCanExpand
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: SupportsCanExpand
  nameWithType: FileSystemTreeBuilder.SupportsCanExpand
  fullName: Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  type: Property
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SupportsCanExpand
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 23
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns true if <xref href="Terminal.Gui.ITreeBuilder%601.CanExpand(%600)" data-throw-if-not-resolved="false"></xref> is implemented by this class
  example: []
  syntax:
    content: public bool SupportsCanExpand { get; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public ReadOnly Property SupportsCanExpand As Boolean
  overload: Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand*
  implements:
  - Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.SupportsCanExpand
- uid: Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  commentId: P:Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  id: IncludeFiles
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: IncludeFiles
  nameWithType: FileSystemTreeBuilder.IncludeFiles
  fullName: Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  type: Property
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IncludeFiles
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 29
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets a flag indicating whether to show files as leaf elements

    in the tree. Defaults to true.
  example: []
  syntax:
    content: public bool IncludeFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IncludeFiles As Boolean
  overload: Terminal.Gui.FileSystemTreeBuilder.IncludeFiles*
- uid: Terminal.Gui.FileSystemTreeBuilder.Sorter
  commentId: P:Terminal.Gui.FileSystemTreeBuilder.Sorter
  id: Sorter
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: Sorter
  nameWithType: FileSystemTreeBuilder.Sorter
  fullName: Terminal.Gui.FileSystemTreeBuilder.Sorter
  type: Property
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Sorter
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 34
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the order of directory children.  Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/this">this</a>.
  example: []
  syntax:
    content: public IComparer<IFileSystemInfo> Sorter { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}
    content.vb: Public Property Sorter As IComparer(Of IFileSystemInfo)
  overload: Terminal.Gui.FileSystemTreeBuilder.Sorter*
- uid: Terminal.Gui.FileSystemTreeBuilder.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemTreeBuilder.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  id: CanExpand(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: CanExpand(IFileSystemInfo)
  nameWithType: FileSystemTreeBuilder.CanExpand(IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemTreeBuilder.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanExpand
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 37
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns true/false for whether a model has children.  This method should be implemented

    when <xref href="Terminal.Gui.ITreeBuilder%601.GetChildren(%600)" data-throw-if-not-resolved="false"></xref> is an expensive operation otherwise 

    <xref href="Terminal.Gui.ITreeBuilder%601.SupportsCanExpand" data-throw-if-not-resolved="false"></xref> should return false (in which case this method will not

    be called)
  remarks: >-
    Only implement this method if you have a very fast way of determining whether 
        an object can have children e.g. checking a Type (directories can always be expanded)
  example: []
  syntax:
    content: public bool CanExpand(IFileSystemInfo toExpand)
    parameters:
    - id: toExpand
      type: System.IO.Abstractions.IFileSystemInfo
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CanExpand(toExpand As IFileSystemInfo) As Boolean
  overload: Terminal.Gui.FileSystemTreeBuilder.CanExpand*
  implements:
  - Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
- uid: Terminal.Gui.FileSystemTreeBuilder.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemTreeBuilder.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  id: GetChildren(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: GetChildren(IFileSystemInfo)
  nameWithType: FileSystemTreeBuilder.GetChildren(IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemTreeBuilder.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetChildren
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 43
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns all children of a given <code class="paramref">forObject</code> which should be added to the 

    tree as new branches underneath it
  example: []
  syntax:
    content: public IEnumerable<IFileSystemInfo> GetChildren(IFileSystemInfo forObject)
    parameters:
    - id: forObject
      type: System.IO.Abstractions.IFileSystemInfo
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
      description: ''
    content.vb: Public Function GetChildren(forObject As IFileSystemInfo) As IEnumerable(Of IFileSystemInfo)
  overload: Terminal.Gui.FileSystemTreeBuilder.GetChildren*
  implements:
  - Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
- uid: Terminal.Gui.FileSystemTreeBuilder.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemTreeBuilder.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  id: Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.FileSystemTreeBuilder
  langs:
  - csharp
  - vb
  name: Compare(IFileSystemInfo, IFileSystemInfo)
  nameWithType: FileSystemTreeBuilder.Compare(IFileSystemInfo, IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemTreeBuilder.Compare(System.IO.Abstractions.IFileSystemInfo, System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Compare
    path: ../Terminal.Gui/FileServices/FileSystemTreeBuilder.cs
    startLine: 66
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public int Compare(IFileSystemInfo x, IFileSystemInfo y)
    parameters:
    - id: x
      type: System.IO.Abstractions.IFileSystemInfo
    - id: y
      type: System.IO.Abstractions.IFileSystemInfo
    return:
      type: System.Int32
    content.vb: Public Function Compare(x As IFileSystemInfo, y As IFileSystemInfo) As Integer
  overload: Terminal.Gui.FileSystemTreeBuilder.Compare*
  implements:
  - System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  commentId: T:Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<IFileSystemInfo>
  nameWithType: ITreeBuilder<IFileSystemInfo>
  fullName: Terminal.Gui.ITreeBuilder<System.IO.Abstractions.IFileSystemInfo>
  nameWithType.vb: ITreeBuilder(Of IFileSystemInfo)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of System.IO.Abstractions.IFileSystemInfo)
  name.vb: ITreeBuilder(Of IFileSystemInfo)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}
  commentId: T:System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<IFileSystemInfo>
  nameWithType: IComparer<IFileSystemInfo>
  fullName: System.Collections.Generic.IComparer<System.IO.Abstractions.IFileSystemInfo>
  nameWithType.vb: IComparer(Of IFileSystemInfo)
  fullName.vb: System.Collections.Generic.IComparer(Of System.IO.Abstractions.IFileSystemInfo)
  name.vb: IComparer(Of IFileSystemInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.ITreeBuilder`1
  commentId: T:Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Terminal.Gui.FileSystemTreeBuilder
  commentId: T:Terminal.Gui.FileSystemTreeBuilder
  href: Terminal.Gui.FileSystemTreeBuilder.html
  name: FileSystemTreeBuilder
  nameWithType: FileSystemTreeBuilder
  fullName: Terminal.Gui.FileSystemTreeBuilder
- uid: Terminal.Gui.FileSystemTreeBuilder.#ctor*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.#ctor
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.#ctor
  name: FileSystemTreeBuilder
  nameWithType: FileSystemTreeBuilder.FileSystemTreeBuilder
  fullName: Terminal.Gui.FileSystemTreeBuilder.FileSystemTreeBuilder
  nameWithType.vb: FileSystemTreeBuilder.New
  fullName.vb: Terminal.Gui.FileSystemTreeBuilder.New
  name.vb: New
- uid: Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  commentId: M:Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  name: CanExpand(T)
  nameWithType: ITreeBuilder<T>.CanExpand(T)
  fullName: Terminal.Gui.ITreeBuilder<T>.CanExpand(T)
  nameWithType.vb: ITreeBuilder(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T).CanExpand(T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: FileSystemTreeBuilder.SupportsCanExpand
  fullName: Terminal.Gui.FileSystemTreeBuilder.SupportsCanExpand
- uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.SupportsCanExpand
  commentId: P:Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.SupportsCanExpand
  parent: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  definition: Terminal.Gui.ITreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: ITreeBuilder<IFileSystemInfo>.SupportsCanExpand
  fullName: Terminal.Gui.ITreeBuilder<System.IO.Abstractions.IFileSystemInfo>.SupportsCanExpand
  nameWithType.vb: ITreeBuilder(Of IFileSystemInfo).SupportsCanExpand
  fullName.vb: Terminal.Gui.ITreeBuilder(Of System.IO.Abstractions.IFileSystemInfo).SupportsCanExpand
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.ITreeBuilder`1.SupportsCanExpand
  commentId: P:Terminal.Gui.ITreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: ITreeBuilder<T>.SupportsCanExpand
  fullName: Terminal.Gui.ITreeBuilder<T>.SupportsCanExpand
  nameWithType.vb: ITreeBuilder(Of T).SupportsCanExpand
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T).SupportsCanExpand
- uid: Terminal.Gui.FileSystemTreeBuilder.IncludeFiles*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
  name: IncludeFiles
  nameWithType: FileSystemTreeBuilder.IncludeFiles
  fullName: Terminal.Gui.FileSystemTreeBuilder.IncludeFiles
- uid: Terminal.Gui.FileSystemTreeBuilder.Sorter*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.Sorter
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.Sorter
  name: Sorter
  nameWithType: FileSystemTreeBuilder.Sorter
  fullName: Terminal.Gui.FileSystemTreeBuilder.Sorter
- uid: Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  commentId: M:Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  name: GetChildren(T)
  nameWithType: ITreeBuilder<T>.GetChildren(T)
  fullName: Terminal.Gui.ITreeBuilder<T>.GetChildren(T)
  nameWithType.vb: ITreeBuilder(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T).GetChildren(T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.ITreeBuilder-1.html#Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.FileSystemTreeBuilder.CanExpand*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.CanExpand
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  name: CanExpand
  nameWithType: FileSystemTreeBuilder.CanExpand
  fullName: Terminal.Gui.FileSystemTreeBuilder.CanExpand
- uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  definition: Terminal.Gui.ITreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  name: CanExpand(IFileSystemInfo)
  nameWithType: ITreeBuilder<IFileSystemInfo>.CanExpand(IFileSystemInfo)
  fullName: Terminal.Gui.ITreeBuilder<System.IO.Abstractions.IFileSystemInfo>.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  nameWithType.vb: ITreeBuilder(Of IFileSystemInfo).CanExpand(IFileSystemInfo)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of System.IO.Abstractions.IFileSystemInfo).CanExpand(System.IO.Abstractions.IFileSystemInfo)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
    name: CanExpand
    href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
    name: CanExpand
    href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.CanExpand(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.IO.Abstractions.IFileSystemInfo
  commentId: T:System.IO.Abstractions.IFileSystemInfo
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystemInfo
  nameWithType: IFileSystemInfo
  fullName: System.IO.Abstractions.IFileSystemInfo
- uid: System.IO.Abstractions
  commentId: N:System.IO.Abstractions
  isExternal: true
  name: System.IO.Abstractions
  nameWithType: System.IO.Abstractions
  fullName: System.IO.Abstractions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
- uid: Terminal.Gui.FileSystemTreeBuilder.GetChildren*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.GetChildren
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  name: GetChildren
  nameWithType: FileSystemTreeBuilder.GetChildren
  fullName: Terminal.Gui.FileSystemTreeBuilder.GetChildren
- uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}
  definition: Terminal.Gui.ITreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  name: GetChildren(IFileSystemInfo)
  nameWithType: ITreeBuilder<IFileSystemInfo>.GetChildren(IFileSystemInfo)
  fullName: Terminal.Gui.ITreeBuilder<System.IO.Abstractions.IFileSystemInfo>.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  nameWithType.vb: ITreeBuilder(Of IFileSystemInfo).GetChildren(IFileSystemInfo)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of System.IO.Abstractions.IFileSystemInfo).GetChildren(System.IO.Abstractions.IFileSystemInfo)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
    name: GetChildren
    href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
    name: GetChildren
    href: Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.html#Terminal.Gui.ITreeBuilder{System.IO.Abstractions.IFileSystemInfo}.GetChildren(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.IO.Abstractions.IFileSystemInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IFileSystemInfo>
  nameWithType: IEnumerable<IFileSystemInfo>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Abstractions.IFileSystemInfo>
  nameWithType.vb: IEnumerable(Of IFileSystemInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.IO.Abstractions.IFileSystemInfo)
  name.vb: IEnumerable(Of IFileSystemInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.FileSystemTreeBuilder.Compare*
  commentId: Overload:Terminal.Gui.FileSystemTreeBuilder.Compare
  href: Terminal.Gui.FileSystemTreeBuilder.html#Terminal.Gui.FileSystemTreeBuilder.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  name: Compare
  nameWithType: FileSystemTreeBuilder.Compare
  fullName: Terminal.Gui.FileSystemTreeBuilder.Compare
- uid: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  commentId: M:System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
  parent: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-system.io.abstractions.ifilesysteminfo-.compare#system-collections-generic-icomparer((system-io-abstractions-ifilesysteminfo))-compare(system-io-abstractions-ifilesysteminfo-system-io-abstractions-ifilesysteminfo)
  name: Compare(IFileSystemInfo, IFileSystemInfo)
  nameWithType: IComparer<IFileSystemInfo>.Compare(IFileSystemInfo, IFileSystemInfo)
  fullName: System.Collections.Generic.IComparer<System.IO.Abstractions.IFileSystemInfo>.Compare(System.IO.Abstractions.IFileSystemInfo, System.IO.Abstractions.IFileSystemInfo)
  nameWithType.vb: IComparer(Of IFileSystemInfo).Compare(IFileSystemInfo, IFileSystemInfo)
  fullName.vb: System.Collections.Generic.IComparer(Of System.IO.Abstractions.IFileSystemInfo).Compare(System.IO.Abstractions.IFileSystemInfo, System.IO.Abstractions.IFileSystemInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-system.io.abstractions.ifilesysteminfo-.compare#system-collections-generic-icomparer((system-io-abstractions-ifilesysteminfo))-compare(system-io-abstractions-ifilesysteminfo-system-io-abstractions-ifilesysteminfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer{System.IO.Abstractions.IFileSystemInfo}.Compare(System.IO.Abstractions.IFileSystemInfo,System.IO.Abstractions.IFileSystemInfo)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-system.io.abstractions.ifilesysteminfo-.compare#system-collections-generic-icomparer((system-io-abstractions-ifilesysteminfo))-compare(system-io-abstractions-ifilesysteminfo-system-io-abstractions-ifilesysteminfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1.compare
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
shouldSkipMarkup: true
