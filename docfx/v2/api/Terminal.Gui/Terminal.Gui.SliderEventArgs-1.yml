### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.SliderEventArgs`1
  commentId: T:Terminal.Gui.SliderEventArgs`1
  id: SliderEventArgs`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.SliderEventArgs`1.#ctor(System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}},System.Int32)
  - Terminal.Gui.SliderEventArgs`1.Cancel
  - Terminal.Gui.SliderEventArgs`1.Focused
  - Terminal.Gui.SliderEventArgs`1.Options
  langs:
  - csharp
  - vb
  name: SliderEventArgs<T>
  nameWithType: SliderEventArgs<T>
  fullName: Terminal.Gui.SliderEventArgs<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SliderEventArgs
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 221
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: <xref href="System.EventArgs" data-throw-if-not-resolved="false"></xref> for <xref href="Terminal.Gui.Slider%601" data-throw-if-not-resolved="false"></xref> events.
  example: []
  syntax:
    content: 'public class SliderEventArgs<T> : EventArgs'
    typeParameters:
    - id: T
    content.vb: Public Class SliderEventArgs(Of T) Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SliderEventArgs(Of T)
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T)
  name.vb: SliderEventArgs(Of T)
- uid: Terminal.Gui.SliderEventArgs`1.Options
  commentId: P:Terminal.Gui.SliderEventArgs`1.Options
  id: Options
  parent: Terminal.Gui.SliderEventArgs`1
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: SliderEventArgs<T>.Options
  fullName: Terminal.Gui.SliderEventArgs<T>.Options
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Options
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 225
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets/sets whether the option is set or not.
  example: []
  syntax:
    content: public Dictionary<int, SliderOption<T>> Options { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{{T}}}
    content.vb: Public Property Options As Dictionary(Of Integer, SliderOption(Of T))
  overload: Terminal.Gui.SliderEventArgs`1.Options*
  nameWithType.vb: SliderEventArgs(Of T).Options
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Options
- uid: Terminal.Gui.SliderEventArgs`1.Focused
  commentId: P:Terminal.Gui.SliderEventArgs`1.Focused
  id: Focused
  parent: Terminal.Gui.SliderEventArgs`1
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: SliderEventArgs<T>.Focused
  fullName: Terminal.Gui.SliderEventArgs<T>.Focused
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Focused
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 230
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the index of the option that is focused.
  example: []
  syntax:
    content: public int Focused { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Focused As Integer
  overload: Terminal.Gui.SliderEventArgs`1.Focused*
  nameWithType.vb: SliderEventArgs(Of T).Focused
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Focused
- uid: Terminal.Gui.SliderEventArgs`1.Cancel
  commentId: P:Terminal.Gui.SliderEventArgs`1.Cancel
  id: Cancel
  parent: Terminal.Gui.SliderEventArgs`1
  langs:
  - csharp
  - vb
  name: Cancel
  nameWithType: SliderEventArgs<T>.Cancel
  fullName: Terminal.Gui.SliderEventArgs<T>.Cancel
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Cancel
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 235
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: If set to true, the focus operation will be canceled, if applicable.
  example: []
  syntax:
    content: public bool Cancel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Cancel As Boolean
  overload: Terminal.Gui.SliderEventArgs`1.Cancel*
  nameWithType.vb: SliderEventArgs(Of T).Cancel
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Cancel
- uid: Terminal.Gui.SliderEventArgs`1.#ctor(System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}},System.Int32)
  commentId: M:Terminal.Gui.SliderEventArgs`1.#ctor(System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}},System.Int32)
  id: '#ctor(System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}},System.Int32)'
  parent: Terminal.Gui.SliderEventArgs`1
  langs:
  - csharp
  - vb
  name: SliderEventArgs(Dictionary<int, SliderOption<T>>, int)
  nameWithType: SliderEventArgs<T>.SliderEventArgs(Dictionary<int, SliderOption<T>>, int)
  fullName: Terminal.Gui.SliderEventArgs<T>.SliderEventArgs(System.Collections.Generic.Dictionary<int, Terminal.Gui.SliderOption<T>>, int)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 242
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.SliderEventArgs%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public SliderEventArgs(Dictionary<int, SliderOption<T>> options, int focused = -1)
    parameters:
    - id: options
      type: System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{{T}}}
      description: The current options.
    - id: focused
      type: System.Int32
      description: Index of the option that is focused. -1 if no option has the focus.
    content.vb: Public Sub New(options As Dictionary(Of Integer, SliderOption(Of T)), focused As Integer = -1)
  overload: Terminal.Gui.SliderEventArgs`1.#ctor*
  nameWithType.vb: SliderEventArgs(Of T).New(Dictionary(Of Integer, SliderOption(Of T)), Integer)
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).New(System.Collections.Generic.Dictionary(Of Integer, Terminal.Gui.SliderOption(Of T)), Integer)
  name.vb: New(Dictionary(Of Integer, SliderOption(Of T)), Integer)
references:
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: Terminal.Gui.Slider`1
  commentId: T:Terminal.Gui.Slider`1
  href: Terminal.Gui.Slider-1.html
  name: Slider<T>
  nameWithType: Slider<T>
  fullName: Terminal.Gui.Slider<T>
  nameWithType.vb: Slider(Of T)
  fullName.vb: Terminal.Gui.Slider(Of T)
  name.vb: Slider(Of T)
  spec.csharp:
  - uid: Terminal.Gui.Slider`1
    name: Slider
    href: Terminal.Gui.Slider-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.Slider`1
    name: Slider
    href: Terminal.Gui.Slider-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.SliderEventArgs`1.Options*
  commentId: Overload:Terminal.Gui.SliderEventArgs`1.Options
  href: Terminal.Gui.SliderEventArgs-1.html#Terminal.Gui.SliderEventArgs`1.Options
  name: Options
  nameWithType: SliderEventArgs<T>.Options
  fullName: Terminal.Gui.SliderEventArgs<T>.Options
  nameWithType.vb: SliderEventArgs(Of T).Options
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Options
- uid: System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{{T}}}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, SliderOption<T>>
  nameWithType: Dictionary<int, SliderOption<T>>
  fullName: System.Collections.Generic.Dictionary<int, Terminal.Gui.SliderOption<T>>
  nameWithType.vb: Dictionary(Of Integer, SliderOption(Of T))
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, Terminal.Gui.SliderOption(Of T))
  name.vb: Dictionary(Of Integer, SliderOption(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Terminal.Gui.SliderOption`1
    name: SliderOption
    href: Terminal.Gui.SliderOption-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Terminal.Gui.SliderOption`1
    name: SliderOption
    href: Terminal.Gui.SliderOption-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Terminal.Gui.SliderEventArgs`1.Focused*
  commentId: Overload:Terminal.Gui.SliderEventArgs`1.Focused
  href: Terminal.Gui.SliderEventArgs-1.html#Terminal.Gui.SliderEventArgs`1.Focused
  name: Focused
  nameWithType: SliderEventArgs<T>.Focused
  fullName: Terminal.Gui.SliderEventArgs<T>.Focused
  nameWithType.vb: SliderEventArgs(Of T).Focused
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Focused
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.SliderEventArgs`1.Cancel*
  commentId: Overload:Terminal.Gui.SliderEventArgs`1.Cancel
  href: Terminal.Gui.SliderEventArgs-1.html#Terminal.Gui.SliderEventArgs`1.Cancel
  name: Cancel
  nameWithType: SliderEventArgs<T>.Cancel
  fullName: Terminal.Gui.SliderEventArgs<T>.Cancel
  nameWithType.vb: SliderEventArgs(Of T).Cancel
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).Cancel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.SliderEventArgs`1
  commentId: T:Terminal.Gui.SliderEventArgs`1
  href: Terminal.Gui.SliderEventArgs-1.html
  name: SliderEventArgs<T>
  nameWithType: SliderEventArgs<T>
  fullName: Terminal.Gui.SliderEventArgs<T>
  nameWithType.vb: SliderEventArgs(Of T)
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T)
  name.vb: SliderEventArgs(Of T)
  spec.csharp:
  - uid: Terminal.Gui.SliderEventArgs`1
    name: SliderEventArgs
    href: Terminal.Gui.SliderEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.SliderEventArgs`1
    name: SliderEventArgs
    href: Terminal.Gui.SliderEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.SliderEventArgs`1.#ctor*
  commentId: Overload:Terminal.Gui.SliderEventArgs`1.#ctor
  href: Terminal.Gui.SliderEventArgs-1.html#Terminal.Gui.SliderEventArgs`1.#ctor(System.Collections.Generic.Dictionary{System.Int32,Terminal.Gui.SliderOption{`0}},System.Int32)
  name: SliderEventArgs
  nameWithType: SliderEventArgs<T>.SliderEventArgs
  fullName: Terminal.Gui.SliderEventArgs<T>.SliderEventArgs
  nameWithType.vb: SliderEventArgs(Of T).New
  fullName.vb: Terminal.Gui.SliderEventArgs(Of T).New
  name.vb: New
shouldSkipMarkup: true
