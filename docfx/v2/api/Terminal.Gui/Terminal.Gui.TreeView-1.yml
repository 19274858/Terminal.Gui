### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TreeView`1
  commentId: T:Terminal.Gui.TreeView`1
  id: TreeView`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TreeView`1.#ctor
  - Terminal.Gui.TreeView`1.#ctor(Terminal.Gui.ITreeBuilder{`0})
  - Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny
  - Terminal.Gui.TreeView`1.AddObject(`0)
  - Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  - Terminal.Gui.TreeView`1.AdjustSelection(System.Int32,System.Boolean)
  - Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd
  - Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart
  - Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith(System.Char,System.StringComparison)
  - Terminal.Gui.TreeView`1.AllowLetterBasedNavigation
  - Terminal.Gui.TreeView`1.AspectGetter
  - Terminal.Gui.TreeView`1.CanExpand(`0)
  - Terminal.Gui.TreeView`1.ClearObjects
  - Terminal.Gui.TreeView`1.Collapse
  - Terminal.Gui.TreeView`1.Collapse(`0)
  - Terminal.Gui.TreeView`1.CollapseAll
  - Terminal.Gui.TreeView`1.CollapseAll(`0)
  - Terminal.Gui.TreeView`1.CollapseImpl(`0,System.Boolean)
  - Terminal.Gui.TreeView`1.ColorGetter
  - Terminal.Gui.TreeView`1.ContentHeight
  - Terminal.Gui.TreeView`1.CursorLeft(System.Boolean)
  - Terminal.Gui.TreeView`1.DesiredCursorVisibility
  - Terminal.Gui.TreeView`1.Dispose(System.Boolean)
  - Terminal.Gui.TreeView`1.DrawLine
  - Terminal.Gui.TreeView`1.EnsureVisible(`0)
  - Terminal.Gui.TreeView`1.Expand
  - Terminal.Gui.TreeView`1.Expand(`0)
  - Terminal.Gui.TreeView`1.ExpandAll
  - Terminal.Gui.TreeView`1.ExpandAll(`0)
  - Terminal.Gui.TreeView`1.Filter
  - Terminal.Gui.TreeView`1.GetAllSelectedObjects
  - Terminal.Gui.TreeView`1.GetChildren(`0)
  - Terminal.Gui.TreeView`1.GetContentWidth(System.Boolean)
  - Terminal.Gui.TreeView`1.GetObjectOnRow(System.Int32)
  - Terminal.Gui.TreeView`1.GetObjectRow(`0)
  - Terminal.Gui.TreeView`1.GetParent(`0)
  - Terminal.Gui.TreeView`1.GetScrollOffsetOf(`0)
  - Terminal.Gui.TreeView`1.GoTo(`0)
  - Terminal.Gui.TreeView`1.GoToEnd
  - Terminal.Gui.TreeView`1.GoToFirst
  - Terminal.Gui.TreeView`1.InvalidateLineMap
  - Terminal.Gui.TreeView`1.IsExpanded(`0)
  - Terminal.Gui.TreeView`1.IsSelected(`0)
  - Terminal.Gui.TreeView`1.KeystrokeNavigator
  - Terminal.Gui.TreeView`1.MaxDepth
  - Terminal.Gui.TreeView`1.MouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.TreeView`1.MovePageDown(System.Boolean)
  - Terminal.Gui.TreeView`1.MovePageUp(System.Boolean)
  - Terminal.Gui.TreeView`1.MultiSelect
  - Terminal.Gui.TreeView`1.NoBuilderError
  - Terminal.Gui.TreeView`1.ObjectActivated
  - Terminal.Gui.TreeView`1.ObjectActivationButton
  - Terminal.Gui.TreeView`1.ObjectActivationKey
  - Terminal.Gui.TreeView`1.Objects
  - Terminal.Gui.TreeView`1.OnDrawContent(Terminal.Gui.Rect)
  - Terminal.Gui.TreeView`1.OnEnter(Terminal.Gui.View)
  - Terminal.Gui.TreeView`1.OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs{`0})
  - Terminal.Gui.TreeView`1.OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs{`0})
  - Terminal.Gui.TreeView`1.PositionCursor
  - Terminal.Gui.TreeView`1.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.TreeView`1.RebuildTree
  - Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  - Terminal.Gui.TreeView`1.Remove(`0)
  - Terminal.Gui.TreeView`1.ScrollDown
  - Terminal.Gui.TreeView`1.ScrollOffsetHorizontal
  - Terminal.Gui.TreeView`1.ScrollOffsetVertical
  - Terminal.Gui.TreeView`1.ScrollUp
  - Terminal.Gui.TreeView`1.SelectAll
  - Terminal.Gui.TreeView`1.SelectedObject
  - Terminal.Gui.TreeView`1.SelectionChanged
  - Terminal.Gui.TreeView`1.Style
  - Terminal.Gui.TreeView`1.TreeBuilder
  langs:
  - csharp
  - vb
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TreeView
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 60
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Hierarchical tree view with expandable branches. Branch objects are dynamically determined

    when expanded using a user defined <xref href="Terminal.Gui.ITreeBuilder%601" data-throw-if-not-resolved="false"></xref>.


    <a href="https://gui-cs.github.io/Terminal.Gui/articles/treeview.html">See TreeView Deep Dive for more information</a>.
  example: []
  syntax:
    content: 'public class TreeView<T> : View, IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView where T : class'
    typeParameters:
    - id: T
    content.vb: Public Class TreeView(Of T As Class) Inherits View Implements IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  - Terminal.Gui.View
  derivedClasses:
  - Terminal.Gui.TreeView
  implements:
  - System.IDisposable
  - System.ComponentModel.ISupportInitializeNotification
  - System.ComponentModel.ISupportInitialize
  - Terminal.Gui.ITreeView
  inheritedMembers:
  - Terminal.Gui.View.Frame
  - Terminal.Gui.View.Margin
  - Terminal.Gui.View.Border
  - Terminal.Gui.View.BorderStyle
  - Terminal.Gui.View.Padding
  - Terminal.Gui.View.GetFramesThickness
  - Terminal.Gui.View.GetBoundsOffset
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.ForceValidatePosDim
  - Terminal.Gui.View.OnResizeNeeded
  - Terminal.Gui.View.ClearLayoutNeeded
  - Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  - Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  - Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  - Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  - Terminal.Gui.View.FrameToScreen
  - Terminal.Gui.View.LayoutStarted
  - Terminal.Gui.View.LayoutComplete
  - Terminal.Gui.View.Initialized
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.AutoSize
  - Terminal.Gui.View.GetAutoSize
  - Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  - Terminal.Gui.View.IsInitialized
  - Terminal.Gui.View.BeginInit
  - Terminal.Gui.View.EndInit
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Data
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.Title
  - Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  - Terminal.Gui.View.TitleChanging
  - Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  - Terminal.Gui.View.TitleChanged
  - Terminal.Gui.View.EnabledChanged
  - Terminal.Gui.View.OnEnabledChanged
  - Terminal.Gui.View.Enabled
  - Terminal.Gui.View.VisibleChanged
  - Terminal.Gui.View.OnVisibleChanged
  - Terminal.Gui.View.ClearOnVisibleFalse
  - Terminal.Gui.View.Visible
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.GetNormalColor
  - Terminal.Gui.View.GetFocusColor
  - Terminal.Gui.View.GetHotNormalColor
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.NeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.SubViewNeedsDisplay
  - Terminal.Gui.View.SetSubViewNeedsDisplay
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.LineCanvas
  - Terminal.Gui.View.SuperViewRendersLineCanvas
  - Terminal.Gui.View.OnDrawFrames
  - Terminal.Gui.View.Draw
  - Terminal.Gui.View.OnRenderLineCanvas
  - Terminal.Gui.View.DrawContent
  - Terminal.Gui.View.DrawContentComplete
  - Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - Terminal.Gui.View.HotKeyChanged
  - Terminal.Gui.View.HotKey
  - Terminal.Gui.View.HotKeySpecifier
  - Terminal.Gui.View.Shortcut
  - Terminal.Gui.View.ShortcutTag
  - Terminal.Gui.View.ShortcutAction
  - Terminal.Gui.View.TabIndexes
  - Terminal.Gui.View.TabIndex
  - Terminal.Gui.View.TabStop
  - Terminal.Gui.View.KeyPressed
  - Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  - Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  - Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  - Terminal.Gui.View.ClearKeyBindings
  - Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  - Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  - Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  - Terminal.Gui.View.GetSupportedCommands
  - Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.MouseClick
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.IsCurrentTop
  - Terminal.Gui.View.Added
  - Terminal.Gui.View.Add(Terminal.Gui.View)
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  - Terminal.Gui.View.IsAdded
  - Terminal.Gui.View.Removed
  - Terminal.Gui.View.RemoveAll
  - Terminal.Gui.View.Remove(Terminal.Gui.View)
  - Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.CanFocusChanged
  - Terminal.Gui.View.OnCanFocusChanged
  - Terminal.Gui.View.CanFocus
  - Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.SetFocus
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.Text
  - Terminal.Gui.View.TextFormatter
  - Terminal.Gui.View.UpdateTextFormatterText
  - Terminal.Gui.View.PreserveTrailingSpaces
  - Terminal.Gui.View.TextAlignment
  - Terminal.Gui.View.VerticalTextAlignment
  - Terminal.Gui.View.TextDirection
  - Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  - Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  - Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  - Terminal.Gui.Responder.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
- uid: Terminal.Gui.TreeView`1.TreeBuilder
  commentId: P:Terminal.Gui.TreeView`1.TreeBuilder
  id: TreeBuilder
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: TreeBuilder
  nameWithType: TreeView<T>.TreeBuilder
  fullName: Terminal.Gui.TreeView<T>.TreeBuilder
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TreeBuilder
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 69
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Determines how sub branches of the tree are dynamically built at runtime as the user

    expands root nodes.
  example: []
  syntax:
    content: public ITreeBuilder<T> TreeBuilder { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.ITreeBuilder{{T}}
      description: ''
    content.vb: Public Property TreeBuilder As ITreeBuilder(Of T)
  overload: Terminal.Gui.TreeView`1.TreeBuilder*
  nameWithType.vb: TreeView(Of T).TreeBuilder
  fullName.vb: Terminal.Gui.TreeView(Of T).TreeBuilder
- uid: Terminal.Gui.TreeView`1.Style
  commentId: P:Terminal.Gui.TreeView`1.Style
  id: Style
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Style
  nameWithType: TreeView<T>.Style
  fullName: Terminal.Gui.TreeView<T>.Style
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Style
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 79
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Contains options for changing how the tree is rendered.
  example: []
  syntax:
    content: public TreeStyle Style { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.TreeStyle
    content.vb: Public Property Style As TreeStyle
  overload: Terminal.Gui.TreeView`1.Style*
  implements:
  - Terminal.Gui.ITreeView.Style
  nameWithType.vb: TreeView(Of T).Style
  fullName.vb: Terminal.Gui.TreeView(Of T).Style
- uid: Terminal.Gui.TreeView`1.MultiSelect
  commentId: P:Terminal.Gui.TreeView`1.MultiSelect
  id: MultiSelect
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: MultiSelect
  nameWithType: TreeView<T>.MultiSelect
  fullName: Terminal.Gui.TreeView<T>.MultiSelect
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MultiSelect
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 85
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: True to allow multiple objects to be selected at once.
  example: []
  syntax:
    content: public bool MultiSelect { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Property MultiSelect As Boolean
  overload: Terminal.Gui.TreeView`1.MultiSelect*
  nameWithType.vb: TreeView(Of T).MultiSelect
  fullName.vb: Terminal.Gui.TreeView(Of T).MultiSelect
- uid: Terminal.Gui.TreeView`1.MaxDepth
  commentId: P:Terminal.Gui.TreeView`1.MaxDepth
  id: MaxDepth
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: MaxDepth
  nameWithType: TreeView<T>.MaxDepth
  fullName: Terminal.Gui.TreeView<T>.MaxDepth
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MaxDepth
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 90
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Maximum number of nodes that can be expanded in any given branch.
  example: []
  syntax:
    content: public int MaxDepth { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxDepth As Integer
  overload: Terminal.Gui.TreeView`1.MaxDepth*
  nameWithType.vb: TreeView(Of T).MaxDepth
  fullName.vb: Terminal.Gui.TreeView(Of T).MaxDepth
- uid: Terminal.Gui.TreeView`1.AllowLetterBasedNavigation
  commentId: P:Terminal.Gui.TreeView`1.AllowLetterBasedNavigation
  id: AllowLetterBasedNavigation
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AllowLetterBasedNavigation
  nameWithType: TreeView<T>.AllowLetterBasedNavigation
  fullName: Terminal.Gui.TreeView<T>.AllowLetterBasedNavigation
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AllowLetterBasedNavigation
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 97
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    True makes a letter key press navigate to the next visible branch that begins with

    that letter/digit.
  example: []
  syntax:
    content: public bool AllowLetterBasedNavigation { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Property AllowLetterBasedNavigation As Boolean
  overload: Terminal.Gui.TreeView`1.AllowLetterBasedNavigation*
  nameWithType.vb: TreeView(Of T).AllowLetterBasedNavigation
  fullName.vb: Terminal.Gui.TreeView(Of T).AllowLetterBasedNavigation
- uid: Terminal.Gui.TreeView`1.SelectedObject
  commentId: P:Terminal.Gui.TreeView`1.SelectedObject
  id: SelectedObject
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: SelectedObject
  nameWithType: TreeView<T>.SelectedObject
  fullName: Terminal.Gui.TreeView<T>.SelectedObject
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SelectedObject
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 103
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The currently selected object in the tree. When <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref> is true this

    is the object at which the cursor is at.
  example: []
  syntax:
    content: public T SelectedObject { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property SelectedObject As T
  overload: Terminal.Gui.TreeView`1.SelectedObject*
  nameWithType.vb: TreeView(Of T).SelectedObject
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectedObject
- uid: Terminal.Gui.TreeView`1.ObjectActivated
  commentId: E:Terminal.Gui.TreeView`1.ObjectActivated
  id: ObjectActivated
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ObjectActivated
  nameWithType: TreeView<T>.ObjectActivated
  fullName: Terminal.Gui.TreeView<T>.ObjectActivated
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ObjectActivated
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 119
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    This event is raised when an object is activated e.g. by double clicking or 

    pressing <xref href="Terminal.Gui.TreeView%601.ObjectActivationKey" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event EventHandler<ObjectActivatedEventArgs<T>> ObjectActivated
    return:
      type: System.EventHandler{Terminal.Gui.ObjectActivatedEventArgs{{T}}}
    content.vb: Public Event ObjectActivated As EventHandler(Of ObjectActivatedEventArgs(Of T))
  nameWithType.vb: TreeView(Of T).ObjectActivated
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivated
- uid: Terminal.Gui.TreeView`1.ObjectActivationKey
  commentId: P:Terminal.Gui.TreeView`1.ObjectActivationKey
  id: ObjectActivationKey
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ObjectActivationKey
  nameWithType: TreeView<T>.ObjectActivationKey
  fullName: Terminal.Gui.TreeView<T>.ObjectActivationKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ObjectActivationKey
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 125
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Key which when pressed triggers <xref href="Terminal.Gui.TreeView%601.ObjectActivated" data-throw-if-not-resolved="false"></xref>.

    Defaults to Enter.
  example: []
  syntax:
    content: public Key ObjectActivationKey { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public Property ObjectActivationKey As Key
  overload: Terminal.Gui.TreeView`1.ObjectActivationKey*
  nameWithType.vb: TreeView(Of T).ObjectActivationKey
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivationKey
- uid: Terminal.Gui.TreeView`1.ObjectActivationButton
  commentId: P:Terminal.Gui.TreeView`1.ObjectActivationButton
  id: ObjectActivationButton
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ObjectActivationButton
  nameWithType: TreeView<T>.ObjectActivationButton
  fullName: Terminal.Gui.TreeView<T>.ObjectActivationButton
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ObjectActivationButton
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 141
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Mouse event to trigger <xref href="Terminal.Gui.TreeView%601.ObjectActivated" data-throw-if-not-resolved="false"></xref>.

    Defaults to double click (<xref href="Terminal.Gui.MouseFlags.Button1DoubleClicked" data-throw-if-not-resolved="false"></xref>).

    Set to null to disable this feature.
  example: []
  syntax:
    content: public MouseFlags? ObjectActivationButton { get; set; }
    parameters: []
    return:
      type: System.Nullable{Terminal.Gui.MouseFlags}
      description: ''
    content.vb: Public Property ObjectActivationButton As MouseFlags?
  overload: Terminal.Gui.TreeView`1.ObjectActivationButton*
  nameWithType.vb: TreeView(Of T).ObjectActivationButton
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivationButton
- uid: Terminal.Gui.TreeView`1.ColorGetter
  commentId: P:Terminal.Gui.TreeView`1.ColorGetter
  id: ColorGetter
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ColorGetter
  nameWithType: TreeView<T>.ColorGetter
  fullName: Terminal.Gui.TreeView<T>.ColorGetter
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ColorGetter
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 147
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Delegate for multi colored tree views. Return the <xref href="Terminal.Gui.ColorScheme" data-throw-if-not-resolved="false"></xref> to use

    for each passed object or null to use the default.
  example: []
  syntax:
    content: public Func<T, ColorScheme> ColorGetter { get; set; }
    parameters: []
    return:
      type: System.Func{{T},Terminal.Gui.ColorScheme}
    content.vb: Public Property ColorGetter As Func(Of T, ColorScheme)
  overload: Terminal.Gui.TreeView`1.ColorGetter*
  nameWithType.vb: TreeView(Of T).ColorGetter
  fullName.vb: Terminal.Gui.TreeView(Of T).ColorGetter
- uid: Terminal.Gui.TreeView`1.NoBuilderError
  commentId: F:Terminal.Gui.TreeView`1.NoBuilderError
  id: NoBuilderError
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: NoBuilderError
  nameWithType: TreeView<T>.NoBuilderError
  fullName: Terminal.Gui.TreeView<T>.NoBuilderError
  type: Field
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NoBuilderError
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 163
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Error message to display when the control is not properly initialized at draw time 

    (nodes added but no tree builder set).
  example: []
  syntax:
    content: public static string NoBuilderError
    return:
      type: System.String
    content.vb: Public Shared NoBuilderError As String
  nameWithType.vb: TreeView(Of T).NoBuilderError
  fullName.vb: Terminal.Gui.TreeView(Of T).NoBuilderError
- uid: Terminal.Gui.TreeView`1.SelectionChanged
  commentId: E:Terminal.Gui.TreeView`1.SelectionChanged
  id: SelectionChanged
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: SelectionChanged
  nameWithType: TreeView<T>.SelectionChanged
  fullName: Terminal.Gui.TreeView<T>.SelectionChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SelectionChanged
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 169
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Called when the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> changes.
  example: []
  syntax:
    content: public event EventHandler<SelectionChangedEventArgs<T>> SelectionChanged
    return:
      type: System.EventHandler{Terminal.Gui.SelectionChangedEventArgs{{T}}}
    content.vb: Public Event SelectionChanged As EventHandler(Of SelectionChangedEventArgs(Of T))
  nameWithType.vb: TreeView(Of T).SelectionChanged
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectionChanged
- uid: Terminal.Gui.TreeView`1.DrawLine
  commentId: E:Terminal.Gui.TreeView`1.DrawLine
  id: DrawLine
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: DrawLine
  nameWithType: TreeView<T>.DrawLine
  fullName: Terminal.Gui.TreeView<T>.DrawLine
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DrawLine
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 175
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called once for each visible row during rendering.  Can be used

    to make last minute changes to color or text rendered
  example: []
  syntax:
    content: public event EventHandler<DrawTreeViewLineEventArgs<T>> DrawLine
    return:
      type: System.EventHandler{Terminal.Gui.DrawTreeViewLineEventArgs{{T}}}
    content.vb: Public Event DrawLine As EventHandler(Of DrawTreeViewLineEventArgs(Of T))
  nameWithType.vb: TreeView(Of T).DrawLine
  fullName.vb: Terminal.Gui.TreeView(Of T).DrawLine
- uid: Terminal.Gui.TreeView`1.Objects
  commentId: P:Terminal.Gui.TreeView`1.Objects
  id: Objects
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Objects
  nameWithType: TreeView<T>.Objects
  fullName: Terminal.Gui.TreeView<T>.Objects
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Objects
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 180
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The root objects in the tree, note that this collection is of root objects only.
  example: []
  syntax:
    content: public IEnumerable<T> Objects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public ReadOnly Property Objects As IEnumerable(Of T)
  overload: Terminal.Gui.TreeView`1.Objects*
  nameWithType.vb: TreeView(Of T).Objects
  fullName.vb: Terminal.Gui.TreeView(Of T).Objects
- uid: Terminal.Gui.TreeView`1.ScrollOffsetVertical
  commentId: P:Terminal.Gui.TreeView`1.ScrollOffsetVertical
  id: ScrollOffsetVertical
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ScrollOffsetVertical
  nameWithType: TreeView<T>.ScrollOffsetVertical
  fullName: Terminal.Gui.TreeView<T>.ScrollOffsetVertical
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScrollOffsetVertical
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 194
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The amount of tree view that has been scrolled off the top of the screen (by the user 

    scrolling down).
  remarks: >-
    Setting a value of less than 0 will result in a offset of 0. To see changes 
        in the UI call <xref href="Terminal.Gui.View.SetNeedsDisplay" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int ScrollOffsetVertical { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ScrollOffsetVertical As Integer
  overload: Terminal.Gui.TreeView`1.ScrollOffsetVertical*
  nameWithType.vb: TreeView(Of T).ScrollOffsetVertical
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollOffsetVertical
- uid: Terminal.Gui.TreeView`1.ScrollOffsetHorizontal
  commentId: P:Terminal.Gui.TreeView`1.ScrollOffsetHorizontal
  id: ScrollOffsetHorizontal
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ScrollOffsetHorizontal
  nameWithType: TreeView<T>.ScrollOffsetHorizontal
  fullName: Terminal.Gui.TreeView<T>.ScrollOffsetHorizontal
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScrollOffsetHorizontal
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 206
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The amount of tree view that has been scrolled to the right (horizontally).
  remarks: >-
    Setting a value of less than 0 will result in a offset of 0. To see changes 
        in the UI call <xref href="Terminal.Gui.View.SetNeedsDisplay" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public int ScrollOffsetHorizontal { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ScrollOffsetHorizontal As Integer
  overload: Terminal.Gui.TreeView`1.ScrollOffsetHorizontal*
  nameWithType.vb: TreeView(Of T).ScrollOffsetHorizontal
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollOffsetHorizontal
- uid: Terminal.Gui.TreeView`1.ContentHeight
  commentId: P:Terminal.Gui.TreeView`1.ContentHeight
  id: ContentHeight
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ContentHeight
  nameWithType: TreeView<T>.ContentHeight
  fullName: Terminal.Gui.TreeView<T>.ContentHeight
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ContentHeight
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 216
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The current number of rows in the tree (ignoring the controls bounds).
  example: []
  syntax:
    content: public int ContentHeight { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ContentHeight As Integer
  overload: Terminal.Gui.TreeView`1.ContentHeight*
  nameWithType.vb: TreeView(Of T).ContentHeight
  fullName.vb: Terminal.Gui.TreeView(Of T).ContentHeight
- uid: Terminal.Gui.TreeView`1.AspectGetter
  commentId: P:Terminal.Gui.TreeView`1.AspectGetter
  id: AspectGetter
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AspectGetter
  nameWithType: TreeView<T>.AspectGetter
  fullName: Terminal.Gui.TreeView<T>.AspectGetter
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AspectGetter
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 223
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the string representation of model objects hosted in the tree. Default 

    implementation is to call <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AspectGetterDelegate<T> AspectGetter { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.AspectGetterDelegate{{T}}
      description: ''
    content.vb: Public Property AspectGetter As AspectGetterDelegate(Of T)
  overload: Terminal.Gui.TreeView`1.AspectGetter*
  nameWithType.vb: TreeView(Of T).AspectGetter
  fullName.vb: Terminal.Gui.TreeView(Of T).AspectGetter
- uid: Terminal.Gui.TreeView`1.Filter
  commentId: F:Terminal.Gui.TreeView`1.Filter
  id: Filter
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: TreeView<T>.Filter
  fullName: Terminal.Gui.TreeView<T>.Filter
  type: Field
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Filter
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 232
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Interface for filtering which lines of the tree are displayed
     e.g. to provide text searching.  Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>
    (no filtering).
  example: []
  syntax:
    content: public ITreeViewFilter<T> Filter
    return:
      type: Terminal.Gui.ITreeViewFilter{{T}}
    content.vb: Public Filter As ITreeViewFilter(Of T)
  nameWithType.vb: TreeView(Of T).Filter
  fullName.vb: Terminal.Gui.TreeView(Of T).Filter
- uid: Terminal.Gui.TreeView`1.DesiredCursorVisibility
  commentId: P:Terminal.Gui.TreeView`1.DesiredCursorVisibility
  id: DesiredCursorVisibility
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: DesiredCursorVisibility
  nameWithType: TreeView<T>.DesiredCursorVisibility
  fullName: Terminal.Gui.TreeView<T>.DesiredCursorVisibility
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DesiredCursorVisibility
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 239
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Get / Set the wished cursor when the tree is focused.

    Only applies when <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref> is true.

    Defaults to <xref href="Terminal.Gui.CursorVisibility.Invisible" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CursorVisibility DesiredCursorVisibility { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.CursorVisibility
    content.vb: Public Property DesiredCursorVisibility As CursorVisibility
  overload: Terminal.Gui.TreeView`1.DesiredCursorVisibility*
  nameWithType.vb: TreeView(Of T).DesiredCursorVisibility
  fullName.vb: Terminal.Gui.TreeView(Of T).DesiredCursorVisibility
- uid: Terminal.Gui.TreeView`1.#ctor
  commentId: M:Terminal.Gui.TreeView`1.#ctor
  id: '#ctor'
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: TreeView()
  nameWithType: TreeView<T>.TreeView()
  fullName: Terminal.Gui.TreeView<T>.TreeView()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 258
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Creates a new tree view with absolute positioning. 

    Use <xref href="Terminal.Gui.TreeView%601.AddObjects(System.Collections.Generic.IEnumerable%7b%600%7d)" data-throw-if-not-resolved="false"></xref> to set set root objects for the tree.

    Children will not be rendered until you set <xref href="Terminal.Gui.TreeView%601.TreeBuilder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TreeView()
    content.vb: Public Sub New()
  overload: Terminal.Gui.TreeView`1.#ctor*
  nameWithType.vb: TreeView(Of T).New()
  fullName.vb: Terminal.Gui.TreeView(Of T).New()
  name.vb: New()
- uid: Terminal.Gui.TreeView`1.#ctor(Terminal.Gui.ITreeBuilder{`0})
  commentId: M:Terminal.Gui.TreeView`1.#ctor(Terminal.Gui.ITreeBuilder{`0})
  id: '#ctor(Terminal.Gui.ITreeBuilder{`0})'
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: TreeView(ITreeBuilder<T>)
  nameWithType: TreeView<T>.TreeView(ITreeBuilder<T>)
  fullName: Terminal.Gui.TreeView<T>.TreeView(Terminal.Gui.ITreeBuilder<T>)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 316
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initialises <xref href="Terminal.Gui.TreeView%601.TreeBuilder" data-throw-if-not-resolved="false"></xref>.Creates a new tree view with absolute 

    positioning. Use <xref href="Terminal.Gui.TreeView%601.AddObjects(System.Collections.Generic.IEnumerable%7b%600%7d)" data-throw-if-not-resolved="false"></xref> to set set root 

    objects for the tree.
  example: []
  syntax:
    content: public TreeView(ITreeBuilder<T> builder)
    parameters:
    - id: builder
      type: Terminal.Gui.ITreeBuilder{{T}}
    content.vb: Public Sub New(builder As ITreeBuilder(Of T))
  overload: Terminal.Gui.TreeView`1.#ctor*
  nameWithType.vb: TreeView(Of T).New(ITreeBuilder(Of T))
  fullName.vb: Terminal.Gui.TreeView(Of T).New(Terminal.Gui.ITreeBuilder(Of T))
  name.vb: New(ITreeBuilder(Of T))
- uid: Terminal.Gui.TreeView`1.OnEnter(Terminal.Gui.View)
  commentId: M:Terminal.Gui.TreeView`1.OnEnter(Terminal.Gui.View)
  id: OnEnter(Terminal.Gui.View)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: OnEnter(View)
  nameWithType: TreeView<T>.OnEnter(View)
  fullName: Terminal.Gui.TreeView<T>.OnEnter(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnEnter
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 322
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a view gets focus.
  example: []
  syntax:
    content: public override bool OnEnter(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The view that is losing focus.
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function OnEnter(view As View) As Boolean
  overridden: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  overload: Terminal.Gui.TreeView`1.OnEnter*
  nameWithType.vb: TreeView(Of T).OnEnter(View)
  fullName.vb: Terminal.Gui.TreeView(Of T).OnEnter(Terminal.Gui.View)
- uid: Terminal.Gui.TreeView`1.AddObject(`0)
  commentId: M:Terminal.Gui.TreeView`1.AddObject(`0)
  id: AddObject(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AddObject(T)
  nameWithType: TreeView<T>.AddObject(T)
  fullName: Terminal.Gui.TreeView<T>.AddObject(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddObject
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 337
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds a new root level object unless it is already a root of the tree.
  example: []
  syntax:
    content: public void AddObject(T o)
    parameters:
    - id: o
      type: '{T}'
      description: ''
    content.vb: Public Sub AddObject(o As T)
  overload: Terminal.Gui.TreeView`1.AddObject*
  nameWithType.vb: TreeView(Of T).AddObject(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).AddObject(T)
- uid: Terminal.Gui.TreeView`1.ClearObjects
  commentId: M:Terminal.Gui.TreeView`1.ClearObjects
  id: ClearObjects
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ClearObjects()
  nameWithType: TreeView<T>.ClearObjects()
  fullName: Terminal.Gui.TreeView<T>.ClearObjects()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ClearObjects
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 349
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes all objects from the tree and clears <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void ClearObjects()
    content.vb: Public Sub ClearObjects()
  overload: Terminal.Gui.TreeView`1.ClearObjects*
  implements:
  - Terminal.Gui.ITreeView.ClearObjects
  nameWithType.vb: TreeView(Of T).ClearObjects()
  fullName.vb: Terminal.Gui.TreeView(Of T).ClearObjects()
- uid: Terminal.Gui.TreeView`1.Remove(`0)
  commentId: M:Terminal.Gui.TreeView`1.Remove(`0)
  id: Remove(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: TreeView<T>.Remove(T)
  fullName: Terminal.Gui.TreeView<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Remove
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 364
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Removes the given root object from the tree
  remarks: >-
    If <code class="paramref">o</code> is the currently <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> then the
        selection is cleared
  example: []
  syntax:
    content: public void Remove(T o)
    parameters:
    - id: o
      type: '{T}'
      description: ''
    content.vb: Public Sub Remove(o As T)
  overload: Terminal.Gui.TreeView`1.Remove*
  nameWithType.vb: TreeView(Of T).Remove(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).Remove(T)
- uid: Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  id: AddObjects(System.Collections.Generic.IEnumerable{`0})
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AddObjects(IEnumerable<T>)
  nameWithType: TreeView<T>.AddObjects(IEnumerable<T>)
  fullName: Terminal.Gui.TreeView<T>.AddObjects(System.Collections.Generic.IEnumerable<T>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddObjects
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 381
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds many new root level objects. Objects that are already root objects are ignored.
  example: []
  syntax:
    content: public void AddObjects(IEnumerable<T> collection)
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Objects to add as new root level objects.
    content.vb: Public Sub AddObjects(collection As IEnumerable(Of T))
  overload: Terminal.Gui.TreeView`1.AddObjects*
  nameWithType.vb: TreeView(Of T).AddObjects(IEnumerable(Of T))
  fullName.vb: Terminal.Gui.TreeView(Of T).AddObjects(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddObjects(IEnumerable(Of T))
- uid: Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  id: RefreshObject(`0,System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: RefreshObject(T, bool)
  nameWithType: TreeView<T>.RefreshObject(T, bool)
  fullName: Terminal.Gui.TreeView<T>.RefreshObject(T, bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RefreshObject
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 406
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Refreshes the state of the object <code class="paramref">o</code> in the tree. This will 

    recompute children, string representation etc.
  remarks: This has no effect if the object is not exposed in the tree.
  example: []
  syntax:
    content: public void RefreshObject(T o, bool startAtTop = false)
    parameters:
    - id: o
      type: '{T}'
      description: ''
    - id: startAtTop
      type: System.Boolean
      description: >-
        True to also refresh all ancestors of the objects branch 
            (starting with the root). False to refresh only the passed node.
    content.vb: Public Sub RefreshObject(o As T, startAtTop As Boolean = False)
  overload: Terminal.Gui.TreeView`1.RefreshObject*
  nameWithType.vb: TreeView(Of T).RefreshObject(T, Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).RefreshObject(T, Boolean)
  name.vb: RefreshObject(T, Boolean)
- uid: Terminal.Gui.TreeView`1.RebuildTree
  commentId: M:Terminal.Gui.TreeView`1.RebuildTree
  id: RebuildTree
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: RebuildTree()
  nameWithType: TreeView<T>.RebuildTree()
  fullName: Terminal.Gui.TreeView<T>.RebuildTree()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RebuildTree
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 422
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Rebuilds the tree structure for all exposed objects starting with the root objects.

    Call this method when you know there are changes to the tree but don't know which 

    objects have changed (otherwise use <xref href="Terminal.Gui.TreeView%601.RefreshObject(%600%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public void RebuildTree()
    content.vb: Public Sub RebuildTree()
  overload: Terminal.Gui.TreeView`1.RebuildTree*
  nameWithType.vb: TreeView(Of T).RebuildTree()
  fullName.vb: Terminal.Gui.TreeView(Of T).RebuildTree()
- uid: Terminal.Gui.TreeView`1.GetChildren(`0)
  commentId: M:Terminal.Gui.TreeView`1.GetChildren(`0)
  id: GetChildren(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetChildren(T)
  nameWithType: TreeView<T>.GetChildren(T)
  fullName: Terminal.Gui.TreeView<T>.GetChildren(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetChildren
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 438
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the currently expanded children of the passed object. Returns an empty

    collection if the branch is not exposed or not expanded.
  example: []
  syntax:
    content: public IEnumerable<T> GetChildren(T o)
    parameters:
    - id: o
      type: '{T}'
      description: An object in the tree.
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    content.vb: Public Function GetChildren(o As T) As IEnumerable(Of T)
  overload: Terminal.Gui.TreeView`1.GetChildren*
  nameWithType.vb: TreeView(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetChildren(T)
- uid: Terminal.Gui.TreeView`1.GetParent(`0)
  commentId: M:Terminal.Gui.TreeView`1.GetParent(`0)
  id: GetParent(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetParent(T)
  nameWithType: TreeView<T>.GetParent(T)
  fullName: Terminal.Gui.TreeView<T>.GetParent(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetParent
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 454
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the parent object of <code class="paramref">o</code> in the tree. Returns null if 

    the object is not exposed in the tree.
  example: []
  syntax:
    content: public T GetParent(T o)
    parameters:
    - id: o
      type: '{T}'
      description: An object in the tree.
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetParent(o As T) As T
  overload: Terminal.Gui.TreeView`1.GetParent*
  nameWithType.vb: TreeView(Of T).GetParent(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetParent(T)
- uid: Terminal.Gui.TreeView`1.OnDrawContent(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TreeView`1.OnDrawContent(Terminal.Gui.Rect)
  id: OnDrawContent(Terminal.Gui.Rect)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: OnDrawContent(Rect)
  nameWithType: TreeView<T>.OnDrawContent(Rect)
  fullName: Terminal.Gui.TreeView<T>.OnDrawContent(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnDrawContent
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 460
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Enables overrides to draw infinitely scrolled content and/or a background behind added controls.
  remarks: This method will be called before any subviews added with <xref href="Terminal.Gui.View.Add(Terminal.Gui.View)" data-throw-if-not-resolved="false"></xref> have been drawn.
  example: []
  syntax:
    content: public override void OnDrawContent(Rect contentArea)
    parameters:
    - id: contentArea
      type: Terminal.Gui.Rect
      description: The view-relative rectangle describing the currently visible viewport into the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Overrides Sub OnDrawContent(contentArea As Rect)
  overridden: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  overload: Terminal.Gui.TreeView`1.OnDrawContent*
  nameWithType.vb: TreeView(Of T).OnDrawContent(Rect)
  fullName.vb: Terminal.Gui.TreeView(Of T).OnDrawContent(Terminal.Gui.Rect)
- uid: Terminal.Gui.TreeView`1.GetScrollOffsetOf(`0)
  commentId: M:Terminal.Gui.TreeView`1.GetScrollOffsetOf(`0)
  id: GetScrollOffsetOf(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetScrollOffsetOf(T)
  nameWithType: TreeView<T>.GetScrollOffsetOf(T)
  fullName: Terminal.Gui.TreeView<T>.GetScrollOffsetOf(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetScrollOffsetOf
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 502
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the index of the object <code class="paramref">o</code> if it is currently exposed (it's 

    parent(s) have been expanded). This can be used with <xref href="Terminal.Gui.TreeView%601.ScrollOffsetVertical" data-throw-if-not-resolved="false"></xref>

    and <xref href="Terminal.Gui.View.SetNeedsDisplay" data-throw-if-not-resolved="false"></xref> to scroll to a specific object.
  remarks: >-
    Uses the Equals method and returns the first index at which the object is found
        or -1 if it is not found.
  example: []
  syntax:
    content: public int GetScrollOffsetOf(T o)
    parameters:
    - id: o
      type: '{T}'
      description: An object that appears in your tree and is currently exposed.
    return:
      type: System.Int32
      description: >-
        The index the object was found at or -1 if it is not currently revealed or
            not in the tree at all.
    content.vb: Public Function GetScrollOffsetOf(o As T) As Integer
  overload: Terminal.Gui.TreeView`1.GetScrollOffsetOf*
  nameWithType.vb: TreeView(Of T).GetScrollOffsetOf(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetScrollOffsetOf(T)
- uid: Terminal.Gui.TreeView`1.GetContentWidth(System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.GetContentWidth(System.Boolean)
  id: GetContentWidth(System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetContentWidth(bool)
  nameWithType: TreeView<T>.GetContentWidth(bool)
  fullName: Terminal.Gui.TreeView<T>.GetContentWidth(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetContentWidth
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 522
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the maximum width line in the tree including prefix and expansion symbols.
  example: []
  syntax:
    content: public int GetContentWidth(bool visible)
    parameters:
    - id: visible
      type: System.Boolean
      description: >-
        True to consider only rows currently visible (based on window
            bounds and <xref href="Terminal.Gui.TreeView%601.ScrollOffsetVertical" data-throw-if-not-resolved="false"></xref>. False to calculate the width of 
            every exposed branch in the tree.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetContentWidth(visible As Boolean) As Integer
  overload: Terminal.Gui.TreeView`1.GetContentWidth*
  nameWithType.vb: TreeView(Of T).GetContentWidth(Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetContentWidth(Boolean)
  name.vb: GetContentWidth(Boolean)
- uid: Terminal.Gui.TreeView`1.KeystrokeNavigator
  commentId: P:Terminal.Gui.TreeView`1.KeystrokeNavigator
  id: KeystrokeNavigator
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: KeystrokeNavigator
  nameWithType: TreeView<T>.KeystrokeNavigator
  fullName: Terminal.Gui.TreeView<T>.KeystrokeNavigator
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeystrokeNavigator
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 620
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the <xref href="Terminal.Gui.CollectionNavigator" data-throw-if-not-resolved="false"></xref> that searches the <xref href="Terminal.Gui.TreeView%601.Objects" data-throw-if-not-resolved="false"></xref> collection as

    the user types.
  example: []
  syntax:
    content: public CollectionNavigator KeystrokeNavigator { get; }
    parameters: []
    return:
      type: Terminal.Gui.CollectionNavigator
    content.vb: Public Property KeystrokeNavigator As CollectionNavigator
  overload: Terminal.Gui.TreeView`1.KeystrokeNavigator*
  nameWithType.vb: TreeView(Of T).KeystrokeNavigator
  fullName.vb: Terminal.Gui.TreeView(Of T).KeystrokeNavigator
- uid: Terminal.Gui.TreeView`1.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.TreeView`1.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: TreeView<T>.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.TreeView<T>.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ProcessKey
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 623
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    If the view is focused, gives the view a

    chance to process the keystroke.
  remarks: >-
    <p>
            Views can override this method if they are
            interested in processing the given keystroke.
            If they consume the keystroke, they must
            return true to stop the keystroke from being
            processed by other widgets or consumed by the
            widget engine.    If they return false, the
            keystroke will be passed using the ProcessColdKey
            method to other views to process.
          </p>
    <p>
            The View implementation does nothing but return false,
            so it is not necessary to call base.ProcessKey if you
            derive directly from View, but you should if you derive
            other View subclasses.
          </p>
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
      description: Contains the details about the key that produced the event.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessKey(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.TreeView`1.ProcessKey*
  nameWithType.vb: TreeView(Of T).ProcessKey(KeyEvent)
  fullName.vb: Terminal.Gui.TreeView(Of T).ProcessKey(Terminal.Gui.KeyEvent)
- uid: Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny
  commentId: M:Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny
  id: ActivateSelectedObjectIfAny
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ActivateSelectedObjectIfAny()
  nameWithType: TreeView<T>.ActivateSelectedObjectIfAny()
  fullName: Terminal.Gui.TreeView<T>.ActivateSelectedObjectIfAny()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ActivateSelectedObjectIfAny
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 667
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>Triggers the <xref href="Terminal.Gui.TreeView%601.ObjectActivated" data-throw-if-not-resolved="false"></xref> event with the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref>.</p>


    <p>This method also ensures that the selected object is visible.</p>
  example: []
  syntax:
    content: public void ActivateSelectedObjectIfAny()
    content.vb: Public Sub ActivateSelectedObjectIfAny()
  overload: Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny*
  nameWithType.vb: TreeView(Of T).ActivateSelectedObjectIfAny()
  fullName.vb: Terminal.Gui.TreeView(Of T).ActivateSelectedObjectIfAny()
- uid: Terminal.Gui.TreeView`1.GetObjectRow(`0)
  commentId: M:Terminal.Gui.TreeView`1.GetObjectRow(`0)
  id: GetObjectRow(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetObjectRow(T)
  nameWithType: TreeView<T>.GetObjectRow(T)
  fullName: Terminal.Gui.TreeView<T>.GetObjectRow(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetObjectRow
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 690
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>

    Returns the Y coordinate within the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> of the

    tree at which <code class="paramref">toFind</code> would be displayed or null if

    it is not currently exposed (e.g. its parent is collapsed).

    </p>

    <p>

    Note that the returned value can be negative if the TreeView is scrolled

    down and the <code class="paramref">toFind</code> object is off the top of the view.

    </p>
  example: []
  syntax:
    content: public int? GetObjectRow(T toFind)
    parameters:
    - id: toFind
      type: '{T}'
      description: ''
    return:
      type: System.Nullable{System.Int32}
      description: ''
    content.vb: Public Function GetObjectRow(toFind As T) As Integer?
  overload: Terminal.Gui.TreeView`1.GetObjectRow*
  nameWithType.vb: TreeView(Of T).GetObjectRow(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetObjectRow(T)
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith(System.Char,System.StringComparison)
  commentId: M:Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith(System.Char,System.StringComparison)
  id: AdjustSelectionToNextItemBeginningWith(System.Char,System.StringComparison)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AdjustSelectionToNextItemBeginningWith(char, StringComparison)
  nameWithType: TreeView<T>.AdjustSelectionToNextItemBeginningWith(char, StringComparison)
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToNextItemBeginningWith(char, System.StringComparison)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AdjustSelectionToNextItemBeginningWith
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 706
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>Moves the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> to the next item that begins with <code class="paramref">character</code>.</p>

    <p>This method will loop back to the start of the tree if reaching the end without finding a match.</p>
  example: []
  syntax:
    content: public void AdjustSelectionToNextItemBeginningWith(char character, StringComparison caseSensitivity = StringComparison.CurrentCultureIgnoreCase)
    parameters:
    - id: character
      type: System.Char
      description: The first character of the next item you want selected.
    - id: caseSensitivity
      type: System.StringComparison
      description: Case sensitivity of the search.
    content.vb: Public Sub AdjustSelectionToNextItemBeginningWith(character As Char, caseSensitivity As StringComparison = StringComparison.CurrentCultureIgnoreCase)
  overload: Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith*
  nameWithType.vb: TreeView(Of T).AdjustSelectionToNextItemBeginningWith(Char, StringComparison)
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToNextItemBeginningWith(Char, System.StringComparison)
  name.vb: AdjustSelectionToNextItemBeginningWith(Char, StringComparison)
- uid: Terminal.Gui.TreeView`1.MovePageUp(System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.MovePageUp(System.Boolean)
  id: MovePageUp(System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: MovePageUp(bool)
  nameWithType: TreeView<T>.MovePageUp(bool)
  fullName: Terminal.Gui.TreeView<T>.MovePageUp(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MovePageUp
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 720
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the selection up by the height of the control (1 page).
  example: []
  syntax:
    content: public void MovePageUp(bool expandSelection = false)
    parameters:
    - id: expandSelection
      type: System.Boolean
      description: True if the navigation should add the covered nodes to the selected current selection.
    content.vb: Public Sub MovePageUp(expandSelection As Boolean = False)
  overload: Terminal.Gui.TreeView`1.MovePageUp*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: ''
  nameWithType.vb: TreeView(Of T).MovePageUp(Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).MovePageUp(Boolean)
  name.vb: MovePageUp(Boolean)
- uid: Terminal.Gui.TreeView`1.MovePageDown(System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.MovePageDown(System.Boolean)
  id: MovePageDown(System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: MovePageDown(bool)
  nameWithType: TreeView<T>.MovePageDown(bool)
  fullName: Terminal.Gui.TreeView<T>.MovePageDown(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MovePageDown
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 730
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the selection down by the height of the control (1 page).
  example: []
  syntax:
    content: public void MovePageDown(bool expandSelection = false)
    parameters:
    - id: expandSelection
      type: System.Boolean
      description: True if the navigation should add the covered nodes to the selected current selection.
    content.vb: Public Sub MovePageDown(expandSelection As Boolean = False)
  overload: Terminal.Gui.TreeView`1.MovePageDown*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: ''
  nameWithType.vb: TreeView(Of T).MovePageDown(Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).MovePageDown(Boolean)
  name.vb: MovePageDown(Boolean)
- uid: Terminal.Gui.TreeView`1.ScrollDown
  commentId: M:Terminal.Gui.TreeView`1.ScrollDown
  id: ScrollDown
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ScrollDown()
  nameWithType: TreeView<T>.ScrollDown()
  fullName: Terminal.Gui.TreeView<T>.ScrollDown()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScrollDown
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 738
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Scrolls the view area down a single line without changing the current selection.
  example: []
  syntax:
    content: public void ScrollDown()
    content.vb: Public Sub ScrollDown()
  overload: Terminal.Gui.TreeView`1.ScrollDown*
  nameWithType.vb: TreeView(Of T).ScrollDown()
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollDown()
- uid: Terminal.Gui.TreeView`1.ScrollUp
  commentId: M:Terminal.Gui.TreeView`1.ScrollUp
  id: ScrollUp
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ScrollUp()
  nameWithType: TreeView<T>.ScrollUp()
  fullName: Terminal.Gui.TreeView<T>.ScrollUp()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ScrollUp
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 749
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Scrolls the view area up a single line without changing the current selection.
  example: []
  syntax:
    content: public void ScrollUp()
    content.vb: Public Sub ScrollUp()
  overload: Terminal.Gui.TreeView`1.ScrollUp*
  nameWithType.vb: TreeView(Of T).ScrollUp()
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollUp()
- uid: Terminal.Gui.TreeView`1.OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs{`0})
  commentId: M:Terminal.Gui.TreeView`1.OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs{`0})
  id: OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs{`0})
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: OnObjectActivated(ObjectActivatedEventArgs<T>)
  nameWithType: TreeView<T>.OnObjectActivated(ObjectActivatedEventArgs<T>)
  fullName: Terminal.Gui.TreeView<T>.OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs<T>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnObjectActivated
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 761
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Raises the <xref href="Terminal.Gui.TreeView%601.ObjectActivated" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: protected virtual void OnObjectActivated(ObjectActivatedEventArgs<T> e)
    parameters:
    - id: e
      type: Terminal.Gui.ObjectActivatedEventArgs{{T}}
      description: ''
    content.vb: Protected Overridable Sub OnObjectActivated(e As ObjectActivatedEventArgs(Of T))
  overload: Terminal.Gui.TreeView`1.OnObjectActivated*
  nameWithType.vb: TreeView(Of T).OnObjectActivated(ObjectActivatedEventArgs(Of T))
  fullName.vb: Terminal.Gui.TreeView(Of T).OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs(Of T))
  name.vb: OnObjectActivated(ObjectActivatedEventArgs(Of T))
- uid: Terminal.Gui.TreeView`1.GetObjectOnRow(System.Int32)
  commentId: M:Terminal.Gui.TreeView`1.GetObjectOnRow(System.Int32)
  id: GetObjectOnRow(System.Int32)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetObjectOnRow(int)
  nameWithType: TreeView<T>.GetObjectOnRow(int)
  fullName: Terminal.Gui.TreeView<T>.GetObjectOnRow(int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetObjectOnRow
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 776
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the object in the tree list that is currently visible.

    at the provided row. Returns null if no object is at that location.

    <remarks>

    </remarks>

    If you have screen coordinates then use <xref href="Terminal.Gui.View.ScreenToFrame(System.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref>

    to translate these into the client area of the <xref href="Terminal.Gui.TreeView%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public T GetObjectOnRow(int row)
    parameters:
    - id: row
      type: System.Int32
      description: The row of the <xref href="Terminal.Gui.View.Bounds" data-throw-if-not-resolved="false"></xref> of the <xref href="Terminal.Gui.TreeView%601" data-throw-if-not-resolved="false"></xref>.
    return:
      type: '{T}'
      description: The object currently displayed on this row or null.
    content.vb: Public Function GetObjectOnRow(row As Integer) As T
  overload: Terminal.Gui.TreeView`1.GetObjectOnRow*
  nameWithType.vb: TreeView(Of T).GetObjectOnRow(Integer)
  fullName.vb: Terminal.Gui.TreeView(Of T).GetObjectOnRow(Integer)
  name.vb: GetObjectOnRow(Integer)
- uid: Terminal.Gui.TreeView`1.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.TreeView`1.MouseEvent(Terminal.Gui.MouseEvent)
  id: MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: MouseEvent(MouseEvent)
  nameWithType: TreeView<T>.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.TreeView<T>.MouseEvent(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MouseEvent
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 782
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Method invoked when a mouse event is generated
  example: []
  syntax:
    content: public override bool MouseEvent(MouseEvent me)
    parameters:
    - id: me
      type: Terminal.Gui.MouseEvent
    return:
      type: System.Boolean
      description: <code>true</code>, if the event was handled, <code>false</code> otherwise.
    content.vb: Public Overrides Function MouseEvent([me] As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.TreeView`1.MouseEvent*
  nameWithType.vb: TreeView(Of T).MouseEvent(MouseEvent)
  fullName.vb: Terminal.Gui.TreeView(Of T).MouseEvent(Terminal.Gui.MouseEvent)
- uid: Terminal.Gui.TreeView`1.PositionCursor
  commentId: M:Terminal.Gui.TreeView`1.PositionCursor
  id: PositionCursor
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: PositionCursor()
  nameWithType: TreeView<T>.PositionCursor()
  fullName: Terminal.Gui.TreeView<T>.PositionCursor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PositionCursor
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 911
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Positions the cursor at the start of the selected objects line (if visible).
  example: []
  syntax:
    content: public override void PositionCursor()
    content.vb: Public Overrides Sub PositionCursor()
  overridden: Terminal.Gui.View.PositionCursor
  overload: Terminal.Gui.TreeView`1.PositionCursor*
  nameWithType.vb: TreeView(Of T).PositionCursor()
  fullName.vb: Terminal.Gui.TreeView(Of T).PositionCursor()
- uid: Terminal.Gui.TreeView`1.CursorLeft(System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.CursorLeft(System.Boolean)
  id: CursorLeft(System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: CursorLeft(bool)
  nameWithType: TreeView<T>.CursorLeft(bool)
  fullName: Terminal.Gui.TreeView<T>.CursorLeft(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CursorLeft
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 935
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Determines systems behaviour when the left arrow key is pressed. Default behaviour is

    to collapse the current tree node if possible otherwise changes selection to current 

    branches parent.
  example: []
  syntax:
    content: protected virtual void CursorLeft(bool ctrl)
    parameters:
    - id: ctrl
      type: System.Boolean
    content.vb: Protected Overridable Sub CursorLeft(ctrl As Boolean)
  overload: Terminal.Gui.TreeView`1.CursorLeft*
  nameWithType.vb: TreeView(Of T).CursorLeft(Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).CursorLeft(Boolean)
  name.vb: CursorLeft(Boolean)
- uid: Terminal.Gui.TreeView`1.GoToFirst
  commentId: M:Terminal.Gui.TreeView`1.GoToFirst
  id: GoToFirst
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GoToFirst()
  nameWithType: TreeView<T>.GoToFirst()
  fullName: Terminal.Gui.TreeView<T>.GoToFirst()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GoToFirst
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 959
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Changes the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> to the first root object and resets 

    the <xref href="Terminal.Gui.TreeView%601.ScrollOffsetVertical" data-throw-if-not-resolved="false"></xref> to 0.
  example: []
  syntax:
    content: public void GoToFirst()
    content.vb: Public Sub GoToFirst()
  overload: Terminal.Gui.TreeView`1.GoToFirst*
  nameWithType.vb: TreeView(Of T).GoToFirst()
  fullName.vb: Terminal.Gui.TreeView(Of T).GoToFirst()
- uid: Terminal.Gui.TreeView`1.GoToEnd
  commentId: M:Terminal.Gui.TreeView`1.GoToEnd
  id: GoToEnd
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GoToEnd()
  nameWithType: TreeView<T>.GoToEnd()
  fullName: Terminal.Gui.TreeView<T>.GoToEnd()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GoToEnd
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 971
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Changes the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> to the last object in the tree and scrolls so

    that it is visible.
  example: []
  syntax:
    content: public void GoToEnd()
    content.vb: Public Sub GoToEnd()
  overload: Terminal.Gui.TreeView`1.GoToEnd*
  nameWithType.vb: TreeView(Of T).GoToEnd()
  fullName.vb: Terminal.Gui.TreeView(Of T).GoToEnd()
- uid: Terminal.Gui.TreeView`1.GoTo(`0)
  commentId: M:Terminal.Gui.TreeView`1.GoTo(`0)
  id: GoTo(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GoTo(T)
  nameWithType: TreeView<T>.GoTo(T)
  fullName: Terminal.Gui.TreeView<T>.GoTo(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GoTo
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 986
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Changes the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> to <code class="paramref">toSelect</code> and scrolls to ensure

    it is visible. Has no effect if <code class="paramref">toSelect</code> is not exposed in the tree (e.g. 

    its parents are collapsed).
  example: []
  syntax:
    content: public void GoTo(T toSelect)
    parameters:
    - id: toSelect
      type: '{T}'
      description: ''
    content.vb: Public Sub [GoTo](toSelect As T)
  overload: Terminal.Gui.TreeView`1.GoTo*
  nameWithType.vb: TreeView(Of T).GoTo(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).GoTo(T)
- uid: Terminal.Gui.TreeView`1.AdjustSelection(System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.AdjustSelection(System.Int32,System.Boolean)
  id: AdjustSelection(System.Int32,System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AdjustSelection(int, bool)
  nameWithType: TreeView<T>.AdjustSelection(int, bool)
  fullName: Terminal.Gui.TreeView<T>.AdjustSelection(int, bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AdjustSelection
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1006
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The number of screen lines to move the currently selected object by. Supports negative values.

    <code class="paramref">offset</code>. Each branch occupies 1 line on screen.
  remarks: >-
    If nothing is currently selected or the selected object is no longer in the tree
        then the first object in the tree is selected instead.
  example: []
  syntax:
    content: public void AdjustSelection(int offset, bool expandSelection = false)
    parameters:
    - id: offset
      type: System.Int32
      description: Positive to move the selection down the screen, negative to move it up
    - id: expandSelection
      type: System.Boolean
      description: >-
        True to expand the selection (assuming 
            <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref> is enabled). False to replace.
    content.vb: Public Sub AdjustSelection(offset As Integer, expandSelection As Boolean = False)
  overload: Terminal.Gui.TreeView`1.AdjustSelection*
  nameWithType.vb: TreeView(Of T).AdjustSelection(Integer, Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelection(Integer, Boolean)
  name.vb: AdjustSelection(Integer, Boolean)
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart
  commentId: M:Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart
  id: AdjustSelectionToBranchStart
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AdjustSelectionToBranchStart()
  nameWithType: TreeView<T>.AdjustSelectionToBranchStart()
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToBranchStart()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AdjustSelectionToBranchStart
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1051
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the selection to the first child in the currently selected level.
  example: []
  syntax:
    content: public void AdjustSelectionToBranchStart()
    content.vb: Public Sub AdjustSelectionToBranchStart()
  overload: Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart*
  nameWithType.vb: TreeView(Of T).AdjustSelectionToBranchStart()
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToBranchStart()
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd
  commentId: M:Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd
  id: AdjustSelectionToBranchEnd
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: AdjustSelectionToBranchEnd()
  nameWithType: TreeView<T>.AdjustSelectionToBranchEnd()
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToBranchEnd()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AdjustSelectionToBranchEnd
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1091
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Moves the selection to the last child in the currently selected level.
  example: []
  syntax:
    content: public void AdjustSelectionToBranchEnd()
    content.vb: Public Sub AdjustSelectionToBranchEnd()
  overload: Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd*
  nameWithType.vb: TreeView(Of T).AdjustSelectionToBranchEnd()
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToBranchEnd()
- uid: Terminal.Gui.TreeView`1.EnsureVisible(`0)
  commentId: M:Terminal.Gui.TreeView`1.EnsureVisible(`0)
  id: EnsureVisible(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: EnsureVisible(T)
  nameWithType: TreeView<T>.EnsureVisible(T)
  fullName: Terminal.Gui.TreeView<T>.EnsureVisible(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EnsureVisible
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1167
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Adjusts the <xref href="Terminal.Gui.TreeView%601.ScrollOffsetVertical" data-throw-if-not-resolved="false"></xref> to ensure the given

    <code class="paramref">model</code> is visible. Has no effect if already visible.
  example: []
  syntax:
    content: public void EnsureVisible(T model)
    parameters:
    - id: model
      type: '{T}'
    content.vb: Public Sub EnsureVisible(model As T)
  overload: Terminal.Gui.TreeView`1.EnsureVisible*
  nameWithType.vb: TreeView(Of T).EnsureVisible(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).EnsureVisible(T)
- uid: Terminal.Gui.TreeView`1.Expand
  commentId: M:Terminal.Gui.TreeView`1.Expand
  id: Expand
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Expand()
  nameWithType: TreeView<T>.Expand()
  fullName: Terminal.Gui.TreeView<T>.Expand()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Expand
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1193
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Expands the currently <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Expand()
    content.vb: Public Sub Expand()
  overload: Terminal.Gui.TreeView`1.Expand*
  nameWithType.vb: TreeView(Of T).Expand()
  fullName.vb: Terminal.Gui.TreeView(Of T).Expand()
- uid: Terminal.Gui.TreeView`1.Expand(`0)
  commentId: M:Terminal.Gui.TreeView`1.Expand(`0)
  id: Expand(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Expand(T)
  nameWithType: TreeView<T>.Expand(T)
  fullName: Terminal.Gui.TreeView<T>.Expand(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Expand
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1203
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Expands the supplied object if it is contained in the tree (either as a root object or 

    as an exposed branch object).
  example: []
  syntax:
    content: public void Expand(T toExpand)
    parameters:
    - id: toExpand
      type: '{T}'
      description: The object to expand.
    content.vb: Public Sub Expand(toExpand As T)
  overload: Terminal.Gui.TreeView`1.Expand*
  nameWithType.vb: TreeView(Of T).Expand(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).Expand(T)
- uid: Terminal.Gui.TreeView`1.ExpandAll(`0)
  commentId: M:Terminal.Gui.TreeView`1.ExpandAll(`0)
  id: ExpandAll(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ExpandAll(T)
  nameWithType: TreeView<T>.ExpandAll(T)
  fullName: Terminal.Gui.TreeView<T>.ExpandAll(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ExpandAll
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1218
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Expands the supplied object and all child objects.
  example: []
  syntax:
    content: public void ExpandAll(T toExpand)
    parameters:
    - id: toExpand
      type: '{T}'
      description: The object to expand.
    content.vb: Public Sub ExpandAll(toExpand As T)
  overload: Terminal.Gui.TreeView`1.ExpandAll*
  nameWithType.vb: TreeView(Of T).ExpandAll(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).ExpandAll(T)
- uid: Terminal.Gui.TreeView`1.ExpandAll
  commentId: M:Terminal.Gui.TreeView`1.ExpandAll
  id: ExpandAll
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: ExpandAll()
  nameWithType: TreeView<T>.ExpandAll()
  fullName: Terminal.Gui.TreeView<T>.ExpandAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ExpandAll
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1232
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Fully expands all nodes in the tree, if the tree is very big and built dynamically this

    may take a while (e.g. for file system).
  example: []
  syntax:
    content: public void ExpandAll()
    content.vb: Public Sub ExpandAll()
  overload: Terminal.Gui.TreeView`1.ExpandAll*
  nameWithType.vb: TreeView(Of T).ExpandAll()
  fullName.vb: Terminal.Gui.TreeView(Of T).ExpandAll()
- uid: Terminal.Gui.TreeView`1.CanExpand(`0)
  commentId: M:Terminal.Gui.TreeView`1.CanExpand(`0)
  id: CanExpand(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: CanExpand(T)
  nameWithType: TreeView<T>.CanExpand(T)
  fullName: Terminal.Gui.TreeView<T>.CanExpand(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanExpand
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1247
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns true if the given object <code class="paramref">o</code> is exposed in the tree and can be

    expanded otherwise false.
  example: []
  syntax:
    content: public bool CanExpand(T o)
    parameters:
    - id: o
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CanExpand(o As T) As Boolean
  overload: Terminal.Gui.TreeView`1.CanExpand*
  nameWithType.vb: TreeView(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).CanExpand(T)
- uid: Terminal.Gui.TreeView`1.IsExpanded(`0)
  commentId: M:Terminal.Gui.TreeView`1.IsExpanded(`0)
  id: IsExpanded(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: IsExpanded(T)
  nameWithType: TreeView<T>.IsExpanded(T)
  fullName: Terminal.Gui.TreeView<T>.IsExpanded(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsExpanded
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1258
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns true if the given object <code class="paramref">o</code> is exposed in the tree and 

    expanded otherwise false.
  example: []
  syntax:
    content: public bool IsExpanded(T o)
    parameters:
    - id: o
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsExpanded(o As T) As Boolean
  overload: Terminal.Gui.TreeView`1.IsExpanded*
  nameWithType.vb: TreeView(Of T).IsExpanded(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).IsExpanded(T)
- uid: Terminal.Gui.TreeView`1.Collapse
  commentId: M:Terminal.Gui.TreeView`1.Collapse
  id: Collapse
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Collapse()
  nameWithType: TreeView<T>.Collapse()
  fullName: Terminal.Gui.TreeView<T>.Collapse()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Collapse
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1266
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Collapses the <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Collapse()
    content.vb: Public Sub Collapse()
  overload: Terminal.Gui.TreeView`1.Collapse*
  nameWithType.vb: TreeView(Of T).Collapse()
  fullName.vb: Terminal.Gui.TreeView(Of T).Collapse()
- uid: Terminal.Gui.TreeView`1.Collapse(`0)
  commentId: M:Terminal.Gui.TreeView`1.Collapse(`0)
  id: Collapse(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Collapse(T)
  nameWithType: TreeView<T>.Collapse(T)
  fullName: Terminal.Gui.TreeView<T>.Collapse(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Collapse
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1275
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Collapses the supplied object if it is currently expanded .
  example: []
  syntax:
    content: public void Collapse(T toCollapse)
    parameters:
    - id: toCollapse
      type: '{T}'
      description: The object to collapse.
    content.vb: Public Sub Collapse(toCollapse As T)
  overload: Terminal.Gui.TreeView`1.Collapse*
  nameWithType.vb: TreeView(Of T).Collapse(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).Collapse(T)
- uid: Terminal.Gui.TreeView`1.CollapseAll(`0)
  commentId: M:Terminal.Gui.TreeView`1.CollapseAll(`0)
  id: CollapseAll(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: CollapseAll(T)
  nameWithType: TreeView<T>.CollapseAll(T)
  fullName: Terminal.Gui.TreeView<T>.CollapseAll(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CollapseAll
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1285
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Collapses the supplied object if it is currently expanded. Also collapses all children

    branches (this will only become apparent when/if the user expands it again).
  example: []
  syntax:
    content: public void CollapseAll(T toCollapse)
    parameters:
    - id: toCollapse
      type: '{T}'
      description: The object to collapse.
    content.vb: Public Sub CollapseAll(toCollapse As T)
  overload: Terminal.Gui.TreeView`1.CollapseAll*
  nameWithType.vb: TreeView(Of T).CollapseAll(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseAll(T)
- uid: Terminal.Gui.TreeView`1.CollapseAll
  commentId: M:Terminal.Gui.TreeView`1.CollapseAll
  id: CollapseAll
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: CollapseAll()
  nameWithType: TreeView<T>.CollapseAll()
  fullName: Terminal.Gui.TreeView<T>.CollapseAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CollapseAll
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1293
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Collapses all root nodes in the tree.
  example: []
  syntax:
    content: public void CollapseAll()
    content.vb: Public Sub CollapseAll()
  overload: Terminal.Gui.TreeView`1.CollapseAll*
  nameWithType.vb: TreeView(Of T).CollapseAll()
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseAll()
- uid: Terminal.Gui.TreeView`1.CollapseImpl(`0,System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.CollapseImpl(`0,System.Boolean)
  id: CollapseImpl(`0,System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: CollapseImpl(T, bool)
  nameWithType: TreeView<T>.CollapseImpl(T, bool)
  fullName: Terminal.Gui.TreeView<T>.CollapseImpl(T, bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CollapseImpl
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1309
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Implementation of <xref href="Terminal.Gui.TreeView%601.Collapse(%600)" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.TreeView%601.CollapseAll(%600)" data-throw-if-not-resolved="false"></xref>. Performs

    operation and updates selection if disapeared.
  example: []
  syntax:
    content: protected void CollapseImpl(T toCollapse, bool all)
    parameters:
    - id: toCollapse
      type: '{T}'
      description: ''
    - id: all
      type: System.Boolean
      description: ''
    content.vb: Protected Sub CollapseImpl(toCollapse As T, all As Boolean)
  overload: Terminal.Gui.TreeView`1.CollapseImpl*
  nameWithType.vb: TreeView(Of T).CollapseImpl(T, Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseImpl(T, Boolean)
  name.vb: CollapseImpl(T, Boolean)
- uid: Terminal.Gui.TreeView`1.InvalidateLineMap
  commentId: M:Terminal.Gui.TreeView`1.InvalidateLineMap
  id: InvalidateLineMap
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: InvalidateLineMap()
  nameWithType: TreeView<T>.InvalidateLineMap()
  fullName: Terminal.Gui.TreeView<T>.InvalidateLineMap()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: InvalidateLineMap
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1340
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Clears any cached results of the tree state.
  example: []
  syntax:
    content: public void InvalidateLineMap()
    content.vb: Public Sub InvalidateLineMap()
  overload: Terminal.Gui.TreeView`1.InvalidateLineMap*
  nameWithType.vb: TreeView(Of T).InvalidateLineMap()
  fullName.vb: Terminal.Gui.TreeView(Of T).InvalidateLineMap()
- uid: Terminal.Gui.TreeView`1.IsSelected(`0)
  commentId: M:Terminal.Gui.TreeView`1.IsSelected(`0)
  id: IsSelected(`0)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: IsSelected(T)
  nameWithType: TreeView<T>.IsSelected(T)
  fullName: Terminal.Gui.TreeView<T>.IsSelected(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsSelected
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1364
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns true if the <code class="paramref">model</code> is either the 

    <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> or part of a <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsSelected(T model)
    parameters:
    - id: model
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSelected(model As T) As Boolean
  overload: Terminal.Gui.TreeView`1.IsSelected*
  nameWithType.vb: TreeView(Of T).IsSelected(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).IsSelected(T)
- uid: Terminal.Gui.TreeView`1.GetAllSelectedObjects
  commentId: M:Terminal.Gui.TreeView`1.GetAllSelectedObjects
  id: GetAllSelectedObjects
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: GetAllSelectedObjects()
  nameWithType: TreeView<T>.GetAllSelectedObjects()
  fullName: Terminal.Gui.TreeView<T>.GetAllSelectedObjects()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetAllSelectedObjects
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1375
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns <xref href="Terminal.Gui.TreeView%601.SelectedObject" data-throw-if-not-resolved="false"></xref> (if not null) and all multi selected objects if 

    <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref> is true
  example: []
  syntax:
    content: public IEnumerable<T> GetAllSelectedObjects()
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    content.vb: Public Function GetAllSelectedObjects() As IEnumerable(Of T)
  overload: Terminal.Gui.TreeView`1.GetAllSelectedObjects*
  nameWithType.vb: TreeView(Of T).GetAllSelectedObjects()
  fullName.vb: Terminal.Gui.TreeView(Of T).GetAllSelectedObjects()
- uid: Terminal.Gui.TreeView`1.SelectAll
  commentId: M:Terminal.Gui.TreeView`1.SelectAll
  id: SelectAll
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: SelectAll()
  nameWithType: TreeView<T>.SelectAll()
  fullName: Terminal.Gui.TreeView<T>.SelectAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SelectAll
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1397
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Selects all objects in the tree when <xref href="Terminal.Gui.TreeView%601.MultiSelect" data-throw-if-not-resolved="false"></xref> is enabled otherwise 

    does nothing.
  example: []
  syntax:
    content: public void SelectAll()
    content.vb: Public Sub SelectAll()
  overload: Terminal.Gui.TreeView`1.SelectAll*
  nameWithType.vb: TreeView(Of T).SelectAll()
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectAll()
- uid: Terminal.Gui.TreeView`1.OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs{`0})
  commentId: M:Terminal.Gui.TreeView`1.OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs{`0})
  id: OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs{`0})
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: OnSelectionChanged(SelectionChangedEventArgs<T>)
  nameWithType: TreeView<T>.OnSelectionChanged(SelectionChangedEventArgs<T>)
  fullName: Terminal.Gui.TreeView<T>.OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs<T>)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnSelectionChanged
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1421
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Raises the SelectionChanged event.
  example: []
  syntax:
    content: protected virtual void OnSelectionChanged(SelectionChangedEventArgs<T> e)
    parameters:
    - id: e
      type: Terminal.Gui.SelectionChangedEventArgs{{T}}
      description: ''
    content.vb: Protected Overridable Sub OnSelectionChanged(e As SelectionChangedEventArgs(Of T))
  overload: Terminal.Gui.TreeView`1.OnSelectionChanged*
  nameWithType.vb: TreeView(Of T).OnSelectionChanged(SelectionChangedEventArgs(Of T))
  fullName.vb: Terminal.Gui.TreeView(Of T).OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs(Of T))
  name.vb: OnSelectionChanged(SelectionChangedEventArgs(Of T))
- uid: Terminal.Gui.TreeView`1.Dispose(System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Terminal.Gui.TreeView`1
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: TreeView<T>.Dispose(bool)
  fullName: Terminal.Gui.TreeView<T>.Dispose(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeView.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dispose
    path: ../Terminal.Gui/Views/TreeView/TreeView.cs
    startLine: 1436
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  remarks: >-
    If disposing equals true, the method has been called directly

    or indirectly by a user's code. Managed and unmanaged resources

    can be disposed.

    If disposing equals false, the method has been called by the

    runtime from inside the finalizer and you should not reference

    other objects. Only unmanaged resources can be disposed.
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: Terminal.Gui.View.Dispose(System.Boolean)
  overload: Terminal.Gui.TreeView`1.Dispose*
  nameWithType.vb: TreeView(Of T).Dispose(Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: Terminal.Gui.ITreeBuilder`1
  commentId: T:Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  href: Terminal.Gui.Responder.html
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  href: Terminal.Gui.View.html
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.ISupportInitializeNotification
  commentId: T:System.ComponentModel.ISupportInitializeNotification
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitializenotification
  name: ISupportInitializeNotification
  nameWithType: ISupportInitializeNotification
  fullName: System.ComponentModel.ISupportInitializeNotification
- uid: System.ComponentModel.ISupportInitialize
  commentId: T:System.ComponentModel.ISupportInitialize
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.isupportinitialize
  name: ISupportInitialize
  nameWithType: ISupportInitialize
  fullName: System.ComponentModel.ISupportInitialize
- uid: Terminal.Gui.ITreeView
  commentId: T:Terminal.Gui.ITreeView
  parent: Terminal.Gui
  href: Terminal.Gui.ITreeView.html
  name: ITreeView
  nameWithType: ITreeView
  fullName: Terminal.Gui.ITreeView
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Frame
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.View.Margin
  commentId: P:Terminal.Gui.View.Margin
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Margin
  name: Margin
  nameWithType: View.Margin
  fullName: Terminal.Gui.View.Margin
- uid: Terminal.Gui.View.Border
  commentId: P:Terminal.Gui.View.Border
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Border
  name: Border
  nameWithType: View.Border
  fullName: Terminal.Gui.View.Border
- uid: Terminal.Gui.View.BorderStyle
  commentId: P:Terminal.Gui.View.BorderStyle
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BorderStyle
  name: BorderStyle
  nameWithType: View.BorderStyle
  fullName: Terminal.Gui.View.BorderStyle
- uid: Terminal.Gui.View.Padding
  commentId: P:Terminal.Gui.View.Padding
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Padding
  name: Padding
  nameWithType: View.Padding
  fullName: Terminal.Gui.View.Padding
- uid: Terminal.Gui.View.GetFramesThickness
  commentId: M:Terminal.Gui.View.GetFramesThickness
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetFramesThickness
  name: GetFramesThickness()
  nameWithType: View.GetFramesThickness()
  fullName: Terminal.Gui.View.GetFramesThickness()
  spec.csharp:
  - uid: Terminal.Gui.View.GetFramesThickness
    name: GetFramesThickness
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetFramesThickness
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetFramesThickness
    name: GetFramesThickness
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetFramesThickness
  - name: (
  - name: )
- uid: Terminal.Gui.View.GetBoundsOffset
  commentId: M:Terminal.Gui.View.GetBoundsOffset
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  name: GetBoundsOffset()
  nameWithType: View.GetBoundsOffset()
  fullName: Terminal.Gui.View.GetBoundsOffset()
  spec.csharp:
  - uid: Terminal.Gui.View.GetBoundsOffset
    name: GetBoundsOffset
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetBoundsOffset
    name: GetBoundsOffset
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetBoundsOffset
  - name: (
  - name: )
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutStyle
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Bounds
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.X
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Y
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Width
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Height
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.ForceValidatePosDim
  commentId: P:Terminal.Gui.View.ForceValidatePosDim
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ForceValidatePosDim
  name: ForceValidatePosDim
  nameWithType: View.ForceValidatePosDim
  fullName: Terminal.Gui.View.ForceValidatePosDim
- uid: Terminal.Gui.View.OnResizeNeeded
  commentId: M:Terminal.Gui.View.OnResizeNeeded
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnResizeNeeded
  name: OnResizeNeeded()
  nameWithType: View.OnResizeNeeded()
  fullName: Terminal.Gui.View.OnResizeNeeded()
  spec.csharp:
  - uid: Terminal.Gui.View.OnResizeNeeded
    name: OnResizeNeeded
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnResizeNeeded
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnResizeNeeded
    name: OnResizeNeeded
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnResizeNeeded
  - name: (
  - name: )
- uid: Terminal.Gui.View.ClearLayoutNeeded
  commentId: M:Terminal.Gui.View.ClearLayoutNeeded
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearLayoutNeeded
  name: ClearLayoutNeeded()
  nameWithType: View.ClearLayoutNeeded()
  fullName: Terminal.Gui.View.ClearLayoutNeeded()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearLayoutNeeded
    name: ClearLayoutNeeded
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearLayoutNeeded
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearLayoutNeeded
    name: ClearLayoutNeeded
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearLayoutNeeded
  - name: (
  - name: )
- uid: Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  name: ScreenToFrame(int, int)
  nameWithType: View.ScreenToFrame(int, int)
  fullName: Terminal.Gui.View.ScreenToFrame(int, int)
  nameWithType.vb: View.ScreenToFrame(Integer, Integer)
  fullName.vb: Terminal.Gui.View.ScreenToFrame(Integer, Integer)
  name.vb: ScreenToFrame(Integer, Integer)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
    name: ScreenToFrame
    href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
    name: ScreenToFrame
    href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToFrame(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  name: ScreenToBounds(int, int)
  nameWithType: View.ScreenToBounds(int, int)
  fullName: Terminal.Gui.View.ScreenToBounds(int, int)
  nameWithType.vb: View.ScreenToBounds(Integer, Integer)
  fullName.vb: Terminal.Gui.View.ScreenToBounds(Integer, Integer)
  name.vb: ScreenToBounds(Integer, Integer)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
    name: ScreenToBounds
    href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
    name: ScreenToBounds
    href: Terminal.Gui.View.html#Terminal.Gui.View.ScreenToBounds(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  commentId: M:Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  name: BoundsToScreen(int, int, out int, out int, bool)
  nameWithType: View.BoundsToScreen(int, int, out int, out int, bool)
  fullName: Terminal.Gui.View.BoundsToScreen(int, int, out int, out int, bool)
  nameWithType.vb: View.BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
  fullName.vb: Terminal.Gui.View.BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
  name.vb: BoundsToScreen(Integer, Integer, Integer, Integer, Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
    name: BoundsToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
    name: BoundsToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(System.Int32,System.Int32,System.Int32@,System.Int32@,System.Boolean)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  name: BoundsToScreen(Rect)
  nameWithType: View.BoundsToScreen(Rect)
  fullName: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
    name: BoundsToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
    name: BoundsToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.BoundsToScreen(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.FrameToScreen
  commentId: M:Terminal.Gui.View.FrameToScreen
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.FrameToScreen
  name: FrameToScreen()
  nameWithType: View.FrameToScreen()
  fullName: Terminal.Gui.View.FrameToScreen()
  spec.csharp:
  - uid: Terminal.Gui.View.FrameToScreen
    name: FrameToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.FrameToScreen
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FrameToScreen
    name: FrameToScreen
    href: Terminal.Gui.View.html#Terminal.Gui.View.FrameToScreen
  - name: (
  - name: )
- uid: Terminal.Gui.View.LayoutStarted
  commentId: E:Terminal.Gui.View.LayoutStarted
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutStarted
  name: LayoutStarted
  nameWithType: View.LayoutStarted
  fullName: Terminal.Gui.View.LayoutStarted
- uid: Terminal.Gui.View.LayoutComplete
  commentId: E:Terminal.Gui.View.LayoutComplete
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutComplete
  name: LayoutComplete
  nameWithType: View.LayoutComplete
  fullName: Terminal.Gui.View.LayoutComplete
- uid: Terminal.Gui.View.Initialized
  commentId: E:Terminal.Gui.View.Initialized
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Initialized
  name: Initialized
  nameWithType: View.Initialized
  fullName: Terminal.Gui.View.Initialized
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    href: Terminal.Gui.View.html#Terminal.Gui.View.LayoutSubviews
  - name: (
  - name: )
- uid: Terminal.Gui.View.AutoSize
  commentId: P:Terminal.Gui.View.AutoSize
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.AutoSize
  name: AutoSize
  nameWithType: View.AutoSize
  fullName: Terminal.Gui.View.AutoSize
- uid: Terminal.Gui.View.GetAutoSize
  commentId: M:Terminal.Gui.View.GetAutoSize
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetAutoSize
  name: GetAutoSize()
  nameWithType: View.GetAutoSize()
  fullName: Terminal.Gui.View.GetAutoSize()
  spec.csharp:
  - uid: Terminal.Gui.View.GetAutoSize
    name: GetAutoSize
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetAutoSize
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetAutoSize
    name: GetAutoSize
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetAutoSize
  - name: (
  - name: )
- uid: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  commentId: M:Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  name: FindDeepestView(View, int, int, out int, out int)
  nameWithType: View.FindDeepestView(View, int, int, out int, out int)
  fullName: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View, int, int, out int, out int)
  nameWithType.vb: View.FindDeepestView(View, Integer, Integer, Integer, Integer)
  fullName.vb: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View, Integer, Integer, Integer, Integer)
  name.vb: FindDeepestView(View, Integer, Integer, Integer, Integer)
  spec.csharp:
  - uid: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
    name: FindDeepestView
    href: Terminal.Gui.View.html#Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
    name: FindDeepestView
    href: Terminal.Gui.View.html#Terminal.Gui.View.FindDeepestView(Terminal.Gui.View,System.Int32,System.Int32,System.Int32@,System.Int32@)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Terminal.Gui.View.IsInitialized
  commentId: P:Terminal.Gui.View.IsInitialized
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsInitialized
  name: IsInitialized
  nameWithType: View.IsInitialized
  fullName: Terminal.Gui.View.IsInitialized
- uid: Terminal.Gui.View.BeginInit
  commentId: M:Terminal.Gui.View.BeginInit
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BeginInit
  name: BeginInit()
  nameWithType: View.BeginInit()
  fullName: Terminal.Gui.View.BeginInit()
  spec.csharp:
  - uid: Terminal.Gui.View.BeginInit
    name: BeginInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.BeginInit
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BeginInit
    name: BeginInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.BeginInit
  - name: (
  - name: )
- uid: Terminal.Gui.View.EndInit
  commentId: M:Terminal.Gui.View.EndInit
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  name: EndInit()
  nameWithType: View.EndInit()
  fullName: Terminal.Gui.View.EndInit()
  spec.csharp:
  - uid: Terminal.Gui.View.EndInit
    name: EndInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.EndInit
    name: EndInit
    href: Terminal.Gui.View.html#Terminal.Gui.View.EndInit
  - name: (
  - name: )
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Driver
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Data
  commentId: P:Terminal.Gui.View.Data
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Data
  name: Data
  nameWithType: View.Data
  fullName: Terminal.Gui.View.Data
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Id
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.View.Title
  commentId: P:Terminal.Gui.View.Title
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Title
  name: Title
  nameWithType: View.Title
  fullName: Terminal.Gui.View.Title
- uid: Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  commentId: M:Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  name: OnTitleChanging(string, string)
  nameWithType: View.OnTitleChanging(string, string)
  fullName: Terminal.Gui.View.OnTitleChanging(string, string)
  nameWithType.vb: View.OnTitleChanging(String, String)
  fullName.vb: Terminal.Gui.View.OnTitleChanging(String, String)
  name.vb: OnTitleChanging(String, String)
  spec.csharp:
  - uid: Terminal.Gui.View.OnTitleChanging(System.String,System.String)
    name: OnTitleChanging
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnTitleChanging(System.String,System.String)
    name: OnTitleChanging
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanging(System.String,System.String)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Terminal.Gui.View.TitleChanging
  commentId: E:Terminal.Gui.View.TitleChanging
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TitleChanging
  name: TitleChanging
  nameWithType: View.TitleChanging
  fullName: Terminal.Gui.View.TitleChanging
- uid: Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  commentId: M:Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  name: OnTitleChanged(string, string)
  nameWithType: View.OnTitleChanged(string, string)
  fullName: Terminal.Gui.View.OnTitleChanged(string, string)
  nameWithType.vb: View.OnTitleChanged(String, String)
  fullName.vb: Terminal.Gui.View.OnTitleChanged(String, String)
  name.vb: OnTitleChanged(String, String)
  spec.csharp:
  - uid: Terminal.Gui.View.OnTitleChanged(System.String,System.String)
    name: OnTitleChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnTitleChanged(System.String,System.String)
    name: OnTitleChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnTitleChanged(System.String,System.String)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Terminal.Gui.View.TitleChanged
  commentId: E:Terminal.Gui.View.TitleChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TitleChanged
  name: TitleChanged
  nameWithType: View.TitleChanged
  fullName: Terminal.Gui.View.TitleChanged
- uid: Terminal.Gui.View.EnabledChanged
  commentId: E:Terminal.Gui.View.EnabledChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.EnabledChanged
  name: EnabledChanged
  nameWithType: View.EnabledChanged
  fullName: Terminal.Gui.View.EnabledChanged
- uid: Terminal.Gui.View.OnEnabledChanged
  commentId: M:Terminal.Gui.View.OnEnabledChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnabledChanged
  name: OnEnabledChanged()
  nameWithType: View.OnEnabledChanged()
  fullName: Terminal.Gui.View.OnEnabledChanged()
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnabledChanged
    name: OnEnabledChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnabledChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnabledChanged
    name: OnEnabledChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnabledChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.Enabled
  commentId: P:Terminal.Gui.View.Enabled
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Enabled
  name: Enabled
  nameWithType: View.Enabled
  fullName: Terminal.Gui.View.Enabled
- uid: Terminal.Gui.View.VisibleChanged
  commentId: E:Terminal.Gui.View.VisibleChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.VisibleChanged
  name: VisibleChanged
  nameWithType: View.VisibleChanged
  fullName: Terminal.Gui.View.VisibleChanged
- uid: Terminal.Gui.View.OnVisibleChanged
  commentId: M:Terminal.Gui.View.OnVisibleChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnVisibleChanged
  name: OnVisibleChanged()
  nameWithType: View.OnVisibleChanged()
  fullName: Terminal.Gui.View.OnVisibleChanged()
  spec.csharp:
  - uid: Terminal.Gui.View.OnVisibleChanged
    name: OnVisibleChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnVisibleChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnVisibleChanged
    name: OnVisibleChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnVisibleChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.ClearOnVisibleFalse
  commentId: P:Terminal.Gui.View.ClearOnVisibleFalse
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearOnVisibleFalse
  name: ClearOnVisibleFalse
  nameWithType: View.ClearOnVisibleFalse
  fullName: Terminal.Gui.View.ClearOnVisibleFalse
- uid: Terminal.Gui.View.Visible
  commentId: P:Terminal.Gui.View.Visible
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Visible
  name: Visible
  nameWithType: View.Visible
  fullName: Terminal.Gui.View.Visible
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ToString
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  spec.csharp:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    href: Terminal.Gui.View.html#Terminal.Gui.View.ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    href: Terminal.Gui.View.html#Terminal.Gui.View.ToString
  - name: (
  - name: )
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ColorScheme
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.View.GetNormalColor
  commentId: M:Terminal.Gui.View.GetNormalColor
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetNormalColor
  name: GetNormalColor()
  nameWithType: View.GetNormalColor()
  fullName: Terminal.Gui.View.GetNormalColor()
  spec.csharp:
  - uid: Terminal.Gui.View.GetNormalColor
    name: GetNormalColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetNormalColor
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetNormalColor
    name: GetNormalColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetNormalColor
  - name: (
  - name: )
- uid: Terminal.Gui.View.GetFocusColor
  commentId: M:Terminal.Gui.View.GetFocusColor
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetFocusColor
  name: GetFocusColor()
  nameWithType: View.GetFocusColor()
  fullName: Terminal.Gui.View.GetFocusColor()
  spec.csharp:
  - uid: Terminal.Gui.View.GetFocusColor
    name: GetFocusColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetFocusColor
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetFocusColor
    name: GetFocusColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetFocusColor
  - name: (
  - name: )
- uid: Terminal.Gui.View.GetHotNormalColor
  commentId: M:Terminal.Gui.View.GetHotNormalColor
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotNormalColor
  name: GetHotNormalColor()
  nameWithType: View.GetHotNormalColor()
  fullName: Terminal.Gui.View.GetHotNormalColor()
  spec.csharp:
  - uid: Terminal.Gui.View.GetHotNormalColor
    name: GetHotNormalColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotNormalColor
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetHotNormalColor
    name: GetHotNormalColor
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotNormalColor
  - name: (
  - name: )
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  name: AddRune(int, int, Rune)
  nameWithType: View.AddRune(int, int, Rune)
  fullName: Terminal.Gui.View.AddRune(int, int, System.Text.Rune)
  nameWithType.vb: View.AddRune(Integer, Integer, Rune)
  fullName.vb: Terminal.Gui.View.AddRune(Integer, Integer, System.Text.Rune)
  name.vb: AddRune(Integer, Integer, Rune)
  spec.csharp:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
    name: AddRune
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Text.Rune
    name: Rune
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.rune
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
    name: AddRune
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Text.Rune)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Text.Rune
    name: Rune
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.rune
  - name: )
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearNeedsDisplay
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearNeedsDisplay
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearNeedsDisplay
  - name: (
  - name: )
- uid: Terminal.Gui.View.NeedsDisplay
  commentId: P:Terminal.Gui.View.NeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.NeedsDisplay
  name: NeedsDisplay
  nameWithType: View.NeedsDisplay
  fullName: Terminal.Gui.View.NeedsDisplay
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay
  - name: (
  - name: )
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.SubViewNeedsDisplay
  commentId: P:Terminal.Gui.View.SubViewNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SubViewNeedsDisplay
  name: SubViewNeedsDisplay
  nameWithType: View.SubViewNeedsDisplay
  fullName: Terminal.Gui.View.SubViewNeedsDisplay
- uid: Terminal.Gui.View.SetSubViewNeedsDisplay
  commentId: M:Terminal.Gui.View.SetSubViewNeedsDisplay
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetSubViewNeedsDisplay
  name: SetSubViewNeedsDisplay()
  nameWithType: View.SetSubViewNeedsDisplay()
  fullName: Terminal.Gui.View.SetSubViewNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetSubViewNeedsDisplay
    name: SetSubViewNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetSubViewNeedsDisplay
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetSubViewNeedsDisplay
    name: SetSubViewNeedsDisplay
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetSubViewNeedsDisplay
  - name: (
  - name: )
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Clear
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  spec.csharp:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    href: Terminal.Gui.View.html#Terminal.Gui.View.Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    href: Terminal.Gui.View.html#Terminal.Gui.View.Clear
  - name: (
  - name: )
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    href: Terminal.Gui.View.html#Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    href: Terminal.Gui.View.html#Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClipToBounds
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  spec.csharp:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClipToBounds
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClipToBounds
  - name: (
  - name: )
- uid: Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  name: DrawHotString(string, Attribute, Attribute)
  nameWithType: View.DrawHotString(string, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(string, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  nameWithType.vb: View.DrawHotString(String, Attribute, Attribute)
  fullName.vb: Terminal.Gui.View.DrawHotString(String, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  name.vb: DrawHotString(String, Attribute, Attribute)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Attribute
    name: Attribute
    href: Terminal.Gui.Attribute.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Attribute
    name: Attribute
    href: Terminal.Gui.Attribute.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Attribute
    name: Attribute
    href: Terminal.Gui.Attribute.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Attribute
    name: Attribute
    href: Terminal.Gui.Attribute.html
  - name: )
- uid: Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  name: DrawHotString(string, bool, ColorScheme)
  nameWithType: View.DrawHotString(string, bool, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(string, bool, Terminal.Gui.ColorScheme)
  nameWithType.vb: View.DrawHotString(String, Boolean, ColorScheme)
  fullName.vb: Terminal.Gui.View.DrawHotString(String, Boolean, Terminal.Gui.ColorScheme)
  name.vb: DrawHotString(String, Boolean, ColorScheme)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    href: Terminal.Gui.ColorScheme.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    href: Terminal.Gui.View.html#Terminal.Gui.View.DrawHotString(System.String,System.Boolean,Terminal.Gui.ColorScheme)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    href: Terminal.Gui.ColorScheme.html
  - name: )
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.Move(System.Int32,System.Int32)
  name: Move(int, int)
  nameWithType: View.Move(int, int)
  fullName: Terminal.Gui.View.Move(int, int)
  nameWithType.vb: View.Move(Integer, Integer)
  fullName.vb: Terminal.Gui.View.Move(Integer, Integer)
  name.vb: Move(Integer, Integer)
  spec.csharp:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    href: Terminal.Gui.View.html#Terminal.Gui.View.Move(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    href: Terminal.Gui.View.html#Terminal.Gui.View.Move(System.Int32,System.Int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Terminal.Gui.View.LineCanvas
  commentId: P:Terminal.Gui.View.LineCanvas
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.LineCanvas
  name: LineCanvas
  nameWithType: View.LineCanvas
  fullName: Terminal.Gui.View.LineCanvas
- uid: Terminal.Gui.View.SuperViewRendersLineCanvas
  commentId: P:Terminal.Gui.View.SuperViewRendersLineCanvas
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperViewRendersLineCanvas
  name: SuperViewRendersLineCanvas
  nameWithType: View.SuperViewRendersLineCanvas
  fullName: Terminal.Gui.View.SuperViewRendersLineCanvas
- uid: Terminal.Gui.View.OnDrawFrames
  commentId: M:Terminal.Gui.View.OnDrawFrames
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  name: OnDrawFrames()
  nameWithType: View.OnDrawFrames()
  fullName: Terminal.Gui.View.OnDrawFrames()
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawFrames
    name: OnDrawFrames
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawFrames
    name: OnDrawFrames
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawFrames
  - name: (
  - name: )
- uid: Terminal.Gui.View.Draw
  commentId: M:Terminal.Gui.View.Draw
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  name: Draw()
  nameWithType: View.Draw()
  fullName: Terminal.Gui.View.Draw()
  spec.csharp:
  - uid: Terminal.Gui.View.Draw
    name: Draw
    href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Draw
    name: Draw
    href: Terminal.Gui.View.html#Terminal.Gui.View.Draw
  - name: (
  - name: )
- uid: Terminal.Gui.View.OnRenderLineCanvas
  commentId: M:Terminal.Gui.View.OnRenderLineCanvas
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnRenderLineCanvas
  name: OnRenderLineCanvas()
  nameWithType: View.OnRenderLineCanvas()
  fullName: Terminal.Gui.View.OnRenderLineCanvas()
  spec.csharp:
  - uid: Terminal.Gui.View.OnRenderLineCanvas
    name: OnRenderLineCanvas
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnRenderLineCanvas
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnRenderLineCanvas
    name: OnRenderLineCanvas
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnRenderLineCanvas
  - name: (
  - name: )
- uid: Terminal.Gui.View.DrawContent
  commentId: E:Terminal.Gui.View.DrawContent
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.DrawContent
  name: DrawContent
  nameWithType: View.DrawContent
  fullName: Terminal.Gui.View.DrawContent
- uid: Terminal.Gui.View.DrawContentComplete
  commentId: E:Terminal.Gui.View.DrawContentComplete
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.DrawContentComplete
  name: DrawContentComplete
  nameWithType: View.DrawContentComplete
  fullName: Terminal.Gui.View.DrawContentComplete
- uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  name: OnDrawContentComplete(Rect)
  nameWithType: View.OnDrawContentComplete(Rect)
  fullName: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
    name: OnDrawContentComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
    name: OnDrawContentComplete
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContentComplete(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.View.HotKeyChanged
  commentId: E:Terminal.Gui.View.HotKeyChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKeyChanged
  name: HotKeyChanged
  nameWithType: View.HotKeyChanged
  fullName: Terminal.Gui.View.HotKeyChanged
- uid: Terminal.Gui.View.HotKey
  commentId: P:Terminal.Gui.View.HotKey
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKey
  name: HotKey
  nameWithType: View.HotKey
  fullName: Terminal.Gui.View.HotKey
- uid: Terminal.Gui.View.HotKeySpecifier
  commentId: P:Terminal.Gui.View.HotKeySpecifier
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKeySpecifier
  name: HotKeySpecifier
  nameWithType: View.HotKeySpecifier
  fullName: Terminal.Gui.View.HotKeySpecifier
- uid: Terminal.Gui.View.Shortcut
  commentId: P:Terminal.Gui.View.Shortcut
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Shortcut
  name: Shortcut
  nameWithType: View.Shortcut
  fullName: Terminal.Gui.View.Shortcut
- uid: Terminal.Gui.View.ShortcutTag
  commentId: P:Terminal.Gui.View.ShortcutTag
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ShortcutTag
  name: ShortcutTag
  nameWithType: View.ShortcutTag
  fullName: Terminal.Gui.View.ShortcutTag
- uid: Terminal.Gui.View.ShortcutAction
  commentId: P:Terminal.Gui.View.ShortcutAction
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ShortcutAction
  name: ShortcutAction
  nameWithType: View.ShortcutAction
  fullName: Terminal.Gui.View.ShortcutAction
- uid: Terminal.Gui.View.TabIndexes
  commentId: P:Terminal.Gui.View.TabIndexes
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabIndexes
  name: TabIndexes
  nameWithType: View.TabIndexes
  fullName: Terminal.Gui.View.TabIndexes
- uid: Terminal.Gui.View.TabIndex
  commentId: P:Terminal.Gui.View.TabIndex
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabIndex
  name: TabIndex
  nameWithType: View.TabIndex
  fullName: Terminal.Gui.View.TabIndex
- uid: Terminal.Gui.View.TabStop
  commentId: P:Terminal.Gui.View.TabStop
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TabStop
  name: TabStop
  nameWithType: View.TabStop
  fullName: Terminal.Gui.View.TabStop
- uid: Terminal.Gui.View.KeyPressed
  commentId: E:Terminal.Gui.View.KeyPressed
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.KeyPressed
  name: KeyPressed
  nameWithType: View.KeyPressed
  fullName: Terminal.Gui.View.KeyPressed
- uid: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  name: InvokeKeybindings(KeyEvent)
  nameWithType: View.InvokeKeybindings(KeyEvent)
  fullName: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
    name: InvokeKeybindings
    href: Terminal.Gui.View.html#Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
    name: InvokeKeybindings
    href: Terminal.Gui.View.html#Terminal.Gui.View.InvokeKeybindings(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  name: AddKeyBinding(Key, params Command[])
  nameWithType: View.AddKeyBinding(Key, params Command[])
  fullName: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key, params Terminal.Gui.Command[])
  nameWithType.vb: View.AddKeyBinding(Key, ParamArray Command())
  fullName.vb: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key, ParamArray Terminal.Gui.Command())
  name.vb: AddKeyBinding(Key, ParamArray Command())
  spec.csharp:
  - uid: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
    name: AddKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
    name: AddKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddKeyBinding(Terminal.Gui.Key,Terminal.Gui.Command[])
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: (
  - name: )
  - name: )
- uid: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  name: ReplaceKeyBinding(Key, Key)
  nameWithType: View.ReplaceKeyBinding(Key, Key)
  fullName: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key, Terminal.Gui.Key)
  spec.csharp:
  - uid: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
    name: ReplaceKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
    name: ReplaceKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ReplaceKeyBinding(Terminal.Gui.Key,Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
- uid: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  name: ContainsKeyBinding(Key)
  nameWithType: View.ContainsKeyBinding(Key)
  fullName: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  spec.csharp:
  - uid: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
    name: ContainsKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
    name: ContainsKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ContainsKeyBinding(Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
- uid: Terminal.Gui.View.ClearKeyBindings
  commentId: M:Terminal.Gui.View.ClearKeyBindings
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBindings
  name: ClearKeyBindings()
  nameWithType: View.ClearKeyBindings()
  fullName: Terminal.Gui.View.ClearKeyBindings()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearKeyBindings
    name: ClearKeyBindings
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBindings
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearKeyBindings
    name: ClearKeyBindings
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBindings
  - name: (
  - name: )
- uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  commentId: M:Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  name: ClearKeyBinding(Key)
  nameWithType: View.ClearKeyBinding(Key)
  fullName: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  spec.csharp:
  - uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
    name: ClearKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
    name: ClearKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Key)
  - name: (
  - uid: Terminal.Gui.Key
    name: Key
    href: Terminal.Gui.Key.html
  - name: )
- uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  name: ClearKeyBinding(params Command[])
  nameWithType: View.ClearKeyBinding(params Command[])
  fullName: Terminal.Gui.View.ClearKeyBinding(params Terminal.Gui.Command[])
  nameWithType.vb: View.ClearKeyBinding(ParamArray Command())
  fullName.vb: Terminal.Gui.View.ClearKeyBinding(ParamArray Terminal.Gui.Command())
  name.vb: ClearKeyBinding(ParamArray Command())
  spec.csharp:
  - uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
    name: ClearKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  - name: (
  - name: params
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
    name: ClearKeyBinding
    href: Terminal.Gui.View.html#Terminal.Gui.View.ClearKeyBinding(Terminal.Gui.Command[])
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: (
  - name: )
  - name: )
- uid: Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  commentId: M:Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  name: AddCommand(Command, Func<bool?>)
  nameWithType: View.AddCommand(Command, Func<bool?>)
  fullName: Terminal.Gui.View.AddCommand(Terminal.Gui.Command, System.Func<bool?>)
  nameWithType.vb: View.AddCommand(Command, Func(Of Boolean?))
  fullName.vb: Terminal.Gui.View.AddCommand(Terminal.Gui.Command, System.Func(Of Boolean?))
  name.vb: AddCommand(Command, Func(Of Boolean?))
  spec.csharp:
  - uid: Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
    name: AddCommand
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  - name: (
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
    name: AddCommand
    href: Terminal.Gui.View.html#Terminal.Gui.View.AddCommand(Terminal.Gui.Command,System.Func{System.Nullable{System.Boolean}})
  - name: (
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: ','
  - name: " "
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: )
- uid: Terminal.Gui.View.GetSupportedCommands
  commentId: M:Terminal.Gui.View.GetSupportedCommands
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  name: GetSupportedCommands()
  nameWithType: View.GetSupportedCommands()
  fullName: Terminal.Gui.View.GetSupportedCommands()
  spec.csharp:
  - uid: Terminal.Gui.View.GetSupportedCommands
    name: GetSupportedCommands
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetSupportedCommands
    name: GetSupportedCommands
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSupportedCommands
  - name: (
  - name: )
- uid: Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  commentId: M:Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  name: GetKeyFromCommand(params Command[])
  nameWithType: View.GetKeyFromCommand(params Command[])
  fullName: Terminal.Gui.View.GetKeyFromCommand(params Terminal.Gui.Command[])
  nameWithType.vb: View.GetKeyFromCommand(ParamArray Command())
  fullName.vb: Terminal.Gui.View.GetKeyFromCommand(ParamArray Terminal.Gui.Command())
  name.vb: GetKeyFromCommand(ParamArray Command())
  spec.csharp:
  - uid: Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
    name: GetKeyFromCommand
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  - name: (
  - name: params
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
    name: GetKeyFromCommand
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetKeyFromCommand(Terminal.Gui.Command[])
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Terminal.Gui.Command
    name: Command
    href: Terminal.Gui.Command.html
  - name: (
  - name: )
  - name: )
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.KeyDown
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.KeyUp
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.MouseEnter
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.MouseLeave
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
- uid: Terminal.Gui.View.MouseClick
  commentId: E:Terminal.Gui.View.MouseClick
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.MouseClick
  name: MouseClick
  nameWithType: View.MouseClick
  fullName: Terminal.Gui.View.MouseClick
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  name: OnMouseEvent(MouseEvent)
  nameWithType: View.OnMouseEvent(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
    name: OnMouseEvent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
    name: OnMouseEvent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  commentId: M:Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  name: OnMouseClick(MouseEventEventArgs)
  nameWithType: View.OnMouseClick(MouseEventEventArgs)
  fullName: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
    name: OnMouseClick
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  - name: (
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
    name: OnMouseClick
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnMouseClick(Terminal.Gui.MouseEventEventArgs)
  - name: (
  - uid: Terminal.Gui.MouseEventEventArgs
    name: MouseEventEventArgs
    href: Terminal.Gui.MouseEventEventArgs.html
  - name: )
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.WantMousePositionReports
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.WantContinuousButtonPressed
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SuperView
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Subviews
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.IsCurrentTop
  commentId: P:Terminal.Gui.View.IsCurrentTop
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsCurrentTop
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
- uid: Terminal.Gui.View.Added
  commentId: E:Terminal.Gui.View.Added
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Added
  name: Added
  nameWithType: View.Added
  fullName: Terminal.Gui.View.Added
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  name: Add(params View[])
  nameWithType: View.Add(params View[])
  fullName: Terminal.Gui.View.Add(params Terminal.Gui.View[])
  nameWithType.vb: View.Add(ParamArray View())
  fullName.vb: Terminal.Gui.View.Add(ParamArray Terminal.Gui.View())
  name.vb: Add(ParamArray View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  - name: (
  - name: params
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    href: Terminal.Gui.View.html#Terminal.Gui.View.Add(Terminal.Gui.View[])
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: (
  - name: )
  - name: )
- uid: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  commentId: M:Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  name: OnAdded(SuperViewChangedEventArgs)
  nameWithType: View.OnAdded(SuperViewChangedEventArgs)
  fullName: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  spec.csharp:
  - uid: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
    name: OnAdded
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  - name: (
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
    name: OnAdded
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnAdded(Terminal.Gui.SuperViewChangedEventArgs)
  - name: (
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: )
- uid: Terminal.Gui.View.IsAdded
  commentId: P:Terminal.Gui.View.IsAdded
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.IsAdded
  name: IsAdded
  nameWithType: View.IsAdded
  fullName: Terminal.Gui.View.IsAdded
- uid: Terminal.Gui.View.Removed
  commentId: E:Terminal.Gui.View.Removed
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Removed
  name: Removed
  nameWithType: View.Removed
  fullName: Terminal.Gui.View.Removed
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    href: Terminal.Gui.View.html#Terminal.Gui.View.RemoveAll
  - name: (
  - name: )
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    href: Terminal.Gui.View.html#Terminal.Gui.View.Remove(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  commentId: M:Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  name: OnRemoved(SuperViewChangedEventArgs)
  nameWithType: View.OnRemoved(SuperViewChangedEventArgs)
  fullName: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  spec.csharp:
  - uid: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
    name: OnRemoved
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  - name: (
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
    name: OnRemoved
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnRemoved(Terminal.Gui.SuperViewChangedEventArgs)
  - name: (
  - uid: Terminal.Gui.SuperViewChangedEventArgs
    name: SuperViewChangedEventArgs
    href: Terminal.Gui.SuperViewChangedEventArgs.html
  - name: )
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    href: Terminal.Gui.View.html#Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    href: Terminal.Gui.View.html#Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  name: GetTopSuperView(View, View)
  nameWithType: View.GetTopSuperView(View, View)
  fullName: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View, Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
    name: GetTopSuperView
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
    name: GetTopSuperView
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetTopSuperView(Terminal.Gui.View,Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: ','
  - name: " "
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Enter
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Leave
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HasFocus
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.View.CanFocusChanged
  commentId: E:Terminal.Gui.View.CanFocusChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.CanFocusChanged
  name: CanFocusChanged
  nameWithType: View.CanFocusChanged
  fullName: Terminal.Gui.View.CanFocusChanged
- uid: Terminal.Gui.View.OnCanFocusChanged
  commentId: M:Terminal.Gui.View.OnCanFocusChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnCanFocusChanged
  name: OnCanFocusChanged()
  nameWithType: View.OnCanFocusChanged()
  fullName: Terminal.Gui.View.OnCanFocusChanged()
  spec.csharp:
  - uid: Terminal.Gui.View.OnCanFocusChanged
    name: OnCanFocusChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnCanFocusChanged
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnCanFocusChanged
    name: OnCanFocusChanged
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnCanFocusChanged
  - name: (
  - name: )
- uid: Terminal.Gui.View.CanFocus
  commentId: P:Terminal.Gui.View.CanFocus
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.CanFocus
  name: CanFocus
  nameWithType: View.CanFocus
  fullName: Terminal.Gui.View.CanFocus
- uid: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  name: OnLeave(View)
  nameWithType: View.OnLeave(View)
  fullName: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
    name: OnLeave
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLeave(Terminal.Gui.View)
    name: OnLeave
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnLeave(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Focused
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.MostFocused
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.SetFocus
  commentId: M:Terminal.Gui.View.SetFocus
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.SetFocus
  name: SetFocus()
  nameWithType: View.SetFocus()
  fullName: Terminal.Gui.View.SetFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.SetFocus
    name: SetFocus
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetFocus
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.SetFocus
    name: SetFocus
    href: Terminal.Gui.View.html#Terminal.Gui.View.SetFocus
  - name: (
  - name: )
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.EnsureFocus
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    href: Terminal.Gui.View.html#Terminal.Gui.View.EnsureFocus
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    href: Terminal.Gui.View.html#Terminal.Gui.View.EnsureFocus
  - name: (
  - name: )
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusFirst
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusFirst
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusFirst
  - name: (
  - name: )
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusLast
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusLast
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusLast
  - name: (
  - name: )
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusPrev
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusPrev
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusPrev
  - name: (
  - name: )
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.FocusNext
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusNext
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    href: Terminal.Gui.View.html#Terminal.Gui.View.FocusNext
  - name: (
  - name: )
- uid: Terminal.Gui.View.Text
  commentId: P:Terminal.Gui.View.Text
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.Text
  name: Text
  nameWithType: View.Text
  fullName: Terminal.Gui.View.Text
- uid: Terminal.Gui.View.TextFormatter
  commentId: P:Terminal.Gui.View.TextFormatter
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextFormatter
  name: TextFormatter
  nameWithType: View.TextFormatter
  fullName: Terminal.Gui.View.TextFormatter
- uid: Terminal.Gui.View.UpdateTextFormatterText
  commentId: M:Terminal.Gui.View.UpdateTextFormatterText
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.UpdateTextFormatterText
  name: UpdateTextFormatterText()
  nameWithType: View.UpdateTextFormatterText()
  fullName: Terminal.Gui.View.UpdateTextFormatterText()
  spec.csharp:
  - uid: Terminal.Gui.View.UpdateTextFormatterText
    name: UpdateTextFormatterText
    href: Terminal.Gui.View.html#Terminal.Gui.View.UpdateTextFormatterText
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.UpdateTextFormatterText
    name: UpdateTextFormatterText
    href: Terminal.Gui.View.html#Terminal.Gui.View.UpdateTextFormatterText
  - name: (
  - name: )
- uid: Terminal.Gui.View.PreserveTrailingSpaces
  commentId: P:Terminal.Gui.View.PreserveTrailingSpaces
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.PreserveTrailingSpaces
  name: PreserveTrailingSpaces
  nameWithType: View.PreserveTrailingSpaces
  fullName: Terminal.Gui.View.PreserveTrailingSpaces
- uid: Terminal.Gui.View.TextAlignment
  commentId: P:Terminal.Gui.View.TextAlignment
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextAlignment
  name: TextAlignment
  nameWithType: View.TextAlignment
  fullName: Terminal.Gui.View.TextAlignment
- uid: Terminal.Gui.View.VerticalTextAlignment
  commentId: P:Terminal.Gui.View.VerticalTextAlignment
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.VerticalTextAlignment
  name: VerticalTextAlignment
  nameWithType: View.VerticalTextAlignment
  fullName: Terminal.Gui.View.VerticalTextAlignment
- uid: Terminal.Gui.View.TextDirection
  commentId: P:Terminal.Gui.View.TextDirection
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.TextDirection
  name: TextDirection
  nameWithType: View.TextDirection
  fullName: Terminal.Gui.View.TextDirection
- uid: Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  commentId: M:Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  name: GetHotKeySpecifierLength(bool)
  nameWithType: View.GetHotKeySpecifierLength(bool)
  fullName: Terminal.Gui.View.GetHotKeySpecifierLength(bool)
  nameWithType.vb: View.GetHotKeySpecifierLength(Boolean)
  fullName.vb: Terminal.Gui.View.GetHotKeySpecifierLength(Boolean)
  name.vb: GetHotKeySpecifierLength(Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
    name: GetHotKeySpecifierLength
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
    name: GetHotKeySpecifierLength
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetHotKeySpecifierLength(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  commentId: M:Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  name: GetSizeNeededForTextWithoutHotKey()
  nameWithType: View.GetSizeNeededForTextWithoutHotKey()
  fullName: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey()
  spec.csharp:
  - uid: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
    name: GetSizeNeededForTextWithoutHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
    name: GetSizeNeededForTextWithoutHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetSizeNeededForTextWithoutHotKey
  - name: (
  - name: )
- uid: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  commentId: M:Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  name: GetTextFormatterSizeNeededForTextAndHotKey()
  nameWithType: View.GetTextFormatterSizeNeededForTextAndHotKey()
  fullName: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey()
  spec.csharp:
  - uid: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
    name: GetTextFormatterSizeNeededForTextAndHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
    name: GetTextFormatterSizeNeededForTextAndHotKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.GetTextFormatterSizeNeededForTextAndHotKey
  - name: (
  - name: )
- uid: Terminal.Gui.Responder.Dispose
  commentId: M:Terminal.Gui.Responder.Dispose
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  name: Dispose()
  nameWithType: Responder.Dispose()
  fullName: Terminal.Gui.Responder.Dispose()
  spec.csharp:
  - uid: Terminal.Gui.Responder.Dispose
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.Dispose
    name: Dispose
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.Dispose
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: Terminal.Gui.TreeView`1.TreeBuilder*
  commentId: Overload:Terminal.Gui.TreeView`1.TreeBuilder
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.TreeBuilder
  name: TreeBuilder
  nameWithType: TreeView<T>.TreeBuilder
  fullName: Terminal.Gui.TreeView<T>.TreeBuilder
  nameWithType.vb: TreeView(Of T).TreeBuilder
  fullName.vb: Terminal.Gui.TreeView(Of T).TreeBuilder
- uid: Terminal.Gui.ITreeBuilder{{T}}
  commentId: T:Terminal.Gui.ITreeBuilder{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1.Style*
  commentId: Overload:Terminal.Gui.TreeView`1.Style
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Style
  name: Style
  nameWithType: TreeView<T>.Style
  fullName: Terminal.Gui.TreeView<T>.Style
  nameWithType.vb: TreeView(Of T).Style
  fullName.vb: Terminal.Gui.TreeView(Of T).Style
- uid: Terminal.Gui.ITreeView.Style
  commentId: P:Terminal.Gui.ITreeView.Style
  parent: Terminal.Gui.ITreeView
  href: Terminal.Gui.ITreeView.html#Terminal.Gui.ITreeView.Style
  name: Style
  nameWithType: ITreeView.Style
  fullName: Terminal.Gui.ITreeView.Style
- uid: Terminal.Gui.TreeStyle
  commentId: T:Terminal.Gui.TreeStyle
  parent: Terminal.Gui
  href: Terminal.Gui.TreeStyle.html
  name: TreeStyle
  nameWithType: TreeStyle
  fullName: Terminal.Gui.TreeStyle
- uid: Terminal.Gui.TreeView`1.MultiSelect*
  commentId: Overload:Terminal.Gui.TreeView`1.MultiSelect
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MultiSelect
  name: MultiSelect
  nameWithType: TreeView<T>.MultiSelect
  fullName: Terminal.Gui.TreeView<T>.MultiSelect
  nameWithType.vb: TreeView(Of T).MultiSelect
  fullName.vb: Terminal.Gui.TreeView(Of T).MultiSelect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.TreeView`1.MaxDepth*
  commentId: Overload:Terminal.Gui.TreeView`1.MaxDepth
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MaxDepth
  name: MaxDepth
  nameWithType: TreeView<T>.MaxDepth
  fullName: Terminal.Gui.TreeView<T>.MaxDepth
  nameWithType.vb: TreeView(Of T).MaxDepth
  fullName.vb: Terminal.Gui.TreeView(Of T).MaxDepth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.TreeView`1.AllowLetterBasedNavigation*
  commentId: Overload:Terminal.Gui.TreeView`1.AllowLetterBasedNavigation
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AllowLetterBasedNavigation
  name: AllowLetterBasedNavigation
  nameWithType: TreeView<T>.AllowLetterBasedNavigation
  fullName: Terminal.Gui.TreeView<T>.AllowLetterBasedNavigation
  nameWithType.vb: TreeView(Of T).AllowLetterBasedNavigation
  fullName.vb: Terminal.Gui.TreeView(Of T).AllowLetterBasedNavigation
- uid: Terminal.Gui.TreeView`1.MultiSelect
  commentId: P:Terminal.Gui.TreeView`1.MultiSelect
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MultiSelect
  name: MultiSelect
  nameWithType: TreeView<T>.MultiSelect
  fullName: Terminal.Gui.TreeView<T>.MultiSelect
  nameWithType.vb: TreeView(Of T).MultiSelect
  fullName.vb: Terminal.Gui.TreeView(Of T).MultiSelect
- uid: Terminal.Gui.TreeView`1.SelectedObject*
  commentId: Overload:Terminal.Gui.TreeView`1.SelectedObject
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.SelectedObject
  name: SelectedObject
  nameWithType: TreeView<T>.SelectedObject
  fullName: Terminal.Gui.TreeView<T>.SelectedObject
  nameWithType.vb: TreeView(Of T).SelectedObject
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectedObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Terminal.Gui.TreeView`1.ObjectActivationKey
  commentId: P:Terminal.Gui.TreeView`1.ObjectActivationKey
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ObjectActivationKey
  name: ObjectActivationKey
  nameWithType: TreeView<T>.ObjectActivationKey
  fullName: Terminal.Gui.TreeView<T>.ObjectActivationKey
  nameWithType.vb: TreeView(Of T).ObjectActivationKey
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivationKey
- uid: System.EventHandler{Terminal.Gui.ObjectActivatedEventArgs{{T}}}
  commentId: T:System.EventHandler{Terminal.Gui.ObjectActivatedEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ObjectActivatedEventArgs<T>>
  nameWithType: EventHandler<ObjectActivatedEventArgs<T>>
  fullName: System.EventHandler<Terminal.Gui.ObjectActivatedEventArgs<T>>
  nameWithType.vb: EventHandler(Of ObjectActivatedEventArgs(Of T))
  fullName.vb: System.EventHandler(Of Terminal.Gui.ObjectActivatedEventArgs(Of T))
  name.vb: EventHandler(Of ObjectActivatedEventArgs(Of T))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Terminal.Gui.TreeView`1.ObjectActivated
  commentId: E:Terminal.Gui.TreeView`1.ObjectActivated
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ObjectActivated
  name: ObjectActivated
  nameWithType: TreeView<T>.ObjectActivated
  fullName: Terminal.Gui.TreeView<T>.ObjectActivated
  nameWithType.vb: TreeView(Of T).ObjectActivated
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivated
- uid: Terminal.Gui.TreeView`1.ObjectActivationKey*
  commentId: Overload:Terminal.Gui.TreeView`1.ObjectActivationKey
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ObjectActivationKey
  name: ObjectActivationKey
  nameWithType: TreeView<T>.ObjectActivationKey
  fullName: Terminal.Gui.TreeView<T>.ObjectActivationKey
  nameWithType.vb: TreeView(Of T).ObjectActivationKey
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivationKey
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.MouseFlags.Button1DoubleClicked
  commentId: F:Terminal.Gui.MouseFlags.Button1DoubleClicked
  href: Terminal.Gui.MouseFlags.html#Terminal.Gui.MouseFlags.Button1DoubleClicked
  name: Button1DoubleClicked
  nameWithType: MouseFlags.Button1DoubleClicked
  fullName: Terminal.Gui.MouseFlags.Button1DoubleClicked
- uid: Terminal.Gui.TreeView`1.ObjectActivationButton*
  commentId: Overload:Terminal.Gui.TreeView`1.ObjectActivationButton
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ObjectActivationButton
  name: ObjectActivationButton
  nameWithType: TreeView<T>.ObjectActivationButton
  fullName: Terminal.Gui.TreeView<T>.ObjectActivationButton
  nameWithType.vb: TreeView(Of T).ObjectActivationButton
  fullName.vb: Terminal.Gui.TreeView(Of T).ObjectActivationButton
- uid: System.Nullable{Terminal.Gui.MouseFlags}
  commentId: T:System.Nullable{Terminal.Gui.MouseFlags}
  parent: System
  definition: System.Nullable`1
  href: Terminal.Gui.MouseFlags.html
  name: MouseFlags?
  nameWithType: MouseFlags?
  fullName: Terminal.Gui.MouseFlags?
  spec.csharp:
  - uid: Terminal.Gui.MouseFlags
    name: MouseFlags
    href: Terminal.Gui.MouseFlags.html
  - name: '?'
  spec.vb:
  - uid: Terminal.Gui.MouseFlags
    name: MouseFlags
    href: Terminal.Gui.MouseFlags.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ColorScheme
  commentId: T:Terminal.Gui.ColorScheme
  parent: Terminal.Gui
  href: Terminal.Gui.ColorScheme.html
  name: ColorScheme
  nameWithType: ColorScheme
  fullName: Terminal.Gui.ColorScheme
- uid: Terminal.Gui.TreeView`1.ColorGetter*
  commentId: Overload:Terminal.Gui.TreeView`1.ColorGetter
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ColorGetter
  name: ColorGetter
  nameWithType: TreeView<T>.ColorGetter
  fullName: Terminal.Gui.TreeView<T>.ColorGetter
  nameWithType.vb: TreeView(Of T).ColorGetter
  fullName.vb: Terminal.Gui.TreeView(Of T).ColorGetter
- uid: System.Func{{T},Terminal.Gui.ColorScheme}
  commentId: T:System.Func{`0,Terminal.Gui.ColorScheme}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, ColorScheme>
  nameWithType: Func<T, ColorScheme>
  fullName: System.Func<T, Terminal.Gui.ColorScheme>
  nameWithType.vb: Func(Of T, ColorScheme)
  fullName.vb: System.Func(Of T, Terminal.Gui.ColorScheme)
  name.vb: Func(Of T, ColorScheme)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    href: Terminal.Gui.ColorScheme.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    href: Terminal.Gui.ColorScheme.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.TreeView`1.SelectedObject
  commentId: P:Terminal.Gui.TreeView`1.SelectedObject
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.SelectedObject
  name: SelectedObject
  nameWithType: TreeView<T>.SelectedObject
  fullName: Terminal.Gui.TreeView<T>.SelectedObject
  nameWithType.vb: TreeView(Of T).SelectedObject
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectedObject
- uid: System.EventHandler{Terminal.Gui.SelectionChangedEventArgs{{T}}}
  commentId: T:System.EventHandler{Terminal.Gui.SelectionChangedEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SelectionChangedEventArgs<T>>
  nameWithType: EventHandler<SelectionChangedEventArgs<T>>
  fullName: System.EventHandler<Terminal.Gui.SelectionChangedEventArgs<T>>
  nameWithType.vb: EventHandler(Of SelectionChangedEventArgs(Of T))
  fullName.vb: System.EventHandler(Of Terminal.Gui.SelectionChangedEventArgs(Of T))
  name.vb: EventHandler(Of SelectionChangedEventArgs(Of T))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.EventHandler{Terminal.Gui.DrawTreeViewLineEventArgs{{T}}}
  commentId: T:System.EventHandler{Terminal.Gui.DrawTreeViewLineEventArgs{`0}}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<DrawTreeViewLineEventArgs<T>>
  nameWithType: EventHandler<DrawTreeViewLineEventArgs<T>>
  fullName: System.EventHandler<Terminal.Gui.DrawTreeViewLineEventArgs<T>>
  nameWithType.vb: EventHandler(Of DrawTreeViewLineEventArgs(Of T))
  fullName.vb: System.EventHandler(Of Terminal.Gui.DrawTreeViewLineEventArgs(Of T))
  name.vb: EventHandler(Of DrawTreeViewLineEventArgs(Of T))
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.DrawTreeViewLineEventArgs`1
    name: DrawTreeViewLineEventArgs
    href: Terminal.Gui.DrawTreeViewLineEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.DrawTreeViewLineEventArgs`1
    name: DrawTreeViewLineEventArgs
    href: Terminal.Gui.DrawTreeViewLineEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Terminal.Gui.TreeView`1.Objects*
  commentId: Overload:Terminal.Gui.TreeView`1.Objects
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Objects
  name: Objects
  nameWithType: TreeView<T>.Objects
  fullName: Terminal.Gui.TreeView<T>.Objects
  nameWithType.vb: TreeView(Of T).Objects
  fullName.vb: Terminal.Gui.TreeView(Of T).Objects
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Terminal.Gui.TreeView`1.ScrollOffsetVertical*
  commentId: Overload:Terminal.Gui.TreeView`1.ScrollOffsetVertical
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ScrollOffsetVertical
  name: ScrollOffsetVertical
  nameWithType: TreeView<T>.ScrollOffsetVertical
  fullName: Terminal.Gui.TreeView<T>.ScrollOffsetVertical
  nameWithType.vb: TreeView(Of T).ScrollOffsetVertical
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollOffsetVertical
- uid: Terminal.Gui.TreeView`1.ScrollOffsetHorizontal*
  commentId: Overload:Terminal.Gui.TreeView`1.ScrollOffsetHorizontal
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ScrollOffsetHorizontal
  name: ScrollOffsetHorizontal
  nameWithType: TreeView<T>.ScrollOffsetHorizontal
  fullName: Terminal.Gui.TreeView<T>.ScrollOffsetHorizontal
  nameWithType.vb: TreeView(Of T).ScrollOffsetHorizontal
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollOffsetHorizontal
- uid: Terminal.Gui.TreeView`1.ContentHeight*
  commentId: Overload:Terminal.Gui.TreeView`1.ContentHeight
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ContentHeight
  name: ContentHeight
  nameWithType: TreeView<T>.ContentHeight
  fullName: Terminal.Gui.TreeView<T>.ContentHeight
  nameWithType.vb: TreeView(Of T).ContentHeight
  fullName.vb: Terminal.Gui.TreeView(Of T).ContentHeight
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.TreeView`1.AspectGetter*
  commentId: Overload:Terminal.Gui.TreeView`1.AspectGetter
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AspectGetter
  name: AspectGetter
  nameWithType: TreeView<T>.AspectGetter
  fullName: Terminal.Gui.TreeView<T>.AspectGetter
  nameWithType.vb: TreeView(Of T).AspectGetter
  fullName.vb: Terminal.Gui.TreeView(Of T).AspectGetter
- uid: Terminal.Gui.AspectGetterDelegate{{T}}
  commentId: T:Terminal.Gui.AspectGetterDelegate{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.AspectGetterDelegate`1
  href: Terminal.Gui.AspectGetterDelegate-1.html
  name: AspectGetterDelegate<T>
  nameWithType: AspectGetterDelegate<T>
  fullName: Terminal.Gui.AspectGetterDelegate<T>
  nameWithType.vb: AspectGetterDelegate(Of T)
  fullName.vb: Terminal.Gui.AspectGetterDelegate(Of T)
  name.vb: AspectGetterDelegate(Of T)
  spec.csharp:
  - uid: Terminal.Gui.AspectGetterDelegate`1
    name: AspectGetterDelegate
    href: Terminal.Gui.AspectGetterDelegate-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.AspectGetterDelegate`1
    name: AspectGetterDelegate
    href: Terminal.Gui.AspectGetterDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.AspectGetterDelegate`1
  commentId: T:Terminal.Gui.AspectGetterDelegate`1
  href: Terminal.Gui.AspectGetterDelegate-1.html
  name: AspectGetterDelegate<T>
  nameWithType: AspectGetterDelegate<T>
  fullName: Terminal.Gui.AspectGetterDelegate<T>
  nameWithType.vb: AspectGetterDelegate(Of T)
  fullName.vb: Terminal.Gui.AspectGetterDelegate(Of T)
  name.vb: AspectGetterDelegate(Of T)
  spec.csharp:
  - uid: Terminal.Gui.AspectGetterDelegate`1
    name: AspectGetterDelegate
    href: Terminal.Gui.AspectGetterDelegate-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.AspectGetterDelegate`1
    name: AspectGetterDelegate
    href: Terminal.Gui.AspectGetterDelegate-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ITreeViewFilter{{T}}
  commentId: T:Terminal.Gui.ITreeViewFilter{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeViewFilter`1
  href: Terminal.Gui.ITreeViewFilter-1.html
  name: ITreeViewFilter<T>
  nameWithType: ITreeViewFilter<T>
  fullName: Terminal.Gui.ITreeViewFilter<T>
  nameWithType.vb: ITreeViewFilter(Of T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T)
  name.vb: ITreeViewFilter(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ITreeViewFilter`1
  commentId: T:Terminal.Gui.ITreeViewFilter`1
  href: Terminal.Gui.ITreeViewFilter-1.html
  name: ITreeViewFilter<T>
  nameWithType: ITreeViewFilter<T>
  fullName: Terminal.Gui.ITreeViewFilter<T>
  nameWithType.vb: ITreeViewFilter(Of T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T)
  name.vb: ITreeViewFilter(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.CursorVisibility.Invisible
  commentId: F:Terminal.Gui.CursorVisibility.Invisible
  href: Terminal.Gui.CursorVisibility.html#Terminal.Gui.CursorVisibility.Invisible
  name: Invisible
  nameWithType: CursorVisibility.Invisible
  fullName: Terminal.Gui.CursorVisibility.Invisible
- uid: Terminal.Gui.TreeView`1.DesiredCursorVisibility*
  commentId: Overload:Terminal.Gui.TreeView`1.DesiredCursorVisibility
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.DesiredCursorVisibility
  name: DesiredCursorVisibility
  nameWithType: TreeView<T>.DesiredCursorVisibility
  fullName: Terminal.Gui.TreeView<T>.DesiredCursorVisibility
  nameWithType.vb: TreeView(Of T).DesiredCursorVisibility
  fullName.vb: Terminal.Gui.TreeView(Of T).DesiredCursorVisibility
- uid: Terminal.Gui.CursorVisibility
  commentId: T:Terminal.Gui.CursorVisibility
  parent: Terminal.Gui
  href: Terminal.Gui.CursorVisibility.html
  name: CursorVisibility
  nameWithType: CursorVisibility
  fullName: Terminal.Gui.CursorVisibility
- uid: Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  name: AddObjects(IEnumerable<T>)
  nameWithType: TreeView<T>.AddObjects(IEnumerable<T>)
  fullName: Terminal.Gui.TreeView<T>.AddObjects(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: TreeView(Of T).AddObjects(IEnumerable(Of T))
  fullName.vb: Terminal.Gui.TreeView(Of T).AddObjects(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddObjects(IEnumerable(Of T))
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
    name: AddObjects
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
    name: AddObjects
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Terminal.Gui.TreeView`1.TreeBuilder
  commentId: P:Terminal.Gui.TreeView`1.TreeBuilder
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.TreeBuilder
  name: TreeBuilder
  nameWithType: TreeView<T>.TreeBuilder
  fullName: Terminal.Gui.TreeView<T>.TreeBuilder
  nameWithType.vb: TreeView(Of T).TreeBuilder
  fullName.vb: Terminal.Gui.TreeView(Of T).TreeBuilder
- uid: Terminal.Gui.TreeView`1.#ctor*
  commentId: Overload:Terminal.Gui.TreeView`1.#ctor
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.#ctor
  name: TreeView
  nameWithType: TreeView<T>.TreeView
  fullName: Terminal.Gui.TreeView<T>.TreeView
  nameWithType.vb: TreeView(Of T).New
  fullName.vb: Terminal.Gui.TreeView(Of T).New
  name.vb: New
- uid: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  name: OnEnter(View)
  nameWithType: View.OnEnter(View)
  fullName: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
    name: OnEnter
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnter(Terminal.Gui.View)
    name: OnEnter
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnEnter(Terminal.Gui.View)
  - name: (
  - uid: Terminal.Gui.View
    name: View
    href: Terminal.Gui.View.html
  - name: )
- uid: Terminal.Gui.TreeView`1.OnEnter*
  commentId: Overload:Terminal.Gui.TreeView`1.OnEnter
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.OnEnter(Terminal.Gui.View)
  name: OnEnter
  nameWithType: TreeView<T>.OnEnter
  fullName: Terminal.Gui.TreeView<T>.OnEnter
  nameWithType.vb: TreeView(Of T).OnEnter
  fullName.vb: Terminal.Gui.TreeView(Of T).OnEnter
- uid: Terminal.Gui.TreeView`1.AddObject*
  commentId: Overload:Terminal.Gui.TreeView`1.AddObject
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AddObject(`0)
  name: AddObject
  nameWithType: TreeView<T>.AddObject
  fullName: Terminal.Gui.TreeView<T>.AddObject
  nameWithType.vb: TreeView(Of T).AddObject
  fullName.vb: Terminal.Gui.TreeView(Of T).AddObject
- uid: Terminal.Gui.TreeView`1.ClearObjects*
  commentId: Overload:Terminal.Gui.TreeView`1.ClearObjects
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ClearObjects
  name: ClearObjects
  nameWithType: TreeView<T>.ClearObjects
  fullName: Terminal.Gui.TreeView<T>.ClearObjects
  nameWithType.vb: TreeView(Of T).ClearObjects
  fullName.vb: Terminal.Gui.TreeView(Of T).ClearObjects
- uid: Terminal.Gui.ITreeView.ClearObjects
  commentId: M:Terminal.Gui.ITreeView.ClearObjects
  parent: Terminal.Gui.ITreeView
  href: Terminal.Gui.ITreeView.html#Terminal.Gui.ITreeView.ClearObjects
  name: ClearObjects()
  nameWithType: ITreeView.ClearObjects()
  fullName: Terminal.Gui.ITreeView.ClearObjects()
  spec.csharp:
  - uid: Terminal.Gui.ITreeView.ClearObjects
    name: ClearObjects
    href: Terminal.Gui.ITreeView.html#Terminal.Gui.ITreeView.ClearObjects
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeView.ClearObjects
    name: ClearObjects
    href: Terminal.Gui.ITreeView.html#Terminal.Gui.ITreeView.ClearObjects
  - name: (
  - name: )
- uid: Terminal.Gui.TreeView`1.Remove*
  commentId: Overload:Terminal.Gui.TreeView`1.Remove
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Remove(`0)
  name: Remove
  nameWithType: TreeView<T>.Remove
  fullName: Terminal.Gui.TreeView<T>.Remove
  nameWithType.vb: TreeView(Of T).Remove
  fullName.vb: Terminal.Gui.TreeView(Of T).Remove
- uid: Terminal.Gui.TreeView`1.AddObjects*
  commentId: Overload:Terminal.Gui.TreeView`1.AddObjects
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AddObjects(System.Collections.Generic.IEnumerable{`0})
  name: AddObjects
  nameWithType: TreeView<T>.AddObjects
  fullName: Terminal.Gui.TreeView<T>.AddObjects
  nameWithType.vb: TreeView(Of T).AddObjects
  fullName.vb: Terminal.Gui.TreeView(Of T).AddObjects
- uid: Terminal.Gui.TreeView`1.RefreshObject*
  commentId: Overload:Terminal.Gui.TreeView`1.RefreshObject
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  name: RefreshObject
  nameWithType: TreeView<T>.RefreshObject
  fullName: Terminal.Gui.TreeView<T>.RefreshObject
  nameWithType.vb: TreeView(Of T).RefreshObject
  fullName.vb: Terminal.Gui.TreeView(Of T).RefreshObject
- uid: Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  commentId: M:Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  isExternal: true
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  name: RefreshObject(T, bool)
  nameWithType: TreeView<T>.RefreshObject(T, bool)
  fullName: Terminal.Gui.TreeView<T>.RefreshObject(T, bool)
  nameWithType.vb: TreeView(Of T).RefreshObject(T, Boolean)
  fullName.vb: Terminal.Gui.TreeView(Of T).RefreshObject(T, Boolean)
  name.vb: RefreshObject(T, Boolean)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
    name: RefreshObject
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
    name: RefreshObject
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.RefreshObject(`0,System.Boolean)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.TreeView`1.RebuildTree*
  commentId: Overload:Terminal.Gui.TreeView`1.RebuildTree
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.RebuildTree
  name: RebuildTree
  nameWithType: TreeView<T>.RebuildTree
  fullName: Terminal.Gui.TreeView<T>.RebuildTree
  nameWithType.vb: TreeView(Of T).RebuildTree
  fullName.vb: Terminal.Gui.TreeView(Of T).RebuildTree
- uid: Terminal.Gui.TreeView`1.GetChildren*
  commentId: Overload:Terminal.Gui.TreeView`1.GetChildren
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetChildren(`0)
  name: GetChildren
  nameWithType: TreeView<T>.GetChildren
  fullName: Terminal.Gui.TreeView<T>.GetChildren
  nameWithType.vb: TreeView(Of T).GetChildren
  fullName.vb: Terminal.Gui.TreeView(Of T).GetChildren
- uid: Terminal.Gui.TreeView`1.GetParent*
  commentId: Overload:Terminal.Gui.TreeView`1.GetParent
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetParent(`0)
  name: GetParent
  nameWithType: TreeView<T>.GetParent
  fullName: Terminal.Gui.TreeView<T>.GetParent
  nameWithType.vb: TreeView(Of T).GetParent
  fullName.vb: Terminal.Gui.TreeView(Of T).GetParent
- uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  name: OnDrawContent(Rect)
  nameWithType: View.OnDrawContent(Rect)
  fullName: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
    name: OnDrawContent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
    name: OnDrawContent
    href: Terminal.Gui.View.html#Terminal.Gui.View.OnDrawContent(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.TreeView`1.OnDrawContent*
  commentId: Overload:Terminal.Gui.TreeView`1.OnDrawContent
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.OnDrawContent(Terminal.Gui.Rect)
  name: OnDrawContent
  nameWithType: TreeView<T>.OnDrawContent
  fullName: Terminal.Gui.TreeView<T>.OnDrawContent
  nameWithType.vb: TreeView(Of T).OnDrawContent
  fullName.vb: Terminal.Gui.TreeView(Of T).OnDrawContent
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  href: Terminal.Gui.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.TreeView`1.ScrollOffsetVertical
  commentId: P:Terminal.Gui.TreeView`1.ScrollOffsetVertical
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ScrollOffsetVertical
  name: ScrollOffsetVertical
  nameWithType: TreeView<T>.ScrollOffsetVertical
  fullName: Terminal.Gui.TreeView<T>.ScrollOffsetVertical
  nameWithType.vb: TreeView(Of T).ScrollOffsetVertical
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollOffsetVertical
- uid: Terminal.Gui.TreeView`1.GetScrollOffsetOf*
  commentId: Overload:Terminal.Gui.TreeView`1.GetScrollOffsetOf
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetScrollOffsetOf(`0)
  name: GetScrollOffsetOf
  nameWithType: TreeView<T>.GetScrollOffsetOf
  fullName: Terminal.Gui.TreeView<T>.GetScrollOffsetOf
  nameWithType.vb: TreeView(Of T).GetScrollOffsetOf
  fullName.vb: Terminal.Gui.TreeView(Of T).GetScrollOffsetOf
- uid: Terminal.Gui.TreeView`1.GetContentWidth*
  commentId: Overload:Terminal.Gui.TreeView`1.GetContentWidth
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetContentWidth(System.Boolean)
  name: GetContentWidth
  nameWithType: TreeView<T>.GetContentWidth
  fullName: Terminal.Gui.TreeView<T>.GetContentWidth
  nameWithType.vb: TreeView(Of T).GetContentWidth
  fullName.vb: Terminal.Gui.TreeView(Of T).GetContentWidth
- uid: Terminal.Gui.CollectionNavigator
  commentId: T:Terminal.Gui.CollectionNavigator
  parent: Terminal.Gui
  href: Terminal.Gui.CollectionNavigator.html
  name: CollectionNavigator
  nameWithType: CollectionNavigator
  fullName: Terminal.Gui.CollectionNavigator
- uid: Terminal.Gui.TreeView`1.Objects
  commentId: P:Terminal.Gui.TreeView`1.Objects
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Objects
  name: Objects
  nameWithType: TreeView<T>.Objects
  fullName: Terminal.Gui.TreeView<T>.Objects
  nameWithType.vb: TreeView(Of T).Objects
  fullName.vb: Terminal.Gui.TreeView(Of T).Objects
- uid: Terminal.Gui.TreeView`1.KeystrokeNavigator*
  commentId: Overload:Terminal.Gui.TreeView`1.KeystrokeNavigator
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.KeystrokeNavigator
  name: KeystrokeNavigator
  nameWithType: TreeView<T>.KeystrokeNavigator
  fullName: Terminal.Gui.TreeView<T>.KeystrokeNavigator
  nameWithType.vb: TreeView(Of T).KeystrokeNavigator
  fullName.vb: Terminal.Gui.TreeView(Of T).KeystrokeNavigator
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    href: Terminal.Gui.View.html#Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  - name: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    href: Terminal.Gui.KeyEvent.html
  - name: )
- uid: Terminal.Gui.TreeView`1.ProcessKey*
  commentId: Overload:Terminal.Gui.TreeView`1.ProcessKey
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ProcessKey(Terminal.Gui.KeyEvent)
  name: ProcessKey
  nameWithType: TreeView<T>.ProcessKey
  fullName: Terminal.Gui.TreeView<T>.ProcessKey
  nameWithType.vb: TreeView(Of T).ProcessKey
  fullName.vb: Terminal.Gui.TreeView(Of T).ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  href: Terminal.Gui.KeyEvent.html
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny*
  commentId: Overload:Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ActivateSelectedObjectIfAny
  name: ActivateSelectedObjectIfAny
  nameWithType: TreeView<T>.ActivateSelectedObjectIfAny
  fullName: Terminal.Gui.TreeView<T>.ActivateSelectedObjectIfAny
  nameWithType.vb: TreeView(Of T).ActivateSelectedObjectIfAny
  fullName.vb: Terminal.Gui.TreeView(Of T).ActivateSelectedObjectIfAny
- uid: Terminal.Gui.TreeView`1.GetObjectRow*
  commentId: Overload:Terminal.Gui.TreeView`1.GetObjectRow
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetObjectRow(`0)
  name: GetObjectRow
  nameWithType: TreeView<T>.GetObjectRow
  fullName: Terminal.Gui.TreeView<T>.GetObjectRow
  nameWithType.vb: TreeView(Of T).GetObjectRow
  fullName.vb: Terminal.Gui.TreeView(Of T).GetObjectRow
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith*
  commentId: Overload:Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AdjustSelectionToNextItemBeginningWith(System.Char,System.StringComparison)
  name: AdjustSelectionToNextItemBeginningWith
  nameWithType: TreeView<T>.AdjustSelectionToNextItemBeginningWith
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToNextItemBeginningWith
  nameWithType.vb: TreeView(Of T).AdjustSelectionToNextItemBeginningWith
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToNextItemBeginningWith
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringcomparison
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notimplementedexception
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: Terminal.Gui.TreeView`1.MovePageUp*
  commentId: Overload:Terminal.Gui.TreeView`1.MovePageUp
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MovePageUp(System.Boolean)
  name: MovePageUp
  nameWithType: TreeView<T>.MovePageUp
  fullName: Terminal.Gui.TreeView<T>.MovePageUp
  nameWithType.vb: TreeView(Of T).MovePageUp
  fullName.vb: Terminal.Gui.TreeView(Of T).MovePageUp
- uid: Terminal.Gui.TreeView`1.MovePageDown*
  commentId: Overload:Terminal.Gui.TreeView`1.MovePageDown
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MovePageDown(System.Boolean)
  name: MovePageDown
  nameWithType: TreeView<T>.MovePageDown
  fullName: Terminal.Gui.TreeView<T>.MovePageDown
  nameWithType.vb: TreeView(Of T).MovePageDown
  fullName.vb: Terminal.Gui.TreeView(Of T).MovePageDown
- uid: Terminal.Gui.TreeView`1.ScrollDown*
  commentId: Overload:Terminal.Gui.TreeView`1.ScrollDown
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ScrollDown
  name: ScrollDown
  nameWithType: TreeView<T>.ScrollDown
  fullName: Terminal.Gui.TreeView<T>.ScrollDown
  nameWithType.vb: TreeView(Of T).ScrollDown
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollDown
- uid: Terminal.Gui.TreeView`1.ScrollUp*
  commentId: Overload:Terminal.Gui.TreeView`1.ScrollUp
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ScrollUp
  name: ScrollUp
  nameWithType: TreeView<T>.ScrollUp
  fullName: Terminal.Gui.TreeView<T>.ScrollUp
  nameWithType.vb: TreeView(Of T).ScrollUp
  fullName.vb: Terminal.Gui.TreeView(Of T).ScrollUp
- uid: Terminal.Gui.TreeView`1.OnObjectActivated*
  commentId: Overload:Terminal.Gui.TreeView`1.OnObjectActivated
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.OnObjectActivated(Terminal.Gui.ObjectActivatedEventArgs{`0})
  name: OnObjectActivated
  nameWithType: TreeView<T>.OnObjectActivated
  fullName: Terminal.Gui.TreeView<T>.OnObjectActivated
  nameWithType.vb: TreeView(Of T).OnObjectActivated
  fullName.vb: Terminal.Gui.TreeView(Of T).OnObjectActivated
- uid: Terminal.Gui.ObjectActivatedEventArgs{{T}}
  commentId: T:Terminal.Gui.ObjectActivatedEventArgs{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.ObjectActivatedEventArgs`1
  href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  name: ObjectActivatedEventArgs<T>
  nameWithType: ObjectActivatedEventArgs<T>
  fullName: Terminal.Gui.ObjectActivatedEventArgs<T>
  nameWithType.vb: ObjectActivatedEventArgs(Of T)
  fullName.vb: Terminal.Gui.ObjectActivatedEventArgs(Of T)
  name.vb: ObjectActivatedEventArgs(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ObjectActivatedEventArgs`1
  commentId: T:Terminal.Gui.ObjectActivatedEventArgs`1
  href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  name: ObjectActivatedEventArgs<T>
  nameWithType: ObjectActivatedEventArgs<T>
  fullName: Terminal.Gui.ObjectActivatedEventArgs<T>
  nameWithType.vb: ObjectActivatedEventArgs(Of T)
  fullName.vb: Terminal.Gui.ObjectActivatedEventArgs(Of T)
  name.vb: ObjectActivatedEventArgs(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ObjectActivatedEventArgs`1
    name: ObjectActivatedEventArgs
    href: Terminal.Gui.ObjectActivatedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1
  commentId: T:Terminal.Gui.TreeView`1
  href: Terminal.Gui.TreeView-1.html
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1.GetObjectOnRow*
  commentId: Overload:Terminal.Gui.TreeView`1.GetObjectOnRow
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetObjectOnRow(System.Int32)
  name: GetObjectOnRow
  nameWithType: TreeView<T>.GetObjectOnRow
  fullName: Terminal.Gui.TreeView<T>.GetObjectOnRow
  nameWithType.vb: TreeView(Of T).GetObjectOnRow
  fullName.vb: Terminal.Gui.TreeView(Of T).GetObjectOnRow
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    href: Terminal.Gui.Responder.html#Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - name: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    href: Terminal.Gui.MouseEvent.html
  - name: )
- uid: Terminal.Gui.TreeView`1.MouseEvent*
  commentId: Overload:Terminal.Gui.TreeView`1.MouseEvent
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.MouseEvent(Terminal.Gui.MouseEvent)
  name: MouseEvent
  nameWithType: TreeView<T>.MouseEvent
  fullName: Terminal.Gui.TreeView<T>.MouseEvent
  nameWithType.vb: TreeView(Of T).MouseEvent
  fullName.vb: Terminal.Gui.TreeView(Of T).MouseEvent
- uid: Terminal.Gui.MouseEvent
  commentId: T:Terminal.Gui.MouseEvent
  parent: Terminal.Gui
  href: Terminal.Gui.MouseEvent.html
  name: MouseEvent
  nameWithType: MouseEvent
  fullName: Terminal.Gui.MouseEvent
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    href: Terminal.Gui.View.html#Terminal.Gui.View.PositionCursor
  - name: (
  - name: )
- uid: Terminal.Gui.TreeView`1.PositionCursor*
  commentId: Overload:Terminal.Gui.TreeView`1.PositionCursor
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.PositionCursor
  name: PositionCursor
  nameWithType: TreeView<T>.PositionCursor
  fullName: Terminal.Gui.TreeView<T>.PositionCursor
  nameWithType.vb: TreeView(Of T).PositionCursor
  fullName.vb: Terminal.Gui.TreeView(Of T).PositionCursor
- uid: Terminal.Gui.TreeView`1.CursorLeft*
  commentId: Overload:Terminal.Gui.TreeView`1.CursorLeft
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CursorLeft(System.Boolean)
  name: CursorLeft
  nameWithType: TreeView<T>.CursorLeft
  fullName: Terminal.Gui.TreeView<T>.CursorLeft
  nameWithType.vb: TreeView(Of T).CursorLeft
  fullName.vb: Terminal.Gui.TreeView(Of T).CursorLeft
- uid: Terminal.Gui.TreeView`1.GoToFirst*
  commentId: Overload:Terminal.Gui.TreeView`1.GoToFirst
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GoToFirst
  name: GoToFirst
  nameWithType: TreeView<T>.GoToFirst
  fullName: Terminal.Gui.TreeView<T>.GoToFirst
  nameWithType.vb: TreeView(Of T).GoToFirst
  fullName.vb: Terminal.Gui.TreeView(Of T).GoToFirst
- uid: Terminal.Gui.TreeView`1.GoToEnd*
  commentId: Overload:Terminal.Gui.TreeView`1.GoToEnd
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GoToEnd
  name: GoToEnd
  nameWithType: TreeView<T>.GoToEnd
  fullName: Terminal.Gui.TreeView<T>.GoToEnd
  nameWithType.vb: TreeView(Of T).GoToEnd
  fullName.vb: Terminal.Gui.TreeView(Of T).GoToEnd
- uid: Terminal.Gui.TreeView`1.GoTo*
  commentId: Overload:Terminal.Gui.TreeView`1.GoTo
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GoTo(`0)
  name: GoTo
  nameWithType: TreeView<T>.GoTo
  fullName: Terminal.Gui.TreeView<T>.GoTo
  nameWithType.vb: TreeView(Of T).GoTo
  fullName.vb: Terminal.Gui.TreeView(Of T).GoTo
- uid: Terminal.Gui.TreeView`1.AdjustSelection*
  commentId: Overload:Terminal.Gui.TreeView`1.AdjustSelection
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AdjustSelection(System.Int32,System.Boolean)
  name: AdjustSelection
  nameWithType: TreeView<T>.AdjustSelection
  fullName: Terminal.Gui.TreeView<T>.AdjustSelection
  nameWithType.vb: TreeView(Of T).AdjustSelection
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelection
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart*
  commentId: Overload:Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AdjustSelectionToBranchStart
  name: AdjustSelectionToBranchStart
  nameWithType: TreeView<T>.AdjustSelectionToBranchStart
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToBranchStart
  nameWithType.vb: TreeView(Of T).AdjustSelectionToBranchStart
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToBranchStart
- uid: Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd*
  commentId: Overload:Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AdjustSelectionToBranchEnd
  name: AdjustSelectionToBranchEnd
  nameWithType: TreeView<T>.AdjustSelectionToBranchEnd
  fullName: Terminal.Gui.TreeView<T>.AdjustSelectionToBranchEnd
  nameWithType.vb: TreeView(Of T).AdjustSelectionToBranchEnd
  fullName.vb: Terminal.Gui.TreeView(Of T).AdjustSelectionToBranchEnd
- uid: Terminal.Gui.TreeView`1.EnsureVisible*
  commentId: Overload:Terminal.Gui.TreeView`1.EnsureVisible
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.EnsureVisible(`0)
  name: EnsureVisible
  nameWithType: TreeView<T>.EnsureVisible
  fullName: Terminal.Gui.TreeView<T>.EnsureVisible
  nameWithType.vb: TreeView(Of T).EnsureVisible
  fullName.vb: Terminal.Gui.TreeView(Of T).EnsureVisible
- uid: Terminal.Gui.TreeView`1.Expand*
  commentId: Overload:Terminal.Gui.TreeView`1.Expand
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Expand
  name: Expand
  nameWithType: TreeView<T>.Expand
  fullName: Terminal.Gui.TreeView<T>.Expand
  nameWithType.vb: TreeView(Of T).Expand
  fullName.vb: Terminal.Gui.TreeView(Of T).Expand
- uid: Terminal.Gui.TreeView`1.ExpandAll*
  commentId: Overload:Terminal.Gui.TreeView`1.ExpandAll
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.ExpandAll(`0)
  name: ExpandAll
  nameWithType: TreeView<T>.ExpandAll
  fullName: Terminal.Gui.TreeView<T>.ExpandAll
  nameWithType.vb: TreeView(Of T).ExpandAll
  fullName.vb: Terminal.Gui.TreeView(Of T).ExpandAll
- uid: Terminal.Gui.TreeView`1.CanExpand*
  commentId: Overload:Terminal.Gui.TreeView`1.CanExpand
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CanExpand(`0)
  name: CanExpand
  nameWithType: TreeView<T>.CanExpand
  fullName: Terminal.Gui.TreeView<T>.CanExpand
  nameWithType.vb: TreeView(Of T).CanExpand
  fullName.vb: Terminal.Gui.TreeView(Of T).CanExpand
- uid: Terminal.Gui.TreeView`1.IsExpanded*
  commentId: Overload:Terminal.Gui.TreeView`1.IsExpanded
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.IsExpanded(`0)
  name: IsExpanded
  nameWithType: TreeView<T>.IsExpanded
  fullName: Terminal.Gui.TreeView<T>.IsExpanded
  nameWithType.vb: TreeView(Of T).IsExpanded
  fullName.vb: Terminal.Gui.TreeView(Of T).IsExpanded
- uid: Terminal.Gui.TreeView`1.Collapse*
  commentId: Overload:Terminal.Gui.TreeView`1.Collapse
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Collapse
  name: Collapse
  nameWithType: TreeView<T>.Collapse
  fullName: Terminal.Gui.TreeView<T>.Collapse
  nameWithType.vb: TreeView(Of T).Collapse
  fullName.vb: Terminal.Gui.TreeView(Of T).Collapse
- uid: Terminal.Gui.TreeView`1.CollapseAll*
  commentId: Overload:Terminal.Gui.TreeView`1.CollapseAll
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CollapseAll(`0)
  name: CollapseAll
  nameWithType: TreeView<T>.CollapseAll
  fullName: Terminal.Gui.TreeView<T>.CollapseAll
  nameWithType.vb: TreeView(Of T).CollapseAll
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseAll
- uid: Terminal.Gui.TreeView`1.Collapse(`0)
  commentId: M:Terminal.Gui.TreeView`1.Collapse(`0)
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Collapse(`0)
  name: Collapse(T)
  nameWithType: TreeView<T>.Collapse(T)
  fullName: Terminal.Gui.TreeView<T>.Collapse(T)
  nameWithType.vb: TreeView(Of T).Collapse(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).Collapse(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1.Collapse(`0)
    name: Collapse
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Collapse(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeView`1.Collapse(`0)
    name: Collapse
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Collapse(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1.CollapseAll(`0)
  commentId: M:Terminal.Gui.TreeView`1.CollapseAll(`0)
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CollapseAll(`0)
  name: CollapseAll(T)
  nameWithType: TreeView<T>.CollapseAll(T)
  fullName: Terminal.Gui.TreeView<T>.CollapseAll(T)
  nameWithType.vb: TreeView(Of T).CollapseAll(T)
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseAll(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1.CollapseAll(`0)
    name: CollapseAll
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CollapseAll(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeView`1.CollapseAll(`0)
    name: CollapseAll
    href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CollapseAll(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1.CollapseImpl*
  commentId: Overload:Terminal.Gui.TreeView`1.CollapseImpl
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.CollapseImpl(`0,System.Boolean)
  name: CollapseImpl
  nameWithType: TreeView<T>.CollapseImpl
  fullName: Terminal.Gui.TreeView<T>.CollapseImpl
  nameWithType.vb: TreeView(Of T).CollapseImpl
  fullName.vb: Terminal.Gui.TreeView(Of T).CollapseImpl
- uid: Terminal.Gui.TreeView`1.InvalidateLineMap*
  commentId: Overload:Terminal.Gui.TreeView`1.InvalidateLineMap
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.InvalidateLineMap
  name: InvalidateLineMap
  nameWithType: TreeView<T>.InvalidateLineMap
  fullName: Terminal.Gui.TreeView<T>.InvalidateLineMap
  nameWithType.vb: TreeView(Of T).InvalidateLineMap
  fullName.vb: Terminal.Gui.TreeView(Of T).InvalidateLineMap
- uid: Terminal.Gui.TreeView`1.IsSelected*
  commentId: Overload:Terminal.Gui.TreeView`1.IsSelected
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.IsSelected(`0)
  name: IsSelected
  nameWithType: TreeView<T>.IsSelected
  fullName: Terminal.Gui.TreeView<T>.IsSelected
  nameWithType.vb: TreeView(Of T).IsSelected
  fullName.vb: Terminal.Gui.TreeView(Of T).IsSelected
- uid: Terminal.Gui.TreeView`1.GetAllSelectedObjects*
  commentId: Overload:Terminal.Gui.TreeView`1.GetAllSelectedObjects
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.GetAllSelectedObjects
  name: GetAllSelectedObjects
  nameWithType: TreeView<T>.GetAllSelectedObjects
  fullName: Terminal.Gui.TreeView<T>.GetAllSelectedObjects
  nameWithType.vb: TreeView(Of T).GetAllSelectedObjects
  fullName.vb: Terminal.Gui.TreeView(Of T).GetAllSelectedObjects
- uid: Terminal.Gui.TreeView`1.SelectAll*
  commentId: Overload:Terminal.Gui.TreeView`1.SelectAll
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.SelectAll
  name: SelectAll
  nameWithType: TreeView<T>.SelectAll
  fullName: Terminal.Gui.TreeView<T>.SelectAll
  nameWithType.vb: TreeView(Of T).SelectAll
  fullName.vb: Terminal.Gui.TreeView(Of T).SelectAll
- uid: Terminal.Gui.TreeView`1.OnSelectionChanged*
  commentId: Overload:Terminal.Gui.TreeView`1.OnSelectionChanged
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.OnSelectionChanged(Terminal.Gui.SelectionChangedEventArgs{`0})
  name: OnSelectionChanged
  nameWithType: TreeView<T>.OnSelectionChanged
  fullName: Terminal.Gui.TreeView<T>.OnSelectionChanged
  nameWithType.vb: TreeView(Of T).OnSelectionChanged
  fullName.vb: Terminal.Gui.TreeView(Of T).OnSelectionChanged
- uid: Terminal.Gui.SelectionChangedEventArgs{{T}}
  commentId: T:Terminal.Gui.SelectionChangedEventArgs{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.SelectionChangedEventArgs`1
  href: Terminal.Gui.SelectionChangedEventArgs-1.html
  name: SelectionChangedEventArgs<T>
  nameWithType: SelectionChangedEventArgs<T>
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>
  nameWithType.vb: SelectionChangedEventArgs(Of T)
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T)
  name.vb: SelectionChangedEventArgs(Of T)
  spec.csharp:
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.SelectionChangedEventArgs`1
  commentId: T:Terminal.Gui.SelectionChangedEventArgs`1
  href: Terminal.Gui.SelectionChangedEventArgs-1.html
  name: SelectionChangedEventArgs<T>
  nameWithType: SelectionChangedEventArgs<T>
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>
  nameWithType.vb: SelectionChangedEventArgs(Of T)
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T)
  name.vb: SelectionChangedEventArgs(Of T)
  spec.csharp:
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.SelectionChangedEventArgs`1
    name: SelectionChangedEventArgs
    href: Terminal.Gui.SelectionChangedEventArgs-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.View.Dispose(System.Boolean)
  commentId: M:Terminal.Gui.View.Dispose(System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  href: Terminal.Gui.View.html#Terminal.Gui.View.Dispose(System.Boolean)
  name: Dispose(bool)
  nameWithType: View.Dispose(bool)
  fullName: Terminal.Gui.View.Dispose(bool)
  nameWithType.vb: View.Dispose(Boolean)
  fullName.vb: Terminal.Gui.View.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.Dispose(System.Boolean)
    name: Dispose
    href: Terminal.Gui.View.html#Terminal.Gui.View.Dispose(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.View.Dispose(System.Boolean)
    name: Dispose
    href: Terminal.Gui.View.html#Terminal.Gui.View.Dispose(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.TreeView`1.Dispose*
  commentId: Overload:Terminal.Gui.TreeView`1.Dispose
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.Dispose(System.Boolean)
  name: Dispose
  nameWithType: TreeView<T>.Dispose
  fullName: Terminal.Gui.TreeView<T>.Dispose
  nameWithType.vb: TreeView(Of T).Dispose
  fullName.vb: Terminal.Gui.TreeView(Of T).Dispose
shouldSkipMarkup: true
