### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.KeyChangedEventArgs
  commentId: T:Terminal.Gui.KeyChangedEventArgs
  id: KeyChangedEventArgs
  parent: Terminal.Gui
  children:
  - Terminal.Gui.KeyChangedEventArgs.#ctor(Terminal.Gui.Key,Terminal.Gui.Key)
  - Terminal.Gui.KeyChangedEventArgs.NewKey
  - Terminal.Gui.KeyChangedEventArgs.OldKey
  langs:
  - csharp
  - vb
  name: KeyChangedEventArgs
  nameWithType: KeyChangedEventArgs
  fullName: Terminal.Gui.KeyChangedEventArgs
  type: Class
  source:
    remote:
      path: Terminal.Gui/Input/KeyChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyChangedEventArgs
    path: ../Terminal.Gui/Input/KeyChangedEventArgs.cs
    startLine: 8
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event args for when a <xref href="Terminal.Gui.Key" data-throw-if-not-resolved="false"></xref> is changed from

    one value to a new value (e.g. in <xref href="Terminal.Gui.View.HotKeyChanged" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: 'public class KeyChangedEventArgs : EventArgs'
    content.vb: Public Class KeyChangedEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.KeyChangedEventArgs.OldKey
  commentId: P:Terminal.Gui.KeyChangedEventArgs.OldKey
  id: OldKey
  parent: Terminal.Gui.KeyChangedEventArgs
  langs:
  - csharp
  - vb
  name: OldKey
  nameWithType: KeyChangedEventArgs.OldKey
  fullName: Terminal.Gui.KeyChangedEventArgs.OldKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/KeyChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OldKey
    path: ../Terminal.Gui/Input/KeyChangedEventArgs.cs
    startLine: 14
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the old <xref href="Terminal.Gui.Key" data-throw-if-not-resolved="false"></xref> that was set before the event.

    Use <xref href="Terminal.Gui.Key.Null" data-throw-if-not-resolved="false"></xref> to check for empty.
  example: []
  syntax:
    content: public Key OldKey { get; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public ReadOnly Property OldKey As Key
  overload: Terminal.Gui.KeyChangedEventArgs.OldKey*
- uid: Terminal.Gui.KeyChangedEventArgs.NewKey
  commentId: P:Terminal.Gui.KeyChangedEventArgs.NewKey
  id: NewKey
  parent: Terminal.Gui.KeyChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewKey
  nameWithType: KeyChangedEventArgs.NewKey
  fullName: Terminal.Gui.KeyChangedEventArgs.NewKey
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/KeyChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NewKey
    path: ../Terminal.Gui/Input/KeyChangedEventArgs.cs
    startLine: 20
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets the new <xref href="Terminal.Gui.Key" data-throw-if-not-resolved="false"></xref> that is being used.

    Use <xref href="Terminal.Gui.Key.Null" data-throw-if-not-resolved="false"></xref> to check for empty.
  example: []
  syntax:
    content: public Key NewKey { get; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public ReadOnly Property NewKey As Key
  overload: Terminal.Gui.KeyChangedEventArgs.NewKey*
- uid: Terminal.Gui.KeyChangedEventArgs.#ctor(Terminal.Gui.Key,Terminal.Gui.Key)
  commentId: M:Terminal.Gui.KeyChangedEventArgs.#ctor(Terminal.Gui.Key,Terminal.Gui.Key)
  id: '#ctor(Terminal.Gui.Key,Terminal.Gui.Key)'
  parent: Terminal.Gui.KeyChangedEventArgs
  langs:
  - csharp
  - vb
  name: KeyChangedEventArgs(Key, Key)
  nameWithType: KeyChangedEventArgs.KeyChangedEventArgs(Key, Key)
  fullName: Terminal.Gui.KeyChangedEventArgs.KeyChangedEventArgs(Terminal.Gui.Key, Terminal.Gui.Key)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Input/KeyChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Input/KeyChangedEventArgs.cs
    startLine: 27
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Creates a new instance of the <xref href="Terminal.Gui.KeyChangedEventArgs" data-throw-if-not-resolved="false"></xref> class
  example: []
  syntax:
    content: public KeyChangedEventArgs(Key oldKey, Key newKey)
    parameters:
    - id: oldKey
      type: Terminal.Gui.Key
      description: ''
    - id: newKey
      type: Terminal.Gui.Key
      description: ''
    content.vb: Public Sub New(oldKey As Key, newKey As Key)
  overload: Terminal.Gui.KeyChangedEventArgs.#ctor*
  nameWithType.vb: KeyChangedEventArgs.New(Key, Key)
  fullName.vb: Terminal.Gui.KeyChangedEventArgs.New(Terminal.Gui.Key, Terminal.Gui.Key)
  name.vb: New(Key, Key)
references:
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.View.HotKeyChanged
  commentId: E:Terminal.Gui.View.HotKeyChanged
  parent: Terminal.Gui.View
  href: Terminal.Gui.View.html#Terminal.Gui.View.HotKeyChanged
  name: HotKeyChanged
  nameWithType: View.HotKeyChanged
  fullName: Terminal.Gui.View.HotKeyChanged
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  href: Terminal.Gui.View.html
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.Key.Null
  commentId: F:Terminal.Gui.Key.Null
  href: Terminal.Gui.Key.html#Terminal.Gui.Key.Null
  name: "Null"
  nameWithType: Key.Null
  fullName: Terminal.Gui.Key.Null
- uid: Terminal.Gui.KeyChangedEventArgs.OldKey*
  commentId: Overload:Terminal.Gui.KeyChangedEventArgs.OldKey
  href: Terminal.Gui.KeyChangedEventArgs.html#Terminal.Gui.KeyChangedEventArgs.OldKey
  name: OldKey
  nameWithType: KeyChangedEventArgs.OldKey
  fullName: Terminal.Gui.KeyChangedEventArgs.OldKey
- uid: Terminal.Gui.KeyChangedEventArgs.NewKey*
  commentId: Overload:Terminal.Gui.KeyChangedEventArgs.NewKey
  href: Terminal.Gui.KeyChangedEventArgs.html#Terminal.Gui.KeyChangedEventArgs.NewKey
  name: NewKey
  nameWithType: KeyChangedEventArgs.NewKey
  fullName: Terminal.Gui.KeyChangedEventArgs.NewKey
- uid: Terminal.Gui.KeyChangedEventArgs
  commentId: T:Terminal.Gui.KeyChangedEventArgs
  parent: Terminal.Gui
  href: Terminal.Gui.KeyChangedEventArgs.html
  name: KeyChangedEventArgs
  nameWithType: KeyChangedEventArgs
  fullName: Terminal.Gui.KeyChangedEventArgs
- uid: Terminal.Gui.KeyChangedEventArgs.#ctor*
  commentId: Overload:Terminal.Gui.KeyChangedEventArgs.#ctor
  href: Terminal.Gui.KeyChangedEventArgs.html#Terminal.Gui.KeyChangedEventArgs.#ctor(Terminal.Gui.Key,Terminal.Gui.Key)
  name: KeyChangedEventArgs
  nameWithType: KeyChangedEventArgs.KeyChangedEventArgs
  fullName: Terminal.Gui.KeyChangedEventArgs.KeyChangedEventArgs
  nameWithType.vb: KeyChangedEventArgs.New
  fullName.vb: Terminal.Gui.KeyChangedEventArgs.New
  name.vb: New
shouldSkipMarkup: true
