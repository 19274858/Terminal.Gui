### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.LineStyle
  commentId: T:Terminal.Gui.LineStyle
  id: LineStyle
  parent: Terminal.Gui
  children:
  - Terminal.Gui.LineStyle.Dashed
  - Terminal.Gui.LineStyle.Dotted
  - Terminal.Gui.LineStyle.Double
  - Terminal.Gui.LineStyle.Heavy
  - Terminal.Gui.LineStyle.HeavyDashed
  - Terminal.Gui.LineStyle.HeavyDotted
  - Terminal.Gui.LineStyle.None
  - Terminal.Gui.LineStyle.Rounded
  - Terminal.Gui.LineStyle.RoundedDashed
  - Terminal.Gui.LineStyle.RoundedDotted
  - Terminal.Gui.LineStyle.Single
  langs:
  - csharp
  - vb
  name: LineStyle
  nameWithType: LineStyle
  fullName: Terminal.Gui.LineStyle
  type: Enum
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LineStyle
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 11
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Defines the style of lines for a <xref href="Terminal.Gui.LineCanvas" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public enum LineStyle
    content.vb: Public Enum LineStyle
- uid: Terminal.Gui.LineStyle.None
  commentId: F:Terminal.Gui.LineStyle.None
  id: None
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: None
  nameWithType: LineStyle.None
  fullName: Terminal.Gui.LineStyle.None
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: None
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 15
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: No border is drawn.
  example: []
  syntax:
    content: None = 0
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Single
  commentId: F:Terminal.Gui.LineStyle.Single
  id: Single
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Single
  nameWithType: LineStyle.Single
  fullName: Terminal.Gui.LineStyle.Single
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Single
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 19
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line CM.Glyphs.
  example: []
  syntax:
    content: Single = 1
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Dashed
  commentId: F:Terminal.Gui.LineStyle.Dashed
  id: Dashed
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Dashed
  nameWithType: LineStyle.Dashed
  fullName: Terminal.Gui.LineStyle.Dashed
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dashed
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 23
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line glyphs with dashed (double and triple) straight lines.
  example: []
  syntax:
    content: Dashed = 2
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Dotted
  commentId: F:Terminal.Gui.LineStyle.Dotted
  id: Dotted
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Dotted
  nameWithType: LineStyle.Dotted
  fullName: Terminal.Gui.LineStyle.Dotted
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Dotted
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 27
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line glyphs with short dashed (triple and quadruple) straight lines.
  example: []
  syntax:
    content: Dotted = 3
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Double
  commentId: F:Terminal.Gui.LineStyle.Double
  id: Double
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: LineStyle.Double
  fullName: Terminal.Gui.LineStyle.Double
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Double
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 31
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin double line CM.Glyphs.
  example: []
  syntax:
    content: Double = 4
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Heavy
  commentId: F:Terminal.Gui.LineStyle.Heavy
  id: Heavy
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Heavy
  nameWithType: LineStyle.Heavy
  fullName: Terminal.Gui.LineStyle.Heavy
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Heavy
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 35
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using heavy line CM.Glyphs.
  example: []
  syntax:
    content: Heavy = 5
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.HeavyDashed
  commentId: F:Terminal.Gui.LineStyle.HeavyDashed
  id: HeavyDashed
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: HeavyDashed
  nameWithType: LineStyle.HeavyDashed
  fullName: Terminal.Gui.LineStyle.HeavyDashed
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HeavyDashed
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 39
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using heavy line glyphs with dashed (double and triple) straight lines.
  example: []
  syntax:
    content: HeavyDashed = 6
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.HeavyDotted
  commentId: F:Terminal.Gui.LineStyle.HeavyDotted
  id: HeavyDotted
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: HeavyDotted
  nameWithType: LineStyle.HeavyDotted
  fullName: Terminal.Gui.LineStyle.HeavyDotted
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HeavyDotted
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 43
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using heavy line glyphs with short dashed (triple and quadruple) straight lines.
  example: []
  syntax:
    content: HeavyDotted = 7
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.Rounded
  commentId: F:Terminal.Gui.LineStyle.Rounded
  id: Rounded
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: Rounded
  nameWithType: LineStyle.Rounded
  fullName: Terminal.Gui.LineStyle.Rounded
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Rounded
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 47
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line glyphs with rounded corners.
  example: []
  syntax:
    content: Rounded = 8
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.RoundedDashed
  commentId: F:Terminal.Gui.LineStyle.RoundedDashed
  id: RoundedDashed
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: RoundedDashed
  nameWithType: LineStyle.RoundedDashed
  fullName: Terminal.Gui.LineStyle.RoundedDashed
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RoundedDashed
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 51
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line glyphs with rounded corners and dashed (double and triple) straight lines.
  example: []
  syntax:
    content: RoundedDashed = 9
    return:
      type: Terminal.Gui.LineStyle
- uid: Terminal.Gui.LineStyle.RoundedDotted
  commentId: F:Terminal.Gui.LineStyle.RoundedDotted
  id: RoundedDotted
  parent: Terminal.Gui.LineStyle
  langs:
  - csharp
  - vb
  name: RoundedDotted
  nameWithType: LineStyle.RoundedDotted
  fullName: Terminal.Gui.LineStyle.RoundedDotted
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/LineCanvas.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RoundedDotted
    path: ../Terminal.Gui/Drawing/LineCanvas.cs
    startLine: 55
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The border is drawn using thin line glyphs with rounded corners and short dashed (triple and quadruple) straight lines.
  example: []
  syntax:
    content: RoundedDotted = 10
    return:
      type: Terminal.Gui.LineStyle
references:
- uid: Terminal.Gui.LineCanvas
  commentId: T:Terminal.Gui.LineCanvas
  parent: Terminal.Gui
  href: Terminal.Gui.LineCanvas.html
  name: LineCanvas
  nameWithType: LineCanvas
  fullName: Terminal.Gui.LineCanvas
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: Terminal.Gui.LineStyle
  commentId: T:Terminal.Gui.LineStyle
  parent: Terminal.Gui
  href: Terminal.Gui.LineStyle.html
  name: LineStyle
  nameWithType: LineStyle
  fullName: Terminal.Gui.LineStyle
shouldSkipMarkup: true
