### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.FileSystemIconProvider
  commentId: T:Terminal.Gui.FileSystemIconProvider
  id: FileSystemIconProvider
  parent: Terminal.Gui
  children:
  - Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  - Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  - Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  - Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  - Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  langs:
  - csharp
  - vb
  name: FileSystemIconProvider
  nameWithType: FileSystemIconProvider
  fullName: Terminal.Gui.FileSystemIconProvider
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: FileSystemIconProvider
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 9
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines which symbol to use to represent files and directories.
  example: []
  syntax:
    content: public class FileSystemIconProvider
    content.vb: Public Class FileSystemIconProvider
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  commentId: P:Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  id: UseNerdIcons
  parent: Terminal.Gui.FileSystemIconProvider
  langs:
  - csharp
  - vb
  name: UseNerdIcons
  nameWithType: FileSystemIconProvider.UseNerdIcons
  fullName: Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UseNerdIcons
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 20
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <p>

    Gets or sets a flag indicating whether to use Nerd Font icons.

    Defaults to <xref href="Terminal.Gui.NerdFonts.Enable" data-throw-if-not-resolved="false"></xref> which can be configured

    by end users from their <code>./.tui/config.json</code> 

    via <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref>.

    </p>

    <remarks>Enabling <xref href="Terminal.Gui.FileSystemIconProvider.UseNerdIcons" data-throw-if-not-resolved="false"></xref> implicitly

    disables <xref href="Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters" data-throw-if-not-resolved="false"></xref>.</remarks>
  example: []
  syntax:
    content: public bool UseNerdIcons { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseNerdIcons As Boolean
  overload: Terminal.Gui.FileSystemIconProvider.UseNerdIcons*
- uid: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  commentId: P:Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  id: UseUnicodeCharacters
  parent: Terminal.Gui.FileSystemIconProvider
  langs:
  - csharp
  - vb
  name: UseUnicodeCharacters
  nameWithType: FileSystemIconProvider.UseUnicodeCharacters
  fullName: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UseUnicodeCharacters
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 32
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets a flag indicating whether to use common unicode

    characters for file/directory icons.
  example: []
  syntax:
    content: public bool UseUnicodeCharacters { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseUnicodeCharacters As Boolean
  overload: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters*
- uid: Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  commentId: P:Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  id: IsOpenGetter
  parent: Terminal.Gui.FileSystemIconProvider
  langs:
  - csharp
  - vb
  name: IsOpenGetter
  nameWithType: FileSystemIconProvider.IsOpenGetter
  fullName: Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsOpenGetter
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 50
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets the delegate to be used to determine opened state of directories

    when resolving <xref href="Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)" data-throw-if-not-resolved="false"></xref>.  Defaults to always false.
  example: []
  syntax:
    content: public Func<IDirectoryInfo, bool> IsOpenGetter { get; set; }
    parameters: []
    return:
      type: System.Func{System.IO.Abstractions.IDirectoryInfo,System.Boolean}
    content.vb: Public Property IsOpenGetter As Func(Of IDirectoryInfo, Boolean)
  overload: Terminal.Gui.FileSystemIconProvider.IsOpenGetter*
- uid: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  id: GetIcon(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.FileSystemIconProvider
  langs:
  - csharp
  - vb
  name: GetIcon(IFileSystemInfo)
  nameWithType: FileSystemIconProvider.GetIcon(IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetIcon
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 58
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns the character to use to represent <code class="paramref">fileSystemInfo</code> or an empty

    space if no icon should be used.
  example: []
  syntax:
    content: public Rune GetIcon(IFileSystemInfo fileSystemInfo)
    parameters:
    - id: fileSystemInfo
      type: System.IO.Abstractions.IFileSystemInfo
      description: The file or directory requiring an icon.
    return:
      type: System.Text.Rune
      description: ''
    content.vb: Public Function GetIcon(fileSystemInfo As IFileSystemInfo) As Rune
  overload: Terminal.Gui.FileSystemIconProvider.GetIcon*
- uid: Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  id: GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  parent: Terminal.Gui.FileSystemIconProvider
  langs:
  - csharp
  - vb
  name: GetIconWithOptionalSpace(IFileSystemInfo)
  nameWithType: FileSystemIconProvider.GetIconWithOptionalSpace(IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/FileSystemIconProvider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetIconWithOptionalSpace
    path: ../Terminal.Gui/Views/FileSystemIconProvider.cs
    startLine: 79
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns <xref href="Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)" data-throw-if-not-resolved="false"></xref> with an extra

    space on the end if icon is likely to overlap adjacent cells.
  example: []
  syntax:
    content: public string GetIconWithOptionalSpace(IFileSystemInfo fileSystemInfo)
    parameters:
    - id: fileSystemInfo
      type: System.IO.Abstractions.IFileSystemInfo
    return:
      type: System.String
    content.vb: Public Function GetIconWithOptionalSpace(fileSystemInfo As IFileSystemInfo) As String
  overload: Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.NerdFonts.Enable
  commentId: P:Terminal.Gui.NerdFonts.Enable
  href: Terminal.Gui.NerdFonts.html#Terminal.Gui.NerdFonts.Enable
  name: Enable
  nameWithType: NerdFonts.Enable
  fullName: Terminal.Gui.NerdFonts.Enable
- uid: Terminal.Gui.ConfigurationManager
  commentId: T:Terminal.Gui.ConfigurationManager
  href: Terminal.Gui.ConfigurationManager.html
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Terminal.Gui.ConfigurationManager
- uid: Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  commentId: P:Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  name: UseNerdIcons
  nameWithType: FileSystemIconProvider.UseNerdIcons
  fullName: Terminal.Gui.FileSystemIconProvider.UseNerdIcons
- uid: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  commentId: P:Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  name: UseUnicodeCharacters
  nameWithType: FileSystemIconProvider.UseUnicodeCharacters
  fullName: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
- uid: Terminal.Gui.FileSystemIconProvider.UseNerdIcons*
  commentId: Overload:Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.UseNerdIcons
  name: UseNerdIcons
  nameWithType: FileSystemIconProvider.UseNerdIcons
  fullName: Terminal.Gui.FileSystemIconProvider.UseNerdIcons
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters*
  commentId: Overload:Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
  name: UseUnicodeCharacters
  nameWithType: FileSystemIconProvider.UseUnicodeCharacters
  fullName: Terminal.Gui.FileSystemIconProvider.UseUnicodeCharacters
- uid: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  commentId: M:Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  isExternal: true
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  name: GetIcon(IFileSystemInfo)
  nameWithType: FileSystemIconProvider.GetIcon(IFileSystemInfo)
  fullName: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  spec.csharp:
  - uid: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
    name: GetIcon
    href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
    name: GetIcon
    href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  - name: (
  - uid: System.IO.Abstractions.IFileSystemInfo
    name: IFileSystemInfo
    isExternal: true
  - name: )
- uid: Terminal.Gui.FileSystemIconProvider.IsOpenGetter*
  commentId: Overload:Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.IsOpenGetter
  name: IsOpenGetter
  nameWithType: FileSystemIconProvider.IsOpenGetter
  fullName: Terminal.Gui.FileSystemIconProvider.IsOpenGetter
- uid: System.Func{System.IO.Abstractions.IDirectoryInfo,System.Boolean}
  commentId: T:System.Func{System.IO.Abstractions.IDirectoryInfo,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IDirectoryInfo, bool>
  nameWithType: Func<IDirectoryInfo, bool>
  fullName: System.Func<System.IO.Abstractions.IDirectoryInfo, bool>
  nameWithType.vb: Func(Of IDirectoryInfo, Boolean)
  fullName.vb: System.Func(Of System.IO.Abstractions.IDirectoryInfo, Boolean)
  name.vb: Func(Of IDirectoryInfo, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.IO.Abstractions.IDirectoryInfo
    name: IDirectoryInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Abstractions.IDirectoryInfo
    name: IDirectoryInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Terminal.Gui.FileSystemIconProvider.GetIcon*
  commentId: Overload:Terminal.Gui.FileSystemIconProvider.GetIcon
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.GetIcon(System.IO.Abstractions.IFileSystemInfo)
  name: GetIcon
  nameWithType: FileSystemIconProvider.GetIcon
  fullName: Terminal.Gui.FileSystemIconProvider.GetIcon
- uid: System.IO.Abstractions.IFileSystemInfo
  commentId: T:System.IO.Abstractions.IFileSystemInfo
  parent: System.IO.Abstractions
  isExternal: true
  name: IFileSystemInfo
  nameWithType: IFileSystemInfo
  fullName: System.IO.Abstractions.IFileSystemInfo
- uid: System.Text.Rune
  commentId: T:System.Text.Rune
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune
  nameWithType: Rune
  fullName: System.Text.Rune
- uid: System.IO.Abstractions
  commentId: N:System.IO.Abstractions
  isExternal: true
  name: System.IO.Abstractions
  nameWithType: System.IO.Abstractions
  fullName: System.IO.Abstractions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
  - name: .
  - uid: System.IO.Abstractions
    name: Abstractions
    isExternal: true
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace*
  commentId: Overload:Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace
  href: Terminal.Gui.FileSystemIconProvider.html#Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace(System.IO.Abstractions.IFileSystemInfo)
  name: GetIconWithOptionalSpace
  nameWithType: FileSystemIconProvider.GetIconWithOptionalSpace
  fullName: Terminal.Gui.FileSystemIconProvider.GetIconWithOptionalSpace
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
shouldSkipMarkup: true
