### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.LegendAnnotation
  commentId: T:Terminal.Gui.LegendAnnotation
  id: LegendAnnotation
  parent: Terminal.Gui
  children:
  - Terminal.Gui.LegendAnnotation.#ctor(Terminal.Gui.Rect)
  - Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender,System.String)
  - Terminal.Gui.LegendAnnotation.BeforeSeries
  - Terminal.Gui.LegendAnnotation.Border
  - Terminal.Gui.LegendAnnotation.Bounds
  - Terminal.Gui.LegendAnnotation.Render(Terminal.Gui.GraphView)
  langs:
  - csharp
  - vb
  name: LegendAnnotation
  nameWithType: LegendAnnotation
  fullName: Terminal.Gui.LegendAnnotation
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LegendAnnotation
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 116
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    A box containing symbol definitions e.g. meanings for colors in a graph.

    The 'Key' to the graph
  example: []
  syntax:
    content: 'public class LegendAnnotation : IAnnotation'
    content.vb: Public Class LegendAnnotation Implements IAnnotation
  inheritance:
  - System.Object
  implements:
  - Terminal.Gui.IAnnotation
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.LegendAnnotation.Border
  commentId: P:Terminal.Gui.LegendAnnotation.Border
  id: Border
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: Border
  nameWithType: LegendAnnotation.Border
  fullName: Terminal.Gui.LegendAnnotation.Border
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Border
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 124
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    True to draw a solid border around the legend.

    Defaults to true.  This border will be within the

    <xref href="Terminal.Gui.LegendAnnotation.Bounds" data-throw-if-not-resolved="false"></xref> and so reduces the width/height

    available for text by 2
  example: []
  syntax:
    content: public bool Border { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Border As Boolean
  overload: Terminal.Gui.LegendAnnotation.Border*
- uid: Terminal.Gui.LegendAnnotation.Bounds
  commentId: P:Terminal.Gui.LegendAnnotation.Bounds
  id: Bounds
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: Bounds
  nameWithType: LegendAnnotation.Bounds
  fullName: Terminal.Gui.LegendAnnotation.Bounds
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Bounds
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 129
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Defines the screen area available for the legend to render in
  example: []
  syntax:
    content: public Rect Bounds { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Rect
    content.vb: Public Property Bounds As Rect
  overload: Terminal.Gui.LegendAnnotation.Bounds*
- uid: Terminal.Gui.LegendAnnotation.BeforeSeries
  commentId: P:Terminal.Gui.LegendAnnotation.BeforeSeries
  id: BeforeSeries
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: BeforeSeries
  nameWithType: LegendAnnotation.BeforeSeries
  fullName: Terminal.Gui.LegendAnnotation.BeforeSeries
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: BeforeSeries
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 134
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns false i.e. Lengends render after series
  example: []
  syntax:
    content: public bool BeforeSeries { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property BeforeSeries As Boolean
  overload: Terminal.Gui.LegendAnnotation.BeforeSeries*
  implements:
  - Terminal.Gui.IAnnotation.BeforeSeries
- uid: Terminal.Gui.LegendAnnotation.#ctor(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.LegendAnnotation.#ctor(Terminal.Gui.Rect)
  id: '#ctor(Terminal.Gui.Rect)'
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: LegendAnnotation(Rect)
  nameWithType: LegendAnnotation.LegendAnnotation(Rect)
  fullName: Terminal.Gui.LegendAnnotation.LegendAnnotation(Terminal.Gui.Rect)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 146
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Creates a new empty legend at the given screen coordinates
  example: []
  syntax:
    content: public LegendAnnotation(Rect legendBounds)
    parameters:
    - id: legendBounds
      type: Terminal.Gui.Rect
      description: >-
        Defines the area available for the legend to render in
            (within the graph).  This is in screen units (i.e. not graph space)
    content.vb: Public Sub New(legendBounds As Rect)
  overload: Terminal.Gui.LegendAnnotation.#ctor*
  nameWithType.vb: LegendAnnotation.New(Rect)
  fullName.vb: Terminal.Gui.LegendAnnotation.New(Terminal.Gui.Rect)
  name.vb: New(Rect)
- uid: Terminal.Gui.LegendAnnotation.Render(Terminal.Gui.GraphView)
  commentId: M:Terminal.Gui.LegendAnnotation.Render(Terminal.Gui.GraphView)
  id: Render(Terminal.Gui.GraphView)
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: Render(GraphView)
  nameWithType: LegendAnnotation.Render(GraphView)
  fullName: Terminal.Gui.LegendAnnotation.Render(Terminal.Gui.GraphView)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Render
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 155
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Draws the Legend and all entries into the area within <xref href="Terminal.Gui.LegendAnnotation.Bounds" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Render(GraphView graph)
    parameters:
    - id: graph
      type: Terminal.Gui.GraphView
      description: ''
    content.vb: Public Sub Render(graph As GraphView)
  overload: Terminal.Gui.LegendAnnotation.Render*
  implements:
  - Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
- uid: Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender,System.String)
  commentId: M:Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender,System.String)
  id: AddEntry(Terminal.Gui.GraphCellToRender,System.String)
  parent: Terminal.Gui.LegendAnnotation
  langs:
  - csharp
  - vb
  name: AddEntry(GraphCellToRender, string)
  nameWithType: LegendAnnotation.AddEntry(GraphCellToRender, string)
  fullName: Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender, string)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/GraphView/Annotations.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AddEntry
    path: ../Terminal.Gui/Views/GraphView/Annotations.cs
    startLine: 206
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Adds an entry into the legend.  Duplicate entries are permissable
  example: []
  syntax:
    content: public void AddEntry(GraphCellToRender graphCellToRender, string text)
    parameters:
    - id: graphCellToRender
      type: Terminal.Gui.GraphCellToRender
      description: The symbol appearing on the graph that should appear in the legend
    - id: text
      type: System.String
      description: >-
        Text to render on this line of the legend.  Will be truncated
            if outside of Legend <xref href="Terminal.Gui.LegendAnnotation.Bounds" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub AddEntry(graphCellToRender As GraphCellToRender, text As String)
  overload: Terminal.Gui.LegendAnnotation.AddEntry*
  nameWithType.vb: LegendAnnotation.AddEntry(GraphCellToRender, String)
  fullName.vb: Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender, String)
  name.vb: AddEntry(GraphCellToRender, String)
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.IAnnotation
  commentId: T:Terminal.Gui.IAnnotation
  parent: Terminal.Gui
  href: Terminal.Gui.IAnnotation.html
  name: IAnnotation
  nameWithType: IAnnotation
  fullName: Terminal.Gui.IAnnotation
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.LegendAnnotation.Bounds
  commentId: P:Terminal.Gui.LegendAnnotation.Bounds
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.Bounds
  name: Bounds
  nameWithType: LegendAnnotation.Bounds
  fullName: Terminal.Gui.LegendAnnotation.Bounds
- uid: Terminal.Gui.LegendAnnotation.Border*
  commentId: Overload:Terminal.Gui.LegendAnnotation.Border
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.Border
  name: Border
  nameWithType: LegendAnnotation.Border
  fullName: Terminal.Gui.LegendAnnotation.Border
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.LegendAnnotation.Bounds*
  commentId: Overload:Terminal.Gui.LegendAnnotation.Bounds
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.Bounds
  name: Bounds
  nameWithType: LegendAnnotation.Bounds
  fullName: Terminal.Gui.LegendAnnotation.Bounds
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  href: Terminal.Gui.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.LegendAnnotation.BeforeSeries*
  commentId: Overload:Terminal.Gui.LegendAnnotation.BeforeSeries
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.BeforeSeries
  name: BeforeSeries
  nameWithType: LegendAnnotation.BeforeSeries
  fullName: Terminal.Gui.LegendAnnotation.BeforeSeries
- uid: Terminal.Gui.IAnnotation.BeforeSeries
  commentId: P:Terminal.Gui.IAnnotation.BeforeSeries
  parent: Terminal.Gui.IAnnotation
  href: Terminal.Gui.IAnnotation.html#Terminal.Gui.IAnnotation.BeforeSeries
  name: BeforeSeries
  nameWithType: IAnnotation.BeforeSeries
  fullName: Terminal.Gui.IAnnotation.BeforeSeries
- uid: Terminal.Gui.LegendAnnotation.#ctor*
  commentId: Overload:Terminal.Gui.LegendAnnotation.#ctor
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.#ctor(Terminal.Gui.Rect)
  name: LegendAnnotation
  nameWithType: LegendAnnotation.LegendAnnotation
  fullName: Terminal.Gui.LegendAnnotation.LegendAnnotation
  nameWithType.vb: LegendAnnotation.New
  fullName.vb: Terminal.Gui.LegendAnnotation.New
  name.vb: New
- uid: Terminal.Gui.LegendAnnotation.Render*
  commentId: Overload:Terminal.Gui.LegendAnnotation.Render
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.Render(Terminal.Gui.GraphView)
  name: Render
  nameWithType: LegendAnnotation.Render
  fullName: Terminal.Gui.LegendAnnotation.Render
- uid: Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  commentId: M:Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  parent: Terminal.Gui.IAnnotation
  href: Terminal.Gui.IAnnotation.html#Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  name: Render(GraphView)
  nameWithType: IAnnotation.Render(GraphView)
  fullName: Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  spec.csharp:
  - uid: Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
    name: Render
    href: Terminal.Gui.IAnnotation.html#Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  - name: (
  - uid: Terminal.Gui.GraphView
    name: GraphView
    href: Terminal.Gui.GraphView.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
    name: Render
    href: Terminal.Gui.IAnnotation.html#Terminal.Gui.IAnnotation.Render(Terminal.Gui.GraphView)
  - name: (
  - uid: Terminal.Gui.GraphView
    name: GraphView
    href: Terminal.Gui.GraphView.html
  - name: )
- uid: Terminal.Gui.GraphView
  commentId: T:Terminal.Gui.GraphView
  parent: Terminal.Gui
  href: Terminal.Gui.GraphView.html
  name: GraphView
  nameWithType: GraphView
  fullName: Terminal.Gui.GraphView
- uid: Terminal.Gui.LegendAnnotation.AddEntry*
  commentId: Overload:Terminal.Gui.LegendAnnotation.AddEntry
  href: Terminal.Gui.LegendAnnotation.html#Terminal.Gui.LegendAnnotation.AddEntry(Terminal.Gui.GraphCellToRender,System.String)
  name: AddEntry
  nameWithType: LegendAnnotation.AddEntry
  fullName: Terminal.Gui.LegendAnnotation.AddEntry
- uid: Terminal.Gui.GraphCellToRender
  commentId: T:Terminal.Gui.GraphCellToRender
  parent: Terminal.Gui
  href: Terminal.Gui.GraphCellToRender.html
  name: GraphCellToRender
  nameWithType: GraphCellToRender
  fullName: Terminal.Gui.GraphCellToRender
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
shouldSkipMarkup: true
