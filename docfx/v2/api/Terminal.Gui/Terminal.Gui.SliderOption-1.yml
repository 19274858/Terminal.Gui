### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.SliderOption`1
  commentId: T:Terminal.Gui.SliderOption`1
  id: SliderOption`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.SliderOption`1.Changed
  - Terminal.Gui.SliderOption`1.Data
  - Terminal.Gui.SliderOption`1.Legend
  - Terminal.Gui.SliderOption`1.LegendAbbr
  - Terminal.Gui.SliderOption`1.Set
  - Terminal.Gui.SliderOption`1.UnSet
  langs:
  - csharp
  - vb
  name: SliderOption<T>
  nameWithType: SliderOption<T>
  fullName: Terminal.Gui.SliderOption<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SliderOption
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 34
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Represents an option in a <xref href="Terminal.Gui.Slider%601" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public class SliderOption<T>
    typeParameters:
    - id: T
      description: Datatype of the option.
    content.vb: Public Class SliderOption(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SliderOption(Of T)
  fullName.vb: Terminal.Gui.SliderOption(Of T)
  name.vb: SliderOption(Of T)
- uid: Terminal.Gui.SliderOption`1.Legend
  commentId: P:Terminal.Gui.SliderOption`1.Legend
  id: Legend
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: Legend
  nameWithType: SliderOption<T>.Legend
  fullName: Terminal.Gui.SliderOption<T>.Legend
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Legend
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 38
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Legend of the option.
  example: []
  syntax:
    content: public string Legend { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Legend As String
  overload: Terminal.Gui.SliderOption`1.Legend*
  nameWithType.vb: SliderOption(Of T).Legend
  fullName.vb: Terminal.Gui.SliderOption(Of T).Legend
- uid: Terminal.Gui.SliderOption`1.LegendAbbr
  commentId: P:Terminal.Gui.SliderOption`1.LegendAbbr
  id: LegendAbbr
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: LegendAbbr
  nameWithType: SliderOption<T>.LegendAbbr
  fullName: Terminal.Gui.SliderOption<T>.LegendAbbr
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LegendAbbr
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 43
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Abbreviation of the Legend. When the <xref href="Terminal.Gui.Slider%601.InnerSpacing" data-throw-if-not-resolved="false"></xref> too small to fit <xref href="Terminal.Gui.SliderOption%601.Legend" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Rune LegendAbbr { get; set; }
    parameters: []
    return:
      type: System.Text.Rune
    content.vb: Public Property LegendAbbr As Rune
  overload: Terminal.Gui.SliderOption`1.LegendAbbr*
  nameWithType.vb: SliderOption(Of T).LegendAbbr
  fullName.vb: Terminal.Gui.SliderOption(Of T).LegendAbbr
- uid: Terminal.Gui.SliderOption`1.Data
  commentId: P:Terminal.Gui.SliderOption`1.Data
  id: Data
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SliderOption<T>.Data
  fullName: Terminal.Gui.SliderOption<T>.Data
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Data
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 48
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Custom data of the option.
  example: []
  syntax:
    content: public T Data { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Data As T
  overload: Terminal.Gui.SliderOption`1.Data*
  nameWithType.vb: SliderOption(Of T).Data
  fullName.vb: Terminal.Gui.SliderOption(Of T).Data
- uid: Terminal.Gui.SliderOption`1.Set
  commentId: E:Terminal.Gui.SliderOption`1.Set
  id: Set
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: Set
  nameWithType: SliderOption<T>.Set
  fullName: Terminal.Gui.SliderOption<T>.Set
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Set
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 77
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event Raised when this option is set.
  example: []
  syntax:
    content: public event EventHandler<SliderOptionEventArgs> Set
    return:
      type: System.EventHandler{Terminal.Gui.SliderOptionEventArgs}
    content.vb: Public Event [Set] As EventHandler(Of SliderOptionEventArgs)
  nameWithType.vb: SliderOption(Of T).Set
  fullName.vb: Terminal.Gui.SliderOption(Of T).Set
- uid: Terminal.Gui.SliderOption`1.UnSet
  commentId: E:Terminal.Gui.SliderOption`1.UnSet
  id: UnSet
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: UnSet
  nameWithType: SliderOption<T>.UnSet
  fullName: Terminal.Gui.SliderOption<T>.UnSet
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: UnSet
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 82
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event Raised when this option is unset.
  example: []
  syntax:
    content: public event EventHandler<SliderOptionEventArgs> UnSet
    return:
      type: System.EventHandler{Terminal.Gui.SliderOptionEventArgs}
    content.vb: Public Event UnSet As EventHandler(Of SliderOptionEventArgs)
  nameWithType.vb: SliderOption(Of T).UnSet
  fullName.vb: Terminal.Gui.SliderOption(Of T).UnSet
- uid: Terminal.Gui.SliderOption`1.Changed
  commentId: E:Terminal.Gui.SliderOption`1.Changed
  id: Changed
  parent: Terminal.Gui.SliderOption`1
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: SliderOption<T>.Changed
  fullName: Terminal.Gui.SliderOption<T>.Changed
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/Slider.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Changed
    path: ../Terminal.Gui/Views/Slider.cs
    startLine: 87
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event fired when the an option has changed.
  example: []
  syntax:
    content: public event EventHandler<SliderOptionEventArgs> Changed
    return:
      type: System.EventHandler{Terminal.Gui.SliderOptionEventArgs}
    content.vb: Public Event Changed As EventHandler(Of SliderOptionEventArgs)
  nameWithType.vb: SliderOption(Of T).Changed
  fullName.vb: Terminal.Gui.SliderOption(Of T).Changed
references:
- uid: Terminal.Gui.Slider`1
  commentId: T:Terminal.Gui.Slider`1
  href: Terminal.Gui.Slider-1.html
  name: Slider<T>
  nameWithType: Slider<T>
  fullName: Terminal.Gui.Slider<T>
  nameWithType.vb: Slider(Of T)
  fullName.vb: Terminal.Gui.Slider(Of T)
  name.vb: Slider(Of T)
  spec.csharp:
  - uid: Terminal.Gui.Slider`1
    name: Slider
    href: Terminal.Gui.Slider-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.Slider`1
    name: Slider
    href: Terminal.Gui.Slider-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.SliderOption`1.Legend*
  commentId: Overload:Terminal.Gui.SliderOption`1.Legend
  href: Terminal.Gui.SliderOption-1.html#Terminal.Gui.SliderOption`1.Legend
  name: Legend
  nameWithType: SliderOption<T>.Legend
  fullName: Terminal.Gui.SliderOption<T>.Legend
  nameWithType.vb: SliderOption(Of T).Legend
  fullName.vb: Terminal.Gui.SliderOption(Of T).Legend
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.Slider`1.InnerSpacing
  commentId: P:Terminal.Gui.Slider`1.InnerSpacing
  href: Terminal.Gui.Slider-1.html#Terminal.Gui.Slider`1.InnerSpacing
  name: InnerSpacing
  nameWithType: Slider<T>.InnerSpacing
  fullName: Terminal.Gui.Slider<T>.InnerSpacing
  nameWithType.vb: Slider(Of T).InnerSpacing
  fullName.vb: Terminal.Gui.Slider(Of T).InnerSpacing
- uid: Terminal.Gui.SliderOption`1.Legend
  commentId: P:Terminal.Gui.SliderOption`1.Legend
  href: Terminal.Gui.SliderOption-1.html#Terminal.Gui.SliderOption`1.Legend
  name: Legend
  nameWithType: SliderOption<T>.Legend
  fullName: Terminal.Gui.SliderOption<T>.Legend
  nameWithType.vb: SliderOption(Of T).Legend
  fullName.vb: Terminal.Gui.SliderOption(Of T).Legend
- uid: Terminal.Gui.SliderOption`1.LegendAbbr*
  commentId: Overload:Terminal.Gui.SliderOption`1.LegendAbbr
  href: Terminal.Gui.SliderOption-1.html#Terminal.Gui.SliderOption`1.LegendAbbr
  name: LegendAbbr
  nameWithType: SliderOption<T>.LegendAbbr
  fullName: Terminal.Gui.SliderOption<T>.LegendAbbr
  nameWithType.vb: SliderOption(Of T).LegendAbbr
  fullName.vb: Terminal.Gui.SliderOption(Of T).LegendAbbr
- uid: System.Text.Rune
  commentId: T:System.Text.Rune
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune
  nameWithType: Rune
  fullName: System.Text.Rune
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Terminal.Gui.SliderOption`1.Data*
  commentId: Overload:Terminal.Gui.SliderOption`1.Data
  href: Terminal.Gui.SliderOption-1.html#Terminal.Gui.SliderOption`1.Data
  name: Data
  nameWithType: SliderOption<T>.Data
  fullName: Terminal.Gui.SliderOption<T>.Data
  nameWithType.vb: SliderOption(Of T).Data
  fullName.vb: Terminal.Gui.SliderOption(Of T).Data
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.EventHandler{Terminal.Gui.SliderOptionEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.SliderOptionEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<SliderOptionEventArgs>
  nameWithType: EventHandler<SliderOptionEventArgs>
  fullName: System.EventHandler<Terminal.Gui.SliderOptionEventArgs>
  nameWithType.vb: EventHandler(Of SliderOptionEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.SliderOptionEventArgs)
  name.vb: EventHandler(Of SliderOptionEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.SliderOptionEventArgs
    name: SliderOptionEventArgs
    href: Terminal.Gui.SliderOptionEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.SliderOptionEventArgs
    name: SliderOptionEventArgs
    href: Terminal.Gui.SliderOptionEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
shouldSkipMarkup: true
