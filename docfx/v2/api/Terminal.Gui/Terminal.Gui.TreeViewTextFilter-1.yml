### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TreeViewTextFilter`1
  commentId: T:Terminal.Gui.TreeViewTextFilter`1
  id: TreeViewTextFilter`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TreeViewTextFilter`1.#ctor(Terminal.Gui.TreeView{`0})
  - Terminal.Gui.TreeViewTextFilter`1.Comparer
  - Terminal.Gui.TreeViewTextFilter`1.IsMatch(`0)
  - Terminal.Gui.TreeViewTextFilter`1.Text
  langs:
  - csharp
  - vb
  name: TreeViewTextFilter<T>
  nameWithType: TreeViewTextFilter<T>
  fullName: Terminal.Gui.TreeViewTextFilter<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeViewTextFilter.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TreeViewTextFilter
    path: ../Terminal.Gui/Views/TreeViewTextFilter.cs
    startLine: 10
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <xref href="Terminal.Gui.ITreeViewFilter%601" data-throw-if-not-resolved="false"></xref> implementation which searches the

    <xref href="Terminal.Gui.TreeView%601.AspectGetter" data-throw-if-not-resolved="false"></xref> of the model for the given

    <xref href="Terminal.Gui.TreeViewTextFilter%601.Text" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class TreeViewTextFilter<T> : ITreeViewFilter<T> where T : class'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Class TreeViewTextFilter(Of T As Class) Implements ITreeViewFilter(Of T)
  inheritance:
  - System.Object
  implements:
  - Terminal.Gui.ITreeViewFilter{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: TreeViewTextFilter(Of T)
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T)
  name.vb: TreeViewTextFilter(Of T)
- uid: Terminal.Gui.TreeViewTextFilter`1.#ctor(Terminal.Gui.TreeView{`0})
  commentId: M:Terminal.Gui.TreeViewTextFilter`1.#ctor(Terminal.Gui.TreeView{`0})
  id: '#ctor(Terminal.Gui.TreeView{`0})'
  parent: Terminal.Gui.TreeViewTextFilter`1
  langs:
  - csharp
  - vb
  name: TreeViewTextFilter(TreeView<T>)
  nameWithType: TreeViewTextFilter<T>.TreeViewTextFilter(TreeView<T>)
  fullName: Terminal.Gui.TreeViewTextFilter<T>.TreeViewTextFilter(Terminal.Gui.TreeView<T>)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeViewTextFilter.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeViewTextFilter.cs
    startLine: 19
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Creates a new instance of the filter for use with <code class="paramref">forTree</code>.

    Set <xref href="Terminal.Gui.TreeViewTextFilter%601.Text" data-throw-if-not-resolved="false"></xref> to begin filtering.
  example: []
  syntax:
    content: public TreeViewTextFilter(TreeView<T> forTree)
    parameters:
    - id: forTree
      type: Terminal.Gui.TreeView{{T}}
      description: ''
    content.vb: Public Sub New(forTree As TreeView(Of T))
  overload: Terminal.Gui.TreeViewTextFilter`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: ''
  nameWithType.vb: TreeViewTextFilter(Of T).New(TreeView(Of T))
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).New(Terminal.Gui.TreeView(Of T))
  name.vb: New(TreeView(Of T))
- uid: Terminal.Gui.TreeViewTextFilter`1.Comparer
  commentId: P:Terminal.Gui.TreeViewTextFilter`1.Comparer
  id: Comparer
  parent: Terminal.Gui.TreeViewTextFilter`1
  langs:
  - csharp
  - vb
  name: Comparer
  nameWithType: TreeViewTextFilter<T>.Comparer
  fullName: Terminal.Gui.TreeViewTextFilter<T>.Comparer
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeViewTextFilter.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Comparer
    path: ../Terminal.Gui/Views/TreeViewTextFilter.cs
    startLine: 28
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The case sensitivity of the search match. 

    Defaults to <xref href="System.StringComparison.OrdinalIgnoreCase" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public StringComparison Comparer { get; set; }
    parameters: []
    return:
      type: System.StringComparison
    content.vb: Public Property Comparer As StringComparison
  overload: Terminal.Gui.TreeViewTextFilter`1.Comparer*
  nameWithType.vb: TreeViewTextFilter(Of T).Comparer
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).Comparer
- uid: Terminal.Gui.TreeViewTextFilter`1.Text
  commentId: P:Terminal.Gui.TreeViewTextFilter`1.Text
  id: Text
  parent: Terminal.Gui.TreeViewTextFilter`1
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TreeViewTextFilter<T>.Text
  fullName: Terminal.Gui.TreeViewTextFilter<T>.Text
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeViewTextFilter.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Text
    path: ../Terminal.Gui/Views/TreeViewTextFilter.cs
    startLine: 34
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The text that will be searched for in the <xref href="Terminal.Gui.TreeView%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: Terminal.Gui.TreeViewTextFilter`1.Text*
  nameWithType.vb: TreeViewTextFilter(Of T).Text
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).Text
- uid: Terminal.Gui.TreeViewTextFilter`1.IsMatch(`0)
  commentId: M:Terminal.Gui.TreeViewTextFilter`1.IsMatch(`0)
  id: IsMatch(`0)
  parent: Terminal.Gui.TreeViewTextFilter`1
  langs:
  - csharp
  - vb
  name: IsMatch(T)
  nameWithType: TreeViewTextFilter<T>.IsMatch(T)
  fullName: Terminal.Gui.TreeViewTextFilter<T>.IsMatch(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeViewTextFilter.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsMatch
    path: ../Terminal.Gui/Views/TreeViewTextFilter.cs
    startLine: 55
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns <code class="typeparamref">T</code> if there is no <xref href="Terminal.Gui.TreeViewTextFilter%601.Text" data-throw-if-not-resolved="false"></xref> or

    the text matches the <xref href="Terminal.Gui.TreeView%601.AspectGetter" data-throw-if-not-resolved="false"></xref> of the

    <code class="paramref">model</code>.
  example: []
  syntax:
    content: public bool IsMatch(T model)
    parameters:
    - id: model
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsMatch(model As T) As Boolean
  overload: Terminal.Gui.TreeViewTextFilter`1.IsMatch*
  implements:
  - Terminal.Gui.ITreeViewFilter{{T}}.IsMatch({T})
  nameWithType.vb: TreeViewTextFilter(Of T).IsMatch(T)
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).IsMatch(T)
references:
- uid: Terminal.Gui.ITreeViewFilter`1
  commentId: T:Terminal.Gui.ITreeViewFilter`1
  href: Terminal.Gui.ITreeViewFilter-1.html
  name: ITreeViewFilter<T>
  nameWithType: ITreeViewFilter<T>
  fullName: Terminal.Gui.ITreeViewFilter<T>
  nameWithType.vb: ITreeViewFilter(Of T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T)
  name.vb: ITreeViewFilter(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1.AspectGetter
  commentId: P:Terminal.Gui.TreeView`1.AspectGetter
  href: Terminal.Gui.TreeView-1.html#Terminal.Gui.TreeView`1.AspectGetter
  name: AspectGetter
  nameWithType: TreeView<T>.AspectGetter
  fullName: Terminal.Gui.TreeView<T>.AspectGetter
  nameWithType.vb: TreeView(Of T).AspectGetter
  fullName.vb: Terminal.Gui.TreeView(Of T).AspectGetter
- uid: Terminal.Gui.TreeViewTextFilter`1.Text
  commentId: P:Terminal.Gui.TreeViewTextFilter`1.Text
  href: Terminal.Gui.TreeViewTextFilter-1.html#Terminal.Gui.TreeViewTextFilter`1.Text
  name: Text
  nameWithType: TreeViewTextFilter<T>.Text
  fullName: Terminal.Gui.TreeViewTextFilter<T>.Text
  nameWithType.vb: TreeViewTextFilter(Of T).Text
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).Text
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.ITreeViewFilter{{T}}
  commentId: T:Terminal.Gui.ITreeViewFilter{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeViewFilter`1
  href: Terminal.Gui.ITreeViewFilter-1.html
  name: ITreeViewFilter<T>
  nameWithType: ITreeViewFilter<T>
  fullName: Terminal.Gui.ITreeViewFilter<T>
  nameWithType.vb: ITreeViewFilter(Of T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T)
  name.vb: ITreeViewFilter(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter`1
    name: ITreeViewFilter
    href: Terminal.Gui.ITreeViewFilter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Terminal.Gui.TreeViewTextFilter`1.#ctor*
  commentId: Overload:Terminal.Gui.TreeViewTextFilter`1.#ctor
  href: Terminal.Gui.TreeViewTextFilter-1.html#Terminal.Gui.TreeViewTextFilter`1.#ctor(Terminal.Gui.TreeView{`0})
  name: TreeViewTextFilter
  nameWithType: TreeViewTextFilter<T>.TreeViewTextFilter
  fullName: Terminal.Gui.TreeViewTextFilter<T>.TreeViewTextFilter
  nameWithType.vb: TreeViewTextFilter(Of T).New
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).New
  name.vb: New
- uid: Terminal.Gui.TreeView{{T}}
  commentId: T:Terminal.Gui.TreeView{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.TreeView`1
  href: Terminal.Gui.TreeView-1.html
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1
  commentId: T:Terminal.Gui.TreeView`1
  href: Terminal.Gui.TreeView-1.html
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.StringComparison.OrdinalIgnoreCase
  commentId: F:System.StringComparison.OrdinalIgnoreCase
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringcomparison#system-stringcomparison-ordinalignorecase
  name: OrdinalIgnoreCase
  nameWithType: StringComparison.OrdinalIgnoreCase
  fullName: System.StringComparison.OrdinalIgnoreCase
- uid: Terminal.Gui.TreeViewTextFilter`1.Comparer*
  commentId: Overload:Terminal.Gui.TreeViewTextFilter`1.Comparer
  href: Terminal.Gui.TreeViewTextFilter-1.html#Terminal.Gui.TreeViewTextFilter`1.Comparer
  name: Comparer
  nameWithType: TreeViewTextFilter<T>.Comparer
  fullName: Terminal.Gui.TreeViewTextFilter<T>.Comparer
  nameWithType.vb: TreeViewTextFilter(Of T).Comparer
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).Comparer
- uid: System.StringComparison
  commentId: T:System.StringComparison
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.stringcomparison
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: Terminal.Gui.TreeViewTextFilter`1.Text*
  commentId: Overload:Terminal.Gui.TreeViewTextFilter`1.Text
  href: Terminal.Gui.TreeViewTextFilter-1.html#Terminal.Gui.TreeViewTextFilter`1.Text
  name: Text
  nameWithType: TreeViewTextFilter<T>.Text
  fullName: Terminal.Gui.TreeViewTextFilter<T>.Text
  nameWithType.vb: TreeViewTextFilter(Of T).Text
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.TreeViewTextFilter`1.IsMatch*
  commentId: Overload:Terminal.Gui.TreeViewTextFilter`1.IsMatch
  href: Terminal.Gui.TreeViewTextFilter-1.html#Terminal.Gui.TreeViewTextFilter`1.IsMatch(`0)
  name: IsMatch
  nameWithType: TreeViewTextFilter<T>.IsMatch
  fullName: Terminal.Gui.TreeViewTextFilter<T>.IsMatch
  nameWithType.vb: TreeViewTextFilter(Of T).IsMatch
  fullName.vb: Terminal.Gui.TreeViewTextFilter(Of T).IsMatch
- uid: Terminal.Gui.ITreeViewFilter{{T}}.IsMatch({T})
  commentId: M:Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
  parent: Terminal.Gui.ITreeViewFilter{{T}}
  definition: Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  href: Terminal.Gui.ITreeViewFilter{-0}.html#Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
  name: IsMatch(T)
  nameWithType: ITreeViewFilter<T>.IsMatch(T)
  fullName: Terminal.Gui.ITreeViewFilter<T>.IsMatch(T)
  nameWithType.vb: ITreeViewFilter(Of T).IsMatch(T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T).IsMatch(T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
    name: IsMatch
    href: Terminal.Gui.ITreeViewFilter{-0}.html#Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
    name: IsMatch
    href: Terminal.Gui.ITreeViewFilter{-0}.html#Terminal.Gui.ITreeViewFilter{`0}.IsMatch(`0)
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  commentId: M:Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  href: Terminal.Gui.ITreeViewFilter-1.html#Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  name: IsMatch(T)
  nameWithType: ITreeViewFilter<T>.IsMatch(T)
  fullName: Terminal.Gui.ITreeViewFilter<T>.IsMatch(T)
  nameWithType.vb: ITreeViewFilter(Of T).IsMatch(T)
  fullName.vb: Terminal.Gui.ITreeViewFilter(Of T).IsMatch(T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
    name: IsMatch
    href: Terminal.Gui.ITreeViewFilter-1.html#Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
    name: IsMatch
    href: Terminal.Gui.ITreeViewFilter-1.html#Terminal.Gui.ITreeViewFilter`1.IsMatch(`0)
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
shouldSkipMarkup: true
