### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Thickness
  commentId: T:Terminal.Gui.Thickness
  id: Thickness
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Thickness.#ctor
  - Terminal.Gui.Thickness.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Terminal.Gui.Thickness.#ctor(System.Int32)
  - Terminal.Gui.Thickness.Bottom
  - Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect,System.Int32,System.Int32)
  - Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  - Terminal.Gui.Thickness.Empty
  - Terminal.Gui.Thickness.Equals(System.Object)
  - Terminal.Gui.Thickness.Equals(Terminal.Gui.Thickness)
  - Terminal.Gui.Thickness.GetHashCode
  - Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  - Terminal.Gui.Thickness.Horizontal
  - Terminal.Gui.Thickness.Left
  - Terminal.Gui.Thickness.op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  - Terminal.Gui.Thickness.op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  - Terminal.Gui.Thickness.Right
  - Terminal.Gui.Thickness.Top
  - Terminal.Gui.Thickness.ToString
  - Terminal.Gui.Thickness.Vertical
  langs:
  - csharp
  - vb
  name: Thickness
  nameWithType: Thickness
  fullName: Terminal.Gui.Thickness
  type: Class
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Thickness
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 21
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Describes the thickness of a frame around a rectangle. Four <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> values describe
     the <xref href="Terminal.Gui.Thickness.Left" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.Thickness.Top" data-throw-if-not-resolved="false"></xref>, <xref href="Terminal.Gui.Thickness.Right" data-throw-if-not-resolved="false"></xref>, and <xref href="Terminal.Gui.Thickness.Bottom" data-throw-if-not-resolved="false"></xref> sides
     of the rectangle, respectively.
  remarks: >-
    <p>

    Use the helper API (<xref href="Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref> to get the rectangle describing the insides of the frame,

    with the thickness widths subtracted.

    </p>

    <p>

    Use the helper API (<xref href="Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect%2cSystem.String)" data-throw-if-not-resolved="false"></xref> to draw the frame with the specified thickness.

    </p>
  example: []
  syntax:
    content: 'public class Thickness : IEquatable<Thickness>'
    content.vb: Public Class Thickness Implements IEquatable(Of Thickness)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{Terminal.Gui.Thickness}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.Thickness.Left
  commentId: F:Terminal.Gui.Thickness.Left
  id: Left
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Thickness.Left
  fullName: Terminal.Gui.Thickness.Left
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Left
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 34
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the width of the left side of the rectangle.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public int Left
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      Public Left As Integer
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
- uid: Terminal.Gui.Thickness.Top
  commentId: F:Terminal.Gui.Thickness.Top
  id: Top
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: Thickness.Top
  fullName: Terminal.Gui.Thickness.Top
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Top
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 40
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the width of the upper side of the rectangle.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public int Top
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      Public Top As Integer
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
- uid: Terminal.Gui.Thickness.Right
  commentId: F:Terminal.Gui.Thickness.Right
  id: Right
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Thickness.Right
  fullName: Terminal.Gui.Thickness.Right
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Right
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 46
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the width of the right side of the rectangle.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public int Right
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      Public Right As Integer
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
- uid: Terminal.Gui.Thickness.Bottom
  commentId: F:Terminal.Gui.Thickness.Bottom
  id: Bottom
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: Terminal.Gui.Thickness.Bottom
  type: Field
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Bottom
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 52
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the width of the lower side of the rectangle.
  example: []
  syntax:
    content: >-
      [JsonInclude]

      public int Bottom
    return:
      type: System.Int32
    content.vb: >-
      <JsonInclude>

      Public Bottom As Integer
  attributes:
  - type: System.Text.Json.Serialization.JsonIncludeAttribute
    ctor: System.Text.Json.Serialization.JsonIncludeAttribute.#ctor
    arguments: []
- uid: Terminal.Gui.Thickness.#ctor
  commentId: M:Terminal.Gui.Thickness.#ctor
  id: '#ctor'
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Thickness()
  nameWithType: Thickness.Thickness()
  fullName: Terminal.Gui.Thickness.Thickness()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 58
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initializes a new instance of the <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref> class with all widths

    set to 0.
  example: []
  syntax:
    content: public Thickness()
    content.vb: Public Sub New()
  overload: Terminal.Gui.Thickness.#ctor*
  nameWithType.vb: Thickness.New()
  fullName.vb: Terminal.Gui.Thickness.New()
  name.vb: New()
- uid: Terminal.Gui.Thickness.#ctor(System.Int32)
  commentId: M:Terminal.Gui.Thickness.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Thickness(int)
  nameWithType: Thickness.Thickness(int)
  fullName: Terminal.Gui.Thickness.Thickness(int)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 64
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of the <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref> class with a uniform width to each side.
  example: []
  syntax:
    content: public Thickness(int width)
    parameters:
    - id: width
      type: System.Int32
      description: ''
    content.vb: Public Sub New(width As Integer)
  overload: Terminal.Gui.Thickness.#ctor*
  nameWithType.vb: Thickness.New(Integer)
  fullName.vb: Terminal.Gui.Thickness.New(Integer)
  name.vb: New(Integer)
- uid: Terminal.Gui.Thickness.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Terminal.Gui.Thickness.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Thickness(int, int, int, int)
  nameWithType: Thickness.Thickness(int, int, int, int)
  fullName: Terminal.Gui.Thickness.Thickness(int, int, int, int)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 74
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initializes a new instance of the <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref> class that has specific
     widths applied to each side of the rectangle.
  example: []
  syntax:
    content: public Thickness(int left, int top, int right, int bottom)
    parameters:
    - id: left
      type: System.Int32
      description: ''
    - id: top
      type: System.Int32
      description: ''
    - id: right
      type: System.Int32
      description: ''
    - id: bottom
      type: System.Int32
      description: ''
    content.vb: Public Sub New(left As Integer, top As Integer, right As Integer, bottom As Integer)
  overload: Terminal.Gui.Thickness.#ctor*
  nameWithType.vb: Thickness.New(Integer, Integer, Integer, Integer)
  fullName.vb: Terminal.Gui.Thickness.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: Terminal.Gui.Thickness.Vertical
  commentId: P:Terminal.Gui.Thickness.Vertical
  id: Vertical
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Vertical
  nameWithType: Thickness.Vertical
  fullName: Terminal.Gui.Thickness.Vertical
  type: Property
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Vertical
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 85
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the total height of the top and bottom sides of the rectangle. Sets the height of the top and bottom sides of the rectangle to half the specified value.
  example: []
  syntax:
    content: public int Vertical { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Vertical As Integer
  overload: Terminal.Gui.Thickness.Vertical*
- uid: Terminal.Gui.Thickness.Horizontal
  commentId: P:Terminal.Gui.Thickness.Horizontal
  id: Horizontal
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Horizontal
  nameWithType: Thickness.Horizontal
  fullName: Terminal.Gui.Thickness.Horizontal
  type: Property
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Horizontal
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 97
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the total width of the left and right sides of the rectangle. Sets the width of the left and rigth sides of the rectangle to half the specified value.
  example: []
  syntax:
    content: public int Horizontal { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Horizontal As Integer
  overload: Terminal.Gui.Thickness.Horizontal*
- uid: Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect,System.Int32,System.Int32)
  commentId: M:Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect,System.Int32,System.Int32)
  id: Contains(Terminal.Gui.Rect,System.Int32,System.Int32)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Contains(Rect, int, int)
  nameWithType: Thickness.Contains(Rect, int, int)
  fullName: Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect, int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Contains
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 113
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets whether the specified coordinates lie within the thickness (inside the bounding rectangle but outside of

    the rectangle described by <xref href="Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Contains(Rect outside, int x, int y)
    parameters:
    - id: outside
      type: Terminal.Gui.Rect
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified coordinate is within the thickness; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Function Contains(outside As Rect, x As Integer, y As Integer) As Boolean
  overload: Terminal.Gui.Thickness.Contains*
  nameWithType.vb: Thickness.Contains(Rect, Integer, Integer)
  fullName.vb: Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect, Integer, Integer)
  name.vb: Contains(Rect, Integer, Integer)
- uid: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  id: GetInside(Terminal.Gui.Rect)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: GetInside(Rect)
  nameWithType: Thickness.GetInside(Rect)
  fullName: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetInside
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 129
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Returns a rectangle describing the location and size of the inside area of <code class="paramref">rect</code>

    with the thickness widths subtracted. The height and width of the returned rectangle will

    never be less than 0.
  remarks: >-
    If a thickness width is negative, the inside rectangle will be larger than <code class="paramref">rect</code>. e.g.
        a <code>Thickness (-1, -1, -1, -1) will result in a rectangle skewed -1 in the X and Y directions and 
        with a Size increased by 1.</code>
  example: []
  syntax:
    content: public Rect GetInside(Rect rect)
    parameters:
    - id: rect
      type: Terminal.Gui.Rect
      description: The source rectangle
    return:
      type: Terminal.Gui.Rect
      description: ''
    content.vb: Public Function GetInside(rect As Rect) As Rect
  overload: Terminal.Gui.Thickness.GetInside*
- uid: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  commentId: M:Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  id: Draw(Terminal.Gui.Rect,System.String)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Draw(Rect, string)
  nameWithType: Thickness.Draw(Rect, string)
  fullName: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect, string)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Draw
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 151
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Draws the <xref href="Terminal.Gui.Thickness" data-throw-if-not-resolved="false"></xref> rectangle with an optional diagnostics label.
  remarks: >-
    If <xref href="Terminal.Gui.ConsoleDriver.DiagnosticFlags" data-throw-if-not-resolved="false"></xref> is set to <xref href="Terminal.Gui.ConsoleDriver.DiagnosticFlags.FramePadding" data-throw-if-not-resolved="false"></xref> then

    'T', 'L', 'R', and 'B' glyphs will be used instead of space. If <xref href="Terminal.Gui.ConsoleDriver.DiagnosticFlags" data-throw-if-not-resolved="false"></xref>

    is set to <xref href="Terminal.Gui.ConsoleDriver.DiagnosticFlags.FrameRuler" data-throw-if-not-resolved="false"></xref> then a ruler will be drawn on the outer edge of the

    Thickness.
  example: []
  syntax:
    content: public Rect Draw(Rect rect, string label = null)
    parameters:
    - id: rect
      type: Terminal.Gui.Rect
      description: >-
        The location and size of the rectangle that bounds the thickness rectangle, in 
            screen coordinates.
    - id: label
      type: System.String
      description: The diagnostics label to draw on the bottom of the <xref href="Terminal.Gui.Thickness.Bottom" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.Rect
      description: The inner rectangle remaining to be drawn.
    content.vb: Public Function Draw(rect As Rect, label As String = Nothing) As Rect
  overload: Terminal.Gui.Thickness.Draw*
  nameWithType.vb: Thickness.Draw(Rect, String)
  fullName.vb: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect, String)
  name.vb: Draw(Rect, String)
- uid: Terminal.Gui.Thickness.Empty
  commentId: P:Terminal.Gui.Thickness.Empty
  id: Empty
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Thickness.Empty
  fullName: Terminal.Gui.Thickness.Empty
  type: Property
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Empty
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 236
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets an empty thickness.
  example: []
  syntax:
    content: public static Thickness Empty { get; }
    parameters: []
    return:
      type: Terminal.Gui.Thickness
    content.vb: Public Shared ReadOnly Property Empty As Thickness
  overload: Terminal.Gui.Thickness.Empty*
- uid: Terminal.Gui.Thickness.Equals(System.Object)
  commentId: M:Terminal.Gui.Thickness.Equals(System.Object)
  id: Equals(System.Object)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Thickness.Equals(object)
  fullName: Terminal.Gui.Thickness.Equals(object)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 241
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
      description: <code>true</code> if the specified object is equal to the current object; otherwise, <code>false</code>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Terminal.Gui.Thickness.Equals*
  nameWithType.vb: Thickness.Equals(Object)
  fullName.vb: Terminal.Gui.Thickness.Equals(Object)
  name.vb: Equals(Object)
- uid: Terminal.Gui.Thickness.ToString
  commentId: M:Terminal.Gui.Thickness.ToString
  id: ToString
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Thickness.ToString()
  fullName: Terminal.Gui.Thickness.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 253
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns the thickness widths of the Thickness formatted as a string.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The thickness widths as a string.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Terminal.Gui.Thickness.ToString*
- uid: Terminal.Gui.Thickness.Equals(Terminal.Gui.Thickness)
  commentId: M:Terminal.Gui.Thickness.Equals(Terminal.Gui.Thickness)
  id: Equals(Terminal.Gui.Thickness)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: Equals(Thickness)
  nameWithType: Thickness.Equals(Thickness)
  fullName: Terminal.Gui.Thickness.Equals(Terminal.Gui.Thickness)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 264
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Thickness other)
    parameters:
    - id: other
      type: Terminal.Gui.Thickness
      description: ''
    return:
      type: System.Boolean
      description: true if the current object is equal to the other parameter; otherwise, false.
    content.vb: Public Function Equals(other As Thickness) As Boolean
  overload: Terminal.Gui.Thickness.Equals*
  implements:
  - System.IEquatable{Terminal.Gui.Thickness}.Equals(Terminal.Gui.Thickness)
- uid: Terminal.Gui.Thickness.GetHashCode
  commentId: M:Terminal.Gui.Thickness.GetHashCode
  id: GetHashCode
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Thickness.GetHashCode()
  fullName: Terminal.Gui.Thickness.GetHashCode()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHashCode
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 274
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Terminal.Gui.Thickness.GetHashCode*
- uid: Terminal.Gui.Thickness.op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  commentId: M:Terminal.Gui.Thickness.op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  id: op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: operator ==(Thickness, Thickness)
  nameWithType: Thickness.operator ==(Thickness, Thickness)
  fullName: Terminal.Gui.Thickness.operator ==(Terminal.Gui.Thickness, Terminal.Gui.Thickness)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Equality
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 285
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public static bool operator ==(Thickness left, Thickness right)
    parameters:
    - id: left
      type: Terminal.Gui.Thickness
    - id: right
      type: Terminal.Gui.Thickness
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Thickness, right As Thickness) As Boolean
  overload: Terminal.Gui.Thickness.op_Equality*
  nameWithType.vb: Thickness.=(Thickness, Thickness)
  fullName.vb: Terminal.Gui.Thickness.=(Terminal.Gui.Thickness, Terminal.Gui.Thickness)
  name.vb: =(Thickness, Thickness)
- uid: Terminal.Gui.Thickness.op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  commentId: M:Terminal.Gui.Thickness.op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  id: op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  parent: Terminal.Gui.Thickness
  langs:
  - csharp
  - vb
  name: operator !=(Thickness, Thickness)
  nameWithType: Thickness.operator !=(Thickness, Thickness)
  fullName: Terminal.Gui.Thickness.operator !=(Terminal.Gui.Thickness, Terminal.Gui.Thickness)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Drawing/Thickness.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Inequality
    path: ../Terminal.Gui/Drawing/Thickness.cs
    startLine: 291
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public static bool operator !=(Thickness left, Thickness right)
    parameters:
    - id: left
      type: Terminal.Gui.Thickness
    - id: right
      type: Terminal.Gui.Thickness
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Thickness, right As Thickness) As Boolean
  overload: Terminal.Gui.Thickness.op_Inequality*
  nameWithType.vb: Thickness.<>(Thickness, Thickness)
  fullName.vb: Terminal.Gui.Thickness.<>(Terminal.Gui.Thickness, Terminal.Gui.Thickness)
  name.vb: <>(Thickness, Thickness)
references:
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.Thickness.Left
  commentId: F:Terminal.Gui.Thickness.Left
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Left
  name: Left
  nameWithType: Thickness.Left
  fullName: Terminal.Gui.Thickness.Left
- uid: Terminal.Gui.Thickness.Top
  commentId: F:Terminal.Gui.Thickness.Top
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Top
  name: Top
  nameWithType: Thickness.Top
  fullName: Terminal.Gui.Thickness.Top
- uid: Terminal.Gui.Thickness.Right
  commentId: F:Terminal.Gui.Thickness.Right
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Right
  name: Right
  nameWithType: Thickness.Right
  fullName: Terminal.Gui.Thickness.Right
- uid: Terminal.Gui.Thickness.Bottom
  commentId: F:Terminal.Gui.Thickness.Bottom
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Bottom
  name: Bottom
  nameWithType: Thickness.Bottom
  fullName: Terminal.Gui.Thickness.Bottom
- uid: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  name: GetInside(Rect)
  nameWithType: Thickness.GetInside(Rect)
  fullName: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
    name: GetInside
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
    name: GetInside
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: )
- uid: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  commentId: M:Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  isExternal: true
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  name: Draw(Rect, string)
  nameWithType: Thickness.Draw(Rect, string)
  fullName: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect, string)
  nameWithType.vb: Thickness.Draw(Rect, String)
  fullName.vb: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect, String)
  name.vb: Draw(Rect, String)
  spec.csharp:
  - uid: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
    name: Draw
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
    name: Draw
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  - name: (
  - uid: Terminal.Gui.Rect
    name: Rect
    href: Terminal.Gui.Rect.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Terminal.Gui.Thickness}
  commentId: T:System.IEquatable{Terminal.Gui.Thickness}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Thickness>
  nameWithType: IEquatable<Thickness>
  fullName: System.IEquatable<Terminal.Gui.Thickness>
  nameWithType.vb: IEquatable(Of Thickness)
  fullName.vb: System.IEquatable(Of Terminal.Gui.Thickness)
  name.vb: IEquatable(Of Thickness)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Terminal.Gui.Thickness
    name: Thickness
    href: Terminal.Gui.Thickness.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.Thickness
    name: Thickness
    href: Terminal.Gui.Thickness.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.Thickness
  commentId: T:Terminal.Gui.Thickness
  parent: Terminal.Gui
  href: Terminal.Gui.Thickness.html
  name: Thickness
  nameWithType: Thickness
  fullName: Terminal.Gui.Thickness
- uid: Terminal.Gui.Thickness.#ctor*
  commentId: Overload:Terminal.Gui.Thickness.#ctor
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.#ctor
  name: Thickness
  nameWithType: Thickness.Thickness
  fullName: Terminal.Gui.Thickness.Thickness
  nameWithType.vb: Thickness.New
  fullName.vb: Terminal.Gui.Thickness.New
  name.vb: New
- uid: Terminal.Gui.Thickness.Vertical*
  commentId: Overload:Terminal.Gui.Thickness.Vertical
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Vertical
  name: Vertical
  nameWithType: Thickness.Vertical
  fullName: Terminal.Gui.Thickness.Vertical
- uid: Terminal.Gui.Thickness.Horizontal*
  commentId: Overload:Terminal.Gui.Thickness.Horizontal
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Horizontal
  name: Horizontal
  nameWithType: Thickness.Horizontal
  fullName: Terminal.Gui.Thickness.Horizontal
- uid: Terminal.Gui.Thickness.Contains*
  commentId: Overload:Terminal.Gui.Thickness.Contains
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Contains(Terminal.Gui.Rect,System.Int32,System.Int32)
  name: Contains
  nameWithType: Thickness.Contains
  fullName: Terminal.Gui.Thickness.Contains
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  href: Terminal.Gui.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.Thickness.GetInside*
  commentId: Overload:Terminal.Gui.Thickness.GetInside
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.GetInside(Terminal.Gui.Rect)
  name: GetInside
  nameWithType: Thickness.GetInside
  fullName: Terminal.Gui.Thickness.GetInside
- uid: Terminal.Gui.ConsoleDriver.DiagnosticFlags
  commentId: T:Terminal.Gui.ConsoleDriver.DiagnosticFlags
  parent: Terminal.Gui
  href: Terminal.Gui.ConsoleDriver.html
  name: ConsoleDriver.DiagnosticFlags
  nameWithType: ConsoleDriver.DiagnosticFlags
  fullName: Terminal.Gui.ConsoleDriver.DiagnosticFlags
  spec.csharp:
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: .
  - uid: Terminal.Gui.ConsoleDriver.DiagnosticFlags
    name: DiagnosticFlags
    href: Terminal.Gui.ConsoleDriver.DiagnosticFlags.html
  spec.vb:
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: .
  - uid: Terminal.Gui.ConsoleDriver.DiagnosticFlags
    name: DiagnosticFlags
    href: Terminal.Gui.ConsoleDriver.DiagnosticFlags.html
- uid: Terminal.Gui.ConsoleDriver.DiagnosticFlags.FramePadding
  commentId: F:Terminal.Gui.ConsoleDriver.DiagnosticFlags.FramePadding
  href: Terminal.Gui.ConsoleDriver.DiagnosticFlags.html#Terminal.Gui.ConsoleDriver.DiagnosticFlags.FramePadding
  name: FramePadding
  nameWithType: ConsoleDriver.DiagnosticFlags.FramePadding
  fullName: Terminal.Gui.ConsoleDriver.DiagnosticFlags.FramePadding
- uid: Terminal.Gui.ConsoleDriver.DiagnosticFlags.FrameRuler
  commentId: F:Terminal.Gui.ConsoleDriver.DiagnosticFlags.FrameRuler
  href: Terminal.Gui.ConsoleDriver.DiagnosticFlags.html#Terminal.Gui.ConsoleDriver.DiagnosticFlags.FrameRuler
  name: FrameRuler
  nameWithType: ConsoleDriver.DiagnosticFlags.FrameRuler
  fullName: Terminal.Gui.ConsoleDriver.DiagnosticFlags.FrameRuler
- uid: Terminal.Gui.Thickness.Draw*
  commentId: Overload:Terminal.Gui.Thickness.Draw
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Draw(Terminal.Gui.Rect,System.String)
  name: Draw
  nameWithType: Thickness.Draw
  fullName: Terminal.Gui.Thickness.Draw
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.Thickness.Empty*
  commentId: Overload:Terminal.Gui.Thickness.Empty
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Empty
  name: Empty
  nameWithType: Thickness.Empty
  fullName: Terminal.Gui.Thickness.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Terminal.Gui.Thickness.Equals*
  commentId: Overload:Terminal.Gui.Thickness.Equals
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.Equals(System.Object)
  name: Equals
  nameWithType: Thickness.Equals
  fullName: Terminal.Gui.Thickness.Equals
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.Thickness.ToString*
  commentId: Overload:Terminal.Gui.Thickness.ToString
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.ToString
  name: ToString
  nameWithType: Thickness.ToString
  fullName: Terminal.Gui.Thickness.ToString
- uid: System.IEquatable{Terminal.Gui.Thickness}.Equals(Terminal.Gui.Thickness)
  commentId: M:System.IEquatable{Terminal.Gui.Thickness}.Equals(Terminal.Gui.Thickness)
  parent: System.IEquatable{Terminal.Gui.Thickness}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.thickness-.equals#system-iequatable((terminal-gui-thickness))-equals(terminal-gui-thickness)
  name: Equals(Thickness)
  nameWithType: IEquatable<Thickness>.Equals(Thickness)
  fullName: System.IEquatable<Terminal.Gui.Thickness>.Equals(Terminal.Gui.Thickness)
  nameWithType.vb: IEquatable(Of Thickness).Equals(Thickness)
  fullName.vb: System.IEquatable(Of Terminal.Gui.Thickness).Equals(Terminal.Gui.Thickness)
  spec.csharp:
  - uid: System.IEquatable{Terminal.Gui.Thickness}.Equals(Terminal.Gui.Thickness)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.thickness-.equals#system-iequatable((terminal-gui-thickness))-equals(terminal-gui-thickness)
  - name: (
  - uid: Terminal.Gui.Thickness
    name: Thickness
    href: Terminal.Gui.Thickness.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Terminal.Gui.Thickness}.Equals(Terminal.Gui.Thickness)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.thickness-.equals#system-iequatable((terminal-gui-thickness))-equals(terminal-gui-thickness)
  - name: (
  - uid: Terminal.Gui.Thickness
    name: Thickness
    href: Terminal.Gui.Thickness.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Terminal.Gui.Thickness.GetHashCode*
  commentId: Overload:Terminal.Gui.Thickness.GetHashCode
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.GetHashCode
  name: GetHashCode
  nameWithType: Thickness.GetHashCode
  fullName: Terminal.Gui.Thickness.GetHashCode
- uid: Terminal.Gui.Thickness.op_Equality*
  commentId: Overload:Terminal.Gui.Thickness.op_Equality
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  name: operator ==
  nameWithType: Thickness.operator ==
  fullName: Terminal.Gui.Thickness.operator ==
  nameWithType.vb: Thickness.=
  fullName.vb: Terminal.Gui.Thickness.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Thickness.op_Equality*
    name: ==
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.op_Equality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
- uid: Terminal.Gui.Thickness.op_Inequality*
  commentId: Overload:Terminal.Gui.Thickness.op_Inequality
  href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
  name: operator !=
  nameWithType: Thickness.operator !=
  fullName: Terminal.Gui.Thickness.operator !=
  nameWithType.vb: Thickness.<>
  fullName.vb: Terminal.Gui.Thickness.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.Thickness.op_Inequality*
    name: '!='
    href: Terminal.Gui.Thickness.html#Terminal.Gui.Thickness.op_Inequality(Terminal.Gui.Thickness,Terminal.Gui.Thickness)
shouldSkipMarkup: true
