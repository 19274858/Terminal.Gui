### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.DelegateTreeBuilder`1
  commentId: T:Terminal.Gui.DelegateTreeBuilder`1
  id: DelegateTreeBuilder`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.Boolean})
  - Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}})
  - Terminal.Gui.DelegateTreeBuilder`1.CanExpand(`0)
  - Terminal.Gui.DelegateTreeBuilder`1.GetChildren(`0)
  langs:
  - csharp
  - vb
  name: DelegateTreeBuilder<T>
  nameWithType: DelegateTreeBuilder<T>
  fullName: Terminal.Gui.DelegateTreeBuilder<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DelegateTreeBuilder
    path: ../Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
    startLine: 7
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Implementation of <xref href="Terminal.Gui.ITreeBuilder%601" data-throw-if-not-resolved="false"></xref> that uses user defined functions
  example: []
  syntax:
    content: 'public class DelegateTreeBuilder<T> : TreeBuilder<T>, ITreeBuilder<T>'
    typeParameters:
    - id: T
    content.vb: Public Class DelegateTreeBuilder(Of T) Inherits TreeBuilder(Of T) Implements ITreeBuilder(Of T)
  inheritance:
  - System.Object
  - Terminal.Gui.TreeBuilder{{T}}
  implements:
  - Terminal.Gui.ITreeBuilder{{T}}
  inheritedMembers:
  - Terminal.Gui.TreeBuilder{{T}}.SupportsCanExpand
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: DelegateTreeBuilder(Of T)
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T)
  name.vb: DelegateTreeBuilder(Of T)
- uid: Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}})
  commentId: M:Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}})
  id: '#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}})'
  parent: Terminal.Gui.DelegateTreeBuilder`1
  langs:
  - csharp
  - vb
  name: DelegateTreeBuilder(Func<T, IEnumerable<T>>)
  nameWithType: DelegateTreeBuilder<T>.DelegateTreeBuilder(Func<T, IEnumerable<T>>)
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.DelegateTreeBuilder(System.Func<T, System.Collections.Generic.IEnumerable<T>>)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
    startLine: 17
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Constructs an implementation of <xref href="Terminal.Gui.ITreeBuilder%601" data-throw-if-not-resolved="false"></xref> that calls the user 

    defined method <code class="paramref">childGetter</code> to determine children
  example: []
  syntax:
    content: public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter)
    parameters:
    - id: childGetter
      type: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
      description: ''
    content.vb: Public Sub New(childGetter As Func(Of T, IEnumerable(Of T)))
  overload: Terminal.Gui.DelegateTreeBuilder`1.#ctor*
  nameWithType.vb: DelegateTreeBuilder(Of T).New(Func(Of T, IEnumerable(Of T)))
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).New(System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)))
  name.vb: New(Func(Of T, IEnumerable(Of T)))
- uid: Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.Boolean})
  commentId: M:Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.Boolean})
  id: '#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}},System.Func{`0,System.Boolean})'
  parent: Terminal.Gui.DelegateTreeBuilder`1
  langs:
  - csharp
  - vb
  name: DelegateTreeBuilder(Func<T, IEnumerable<T>>, Func<T, bool>)
  nameWithType: DelegateTreeBuilder<T>.DelegateTreeBuilder(Func<T, IEnumerable<T>>, Func<T, bool>)
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.DelegateTreeBuilder(System.Func<T, System.Collections.Generic.IEnumerable<T>>, System.Func<T, bool>)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
    startLine: 30
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Constructs an implementation of <xref href="Terminal.Gui.ITreeBuilder%601" data-throw-if-not-resolved="false"></xref> that calls the user 

    defined method <code class="paramref">childGetter</code> to determine children 

    and <code class="paramref">canExpand</code> to determine expandability
  example: []
  syntax:
    content: public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter, Func<T, bool> canExpand)
    parameters:
    - id: childGetter
      type: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
      description: ''
    - id: canExpand
      type: System.Func{{T},System.Boolean}
      description: ''
    content.vb: Public Sub New(childGetter As Func(Of T, IEnumerable(Of T)), canExpand As Func(Of T, Boolean))
  overload: Terminal.Gui.DelegateTreeBuilder`1.#ctor*
  nameWithType.vb: DelegateTreeBuilder(Of T).New(Func(Of T, IEnumerable(Of T)), Func(Of T, Boolean))
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).New(System.Func(Of T, System.Collections.Generic.IEnumerable(Of T)), System.Func(Of T, Boolean))
  name.vb: New(Func(Of T, IEnumerable(Of T)), Func(Of T, Boolean))
- uid: Terminal.Gui.DelegateTreeBuilder`1.CanExpand(`0)
  commentId: M:Terminal.Gui.DelegateTreeBuilder`1.CanExpand(`0)
  id: CanExpand(`0)
  parent: Terminal.Gui.DelegateTreeBuilder`1
  langs:
  - csharp
  - vb
  name: CanExpand(T)
  nameWithType: DelegateTreeBuilder<T>.CanExpand(T)
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.CanExpand(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanExpand
    path: ../Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
    startLine: 41
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns whether a node can be expanded based on the delegate passed during construction
  example: []
  syntax:
    content: public override bool CanExpand(T toExpand)
    parameters:
    - id: toExpand
      type: '{T}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function CanExpand(toExpand As T) As Boolean
  overridden: Terminal.Gui.TreeBuilder{{T}}.CanExpand({T})
  overload: Terminal.Gui.DelegateTreeBuilder`1.CanExpand*
  nameWithType.vb: DelegateTreeBuilder(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).CanExpand(T)
- uid: Terminal.Gui.DelegateTreeBuilder`1.GetChildren(`0)
  commentId: M:Terminal.Gui.DelegateTreeBuilder`1.GetChildren(`0)
  id: GetChildren(`0)
  parent: Terminal.Gui.DelegateTreeBuilder`1
  langs:
  - csharp
  - vb
  name: GetChildren(T)
  nameWithType: DelegateTreeBuilder<T>.GetChildren(T)
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.GetChildren(T)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetChildren
    path: ../Terminal.Gui/Views/TreeView/DelegateTreeBuilder.cs
    startLine: 51
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns children using the delegate method passed during construction
  example: []
  syntax:
    content: public override IEnumerable<T> GetChildren(T forObject)
    parameters:
    - id: forObject
      type: '{T}'
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: ''
    content.vb: Public Overrides Function GetChildren(forObject As T) As IEnumerable(Of T)
  overridden: Terminal.Gui.TreeBuilder{{T}}.GetChildren({T})
  overload: Terminal.Gui.DelegateTreeBuilder`1.GetChildren*
  nameWithType.vb: DelegateTreeBuilder(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).GetChildren(T)
references:
- uid: Terminal.Gui.ITreeBuilder`1
  commentId: T:Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.TreeBuilder{{T}}
  commentId: T:Terminal.Gui.TreeBuilder{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.TreeBuilder`1
  href: Terminal.Gui.TreeBuilder-1.html
  name: TreeBuilder<T>
  nameWithType: TreeBuilder<T>
  fullName: Terminal.Gui.TreeBuilder<T>
  nameWithType.vb: TreeBuilder(Of T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T)
  name.vb: TreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ITreeBuilder{{T}}
  commentId: T:Terminal.Gui.ITreeBuilder{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeBuilder{{T}}.SupportsCanExpand
  commentId: P:Terminal.Gui.TreeBuilder{`0}.SupportsCanExpand
  parent: Terminal.Gui.TreeBuilder{{T}}
  definition: Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: TreeBuilder<T>.SupportsCanExpand
  fullName: Terminal.Gui.TreeBuilder<T>.SupportsCanExpand
  nameWithType.vb: TreeBuilder(Of T).SupportsCanExpand
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).SupportsCanExpand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.TreeBuilder`1
  commentId: T:Terminal.Gui.TreeBuilder`1
  href: Terminal.Gui.TreeBuilder-1.html
  name: TreeBuilder<T>
  nameWithType: TreeBuilder<T>
  fullName: Terminal.Gui.TreeBuilder<T>
  nameWithType.vb: TreeBuilder(Of T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T)
  name.vb: TreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  commentId: P:Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: TreeBuilder<T>.SupportsCanExpand
  fullName: Terminal.Gui.TreeBuilder<T>.SupportsCanExpand
  nameWithType.vb: TreeBuilder(Of T).SupportsCanExpand
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).SupportsCanExpand
- uid: Terminal.Gui.DelegateTreeBuilder`1.#ctor*
  commentId: Overload:Terminal.Gui.DelegateTreeBuilder`1.#ctor
  href: Terminal.Gui.DelegateTreeBuilder-1.html#Terminal.Gui.DelegateTreeBuilder`1.#ctor(System.Func{`0,System.Collections.Generic.IEnumerable{`0}})
  name: DelegateTreeBuilder
  nameWithType: DelegateTreeBuilder<T>.DelegateTreeBuilder
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.DelegateTreeBuilder
  nameWithType.vb: DelegateTreeBuilder(Of T).New
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).New
  name.vb: New
- uid: System.Func{{T},System.Collections.Generic.IEnumerable{{T}}}
  commentId: T:System.Func{`0,System.Collections.Generic.IEnumerable{`0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, IEnumerable<T>>
  nameWithType: Func<T, IEnumerable<T>>
  fullName: System.Func<T, System.Collections.Generic.IEnumerable<T>>
  nameWithType.vb: Func(Of T, IEnumerable(Of T))
  fullName.vb: System.Func(Of T, System.Collections.Generic.IEnumerable(Of T))
  name.vb: Func(Of T, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{{T},System.Boolean}
  commentId: T:System.Func{`0,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, bool>
  nameWithType: Func<T, bool>
  fullName: System.Func<T, bool>
  nameWithType.vb: Func(Of T, Boolean)
  fullName.vb: System.Func(Of T, Boolean)
  name.vb: Func(Of T, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.TreeBuilder{{T}}.CanExpand({T})
  commentId: M:Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
  parent: Terminal.Gui.TreeBuilder{{T}}
  definition: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
  name: CanExpand(T)
  nameWithType: TreeBuilder<T>.CanExpand(T)
  fullName: Terminal.Gui.TreeBuilder<T>.CanExpand(T)
  nameWithType.vb: TreeBuilder(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).CanExpand(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.CanExpand(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.DelegateTreeBuilder`1.CanExpand*
  commentId: Overload:Terminal.Gui.DelegateTreeBuilder`1.CanExpand
  href: Terminal.Gui.DelegateTreeBuilder-1.html#Terminal.Gui.DelegateTreeBuilder`1.CanExpand(`0)
  name: CanExpand
  nameWithType: DelegateTreeBuilder<T>.CanExpand
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.CanExpand
  nameWithType.vb: DelegateTreeBuilder(Of T).CanExpand
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).CanExpand
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  commentId: M:Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  name: CanExpand(T)
  nameWithType: TreeBuilder<T>.CanExpand(T)
  fullName: Terminal.Gui.TreeBuilder<T>.CanExpand(T)
  nameWithType.vb: TreeBuilder(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).CanExpand(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Terminal.Gui.TreeBuilder{{T}}.GetChildren({T})
  commentId: M:Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
  parent: Terminal.Gui.TreeBuilder{{T}}
  definition: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
  name: GetChildren(T)
  nameWithType: TreeBuilder<T>.GetChildren(T)
  fullName: Terminal.Gui.TreeBuilder<T>.GetChildren(T)
  nameWithType.vb: TreeBuilder(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).GetChildren(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder{-0}.html#Terminal.Gui.TreeBuilder{`0}.GetChildren(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.DelegateTreeBuilder`1.GetChildren*
  commentId: Overload:Terminal.Gui.DelegateTreeBuilder`1.GetChildren
  href: Terminal.Gui.DelegateTreeBuilder-1.html#Terminal.Gui.DelegateTreeBuilder`1.GetChildren(`0)
  name: GetChildren
  nameWithType: DelegateTreeBuilder<T>.GetChildren
  fullName: Terminal.Gui.DelegateTreeBuilder<T>.GetChildren
  nameWithType.vb: DelegateTreeBuilder(Of T).GetChildren
  fullName.vb: Terminal.Gui.DelegateTreeBuilder(Of T).GetChildren
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  commentId: M:Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  name: GetChildren(T)
  nameWithType: TreeBuilder<T>.GetChildren(T)
  fullName: Terminal.Gui.TreeBuilder<T>.GetChildren(T)
  nameWithType.vb: TreeBuilder(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).GetChildren(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
shouldSkipMarkup: true
