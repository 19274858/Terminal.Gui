### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.SelectionChangedEventArgs`1
  commentId: T:Terminal.Gui.SelectionChangedEventArgs`1
  id: SelectionChangedEventArgs`1
  parent: Terminal.Gui
  children:
  - Terminal.Gui.SelectionChangedEventArgs`1.#ctor(Terminal.Gui.TreeView{`0},`0,`0)
  - Terminal.Gui.SelectionChangedEventArgs`1.NewValue
  - Terminal.Gui.SelectionChangedEventArgs`1.OldValue
  - Terminal.Gui.SelectionChangedEventArgs`1.Tree
  langs:
  - csharp
  - vb
  name: SelectionChangedEventArgs<T>
  nameWithType: SelectionChangedEventArgs<T>
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SelectionChangedEventArgs
    path: ../Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
    startLine: 6
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Event arguments describing a change in selected object in a tree view
  example: []
  syntax:
    content: 'public class SelectionChangedEventArgs<T> : EventArgs where T : class'
    typeParameters:
    - id: T
    content.vb: Public Class SelectionChangedEventArgs(Of T As Class) Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SelectionChangedEventArgs(Of T)
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T)
  name.vb: SelectionChangedEventArgs(Of T)
- uid: Terminal.Gui.SelectionChangedEventArgs`1.Tree
  commentId: P:Terminal.Gui.SelectionChangedEventArgs`1.Tree
  id: Tree
  parent: Terminal.Gui.SelectionChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: Tree
  nameWithType: SelectionChangedEventArgs<T>.Tree
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.Tree
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Tree
    path: ../Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
    startLine: 10
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The view in which the change occurred
  example: []
  syntax:
    content: public TreeView<T> Tree { get; }
    parameters: []
    return:
      type: Terminal.Gui.TreeView{{T}}
    content.vb: Public ReadOnly Property Tree As TreeView(Of T)
  overload: Terminal.Gui.SelectionChangedEventArgs`1.Tree*
  nameWithType.vb: SelectionChangedEventArgs(Of T).Tree
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).Tree
- uid: Terminal.Gui.SelectionChangedEventArgs`1.OldValue
  commentId: P:Terminal.Gui.SelectionChangedEventArgs`1.OldValue
  id: OldValue
  parent: Terminal.Gui.SelectionChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: OldValue
  nameWithType: SelectionChangedEventArgs<T>.OldValue
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.OldValue
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OldValue
    path: ../Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
    startLine: 15
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The previously selected value (can be null)
  example: []
  syntax:
    content: public T OldValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property OldValue As T
  overload: Terminal.Gui.SelectionChangedEventArgs`1.OldValue*
  nameWithType.vb: SelectionChangedEventArgs(Of T).OldValue
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).OldValue
- uid: Terminal.Gui.SelectionChangedEventArgs`1.NewValue
  commentId: P:Terminal.Gui.SelectionChangedEventArgs`1.NewValue
  id: NewValue
  parent: Terminal.Gui.SelectionChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: NewValue
  nameWithType: SelectionChangedEventArgs<T>.NewValue
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.NewValue
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: NewValue
    path: ../Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
    startLine: 20
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The newly selected value in the <xref href="Terminal.Gui.SelectionChangedEventArgs%601.Tree" data-throw-if-not-resolved="false"></xref> (can be null)
  example: []
  syntax:
    content: public T NewValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property NewValue As T
  overload: Terminal.Gui.SelectionChangedEventArgs`1.NewValue*
  nameWithType.vb: SelectionChangedEventArgs(Of T).NewValue
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).NewValue
- uid: Terminal.Gui.SelectionChangedEventArgs`1.#ctor(Terminal.Gui.TreeView{`0},`0,`0)
  commentId: M:Terminal.Gui.SelectionChangedEventArgs`1.#ctor(Terminal.Gui.TreeView{`0},`0,`0)
  id: '#ctor(Terminal.Gui.TreeView{`0},`0,`0)'
  parent: Terminal.Gui.SelectionChangedEventArgs`1
  langs:
  - csharp
  - vb
  name: SelectionChangedEventArgs(TreeView<T>, T, T)
  nameWithType: SelectionChangedEventArgs<T>.SelectionChangedEventArgs(TreeView<T>, T, T)
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.SelectionChangedEventArgs(Terminal.Gui.TreeView<T>, T, T)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/SelectionChangedEventArgs.cs
    startLine: 29
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Creates a new instance of event args describing a change of selection 

    in <code class="paramref">tree</code>
  example: []
  syntax:
    content: public SelectionChangedEventArgs(TreeView<T> tree, T oldValue, T newValue)
    parameters:
    - id: tree
      type: Terminal.Gui.TreeView{{T}}
      description: ''
    - id: oldValue
      type: '{T}'
      description: ''
    - id: newValue
      type: '{T}'
      description: ''
    content.vb: Public Sub New(tree As TreeView(Of T), oldValue As T, newValue As T)
  overload: Terminal.Gui.SelectionChangedEventArgs`1.#ctor*
  nameWithType.vb: SelectionChangedEventArgs(Of T).New(TreeView(Of T), T, T)
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).New(Terminal.Gui.TreeView(Of T), T, T)
  name.vb: New(TreeView(Of T), T, T)
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventargs.empty
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.SelectionChangedEventArgs`1.Tree*
  commentId: Overload:Terminal.Gui.SelectionChangedEventArgs`1.Tree
  href: Terminal.Gui.SelectionChangedEventArgs-1.html#Terminal.Gui.SelectionChangedEventArgs`1.Tree
  name: Tree
  nameWithType: SelectionChangedEventArgs<T>.Tree
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.Tree
  nameWithType.vb: SelectionChangedEventArgs(Of T).Tree
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).Tree
- uid: Terminal.Gui.TreeView{{T}}
  commentId: T:Terminal.Gui.TreeView{`0}
  parent: Terminal.Gui
  definition: Terminal.Gui.TreeView`1
  href: Terminal.Gui.TreeView-1.html
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeView`1
  commentId: T:Terminal.Gui.TreeView`1
  href: Terminal.Gui.TreeView-1.html
  name: TreeView<T>
  nameWithType: TreeView<T>
  fullName: Terminal.Gui.TreeView<T>
  nameWithType.vb: TreeView(Of T)
  fullName.vb: Terminal.Gui.TreeView(Of T)
  name.vb: TreeView(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeView`1
    name: TreeView
    href: Terminal.Gui.TreeView-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.SelectionChangedEventArgs`1.OldValue*
  commentId: Overload:Terminal.Gui.SelectionChangedEventArgs`1.OldValue
  href: Terminal.Gui.SelectionChangedEventArgs-1.html#Terminal.Gui.SelectionChangedEventArgs`1.OldValue
  name: OldValue
  nameWithType: SelectionChangedEventArgs<T>.OldValue
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.OldValue
  nameWithType.vb: SelectionChangedEventArgs(Of T).OldValue
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).OldValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Terminal.Gui.SelectionChangedEventArgs`1.Tree
  commentId: P:Terminal.Gui.SelectionChangedEventArgs`1.Tree
  href: Terminal.Gui.SelectionChangedEventArgs-1.html#Terminal.Gui.SelectionChangedEventArgs`1.Tree
  name: Tree
  nameWithType: SelectionChangedEventArgs<T>.Tree
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.Tree
  nameWithType.vb: SelectionChangedEventArgs(Of T).Tree
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).Tree
- uid: Terminal.Gui.SelectionChangedEventArgs`1.NewValue*
  commentId: Overload:Terminal.Gui.SelectionChangedEventArgs`1.NewValue
  href: Terminal.Gui.SelectionChangedEventArgs-1.html#Terminal.Gui.SelectionChangedEventArgs`1.NewValue
  name: NewValue
  nameWithType: SelectionChangedEventArgs<T>.NewValue
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.NewValue
  nameWithType.vb: SelectionChangedEventArgs(Of T).NewValue
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).NewValue
- uid: Terminal.Gui.SelectionChangedEventArgs`1.#ctor*
  commentId: Overload:Terminal.Gui.SelectionChangedEventArgs`1.#ctor
  href: Terminal.Gui.SelectionChangedEventArgs-1.html#Terminal.Gui.SelectionChangedEventArgs`1.#ctor(Terminal.Gui.TreeView{`0},`0,`0)
  name: SelectionChangedEventArgs
  nameWithType: SelectionChangedEventArgs<T>.SelectionChangedEventArgs
  fullName: Terminal.Gui.SelectionChangedEventArgs<T>.SelectionChangedEventArgs
  nameWithType.vb: SelectionChangedEventArgs(Of T).New
  fullName.vb: Terminal.Gui.SelectionChangedEventArgs(Of T).New
  name.vb: New
shouldSkipMarkup: true
