### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.MenuItem
  commentId: T:Terminal.Gui.MenuItem
  id: MenuItem
  parent: Terminal.Gui
  children:
  - Terminal.Gui.MenuItem.#ctor(System.String,System.String,System.Action,System.Func{System.Boolean},Terminal.Gui.MenuItem,Terminal.Gui.Key)
  - Terminal.Gui.MenuItem.#ctor(Terminal.Gui.Key)
  - Terminal.Gui.MenuItem.Action
  - Terminal.Gui.MenuItem.AllowNullChecked
  - Terminal.Gui.MenuItem.CanExecute
  - Terminal.Gui.MenuItem.Checked
  - Terminal.Gui.MenuItem.CheckType
  - Terminal.Gui.MenuItem.Data
  - Terminal.Gui.MenuItem.GetMenuBarItem
  - Terminal.Gui.MenuItem.GetMenuItem
  - Terminal.Gui.MenuItem.Help
  - Terminal.Gui.MenuItem.HotKey
  - Terminal.Gui.MenuItem.IsEnabled
  - Terminal.Gui.MenuItem.Parent
  - Terminal.Gui.MenuItem.Shortcut
  - Terminal.Gui.MenuItem.ShortcutTag
  - Terminal.Gui.MenuItem.Title
  - Terminal.Gui.MenuItem.ToggleChecked
  langs:
  - csharp
  - vb
  name: MenuItem
  nameWithType: MenuItem
  fullName: Terminal.Gui.MenuItem
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MenuItem
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 32
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    A <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref> has title, an associated help text, and an action to execute on activation. 

    MenuItems can also have a checked indicator (see <xref href="Terminal.Gui.MenuItem.Checked" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public class MenuItem
    content.vb: Public Class MenuItem
  inheritance:
  - System.Object
  derivedClasses:
  - Terminal.Gui.MenuBarItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.MenuItem.Data
  commentId: P:Terminal.Gui.MenuItem.Data
  id: Data
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: MenuItem.Data
  fullName: Terminal.Gui.MenuItem.Data
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Data
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 44
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets arbitrary data for the menu item.
  remarks: This property is not used internally.
  example: []
  syntax:
    content: public object Data { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Data As Object
  overload: Terminal.Gui.MenuItem.Data*
- uid: Terminal.Gui.MenuItem.#ctor(Terminal.Gui.Key)
  commentId: M:Terminal.Gui.MenuItem.#ctor(Terminal.Gui.Key)
  id: '#ctor(Terminal.Gui.Key)'
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: MenuItem(Key)
  nameWithType: MenuItem.MenuItem(Key)
  fullName: Terminal.Gui.MenuItem.MenuItem(Terminal.Gui.Key)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 49
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public MenuItem(Key shortcut = Key.Null)
    parameters:
    - id: shortcut
      type: Terminal.Gui.Key
    content.vb: Public Sub New(shortcut As Key = Key.Null)
  overload: Terminal.Gui.MenuItem.#ctor*
  nameWithType.vb: MenuItem.New(Key)
  fullName.vb: Terminal.Gui.MenuItem.New(Terminal.Gui.Key)
  name.vb: New(Key)
- uid: Terminal.Gui.MenuItem.#ctor(System.String,System.String,System.Action,System.Func{System.Boolean},Terminal.Gui.MenuItem,Terminal.Gui.Key)
  commentId: M:Terminal.Gui.MenuItem.#ctor(System.String,System.String,System.Action,System.Func{System.Boolean},Terminal.Gui.MenuItem,Terminal.Gui.Key)
  id: '#ctor(System.String,System.String,System.Action,System.Func{System.Boolean},Terminal.Gui.MenuItem,Terminal.Gui.Key)'
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: MenuItem(string, string, Action, Func<bool>, MenuItem, Key)
  nameWithType: MenuItem.MenuItem(string, string, Action, Func<bool>, MenuItem, Key)
  fullName: Terminal.Gui.MenuItem.MenuItem(string, string, System.Action, System.Func<bool>, Terminal.Gui.MenuItem, Terminal.Gui.Key)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 60
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MenuItem(string title, string help, Action action, Func<bool> canExecute = null, MenuItem parent = null, Key shortcut = Key.Null)
    parameters:
    - id: title
      type: System.String
      description: Title for the menu item.
    - id: help
      type: System.String
      description: Help text to display.
    - id: action
      type: System.Action
      description: Action to invoke when the menu item is activated.
    - id: canExecute
      type: System.Func{System.Boolean}
      description: Function to determine if the action can currently be executed.
    - id: parent
      type: Terminal.Gui.MenuItem
      description: The <xref href="Terminal.Gui.MenuItem.Parent" data-throw-if-not-resolved="false"></xref> of this menu item.
    - id: shortcut
      type: Terminal.Gui.Key
      description: The <xref href="Terminal.Gui.MenuItem.Shortcut" data-throw-if-not-resolved="false"></xref> keystroke combination.
    content.vb: Public Sub New(title As String, help As String, action As Action, canExecute As Func(Of Boolean) = Nothing, parent As MenuItem = Nothing, shortcut As Key = Key.Null)
  overload: Terminal.Gui.MenuItem.#ctor*
  nameWithType.vb: MenuItem.New(String, String, Action, Func(Of Boolean), MenuItem, Key)
  fullName.vb: Terminal.Gui.MenuItem.New(String, String, System.Action, System.Func(Of Boolean), Terminal.Gui.MenuItem, Terminal.Gui.Key)
  name.vb: New(String, String, Action, Func(Of Boolean), MenuItem, Key)
- uid: Terminal.Gui.MenuItem.HotKey
  commentId: F:Terminal.Gui.MenuItem.HotKey
  id: HotKey
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: HotKey
  nameWithType: MenuItem.HotKey
  fullName: Terminal.Gui.MenuItem.HotKey
  type: Field
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HotKey
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 88
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The HotKey is used to activate a <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref> with the keyboard. HotKeys are defined by prefixing the <xref href="Terminal.Gui.MenuItem.Title" data-throw-if-not-resolved="false"></xref>

    of a MenuItem with an underscore ('_'). 

    <p>

    Pressing Alt-Hotkey for a <xref href="Terminal.Gui.MenuBarItem" data-throw-if-not-resolved="false"></xref> (menu items on the menu bar) works even if the menu is not active). 

    Once a menu has focus and is active, pressing just the HotKey will activate the MenuItem.

    </p>

    <p>

    For example for a MenuBar with a "_File" MenuBarItem that contains a "_New" MenuItem, Alt-F will open the File menu.

    Pressing the N key will then activate the New MenuItem.

    </p>

    <p>

    See also <xref href="Terminal.Gui.MenuItem.Shortcut" data-throw-if-not-resolved="false"></xref> which enable global key-bindings to menu items.

    </p>
  example: []
  syntax:
    content: public Rune HotKey
    return:
      type: System.Text.Rune
    content.vb: Public HotKey As Rune
- uid: Terminal.Gui.MenuItem.Shortcut
  commentId: P:Terminal.Gui.MenuItem.Shortcut
  id: Shortcut
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: Terminal.Gui.MenuItem.Shortcut
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Shortcut
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 97
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Shortcut defines a key binding to the MenuItem that will invoke the MenuItem's action globally for the <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref> that is

    the parent of the <xref href="Terminal.Gui.MenuBar" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.ContextMenu" data-throw-if-not-resolved="false"></xref> this <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref>.

    <p>

    The <xref href="Terminal.Gui.Key" data-throw-if-not-resolved="false"></xref> will be drawn on the MenuItem to the right of the <xref href="Terminal.Gui.MenuItem.Title" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.MenuItem.Help" data-throw-if-not-resolved="false"></xref> text. See <xref href="Terminal.Gui.MenuItem.ShortcutTag" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public Key Shortcut { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public Property Shortcut As Key
  overload: Terminal.Gui.MenuItem.Shortcut*
- uid: Terminal.Gui.MenuItem.ShortcutTag
  commentId: P:Terminal.Gui.MenuItem.ShortcutTag
  id: ShortcutTag
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: ShortcutTag
  nameWithType: MenuItem.ShortcutTag
  fullName: Terminal.Gui.MenuItem.ShortcutTag
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ShortcutTag
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 109
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the text describing the keystroke combination defined by <xref href="Terminal.Gui.MenuItem.Shortcut" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string ShortcutTag { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ShortcutTag As String
  overload: Terminal.Gui.MenuItem.ShortcutTag*
- uid: Terminal.Gui.MenuItem.Title
  commentId: P:Terminal.Gui.MenuItem.Title
  id: Title
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MenuItem.Title
  fullName: Terminal.Gui.MenuItem.Title
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Title
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 115
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the title of the menu item .
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: The title.
    content.vb: Public Property Title As String
  overload: Terminal.Gui.MenuItem.Title*
- uid: Terminal.Gui.MenuItem.Help
  commentId: P:Terminal.Gui.MenuItem.Help
  id: Help
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Help
  nameWithType: MenuItem.Help
  fullName: Terminal.Gui.MenuItem.Help
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Help
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 129
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the help text for the menu item. The help text is drawn to the right of the <xref href="Terminal.Gui.MenuItem.Title" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string Help { get; set; }
    parameters: []
    return:
      type: System.String
      description: The help text.
    content.vb: Public Property Help As String
  overload: Terminal.Gui.MenuItem.Help*
- uid: Terminal.Gui.MenuItem.Action
  commentId: P:Terminal.Gui.MenuItem.Action
  id: Action
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: MenuItem.Action
  fullName: Terminal.Gui.MenuItem.Action
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Action
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 135
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets or sets the action to be invoked when the menu item is triggered.
  example: []
  syntax:
    content: public Action Action { get; set; }
    parameters: []
    return:
      type: System.Action
      description: Method to invoke.
    content.vb: Public Property Action As Action
  overload: Terminal.Gui.MenuItem.Action*
- uid: Terminal.Gui.MenuItem.CanExecute
  commentId: P:Terminal.Gui.MenuItem.CanExecute
  id: CanExecute
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: MenuItem.CanExecute
  fullName: Terminal.Gui.MenuItem.CanExecute
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanExecute
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 142
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets the action to be invoked to determine if the menu can be triggered. If <xref href="Terminal.Gui.MenuItem.CanExecute" data-throw-if-not-resolved="false"></xref> returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>

    the menu item will be enabled. Otherwise, it will be disabled.
  example: []
  syntax:
    content: public Func<bool> CanExecute { get; set; }
    parameters: []
    return:
      type: System.Func{System.Boolean}
      description: Function to determine if the action is can be executed or not.
    content.vb: Public Property CanExecute As Func(Of Boolean)
  overload: Terminal.Gui.MenuItem.CanExecute*
- uid: Terminal.Gui.MenuItem.IsEnabled
  commentId: M:Terminal.Gui.MenuItem.IsEnabled
  id: IsEnabled
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: IsEnabled()
  nameWithType: MenuItem.IsEnabled()
  fullName: Terminal.Gui.MenuItem.IsEnabled()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsEnabled
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 147
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the menu item is enabled. This method is a wrapper around <xref href="Terminal.Gui.MenuItem.CanExecute" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool IsEnabled()
    return:
      type: System.Boolean
    content.vb: Public Function IsEnabled() As Boolean
  overload: Terminal.Gui.MenuItem.IsEnabled*
- uid: Terminal.Gui.MenuItem.Checked
  commentId: P:Terminal.Gui.MenuItem.Checked
  id: Checked
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: Terminal.Gui.MenuItem.Checked
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Checked
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 170
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Sets or gets whether the <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref> shows a check indicator or not. See <xref href="Terminal.Gui.MenuItemCheckStyle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool? Checked { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property Checked As Boolean?
  overload: Terminal.Gui.MenuItem.Checked*
- uid: Terminal.Gui.MenuItem.AllowNullChecked
  commentId: P:Terminal.Gui.MenuItem.AllowNullChecked
  id: AllowNullChecked
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: AllowNullChecked
  nameWithType: MenuItem.AllowNullChecked
  fullName: Terminal.Gui.MenuItem.AllowNullChecked
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AllowNullChecked
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 177
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Used only if <xref href="Terminal.Gui.MenuItem.CheckType" data-throw-if-not-resolved="false"></xref> is of <xref href="Terminal.Gui.MenuItemCheckStyle.Checked" data-throw-if-not-resolved="false"></xref> type.

    If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> allows <xref href="Terminal.Gui.MenuItem.Checked" data-throw-if-not-resolved="false"></xref> to be null, true or false.

    If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> only allows <xref href="Terminal.Gui.MenuItem.Checked" data-throw-if-not-resolved="false"></xref> to be true or false.
  example: []
  syntax:
    content: public bool AllowNullChecked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowNullChecked As Boolean
  overload: Terminal.Gui.MenuItem.AllowNullChecked*
- uid: Terminal.Gui.MenuItem.CheckType
  commentId: P:Terminal.Gui.MenuItem.CheckType
  id: CheckType
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: CheckType
  nameWithType: MenuItem.CheckType
  fullName: Terminal.Gui.MenuItem.CheckType
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CheckType
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 190
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Sets or gets the <xref href="Terminal.Gui.MenuItemCheckStyle" data-throw-if-not-resolved="false"></xref> of a menu item where <xref href="Terminal.Gui.MenuItem.Checked" data-throw-if-not-resolved="false"></xref> is set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public MenuItemCheckStyle CheckType { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.MenuItemCheckStyle
    content.vb: Public Property CheckType As MenuItemCheckStyle
  overload: Terminal.Gui.MenuItem.CheckType*
- uid: Terminal.Gui.MenuItem.Parent
  commentId: P:Terminal.Gui.MenuItem.Parent
  id: Parent
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: Terminal.Gui.MenuItem.Parent
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Parent
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 204
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the parent for this <xref href="Terminal.Gui.MenuItem" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public MenuItem Parent { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.MenuItem
      description: The parent.
    content.vb: Public Property Parent As MenuItem
  overload: Terminal.Gui.MenuItem.Parent*
- uid: Terminal.Gui.MenuItem.GetMenuItem
  commentId: M:Terminal.Gui.MenuItem.GetMenuItem
  id: GetMenuItem
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: GetMenuItem()
  nameWithType: MenuItem.GetMenuItem()
  fullName: Terminal.Gui.MenuItem.GetMenuItem()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetMenuItem
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 214
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Merely a debugging aid to see the interaction with main.
  example: []
  syntax:
    content: public MenuItem GetMenuItem()
    return:
      type: Terminal.Gui.MenuItem
    content.vb: Public Function GetMenuItem() As MenuItem
  overload: Terminal.Gui.MenuItem.GetMenuItem*
- uid: Terminal.Gui.MenuItem.GetMenuBarItem
  commentId: M:Terminal.Gui.MenuItem.GetMenuBarItem
  id: GetMenuBarItem
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: GetMenuBarItem()
  nameWithType: MenuItem.GetMenuBarItem()
  fullName: Terminal.Gui.MenuItem.GetMenuBarItem()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetMenuBarItem
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 222
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Merely a debugging aid to see the interaction with main.
  example: []
  syntax:
    content: public bool GetMenuBarItem()
    return:
      type: System.Boolean
    content.vb: Public Function GetMenuBarItem() As Boolean
  overload: Terminal.Gui.MenuItem.GetMenuBarItem*
- uid: Terminal.Gui.MenuItem.ToggleChecked
  commentId: M:Terminal.Gui.MenuItem.ToggleChecked
  id: ToggleChecked
  parent: Terminal.Gui.MenuItem
  langs:
  - csharp
  - vb
  name: ToggleChecked()
  nameWithType: MenuItem.ToggleChecked()
  fullName: Terminal.Gui.MenuItem.ToggleChecked()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/Menu.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToggleChecked
    path: ../Terminal.Gui/Views/Menu.cs
    startLine: 231
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Toggle the <xref href="Terminal.Gui.MenuItem.Checked" data-throw-if-not-resolved="false"></xref> between three states if <xref href="Terminal.Gui.MenuItem.AllowNullChecked" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>

    or between two states if <xref href="Terminal.Gui.MenuItem.AllowNullChecked" data-throw-if-not-resolved="false"></xref> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public void ToggleChecked()
    content.vb: Public Sub ToggleChecked()
  overload: Terminal.Gui.MenuItem.ToggleChecked*
references:
- uid: Terminal.Gui.MenuItem
  commentId: T:Terminal.Gui.MenuItem
  parent: Terminal.Gui
  href: Terminal.Gui.MenuItem.html
  name: MenuItem
  nameWithType: MenuItem
  fullName: Terminal.Gui.MenuItem
- uid: Terminal.Gui.MenuItem.Checked
  commentId: P:Terminal.Gui.MenuItem.Checked
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Checked
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: Terminal.Gui.MenuItem.Checked
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.MenuItem.Data*
  commentId: Overload:Terminal.Gui.MenuItem.Data
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Data
  name: Data
  nameWithType: MenuItem.Data
  fullName: Terminal.Gui.MenuItem.Data
- uid: Terminal.Gui.MenuItem.#ctor*
  commentId: Overload:Terminal.Gui.MenuItem.#ctor
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.#ctor(Terminal.Gui.Key)
  name: MenuItem
  nameWithType: MenuItem.MenuItem
  fullName: Terminal.Gui.MenuItem.MenuItem
  nameWithType.vb: MenuItem.New
  fullName.vb: Terminal.Gui.MenuItem.New
  name.vb: New
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.MenuItem.Parent
  commentId: P:Terminal.Gui.MenuItem.Parent
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Parent
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: Terminal.Gui.MenuItem.Parent
- uid: Terminal.Gui.MenuItem.Shortcut
  commentId: P:Terminal.Gui.MenuItem.Shortcut
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Shortcut
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: Terminal.Gui.MenuItem.Shortcut
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: System.Func{System.Boolean}
  commentId: T:System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<bool>
  nameWithType: Func<bool>
  fullName: System.Func<bool>
  nameWithType.vb: Func(Of Boolean)
  fullName.vb: System.Func(Of Boolean)
  name.vb: Func(Of Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Terminal.Gui.MenuItem.Title
  commentId: P:Terminal.Gui.MenuItem.Title
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Title
  name: Title
  nameWithType: MenuItem.Title
  fullName: Terminal.Gui.MenuItem.Title
- uid: Terminal.Gui.MenuBarItem
  commentId: T:Terminal.Gui.MenuBarItem
  parent: Terminal.Gui
  href: Terminal.Gui.MenuBarItem.html
  name: MenuBarItem
  nameWithType: MenuBarItem
  fullName: Terminal.Gui.MenuBarItem
- uid: System.Text.Rune
  commentId: T:System.Text.Rune
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune
  nameWithType: Rune
  fullName: System.Text.Rune
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  href: Terminal.Gui.View.html
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.MenuBar
  commentId: T:Terminal.Gui.MenuBar
  parent: Terminal.Gui
  href: Terminal.Gui.MenuBar.html
  name: MenuBar
  nameWithType: MenuBar
  fullName: Terminal.Gui.MenuBar
- uid: Terminal.Gui.ContextMenu
  commentId: T:Terminal.Gui.ContextMenu
  parent: Terminal.Gui
  href: Terminal.Gui.ContextMenu.html
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: Terminal.Gui.ContextMenu
- uid: Terminal.Gui.MenuItem.Help
  commentId: P:Terminal.Gui.MenuItem.Help
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Help
  name: Help
  nameWithType: MenuItem.Help
  fullName: Terminal.Gui.MenuItem.Help
- uid: Terminal.Gui.MenuItem.ShortcutTag
  commentId: P:Terminal.Gui.MenuItem.ShortcutTag
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.ShortcutTag
  name: ShortcutTag
  nameWithType: MenuItem.ShortcutTag
  fullName: Terminal.Gui.MenuItem.ShortcutTag
- uid: Terminal.Gui.MenuItem.Shortcut*
  commentId: Overload:Terminal.Gui.MenuItem.Shortcut
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Shortcut
  name: Shortcut
  nameWithType: MenuItem.Shortcut
  fullName: Terminal.Gui.MenuItem.Shortcut
- uid: Terminal.Gui.MenuItem.ShortcutTag*
  commentId: Overload:Terminal.Gui.MenuItem.ShortcutTag
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.ShortcutTag
  name: ShortcutTag
  nameWithType: MenuItem.ShortcutTag
  fullName: Terminal.Gui.MenuItem.ShortcutTag
- uid: Terminal.Gui.MenuItem.Title*
  commentId: Overload:Terminal.Gui.MenuItem.Title
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Title
  name: Title
  nameWithType: MenuItem.Title
  fullName: Terminal.Gui.MenuItem.Title
- uid: Terminal.Gui.MenuItem.Help*
  commentId: Overload:Terminal.Gui.MenuItem.Help
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Help
  name: Help
  nameWithType: MenuItem.Help
  fullName: Terminal.Gui.MenuItem.Help
- uid: Terminal.Gui.MenuItem.Action*
  commentId: Overload:Terminal.Gui.MenuItem.Action
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Action
  name: Action
  nameWithType: MenuItem.Action
  fullName: Terminal.Gui.MenuItem.Action
- uid: Terminal.Gui.MenuItem.CanExecute
  commentId: P:Terminal.Gui.MenuItem.CanExecute
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.CanExecute
  name: CanExecute
  nameWithType: MenuItem.CanExecute
  fullName: Terminal.Gui.MenuItem.CanExecute
- uid: Terminal.Gui.MenuItem.CanExecute*
  commentId: Overload:Terminal.Gui.MenuItem.CanExecute
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.CanExecute
  name: CanExecute
  nameWithType: MenuItem.CanExecute
  fullName: Terminal.Gui.MenuItem.CanExecute
- uid: Terminal.Gui.MenuItem.IsEnabled*
  commentId: Overload:Terminal.Gui.MenuItem.IsEnabled
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.IsEnabled
  name: IsEnabled
  nameWithType: MenuItem.IsEnabled
  fullName: Terminal.Gui.MenuItem.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.MenuItemCheckStyle
  commentId: T:Terminal.Gui.MenuItemCheckStyle
  parent: Terminal.Gui
  href: Terminal.Gui.MenuItemCheckStyle.html
  name: MenuItemCheckStyle
  nameWithType: MenuItemCheckStyle
  fullName: Terminal.Gui.MenuItemCheckStyle
- uid: Terminal.Gui.MenuItem.Checked*
  commentId: Overload:Terminal.Gui.MenuItem.Checked
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Checked
  name: Checked
  nameWithType: MenuItem.Checked
  fullName: Terminal.Gui.MenuItem.Checked
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.MenuItem.CheckType
  commentId: P:Terminal.Gui.MenuItem.CheckType
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.CheckType
  name: CheckType
  nameWithType: MenuItem.CheckType
  fullName: Terminal.Gui.MenuItem.CheckType
- uid: Terminal.Gui.MenuItemCheckStyle.Checked
  commentId: F:Terminal.Gui.MenuItemCheckStyle.Checked
  href: Terminal.Gui.MenuItemCheckStyle.html#Terminal.Gui.MenuItemCheckStyle.Checked
  name: Checked
  nameWithType: MenuItemCheckStyle.Checked
  fullName: Terminal.Gui.MenuItemCheckStyle.Checked
- uid: Terminal.Gui.MenuItem.AllowNullChecked*
  commentId: Overload:Terminal.Gui.MenuItem.AllowNullChecked
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.AllowNullChecked
  name: AllowNullChecked
  nameWithType: MenuItem.AllowNullChecked
  fullName: Terminal.Gui.MenuItem.AllowNullChecked
- uid: Terminal.Gui.MenuItem.CheckType*
  commentId: Overload:Terminal.Gui.MenuItem.CheckType
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.CheckType
  name: CheckType
  nameWithType: MenuItem.CheckType
  fullName: Terminal.Gui.MenuItem.CheckType
- uid: Terminal.Gui.MenuItem.Parent*
  commentId: Overload:Terminal.Gui.MenuItem.Parent
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.Parent
  name: Parent
  nameWithType: MenuItem.Parent
  fullName: Terminal.Gui.MenuItem.Parent
- uid: Terminal.Gui.MenuItem.GetMenuItem*
  commentId: Overload:Terminal.Gui.MenuItem.GetMenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.GetMenuItem
  name: GetMenuItem
  nameWithType: MenuItem.GetMenuItem
  fullName: Terminal.Gui.MenuItem.GetMenuItem
- uid: Terminal.Gui.MenuItem.GetMenuBarItem*
  commentId: Overload:Terminal.Gui.MenuItem.GetMenuBarItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.GetMenuBarItem
  name: GetMenuBarItem
  nameWithType: MenuItem.GetMenuBarItem
  fullName: Terminal.Gui.MenuItem.GetMenuBarItem
- uid: Terminal.Gui.MenuItem.AllowNullChecked
  commentId: P:Terminal.Gui.MenuItem.AllowNullChecked
  parent: Terminal.Gui.MenuItem
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.AllowNullChecked
  name: AllowNullChecked
  nameWithType: MenuItem.AllowNullChecked
  fullName: Terminal.Gui.MenuItem.AllowNullChecked
- uid: Terminal.Gui.MenuItem.ToggleChecked*
  commentId: Overload:Terminal.Gui.MenuItem.ToggleChecked
  href: Terminal.Gui.MenuItem.html#Terminal.Gui.MenuItem.ToggleChecked
  name: ToggleChecked
  nameWithType: MenuItem.ToggleChecked
  fullName: Terminal.Gui.MenuItem.ToggleChecked
shouldSkipMarkup: true
