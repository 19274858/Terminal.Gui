### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TreeStyle
  commentId: T:Terminal.Gui.TreeStyle
  id: TreeStyle
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TreeStyle.CollapseableSymbol
  - Terminal.Gui.TreeStyle.ColorExpandSymbol
  - Terminal.Gui.TreeStyle.ExpandableSymbol
  - Terminal.Gui.TreeStyle.HighlightModelTextOnly
  - Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  - Terminal.Gui.TreeStyle.LeaveLastRow
  - Terminal.Gui.TreeStyle.ShowBranchLines
  langs:
  - csharp
  - vb
  name: TreeStyle
  nameWithType: TreeStyle
  fullName: Terminal.Gui.TreeStyle
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TreeStyle
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 7
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Defines rendering options that affect how the tree is displayed.
  example: []
  syntax:
    content: public class TreeStyle
    content.vb: Public Class TreeStyle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.TreeStyle.ShowBranchLines
  commentId: P:Terminal.Gui.TreeStyle.ShowBranchLines
  id: ShowBranchLines
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: ShowBranchLines
  nameWithType: TreeStyle.ShowBranchLines
  fullName: Terminal.Gui.TreeStyle.ShowBranchLines
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ShowBranchLines
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 14
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to render vertical lines under expanded nodes to show which node belongs to which 

    parent. <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to use only whitespace.
  example: []
  syntax:
    content: public bool ShowBranchLines { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Property ShowBranchLines As Boolean
  overload: Terminal.Gui.TreeStyle.ShowBranchLines*
- uid: Terminal.Gui.TreeStyle.ExpandableSymbol
  commentId: P:Terminal.Gui.TreeStyle.ExpandableSymbol
  id: ExpandableSymbol
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: ExpandableSymbol
  nameWithType: TreeStyle.ExpandableSymbol
  fullName: Terminal.Gui.TreeStyle.ExpandableSymbol
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ExpandableSymbol
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 20
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Symbol to use for branch nodes that can be expanded to indicate this to the user. 

    Defaults to '+'. Set to null to hide.
  example: []
  syntax:
    content: public Rune? ExpandableSymbol { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Text.Rune}
    content.vb: Public Property ExpandableSymbol As Rune?
  overload: Terminal.Gui.TreeStyle.ExpandableSymbol*
- uid: Terminal.Gui.TreeStyle.CollapseableSymbol
  commentId: P:Terminal.Gui.TreeStyle.CollapseableSymbol
  id: CollapseableSymbol
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: CollapseableSymbol
  nameWithType: TreeStyle.CollapseableSymbol
  fullName: Terminal.Gui.TreeStyle.CollapseableSymbol
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CollapseableSymbol
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 26
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Symbol to use for branch nodes that can be collapsed (are currently expanded).

    Defaults to '-'. Set to null to hide.
  example: []
  syntax:
    content: public Rune? CollapseableSymbol { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Text.Rune}
    content.vb: Public Property CollapseableSymbol As Rune?
  overload: Terminal.Gui.TreeStyle.CollapseableSymbol*
- uid: Terminal.Gui.TreeStyle.ColorExpandSymbol
  commentId: P:Terminal.Gui.TreeStyle.ColorExpandSymbol
  id: ColorExpandSymbol
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: ColorExpandSymbol
  nameWithType: TreeStyle.ColorExpandSymbol
  fullName: Terminal.Gui.TreeStyle.ColorExpandSymbol
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ColorExpandSymbol
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 31
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to highlight expand/collapse symbols in hot key color.
  example: []
  syntax:
    content: public bool ColorExpandSymbol { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ColorExpandSymbol As Boolean
  overload: Terminal.Gui.TreeStyle.ColorExpandSymbol*
- uid: Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  commentId: P:Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  id: InvertExpandSymbolColors
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: InvertExpandSymbolColors
  nameWithType: TreeStyle.InvertExpandSymbolColors
  fullName: Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: InvertExpandSymbolColors
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 36
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Invert console colours used to render the expand symbol.
  example: []
  syntax:
    content: public bool InvertExpandSymbolColors { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property InvertExpandSymbolColors As Boolean
  overload: Terminal.Gui.TreeStyle.InvertExpandSymbolColors*
- uid: Terminal.Gui.TreeStyle.LeaveLastRow
  commentId: P:Terminal.Gui.TreeStyle.LeaveLastRow
  id: LeaveLastRow
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: LeaveLastRow
  nameWithType: TreeStyle.LeaveLastRow
  fullName: Terminal.Gui.TreeStyle.LeaveLastRow
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: LeaveLastRow
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 44
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to leave the last row of the control free for overwritting (e.g. by a scrollbar)

    When <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> scrolling will be triggered on the second last row of the control rather than.

    the last.
  example: []
  syntax:
    content: public bool LeaveLastRow { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Property LeaveLastRow As Boolean
  overload: Terminal.Gui.TreeStyle.LeaveLastRow*
- uid: Terminal.Gui.TreeStyle.HighlightModelTextOnly
  commentId: P:Terminal.Gui.TreeStyle.HighlightModelTextOnly
  id: HighlightModelTextOnly
  parent: Terminal.Gui.TreeStyle
  langs:
  - csharp
  - vb
  name: HighlightModelTextOnly
  nameWithType: TreeStyle.HighlightModelTextOnly
  fullName: Terminal.Gui.TreeStyle.HighlightModelTextOnly
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeStyle.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: HighlightModelTextOnly
    path: ../Terminal.Gui/Views/TreeView/TreeStyle.cs
    startLine: 50
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to cause the selected item to be rendered with only the <xref href="Terminal.Gui.Branch%601.Model" data-throw-if-not-resolved="false"></xref> text

    to be highlighted. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> (the default), the entire row will be highlighted.
  example: []
  syntax:
    content: public bool HighlightModelTextOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HighlightModelTextOnly As Boolean
  overload: Terminal.Gui.TreeStyle.HighlightModelTextOnly*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.TreeStyle.ShowBranchLines*
  commentId: Overload:Terminal.Gui.TreeStyle.ShowBranchLines
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.ShowBranchLines
  name: ShowBranchLines
  nameWithType: TreeStyle.ShowBranchLines
  fullName: Terminal.Gui.TreeStyle.ShowBranchLines
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.TreeStyle.ExpandableSymbol*
  commentId: Overload:Terminal.Gui.TreeStyle.ExpandableSymbol
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.ExpandableSymbol
  name: ExpandableSymbol
  nameWithType: TreeStyle.ExpandableSymbol
  fullName: Terminal.Gui.TreeStyle.ExpandableSymbol
- uid: System.Nullable{System.Text.Rune}
  commentId: T:System.Nullable{System.Text.Rune}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune?
  nameWithType: Rune?
  fullName: System.Text.Rune?
  spec.csharp:
  - uid: System.Text.Rune
    name: Rune
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.rune
  - name: '?'
  spec.vb:
  - uid: System.Text.Rune
    name: Rune
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.rune
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeStyle.CollapseableSymbol*
  commentId: Overload:Terminal.Gui.TreeStyle.CollapseableSymbol
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.CollapseableSymbol
  name: CollapseableSymbol
  nameWithType: TreeStyle.CollapseableSymbol
  fullName: Terminal.Gui.TreeStyle.CollapseableSymbol
- uid: Terminal.Gui.TreeStyle.ColorExpandSymbol*
  commentId: Overload:Terminal.Gui.TreeStyle.ColorExpandSymbol
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.ColorExpandSymbol
  name: ColorExpandSymbol
  nameWithType: TreeStyle.ColorExpandSymbol
  fullName: Terminal.Gui.TreeStyle.ColorExpandSymbol
- uid: Terminal.Gui.TreeStyle.InvertExpandSymbolColors*
  commentId: Overload:Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.InvertExpandSymbolColors
  name: InvertExpandSymbolColors
  nameWithType: TreeStyle.InvertExpandSymbolColors
  fullName: Terminal.Gui.TreeStyle.InvertExpandSymbolColors
- uid: Terminal.Gui.TreeStyle.LeaveLastRow*
  commentId: Overload:Terminal.Gui.TreeStyle.LeaveLastRow
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.LeaveLastRow
  name: LeaveLastRow
  nameWithType: TreeStyle.LeaveLastRow
  fullName: Terminal.Gui.TreeStyle.LeaveLastRow
- uid: Terminal.Gui.Branch`1.Model
  commentId: P:Terminal.Gui.Branch`1.Model
  href: Terminal.Gui.Branch-1.html#Terminal.Gui.Branch`1.Model
  name: Model
  nameWithType: Branch<T>.Model
  fullName: Terminal.Gui.Branch<T>.Model
  nameWithType.vb: Branch(Of T).Model
  fullName.vb: Terminal.Gui.Branch(Of T).Model
- uid: Terminal.Gui.TreeStyle.HighlightModelTextOnly*
  commentId: Overload:Terminal.Gui.TreeStyle.HighlightModelTextOnly
  href: Terminal.Gui.TreeStyle.html#Terminal.Gui.TreeStyle.HighlightModelTextOnly
  name: HighlightModelTextOnly
  nameWithType: TreeStyle.HighlightModelTextOnly
  fullName: Terminal.Gui.TreeStyle.HighlightModelTextOnly
shouldSkipMarkup: true
