### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.RuneExtensions
  commentId: T:Terminal.Gui.RuneExtensions
  id: RuneExtensions
  parent: Terminal.Gui
  children:
  - Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(System.Byte[])
  - Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune,System.Char[]@)
  - Terminal.Gui.RuneExtensions.Encode(System.Text.Rune,System.Byte[],System.Int32,System.Int32)
  - Terminal.Gui.RuneExtensions.EncodeSurrogatePair(System.Char,System.Char,System.Text.Rune@)
  - Terminal.Gui.RuneExtensions.GetColumns(System.Text.Rune)
  - Terminal.Gui.RuneExtensions.GetEncodingLength(System.Text.Rune,System.Text.Encoding)
  - Terminal.Gui.RuneExtensions.IsCombiningMark(System.Text.Rune)
  - Terminal.Gui.RuneExtensions.IsSurrogatePair(System.Text.Rune)
  - Terminal.Gui.RuneExtensions.MakePrintable(System.Text.Rune)
  - Terminal.Gui.RuneExtensions.MaxUnicodeCodePoint
  langs:
  - csharp
  - vb
  name: RuneExtensions
  nameWithType: RuneExtensions
  fullName: Terminal.Gui.RuneExtensions
  type: Class
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: RuneExtensions
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 9
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Extends <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static class RuneExtensions
    content.vb: Public Module RuneExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.RuneExtensions.MaxUnicodeCodePoint
  commentId: F:Terminal.Gui.RuneExtensions.MaxUnicodeCodePoint
  id: MaxUnicodeCodePoint
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: MaxUnicodeCodePoint
  nameWithType: RuneExtensions.MaxUnicodeCodePoint
  fullName: Terminal.Gui.RuneExtensions.MaxUnicodeCodePoint
  type: Field
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MaxUnicodeCodePoint
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 13
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Maximum Unicode code point.
  example: []
  syntax:
    content: public static int MaxUnicodeCodePoint
    return:
      type: System.Int32
    content.vb: Public Shared MaxUnicodeCodePoint As Integer
- uid: Terminal.Gui.RuneExtensions.GetColumns(System.Text.Rune)
  commentId: M:Terminal.Gui.RuneExtensions.GetColumns(System.Text.Rune)
  id: GetColumns(System.Text.Rune)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: GetColumns(Rune)
  nameWithType: RuneExtensions.GetColumns(Rune)
  fullName: Terminal.Gui.RuneExtensions.GetColumns(System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetColumns
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 27
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the number of columns the rune occupies in the terminal.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static int GetColumns(this Rune rune)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: The rune to measure.
    return:
      type: System.Int32
      description: >-
        The number of columns required to fit the rune, 0 if the argument is the null character, or

        -1 if the value is not printable, 

        otherwise the number of columns that the rune occupies.
    content.vb: Public Shared Function GetColumns(rune As Rune) As Integer
  overload: Terminal.Gui.RuneExtensions.GetColumns*
- uid: Terminal.Gui.RuneExtensions.IsCombiningMark(System.Text.Rune)
  commentId: M:Terminal.Gui.RuneExtensions.IsCombiningMark(System.Text.Rune)
  id: IsCombiningMark(System.Text.Rune)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: IsCombiningMark(Rune)
  nameWithType: RuneExtensions.IsCombiningMark(Rune)
  fullName: Terminal.Gui.RuneExtensions.IsCombiningMark(System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsCombiningMark
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 40
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the rune is a combining character.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static bool IsCombiningMark(this Rune rune)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsCombiningMark(rune As Rune) As Boolean
  overload: Terminal.Gui.RuneExtensions.IsCombiningMark*
- uid: Terminal.Gui.RuneExtensions.MakePrintable(System.Text.Rune)
  commentId: M:Terminal.Gui.RuneExtensions.MakePrintable(System.Text.Rune)
  id: MakePrintable(System.Text.Rune)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: MakePrintable(Rune)
  nameWithType: RuneExtensions.MakePrintable(Rune)
  fullName: Terminal.Gui.RuneExtensions.MakePrintable(System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: MakePrintable
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 57
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Ensures the rune is not a control character and can be displayed by translating characters below 0x20

    to equivalent, printable, Unicode chars.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static Rune MakePrintable(this Rune rune)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: ''
    return:
      type: System.Text.Rune
      description: ''
    content.vb: Public Shared Function MakePrintable(rune As Rune) As Rune
  overload: Terminal.Gui.RuneExtensions.MakePrintable*
- uid: Terminal.Gui.RuneExtensions.GetEncodingLength(System.Text.Rune,System.Text.Encoding)
  commentId: M:Terminal.Gui.RuneExtensions.GetEncodingLength(System.Text.Rune,System.Text.Encoding)
  id: GetEncodingLength(System.Text.Rune,System.Text.Encoding)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: GetEncodingLength(Rune, Encoding)
  nameWithType: RuneExtensions.GetEncodingLength(Rune, Encoding)
  fullName: Terminal.Gui.RuneExtensions.GetEncodingLength(System.Text.Rune, System.Text.Encoding)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetEncodingLength
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 68
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Get number of bytes required to encode the rune, based on the provided encoding.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static int GetEncodingLength(this Rune rune, Encoding encoding = null)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: The rune to probe.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding used; the default is UTF8.
    return:
      type: System.Int32
      description: The number of bytes required.
    content.vb: Public Shared Function GetEncodingLength(rune As Rune, encoding As Encoding = Nothing) As Integer
  overload: Terminal.Gui.RuneExtensions.GetEncodingLength*
- uid: Terminal.Gui.RuneExtensions.Encode(System.Text.Rune,System.Byte[],System.Int32,System.Int32)
  commentId: M:Terminal.Gui.RuneExtensions.Encode(System.Text.Rune,System.Byte[],System.Int32,System.Int32)
  id: Encode(System.Text.Rune,System.Byte[],System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: Encode(Rune, byte[], int, int)
  nameWithType: RuneExtensions.Encode(Rune, byte[], int, int)
  fullName: Terminal.Gui.RuneExtensions.Encode(System.Text.Rune, byte[], int, int)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Encode
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 90
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Writes into the destination buffer starting at offset the UTF8 encoded version of the rune.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static int Encode(this Rune rune, byte[] dest, int start = 0, int count = -1)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: The rune to encode.
    - id: dest
      type: System.Byte[]
      description: The destination buffer.
    - id: start
      type: System.Int32
      description: Starting offset to look into.
    - id: count
      type: System.Int32
      description: Number of bytes valid in the buffer, or -1 to make it the length of the buffer.
    return:
      type: System.Int32
      description: he number of bytes written into the destination buffer.
    content.vb: Public Shared Function Encode(rune As Rune, dest As Byte(), start As Integer = 0, count As Integer = -1) As Integer
  overload: Terminal.Gui.RuneExtensions.Encode*
  nameWithType.vb: RuneExtensions.Encode(Rune, Byte(), Integer, Integer)
  fullName.vb: Terminal.Gui.RuneExtensions.Encode(System.Text.Rune, Byte(), Integer, Integer)
  name.vb: Encode(Rune, Byte(), Integer, Integer)
- uid: Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune,System.Char[]@)
  commentId: M:Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune,System.Char[]@)
  id: DecodeSurrogatePair(System.Text.Rune,System.Char[]@)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: DecodeSurrogatePair(Rune, out char[])
  nameWithType: RuneExtensions.DecodeSurrogatePair(Rune, out char[])
  fullName: Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune, out char[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: DecodeSurrogatePair
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 113
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Attempts to decode the rune as a surrogate pair to UTF-16.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static bool DecodeSurrogatePair(this Rune rune, out char[] chars)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: The rune to decode.
    - id: chars
      type: System.Char[]
      description: The chars if the rune is a surrogate pair. Null otherwise.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the rune is a valid surrogate pair; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function DecodeSurrogatePair(rune As Rune, chars As Char()) As Boolean
  overload: Terminal.Gui.RuneExtensions.DecodeSurrogatePair*
  nameWithType.vb: RuneExtensions.DecodeSurrogatePair(Rune, Char())
  fullName.vb: Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune, Char())
  name.vb: DecodeSurrogatePair(Rune, Char())
- uid: Terminal.Gui.RuneExtensions.EncodeSurrogatePair(System.Char,System.Char,System.Text.Rune@)
  commentId: M:Terminal.Gui.RuneExtensions.EncodeSurrogatePair(System.Char,System.Char,System.Text.Rune@)
  id: EncodeSurrogatePair(System.Char,System.Char,System.Text.Rune@)
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: EncodeSurrogatePair(char, char, out Rune)
  nameWithType: RuneExtensions.EncodeSurrogatePair(char, char, out Rune)
  fullName: Terminal.Gui.RuneExtensions.EncodeSurrogatePair(char, char, out System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: EncodeSurrogatePair
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 130
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Attempts to encode (as UTF-16) a surrogate pair.
  example: []
  syntax:
    content: public static bool EncodeSurrogatePair(char highSurrogate, char lowSurrogate, out Rune result)
    parameters:
    - id: highSurrogate
      type: System.Char
      description: The high surrogate code point.
    - id: lowSurrogate
      type: System.Char
      description: The low surrogate code point.
    - id: result
      type: System.Text.Rune
      description: The encoded rune.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the encoding succeeded; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function EncodeSurrogatePair(highSurrogate As Char, lowSurrogate As Char, result As Rune) As Boolean
  overload: Terminal.Gui.RuneExtensions.EncodeSurrogatePair*
  nameWithType.vb: RuneExtensions.EncodeSurrogatePair(Char, Char, Rune)
  fullName.vb: Terminal.Gui.RuneExtensions.EncodeSurrogatePair(Char, Char, System.Text.Rune)
  name.vb: EncodeSurrogatePair(Char, Char, Rune)
- uid: Terminal.Gui.RuneExtensions.IsSurrogatePair(System.Text.Rune)
  commentId: M:Terminal.Gui.RuneExtensions.IsSurrogatePair(System.Text.Rune)
  id: IsSurrogatePair(System.Text.Rune)
  isExtensionMethod: true
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: IsSurrogatePair(Rune)
  nameWithType: RuneExtensions.IsSurrogatePair(Rune)
  fullName: Terminal.Gui.RuneExtensions.IsSurrogatePair(System.Text.Rune)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsSurrogatePair
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 148
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Reports whether a rune is a surrogate code point.
  remarks: This is a Terminal.Gui extension method to <xref href="System.Text.Rune" data-throw-if-not-resolved="false"></xref> to support TUI text manipulation.
  example: []
  syntax:
    content: public static bool IsSurrogatePair(this Rune rune)
    parameters:
    - id: rune
      type: System.Text.Rune
      description: The rune to probe.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the rune is a surrogate code point; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> otherwise.
    content.vb: Public Shared Function IsSurrogatePair(rune As Rune) As Boolean
  overload: Terminal.Gui.RuneExtensions.IsSurrogatePair*
- uid: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(System.Byte[])
  commentId: M:Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(System.Byte[])
  id: CanBeEncodedAsRune(System.Byte[])
  parent: Terminal.Gui.RuneExtensions
  langs:
  - csharp
  - vb
  name: CanBeEncodedAsRune(byte[])
  nameWithType: RuneExtensions.CanBeEncodedAsRune(byte[])
  fullName: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(byte[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/Text/RuneExtensions.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: CanBeEncodedAsRune
    path: ../Terminal.Gui/Text/RuneExtensions.cs
    startLine: 158
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Reports if the provided array of bytes can be encoded as UTF-8.
  example: []
  syntax:
    content: public static bool CanBeEncodedAsRune(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The byte array to probe.
    return:
      type: System.Boolean
      description: <code>true</code> if is valid; otherwise, <code>false</code>.
    content.vb: Public Shared Function CanBeEncodedAsRune(buffer As Byte()) As Boolean
  overload: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune*
  nameWithType.vb: RuneExtensions.CanBeEncodedAsRune(Byte())
  fullName.vb: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(Byte())
  name.vb: CanBeEncodedAsRune(Byte())
references:
- uid: System.Text.Rune
  commentId: T:System.Text.Rune
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.rune
  name: Rune
  nameWithType: Rune
  fullName: System.Text.Rune
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.RuneExtensions.GetColumns*
  commentId: Overload:Terminal.Gui.RuneExtensions.GetColumns
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.GetColumns(System.Text.Rune)
  name: GetColumns
  nameWithType: RuneExtensions.GetColumns
  fullName: Terminal.Gui.RuneExtensions.GetColumns
- uid: Terminal.Gui.RuneExtensions.IsCombiningMark*
  commentId: Overload:Terminal.Gui.RuneExtensions.IsCombiningMark
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.IsCombiningMark(System.Text.Rune)
  name: IsCombiningMark
  nameWithType: RuneExtensions.IsCombiningMark
  fullName: Terminal.Gui.RuneExtensions.IsCombiningMark
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.RuneExtensions.MakePrintable*
  commentId: Overload:Terminal.Gui.RuneExtensions.MakePrintable
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.MakePrintable(System.Text.Rune)
  name: MakePrintable
  nameWithType: RuneExtensions.MakePrintable
  fullName: Terminal.Gui.RuneExtensions.MakePrintable
- uid: Terminal.Gui.RuneExtensions.GetEncodingLength*
  commentId: Overload:Terminal.Gui.RuneExtensions.GetEncodingLength
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.GetEncodingLength(System.Text.Rune,System.Text.Encoding)
  name: GetEncodingLength
  nameWithType: RuneExtensions.GetEncodingLength
  fullName: Terminal.Gui.RuneExtensions.GetEncodingLength
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Terminal.Gui.RuneExtensions.Encode*
  commentId: Overload:Terminal.Gui.RuneExtensions.Encode
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.Encode(System.Text.Rune,System.Byte[],System.Int32,System.Int32)
  name: Encode
  nameWithType: RuneExtensions.Encode
  fullName: Terminal.Gui.RuneExtensions.Encode
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Terminal.Gui.RuneExtensions.DecodeSurrogatePair*
  commentId: Overload:Terminal.Gui.RuneExtensions.DecodeSurrogatePair
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.DecodeSurrogatePair(System.Text.Rune,System.Char[]@)
  name: DecodeSurrogatePair
  nameWithType: RuneExtensions.DecodeSurrogatePair
  fullName: Terminal.Gui.RuneExtensions.DecodeSurrogatePair
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: Terminal.Gui.RuneExtensions.EncodeSurrogatePair*
  commentId: Overload:Terminal.Gui.RuneExtensions.EncodeSurrogatePair
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.EncodeSurrogatePair(System.Char,System.Char,System.Text.Rune@)
  name: EncodeSurrogatePair
  nameWithType: RuneExtensions.EncodeSurrogatePair
  fullName: Terminal.Gui.RuneExtensions.EncodeSurrogatePair
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: Terminal.Gui.RuneExtensions.IsSurrogatePair*
  commentId: Overload:Terminal.Gui.RuneExtensions.IsSurrogatePair
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.IsSurrogatePair(System.Text.Rune)
  name: IsSurrogatePair
  nameWithType: RuneExtensions.IsSurrogatePair
  fullName: Terminal.Gui.RuneExtensions.IsSurrogatePair
- uid: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune*
  commentId: Overload:Terminal.Gui.RuneExtensions.CanBeEncodedAsRune
  href: Terminal.Gui.RuneExtensions.html#Terminal.Gui.RuneExtensions.CanBeEncodedAsRune(System.Byte[])
  name: CanBeEncodedAsRune
  nameWithType: RuneExtensions.CanBeEncodedAsRune
  fullName: Terminal.Gui.RuneExtensions.CanBeEncodedAsRune
shouldSkipMarkup: true
