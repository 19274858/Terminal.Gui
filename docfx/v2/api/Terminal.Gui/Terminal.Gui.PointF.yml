### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.PointF
  commentId: T:Terminal.Gui.PointF
  id: PointF
  parent: Terminal.Gui
  children:
  - Terminal.Gui.PointF.#ctor(System.Single,System.Single)
  - Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.Size)
  - Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  - Terminal.Gui.PointF.Empty
  - Terminal.Gui.PointF.Equals(System.Object)
  - Terminal.Gui.PointF.Equals(Terminal.Gui.PointF)
  - Terminal.Gui.PointF.GetHashCode
  - Terminal.Gui.PointF.IsEmpty
  - Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
  - Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  - Terminal.Gui.PointF.op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  - Terminal.Gui.PointF.op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  - Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
  - Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  - Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.Size)
  - Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  - Terminal.Gui.PointF.ToString
  - Terminal.Gui.PointF.X
  - Terminal.Gui.PointF.Y
  langs:
  - csharp
  - vb
  name: PointF
  nameWithType: PointF
  fullName: Terminal.Gui.PointF
  type: Struct
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PointF
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 13
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Represents an ordered pair of x and y coordinates that define a point in a two-dimensional plane.
  example: []
  syntax:
    content: 'public struct PointF : IEquatable<PointF>'
    content.vb: Public Structure PointF Implements IEquatable(Of PointF)
  implements:
  - System.IEquatable{Terminal.Gui.PointF}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.PointF.Empty
  commentId: F:Terminal.Gui.PointF.Empty
  id: Empty
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: PointF.Empty
  fullName: Terminal.Gui.PointF.Empty
  type: Field
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Empty
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 17
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Creates a new instance of the <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> class with member data left uninitialized.
  example: []
  syntax:
    content: public static readonly PointF Empty
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared ReadOnly Empty As PointF
- uid: Terminal.Gui.PointF.#ctor(System.Single,System.Single)
  commentId: M:Terminal.Gui.PointF.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: PointF(float, float)
  nameWithType: PointF.PointF(float, float)
  fullName: Terminal.Gui.PointF.PointF(float, float)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 24
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of the <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> class with the specified coordinates.
  example: []
  syntax:
    content: public PointF(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single)
  overload: Terminal.Gui.PointF.#ctor*
  nameWithType.vb: PointF.New(Single, Single)
  fullName.vb: Terminal.Gui.PointF.New(Single, Single)
  name.vb: New(Single, Single)
- uid: Terminal.Gui.PointF.IsEmpty
  commentId: P:Terminal.Gui.PointF.IsEmpty
  id: IsEmpty
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: PointF.IsEmpty
  fullName: Terminal.Gui.PointF.IsEmpty
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsEmpty
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 33
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether this <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> is empty.
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Browsable(False)>

      Public ReadOnly Property IsEmpty As Boolean
  overload: Terminal.Gui.PointF.IsEmpty*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: Terminal.Gui.PointF.X
  commentId: P:Terminal.Gui.PointF.X
  id: X
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: X
  nameWithType: PointF.X
  fullName: Terminal.Gui.PointF.X
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: X
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 39
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the x-coordinate of this <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float X { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property X As Single
  overload: Terminal.Gui.PointF.X*
- uid: Terminal.Gui.PointF.Y
  commentId: P:Terminal.Gui.PointF.Y
  id: Y
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: PointF.Y
  fullName: Terminal.Gui.PointF.Y
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Y
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 47
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets the y-coordinate of this <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float Y { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Y As Single
  overload: Terminal.Gui.PointF.Y*
- uid: Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
  id: op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator +(PointF, Size)
  nameWithType: PointF.operator +(PointF, Size)
  fullName: Terminal.Gui.PointF.operator +(Terminal.Gui.PointF, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Addition
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 55
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by a given <xref href="Terminal.Gui.Size" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF operator +(PointF pt, Size sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Operator +(pt As PointF, sz As Size) As PointF
  overload: Terminal.Gui.PointF.op_Addition*
  nameWithType.vb: PointF.+(PointF, Size)
  fullName.vb: Terminal.Gui.PointF.+(Terminal.Gui.PointF, Terminal.Gui.Size)
  name.vb: +(PointF, Size)
- uid: Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
  id: op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator -(PointF, Size)
  nameWithType: PointF.operator -(PointF, Size)
  fullName: Terminal.Gui.PointF.operator -(Terminal.Gui.PointF, Terminal.Gui.Size)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 60
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by the negative of a given <xref href="Terminal.Gui.Size" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF operator -(PointF pt, Size sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Operator -(pt As PointF, sz As Size) As PointF
  overload: Terminal.Gui.PointF.op_Subtraction*
  nameWithType.vb: PointF.-(PointF, Size)
  fullName.vb: Terminal.Gui.PointF.-(Terminal.Gui.PointF, Terminal.Gui.Size)
  name.vb: -(PointF, Size)
- uid: Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  id: op_Addition(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator +(PointF, SizeF)
  nameWithType: PointF.operator +(PointF, SizeF)
  fullName: Terminal.Gui.PointF.operator +(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Addition
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 65
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by a given <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF operator +(PointF pt, SizeF sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Operator +(pt As PointF, sz As SizeF) As PointF
  overload: Terminal.Gui.PointF.op_Addition*
  nameWithType.vb: PointF.+(PointF, SizeF)
  fullName.vb: Terminal.Gui.PointF.+(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  name.vb: +(PointF, SizeF)
- uid: Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  id: op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator -(PointF, SizeF)
  nameWithType: PointF.operator -(PointF, SizeF)
  fullName: Terminal.Gui.PointF.operator -(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 70
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by the negative of a given <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF operator -(PointF pt, SizeF sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Operator -(pt As PointF, sz As SizeF) As PointF
  overload: Terminal.Gui.PointF.op_Subtraction*
  nameWithType.vb: PointF.-(PointF, SizeF)
  fullName.vb: Terminal.Gui.PointF.-(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  name.vb: -(PointF, SizeF)
- uid: Terminal.Gui.PointF.op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  commentId: M:Terminal.Gui.PointF.op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  id: op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator ==(PointF, PointF)
  nameWithType: PointF.operator ==(PointF, PointF)
  fullName: Terminal.Gui.PointF.operator ==(Terminal.Gui.PointF, Terminal.Gui.PointF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Equality
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 77
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Compares two <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects. The result specifies whether the values of the

    <xref href="Terminal.Gui.PointF.X" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.PointF.Y" data-throw-if-not-resolved="false"></xref> properties of the two

    <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects are equal.
  example: []
  syntax:
    content: public static bool operator ==(PointF left, PointF right)
    parameters:
    - id: left
      type: Terminal.Gui.PointF
    - id: right
      type: Terminal.Gui.PointF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As PointF, right As PointF) As Boolean
  overload: Terminal.Gui.PointF.op_Equality*
  nameWithType.vb: PointF.=(PointF, PointF)
  fullName.vb: Terminal.Gui.PointF.=(Terminal.Gui.PointF, Terminal.Gui.PointF)
  name.vb: =(PointF, PointF)
- uid: Terminal.Gui.PointF.op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  commentId: M:Terminal.Gui.PointF.op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  id: op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: operator !=(PointF, PointF)
  nameWithType: PointF.operator !=(PointF, PointF)
  fullName: Terminal.Gui.PointF.operator !=(Terminal.Gui.PointF, Terminal.Gui.PointF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Inequality
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 84
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Compares two <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects. The result specifies whether the values of the

    <xref href="Terminal.Gui.PointF.X" data-throw-if-not-resolved="false"></xref> or <xref href="Terminal.Gui.PointF.Y" data-throw-if-not-resolved="false"></xref> properties of the two

    <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects are unequal.
  example: []
  syntax:
    content: public static bool operator !=(PointF left, PointF right)
    parameters:
    - id: left
      type: Terminal.Gui.PointF
    - id: right
      type: Terminal.Gui.PointF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As PointF, right As PointF) As Boolean
  overload: Terminal.Gui.PointF.op_Inequality*
  nameWithType.vb: PointF.<>(PointF, PointF)
  fullName.vb: Terminal.Gui.PointF.<>(Terminal.Gui.PointF, Terminal.Gui.PointF)
  name.vb: <>(PointF, PointF)
- uid: Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.Size)
  id: Add(Terminal.Gui.PointF,Terminal.Gui.Size)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Add(PointF, Size)
  nameWithType: PointF.Add(PointF, Size)
  fullName: Terminal.Gui.PointF.Add(Terminal.Gui.PointF, Terminal.Gui.Size)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 89
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by a given <xref href="Terminal.Gui.Size" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF Add(PointF pt, Size sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Function Add(pt As PointF, sz As Size) As PointF
  overload: Terminal.Gui.PointF.Add*
- uid: Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.Size)
  commentId: M:Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.Size)
  id: Subtract(Terminal.Gui.PointF,Terminal.Gui.Size)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Subtract(PointF, Size)
  nameWithType: PointF.Subtract(PointF, Size)
  fullName: Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF, Terminal.Gui.Size)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Subtract
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 94
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by the negative of a given <xref href="Terminal.Gui.Size" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF Subtract(PointF pt, Size sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.Size
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Function Subtract(pt As PointF, sz As Size) As PointF
  overload: Terminal.Gui.PointF.Subtract*
- uid: Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  id: Add(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Add(PointF, SizeF)
  nameWithType: PointF.Add(PointF, SizeF)
  fullName: Terminal.Gui.PointF.Add(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 99
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by a given <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF Add(PointF pt, SizeF sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Function Add(pt As PointF, sz As SizeF) As PointF
  overload: Terminal.Gui.PointF.Add*
- uid: Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  id: Subtract(Terminal.Gui.PointF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Subtract(PointF, SizeF)
  nameWithType: PointF.Subtract(PointF, SizeF)
  fullName: Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF, Terminal.Gui.SizeF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Subtract
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 104
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Translates a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> by the negative of a given <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> .
  example: []
  syntax:
    content: public static PointF Subtract(PointF pt, SizeF sz)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    - id: sz
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Function Subtract(pt As PointF, sz As SizeF) As PointF
  overload: Terminal.Gui.PointF.Subtract*
- uid: Terminal.Gui.PointF.Equals(System.Object)
  commentId: M:Terminal.Gui.PointF.Equals(System.Object)
  id: Equals(System.Object)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: PointF.Equals(object)
  fullName: Terminal.Gui.PointF.Equals(object)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 111
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Compares two <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects. The result specifies whether the values of the

    <xref href="Terminal.Gui.PointF.X" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.PointF.Y" data-throw-if-not-resolved="false"></xref> properties of the two

    <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Terminal.Gui.PointF.Equals*
  nameWithType.vb: PointF.Equals(Object)
  fullName.vb: Terminal.Gui.PointF.Equals(Object)
  name.vb: Equals(Object)
- uid: Terminal.Gui.PointF.Equals(Terminal.Gui.PointF)
  commentId: M:Terminal.Gui.PointF.Equals(Terminal.Gui.PointF)
  id: Equals(Terminal.Gui.PointF)
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: Equals(PointF)
  nameWithType: PointF.Equals(PointF)
  fullName: Terminal.Gui.PointF.Equals(Terminal.Gui.PointF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 118
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Compares two <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects. The result specifies whether the values of the

    <xref href="Terminal.Gui.PointF.X" data-throw-if-not-resolved="false"></xref> and <xref href="Terminal.Gui.PointF.Y" data-throw-if-not-resolved="false"></xref> properties of the two

    <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref> objects are equal.
  example: []
  syntax:
    content: public bool Equals(PointF other)
    parameters:
    - id: other
      type: Terminal.Gui.PointF
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As PointF) As Boolean
  overload: Terminal.Gui.PointF.Equals*
  implements:
  - System.IEquatable{Terminal.Gui.PointF}.Equals(Terminal.Gui.PointF)
- uid: Terminal.Gui.PointF.GetHashCode
  commentId: M:Terminal.Gui.PointF.GetHashCode
  id: GetHashCode
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PointF.GetHashCode()
  fullName: Terminal.Gui.PointF.GetHashCode()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHashCode
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 124
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Generates a hashcode from the X and Y components
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Terminal.Gui.PointF.GetHashCode*
- uid: Terminal.Gui.PointF.ToString
  commentId: M:Terminal.Gui.PointF.ToString
  id: ToString
  parent: Terminal.Gui.PointF
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PointF.ToString()
  fullName: Terminal.Gui.PointF.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PointF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/Types/PointF.cs
    startLine: 133
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns a string including the X and Y values
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Terminal.Gui.PointF.ToString*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.IEquatable{Terminal.Gui.PointF}
  commentId: T:System.IEquatable{Terminal.Gui.PointF}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<PointF>
  nameWithType: IEquatable<PointF>
  fullName: System.IEquatable<Terminal.Gui.PointF>
  nameWithType.vb: IEquatable(Of PointF)
  fullName.vb: System.IEquatable(Of Terminal.Gui.PointF)
  name.vb: IEquatable(Of PointF)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Terminal.Gui.PointF
    name: PointF
    href: Terminal.Gui.PointF.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.PointF
    name: PointF
    href: Terminal.Gui.PointF.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.PointF
  commentId: T:Terminal.Gui.PointF
  parent: Terminal.Gui
  href: Terminal.Gui.PointF.html
  name: PointF
  nameWithType: PointF
  fullName: Terminal.Gui.PointF
- uid: Terminal.Gui.PointF.#ctor*
  commentId: Overload:Terminal.Gui.PointF.#ctor
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.#ctor(System.Single,System.Single)
  name: PointF
  nameWithType: PointF.PointF
  fullName: Terminal.Gui.PointF.PointF
  nameWithType.vb: PointF.New
  fullName.vb: Terminal.Gui.PointF.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Terminal.Gui.PointF.IsEmpty*
  commentId: Overload:Terminal.Gui.PointF.IsEmpty
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.IsEmpty
  name: IsEmpty
  nameWithType: PointF.IsEmpty
  fullName: Terminal.Gui.PointF.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.PointF.X*
  commentId: Overload:Terminal.Gui.PointF.X
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.X
  name: X
  nameWithType: PointF.X
  fullName: Terminal.Gui.PointF.X
- uid: Terminal.Gui.PointF.Y*
  commentId: Overload:Terminal.Gui.PointF.Y
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.Y
  name: Y
  nameWithType: PointF.Y
  fullName: Terminal.Gui.PointF.Y
- uid: Terminal.Gui.Size
  commentId: T:Terminal.Gui.Size
  parent: Terminal.Gui
  href: Terminal.Gui.Size.html
  name: Size
  nameWithType: Size
  fullName: Terminal.Gui.Size
- uid: Terminal.Gui.PointF.op_Addition*
  commentId: Overload:Terminal.Gui.PointF.op_Addition
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
  name: operator +
  nameWithType: PointF.operator +
  fullName: Terminal.Gui.PointF.operator +
  nameWithType.vb: PointF.+
  fullName.vb: Terminal.Gui.PointF.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.PointF.op_Addition*
    name: +
    href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Addition(Terminal.Gui.PointF,Terminal.Gui.Size)
- uid: Terminal.Gui.PointF.op_Subtraction*
  commentId: Overload:Terminal.Gui.PointF.op_Subtraction
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
  name: operator -
  nameWithType: PointF.operator -
  fullName: Terminal.Gui.PointF.operator -
  nameWithType.vb: PointF.-
  fullName.vb: Terminal.Gui.PointF.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.PointF.op_Subtraction*
    name: '-'
    href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Subtraction(Terminal.Gui.PointF,Terminal.Gui.Size)
- uid: Terminal.Gui.SizeF
  commentId: T:Terminal.Gui.SizeF
  parent: Terminal.Gui
  href: Terminal.Gui.SizeF.html
  name: SizeF
  nameWithType: SizeF
  fullName: Terminal.Gui.SizeF
- uid: Terminal.Gui.PointF.X
  commentId: P:Terminal.Gui.PointF.X
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.X
  name: X
  nameWithType: PointF.X
  fullName: Terminal.Gui.PointF.X
- uid: Terminal.Gui.PointF.Y
  commentId: P:Terminal.Gui.PointF.Y
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.Y
  name: Y
  nameWithType: PointF.Y
  fullName: Terminal.Gui.PointF.Y
- uid: Terminal.Gui.PointF.op_Equality*
  commentId: Overload:Terminal.Gui.PointF.op_Equality
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  name: operator ==
  nameWithType: PointF.operator ==
  fullName: Terminal.Gui.PointF.operator ==
  nameWithType.vb: PointF.=
  fullName.vb: Terminal.Gui.PointF.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.PointF.op_Equality*
    name: ==
    href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Equality(Terminal.Gui.PointF,Terminal.Gui.PointF)
- uid: Terminal.Gui.PointF.op_Inequality*
  commentId: Overload:Terminal.Gui.PointF.op_Inequality
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
  name: operator !=
  nameWithType: PointF.operator !=
  fullName: Terminal.Gui.PointF.operator !=
  nameWithType.vb: PointF.<>
  fullName.vb: Terminal.Gui.PointF.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.PointF.op_Inequality*
    name: '!='
    href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.op_Inequality(Terminal.Gui.PointF,Terminal.Gui.PointF)
- uid: Terminal.Gui.PointF.Add*
  commentId: Overload:Terminal.Gui.PointF.Add
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.Add(Terminal.Gui.PointF,Terminal.Gui.Size)
  name: Add
  nameWithType: PointF.Add
  fullName: Terminal.Gui.PointF.Add
- uid: Terminal.Gui.PointF.Subtract*
  commentId: Overload:Terminal.Gui.PointF.Subtract
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.Subtract(Terminal.Gui.PointF,Terminal.Gui.Size)
  name: Subtract
  nameWithType: PointF.Subtract
  fullName: Terminal.Gui.PointF.Subtract
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Terminal.Gui.PointF.Equals*
  commentId: Overload:Terminal.Gui.PointF.Equals
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.Equals(System.Object)
  name: Equals
  nameWithType: PointF.Equals
  fullName: Terminal.Gui.PointF.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Terminal.Gui.PointF}.Equals(Terminal.Gui.PointF)
  commentId: M:System.IEquatable{Terminal.Gui.PointF}.Equals(Terminal.Gui.PointF)
  parent: System.IEquatable{Terminal.Gui.PointF}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.pointf-.equals#system-iequatable((terminal-gui-pointf))-equals(terminal-gui-pointf)
  name: Equals(PointF)
  nameWithType: IEquatable<PointF>.Equals(PointF)
  fullName: System.IEquatable<Terminal.Gui.PointF>.Equals(Terminal.Gui.PointF)
  nameWithType.vb: IEquatable(Of PointF).Equals(PointF)
  fullName.vb: System.IEquatable(Of Terminal.Gui.PointF).Equals(Terminal.Gui.PointF)
  spec.csharp:
  - uid: System.IEquatable{Terminal.Gui.PointF}.Equals(Terminal.Gui.PointF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.pointf-.equals#system-iequatable((terminal-gui-pointf))-equals(terminal-gui-pointf)
  - name: (
  - uid: Terminal.Gui.PointF
    name: PointF
    href: Terminal.Gui.PointF.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Terminal.Gui.PointF}.Equals(Terminal.Gui.PointF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.pointf-.equals#system-iequatable((terminal-gui-pointf))-equals(terminal-gui-pointf)
  - name: (
  - uid: Terminal.Gui.PointF
    name: PointF
    href: Terminal.Gui.PointF.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Terminal.Gui.PointF.GetHashCode*
  commentId: Overload:Terminal.Gui.PointF.GetHashCode
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.GetHashCode
  name: GetHashCode
  nameWithType: PointF.GetHashCode
  fullName: Terminal.Gui.PointF.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.PointF.ToString*
  commentId: Overload:Terminal.Gui.PointF.ToString
  href: Terminal.Gui.PointF.html#Terminal.Gui.PointF.ToString
  name: ToString
  nameWithType: PointF.ToString
  fullName: Terminal.Gui.PointF.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
shouldSkipMarkup: true
