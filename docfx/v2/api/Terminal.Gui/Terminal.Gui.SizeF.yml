### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.SizeF
  commentId: T:Terminal.Gui.SizeF
  id: SizeF
  parent: Terminal.Gui
  children:
  - Terminal.Gui.SizeF.#ctor(System.Single,System.Single)
  - Terminal.Gui.SizeF.#ctor(Terminal.Gui.PointF)
  - Terminal.Gui.SizeF.#ctor(Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.Add(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.Empty
  - Terminal.Gui.SizeF.Equals(System.Object)
  - Terminal.Gui.SizeF.Equals(Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.GetHashCode
  - Terminal.Gui.SizeF.Height
  - Terminal.Gui.SizeF.IsEmpty
  - Terminal.Gui.SizeF.op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.op_Division(Terminal.Gui.SizeF,System.Single)
  - Terminal.Gui.SizeF.op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.op_Explicit(Terminal.Gui.SizeF)~Terminal.Gui.PointF
  - Terminal.Gui.SizeF.op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.op_Multiply(System.Single,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.op_Multiply(Terminal.Gui.SizeF,System.Single)
  - Terminal.Gui.SizeF.op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.Subtract(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  - Terminal.Gui.SizeF.ToString
  - Terminal.Gui.SizeF.Width
  langs:
  - csharp
  - vb
  name: SizeF
  nameWithType: SizeF
  fullName: Terminal.Gui.SizeF
  type: Struct
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: SizeF
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 13
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Represents the size of a rectangular region with an ordered pair of width and height.
  example: []
  syntax:
    content: 'public struct SizeF : IEquatable<SizeF>'
    content.vb: Public Structure SizeF Implements IEquatable(Of SizeF)
  implements:
  - System.IEquatable{Terminal.Gui.SizeF}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.SizeF.Empty
  commentId: F:Terminal.Gui.SizeF.Empty
  id: Empty
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: SizeF.Empty
  fullName: Terminal.Gui.SizeF.Empty
  type: Field
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Empty
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 17
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of the <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public static readonly SizeF Empty
    return:
      type: Terminal.Gui.SizeF
    content.vb: Public Shared ReadOnly Empty As SizeF
- uid: Terminal.Gui.SizeF.#ctor(Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.#ctor(Terminal.Gui.SizeF)
  id: '#ctor(Terminal.Gui.SizeF)'
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: SizeF(SizeF)
  nameWithType: SizeF.SizeF(SizeF)
  fullName: Terminal.Gui.SizeF.SizeF(Terminal.Gui.SizeF)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 25
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initializes a new instance of the <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> class from the specified

    existing <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SizeF(SizeF size)
    parameters:
    - id: size
      type: Terminal.Gui.SizeF
    content.vb: Public Sub New(size As SizeF)
  overload: Terminal.Gui.SizeF.#ctor*
  nameWithType.vb: SizeF.New(SizeF)
  fullName.vb: Terminal.Gui.SizeF.New(Terminal.Gui.SizeF)
  name.vb: New(SizeF)
- uid: Terminal.Gui.SizeF.#ctor(Terminal.Gui.PointF)
  commentId: M:Terminal.Gui.SizeF.#ctor(Terminal.Gui.PointF)
  id: '#ctor(Terminal.Gui.PointF)'
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: SizeF(PointF)
  nameWithType: SizeF.SizeF(PointF)
  fullName: Terminal.Gui.SizeF.SizeF(Terminal.Gui.PointF)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 35
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initializes a new instance of the <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> class from the specified

    <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SizeF(PointF pt)
    parameters:
    - id: pt
      type: Terminal.Gui.PointF
    content.vb: Public Sub New(pt As PointF)
  overload: Terminal.Gui.SizeF.#ctor*
  nameWithType.vb: SizeF.New(PointF)
  fullName.vb: Terminal.Gui.SizeF.New(Terminal.Gui.PointF)
  name.vb: New(PointF)
- uid: Terminal.Gui.SizeF.#ctor(System.Single,System.Single)
  commentId: M:Terminal.Gui.SizeF.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: SizeF(float, float)
  nameWithType: SizeF.SizeF(float, float)
  fullName: Terminal.Gui.SizeF.SizeF(float, float)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 44
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Initializes a new instance of the <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> class from the specified dimensions.
  example: []
  syntax:
    content: public SizeF(float width, float height)
    parameters:
    - id: width
      type: System.Single
    - id: height
      type: System.Single
    content.vb: Public Sub New(width As Single, height As Single)
  overload: Terminal.Gui.SizeF.#ctor*
  nameWithType.vb: SizeF.New(Single, Single)
  fullName.vb: Terminal.Gui.SizeF.New(Single, Single)
  name.vb: New(Single, Single)
- uid: Terminal.Gui.SizeF.op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator +(SizeF, SizeF)
  nameWithType: SizeF.operator +(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.operator +(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Addition
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 53
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Performs vector addition of two <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public static SizeF operator +(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.SizeF
    content.vb: Public Shared Operator +(sz1 As SizeF, sz2 As SizeF) As SizeF
  overload: Terminal.Gui.SizeF.op_Addition*
  nameWithType.vb: SizeF.+(SizeF, SizeF)
  fullName.vb: Terminal.Gui.SizeF.+(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  name.vb: +(SizeF, SizeF)
- uid: Terminal.Gui.SizeF.op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator -(SizeF, SizeF)
  nameWithType: SizeF.operator -(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.operator -(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 58
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Contracts a <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> by another <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static SizeF operator -(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.SizeF
    content.vb: Public Shared Operator -(sz1 As SizeF, sz2 As SizeF) As SizeF
  overload: Terminal.Gui.SizeF.op_Subtraction*
  nameWithType.vb: SizeF.-(SizeF, SizeF)
  fullName.vb: Terminal.Gui.SizeF.-(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  name.vb: -(SizeF, SizeF)
- uid: Terminal.Gui.SizeF.op_Multiply(System.Single,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.op_Multiply(System.Single,Terminal.Gui.SizeF)
  id: op_Multiply(System.Single,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator *(float, SizeF)
  nameWithType: SizeF.operator *(float, SizeF)
  fullName: Terminal.Gui.SizeF.operator *(float, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Multiply
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 66
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Multiplies <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> by a <xref href="System.Single" data-throw-if-not-resolved="false"></xref> producing <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static SizeF operator *(float left, SizeF right)
    parameters:
    - id: left
      type: System.Single
      description: Multiplier of type <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: Terminal.Gui.SizeF
      description: Multiplicand of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.SizeF
      description: Product of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Operator *(left As Single, right As SizeF) As SizeF
  overload: Terminal.Gui.SizeF.op_Multiply*
  nameWithType.vb: SizeF.*(Single, SizeF)
  fullName.vb: Terminal.Gui.SizeF.*(Single, Terminal.Gui.SizeF)
  name.vb: '*(Single, SizeF)'
- uid: Terminal.Gui.SizeF.op_Multiply(Terminal.Gui.SizeF,System.Single)
  commentId: M:Terminal.Gui.SizeF.op_Multiply(Terminal.Gui.SizeF,System.Single)
  id: op_Multiply(Terminal.Gui.SizeF,System.Single)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator *(SizeF, float)
  nameWithType: SizeF.operator *(SizeF, float)
  fullName: Terminal.Gui.SizeF.operator *(Terminal.Gui.SizeF, float)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Multiply
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 74
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Multiplies <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> by a <xref href="System.Single" data-throw-if-not-resolved="false"></xref> producing <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static SizeF operator *(SizeF left, float right)
    parameters:
    - id: left
      type: Terminal.Gui.SizeF
      description: Multiplicand of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: System.Single
      description: Multiplier of type <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.SizeF
      description: Product of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Operator *(left As SizeF, right As Single) As SizeF
  overload: Terminal.Gui.SizeF.op_Multiply*
  nameWithType.vb: SizeF.*(SizeF, Single)
  fullName.vb: Terminal.Gui.SizeF.*(Terminal.Gui.SizeF, Single)
  name.vb: '*(SizeF, Single)'
- uid: Terminal.Gui.SizeF.op_Division(Terminal.Gui.SizeF,System.Single)
  commentId: M:Terminal.Gui.SizeF.op_Division(Terminal.Gui.SizeF,System.Single)
  id: op_Division(Terminal.Gui.SizeF,System.Single)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator /(SizeF, float)
  nameWithType: SizeF.operator /(SizeF, float)
  fullName: Terminal.Gui.SizeF.operator /(Terminal.Gui.SizeF, float)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Division
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 82
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Divides <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> by a <xref href="System.Single" data-throw-if-not-resolved="false"></xref> producing <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static SizeF operator /(SizeF left, float right)
    parameters:
    - id: left
      type: Terminal.Gui.SizeF
      description: Dividend of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    - id: right
      type: System.Single
      description: Divisor of type <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.SizeF
      description: Result of type <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Operator /(left As SizeF, right As Single) As SizeF
  overload: Terminal.Gui.SizeF.op_Division*
  nameWithType.vb: SizeF./(SizeF, Single)
  fullName.vb: Terminal.Gui.SizeF./(Terminal.Gui.SizeF, Single)
  name.vb: /(SizeF, Single)
- uid: Terminal.Gui.SizeF.op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator ==(SizeF, SizeF)
  nameWithType: SizeF.operator ==(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.operator ==(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Equality
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 88
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Tests whether two <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> objects are identical.
  example: []
  syntax:
    content: public static bool operator ==(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(sz1 As SizeF, sz2 As SizeF) As Boolean
  overload: Terminal.Gui.SizeF.op_Equality*
  nameWithType.vb: SizeF.=(SizeF, SizeF)
  fullName.vb: Terminal.Gui.SizeF.=(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  name.vb: =(SizeF, SizeF)
- uid: Terminal.Gui.SizeF.op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: operator !=(SizeF, SizeF)
  nameWithType: SizeF.operator !=(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.operator !=(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Inequality
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 93
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Tests whether two <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> objects are different.
  example: []
  syntax:
    content: public static bool operator !=(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(sz1 As SizeF, sz2 As SizeF) As Boolean
  overload: Terminal.Gui.SizeF.op_Inequality*
  nameWithType.vb: SizeF.<>(SizeF, SizeF)
  fullName.vb: Terminal.Gui.SizeF.<>(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  name.vb: <>(SizeF, SizeF)
- uid: Terminal.Gui.SizeF.op_Explicit(Terminal.Gui.SizeF)~Terminal.Gui.PointF
  commentId: M:Terminal.Gui.SizeF.op_Explicit(Terminal.Gui.SizeF)~Terminal.Gui.PointF
  id: op_Explicit(Terminal.Gui.SizeF)~Terminal.Gui.PointF
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: explicit operator PointF(SizeF)
  nameWithType: SizeF.explicit operator PointF(SizeF)
  fullName: Terminal.Gui.SizeF.explicit operator Terminal.Gui.PointF(Terminal.Gui.SizeF)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: op_Explicit
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 98
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Converts the specified <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> to a <xref href="Terminal.Gui.PointF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static explicit operator PointF(SizeF size)
    parameters:
    - id: size
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.PointF
    content.vb: Public Shared Narrowing Operator CType(size As SizeF) As PointF
  overload: Terminal.Gui.SizeF.op_Explicit*
  nameWithType.vb: SizeF.CType(SizeF)
  fullName.vb: Terminal.Gui.SizeF.CType(Terminal.Gui.SizeF)
  name.vb: CType(SizeF)
- uid: Terminal.Gui.SizeF.IsEmpty
  commentId: P:Terminal.Gui.SizeF.IsEmpty
  id: IsEmpty
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: Terminal.Gui.SizeF.IsEmpty
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsEmpty
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 103
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Tests whether this <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> has zero width and height.
  example: []
  syntax:
    content: >-
      [Browsable(false)]

      public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Browsable(False)>

      Public ReadOnly Property IsEmpty As Boolean
  overload: Terminal.Gui.SizeF.IsEmpty*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: Terminal.Gui.SizeF.Width
  commentId: P:Terminal.Gui.SizeF.Width
  id: Width
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: SizeF.Width
  fullName: Terminal.Gui.SizeF.Width
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Width
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 109
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Represents the horizontal component of this <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float Width { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Width As Single
  overload: Terminal.Gui.SizeF.Width*
- uid: Terminal.Gui.SizeF.Height
  commentId: P:Terminal.Gui.SizeF.Height
  id: Height
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: SizeF.Height
  fullName: Terminal.Gui.SizeF.Height
  type: Property
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Height
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 117
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Represents the vertical component of this <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float Height { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Height As Single
  overload: Terminal.Gui.SizeF.Height*
- uid: Terminal.Gui.SizeF.Add(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.Add(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: Add(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Add(SizeF, SizeF)
  nameWithType: SizeF.Add(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.Add(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Add
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 125
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Performs vector addition of two <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public static SizeF Add(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.SizeF
    content.vb: Public Shared Function Add(sz1 As SizeF, sz2 As SizeF) As SizeF
  overload: Terminal.Gui.SizeF.Add*
- uid: Terminal.Gui.SizeF.Subtract(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.Subtract(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  id: Subtract(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Subtract(SizeF, SizeF)
  nameWithType: SizeF.Subtract(SizeF, SizeF)
  fullName: Terminal.Gui.SizeF.Subtract(Terminal.Gui.SizeF, Terminal.Gui.SizeF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Subtract
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 130
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Contracts a <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> by another <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static SizeF Subtract(SizeF sz1, SizeF sz2)
    parameters:
    - id: sz1
      type: Terminal.Gui.SizeF
    - id: sz2
      type: Terminal.Gui.SizeF
    return:
      type: Terminal.Gui.SizeF
    content.vb: Public Shared Function Subtract(sz1 As SizeF, sz2 As SizeF) As SizeF
  overload: Terminal.Gui.SizeF.Subtract*
- uid: Terminal.Gui.SizeF.Equals(System.Object)
  commentId: M:Terminal.Gui.SizeF.Equals(System.Object)
  id: Equals(System.Object)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SizeF.Equals(object)
  fullName: Terminal.Gui.SizeF.Equals(object)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 136
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Tests to see whether the specified object is a <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>  with the same dimensions

    as this <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Terminal.Gui.SizeF.Equals*
  nameWithType.vb: SizeF.Equals(Object)
  fullName.vb: Terminal.Gui.SizeF.Equals(Object)
  name.vb: Equals(Object)
- uid: Terminal.Gui.SizeF.Equals(Terminal.Gui.SizeF)
  commentId: M:Terminal.Gui.SizeF.Equals(Terminal.Gui.SizeF)
  id: Equals(Terminal.Gui.SizeF)
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: Equals(SizeF)
  nameWithType: SizeF.Equals(SizeF)
  fullName: Terminal.Gui.SizeF.Equals(Terminal.Gui.SizeF)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Equals
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 141
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Tests whether two <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref> objects are identical.
  example: []
  syntax:
    content: public bool Equals(SizeF other)
    parameters:
    - id: other
      type: Terminal.Gui.SizeF
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SizeF) As Boolean
  overload: Terminal.Gui.SizeF.Equals*
  implements:
  - System.IEquatable{Terminal.Gui.SizeF}.Equals(Terminal.Gui.SizeF)
- uid: Terminal.Gui.SizeF.GetHashCode
  commentId: M:Terminal.Gui.SizeF.GetHashCode
  id: GetHashCode
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SizeF.GetHashCode()
  fullName: Terminal.Gui.SizeF.GetHashCode()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetHashCode
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 147
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Generates a hashcode from the width and height
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Terminal.Gui.SizeF.GetHashCode*
- uid: Terminal.Gui.SizeF.ToString
  commentId: M:Terminal.Gui.SizeF.ToString
  id: ToString
  parent: Terminal.Gui.SizeF
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SizeF.ToString()
  fullName: Terminal.Gui.SizeF.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/SizeF.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/Types/SizeF.cs
    startLine: 155
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Creates a human-readable string that represents this <xref href="Terminal.Gui.SizeF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Terminal.Gui.SizeF.ToString*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.IEquatable{Terminal.Gui.SizeF}
  commentId: T:System.IEquatable{Terminal.Gui.SizeF}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SizeF>
  nameWithType: IEquatable<SizeF>
  fullName: System.IEquatable<Terminal.Gui.SizeF>
  nameWithType.vb: IEquatable(Of SizeF)
  fullName.vb: System.IEquatable(Of Terminal.Gui.SizeF)
  name.vb: IEquatable(Of SizeF)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Terminal.Gui.SizeF
    name: SizeF
    href: Terminal.Gui.SizeF.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.SizeF
    name: SizeF
    href: Terminal.Gui.SizeF.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.SizeF
  commentId: T:Terminal.Gui.SizeF
  parent: Terminal.Gui
  href: Terminal.Gui.SizeF.html
  name: SizeF
  nameWithType: SizeF
  fullName: Terminal.Gui.SizeF
- uid: Terminal.Gui.SizeF.#ctor*
  commentId: Overload:Terminal.Gui.SizeF.#ctor
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.#ctor(Terminal.Gui.SizeF)
  name: SizeF
  nameWithType: SizeF.SizeF
  fullName: Terminal.Gui.SizeF.SizeF
  nameWithType.vb: SizeF.New
  fullName.vb: Terminal.Gui.SizeF.New
  name.vb: New
- uid: Terminal.Gui.PointF
  commentId: T:Terminal.Gui.PointF
  parent: Terminal.Gui
  href: Terminal.Gui.PointF.html
  name: PointF
  nameWithType: PointF
  fullName: Terminal.Gui.PointF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Terminal.Gui.SizeF.op_Addition*
  commentId: Overload:Terminal.Gui.SizeF.op_Addition
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: operator +
  nameWithType: SizeF.operator +
  fullName: Terminal.Gui.SizeF.operator +
  nameWithType.vb: SizeF.+
  fullName.vb: Terminal.Gui.SizeF.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Addition*
    name: +
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Addition(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
- uid: Terminal.Gui.SizeF.op_Subtraction*
  commentId: Overload:Terminal.Gui.SizeF.op_Subtraction
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: operator -
  nameWithType: SizeF.operator -
  fullName: Terminal.Gui.SizeF.operator -
  nameWithType.vb: SizeF.-
  fullName.vb: Terminal.Gui.SizeF.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Subtraction*
    name: '-'
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Subtraction(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
- uid: Terminal.Gui.SizeF.op_Multiply*
  commentId: Overload:Terminal.Gui.SizeF.op_Multiply
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Multiply(System.Single,Terminal.Gui.SizeF)
  name: operator *
  nameWithType: SizeF.operator *
  fullName: Terminal.Gui.SizeF.operator *
  nameWithType.vb: SizeF.*
  fullName.vb: Terminal.Gui.SizeF.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Multiply*
    name: '*'
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Multiply(System.Single,Terminal.Gui.SizeF)
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.SizeF.op_Division*
  commentId: Overload:Terminal.Gui.SizeF.op_Division
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Division(Terminal.Gui.SizeF,System.Single)
  name: operator /
  nameWithType: SizeF.operator /
  fullName: Terminal.Gui.SizeF.operator /
  nameWithType.vb: SizeF./
  fullName.vb: Terminal.Gui.SizeF./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Division*
    name: /
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Division(Terminal.Gui.SizeF,System.Single)
- uid: Terminal.Gui.SizeF.op_Equality*
  commentId: Overload:Terminal.Gui.SizeF.op_Equality
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: operator ==
  nameWithType: SizeF.operator ==
  fullName: Terminal.Gui.SizeF.operator ==
  nameWithType.vb: SizeF.=
  fullName.vb: Terminal.Gui.SizeF.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Equality*
    name: ==
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Equality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.SizeF.op_Inequality*
  commentId: Overload:Terminal.Gui.SizeF.op_Inequality
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: operator !=
  nameWithType: SizeF.operator !=
  fullName: Terminal.Gui.SizeF.operator !=
  nameWithType.vb: SizeF.<>
  fullName.vb: Terminal.Gui.SizeF.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Terminal.Gui.SizeF.op_Inequality*
    name: '!='
    href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.op_Inequality(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
- uid: Terminal.Gui.SizeF.op_Explicit*
  commentId: Overload:Terminal.Gui.SizeF.op_Explicit
  name: explicit operator
  nameWithType: SizeF.explicit operator
  fullName: Terminal.Gui.SizeF.explicit operator
  nameWithType.vb: SizeF.CType
  fullName.vb: Terminal.Gui.SizeF.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: Terminal.Gui.SizeF.IsEmpty*
  commentId: Overload:Terminal.Gui.SizeF.IsEmpty
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.IsEmpty
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: Terminal.Gui.SizeF.IsEmpty
- uid: Terminal.Gui.SizeF.Width*
  commentId: Overload:Terminal.Gui.SizeF.Width
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.Width
  name: Width
  nameWithType: SizeF.Width
  fullName: Terminal.Gui.SizeF.Width
- uid: Terminal.Gui.SizeF.Height*
  commentId: Overload:Terminal.Gui.SizeF.Height
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.Height
  name: Height
  nameWithType: SizeF.Height
  fullName: Terminal.Gui.SizeF.Height
- uid: Terminal.Gui.SizeF.Add*
  commentId: Overload:Terminal.Gui.SizeF.Add
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.Add(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: Add
  nameWithType: SizeF.Add
  fullName: Terminal.Gui.SizeF.Add
- uid: Terminal.Gui.SizeF.Subtract*
  commentId: Overload:Terminal.Gui.SizeF.Subtract
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.Subtract(Terminal.Gui.SizeF,Terminal.Gui.SizeF)
  name: Subtract
  nameWithType: SizeF.Subtract
  fullName: Terminal.Gui.SizeF.Subtract
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Terminal.Gui.SizeF.Equals*
  commentId: Overload:Terminal.Gui.SizeF.Equals
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.Equals(System.Object)
  name: Equals
  nameWithType: SizeF.Equals
  fullName: Terminal.Gui.SizeF.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{Terminal.Gui.SizeF}.Equals(Terminal.Gui.SizeF)
  commentId: M:System.IEquatable{Terminal.Gui.SizeF}.Equals(Terminal.Gui.SizeF)
  parent: System.IEquatable{Terminal.Gui.SizeF}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.sizef-.equals#system-iequatable((terminal-gui-sizef))-equals(terminal-gui-sizef)
  name: Equals(SizeF)
  nameWithType: IEquatable<SizeF>.Equals(SizeF)
  fullName: System.IEquatable<Terminal.Gui.SizeF>.Equals(Terminal.Gui.SizeF)
  nameWithType.vb: IEquatable(Of SizeF).Equals(SizeF)
  fullName.vb: System.IEquatable(Of Terminal.Gui.SizeF).Equals(Terminal.Gui.SizeF)
  spec.csharp:
  - uid: System.IEquatable{Terminal.Gui.SizeF}.Equals(Terminal.Gui.SizeF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.sizef-.equals#system-iequatable((terminal-gui-sizef))-equals(terminal-gui-sizef)
  - name: (
  - uid: Terminal.Gui.SizeF
    name: SizeF
    href: Terminal.Gui.SizeF.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Terminal.Gui.SizeF}.Equals(Terminal.Gui.SizeF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-terminal.gui.sizef-.equals#system-iequatable((terminal-gui-sizef))-equals(terminal-gui-sizef)
  - name: (
  - uid: Terminal.Gui.SizeF
    name: SizeF
    href: Terminal.Gui.SizeF.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Terminal.Gui.SizeF.GetHashCode*
  commentId: Overload:Terminal.Gui.SizeF.GetHashCode
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.GetHashCode
  name: GetHashCode
  nameWithType: SizeF.GetHashCode
  fullName: Terminal.Gui.SizeF.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.SizeF.ToString*
  commentId: Overload:Terminal.Gui.SizeF.ToString
  href: Terminal.Gui.SizeF.html#Terminal.Gui.SizeF.ToString
  name: ToString
  nameWithType: SizeF.ToString
  fullName: Terminal.Gui.SizeF.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
shouldSkipMarkup: true
