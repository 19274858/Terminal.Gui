### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TreeNodeBuilder
  commentId: T:Terminal.Gui.TreeNodeBuilder
  id: TreeNodeBuilder
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TreeNodeBuilder.#ctor
  - Terminal.Gui.TreeNodeBuilder.GetChildren(Terminal.Gui.ITreeNode)
  langs:
  - csharp
  - vb
  name: TreeNodeBuilder
  nameWithType: TreeNodeBuilder
  fullName: Terminal.Gui.TreeNodeBuilder
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: TreeNodeBuilder
    path: ../Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
    startLine: 6
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: <xref href="Terminal.Gui.ITreeBuilder%601" data-throw-if-not-resolved="false"></xref> implementation for <xref href="Terminal.Gui.ITreeNode" data-throw-if-not-resolved="false"></xref> objects
  example: []
  syntax:
    content: 'public class TreeNodeBuilder : TreeBuilder<ITreeNode>, ITreeBuilder<ITreeNode>'
    content.vb: Public Class TreeNodeBuilder Inherits TreeBuilder(Of ITreeNode) Implements ITreeBuilder(Of ITreeNode)
  inheritance:
  - System.Object
  - Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  implements:
  - Terminal.Gui.ITreeBuilder{Terminal.Gui.ITreeNode}
  inheritedMembers:
  - Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.SupportsCanExpand
  - Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.TreeNodeBuilder.#ctor
  commentId: M:Terminal.Gui.TreeNodeBuilder.#ctor
  id: '#ctor'
  parent: Terminal.Gui.TreeNodeBuilder
  langs:
  - csharp
  - vb
  name: TreeNodeBuilder()
  nameWithType: TreeNodeBuilder.TreeNodeBuilder()
  fullName: Terminal.Gui.TreeNodeBuilder.TreeNodeBuilder()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
    startLine: 12
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Initialises a new instance of builder for any model objects of 

    Type <xref href="Terminal.Gui.ITreeNode" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public TreeNodeBuilder()
    content.vb: Public Sub New()
  overload: Terminal.Gui.TreeNodeBuilder.#ctor*
  nameWithType.vb: TreeNodeBuilder.New()
  fullName.vb: Terminal.Gui.TreeNodeBuilder.New()
  name.vb: New()
- uid: Terminal.Gui.TreeNodeBuilder.GetChildren(Terminal.Gui.ITreeNode)
  commentId: M:Terminal.Gui.TreeNodeBuilder.GetChildren(Terminal.Gui.ITreeNode)
  id: GetChildren(Terminal.Gui.ITreeNode)
  parent: Terminal.Gui.TreeNodeBuilder
  langs:
  - csharp
  - vb
  name: GetChildren(ITreeNode)
  nameWithType: TreeNodeBuilder.GetChildren(ITreeNode)
  fullName: Terminal.Gui.TreeNodeBuilder.GetChildren(Terminal.Gui.ITreeNode)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetChildren
    path: ../Terminal.Gui/Views/TreeView/TreeNodeBuilder.cs
    startLine: 22
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns <xref href="Terminal.Gui.ITreeNode.Children" data-throw-if-not-resolved="false"></xref> from <code class="paramref">model</code>
  example: []
  syntax:
    content: public override IEnumerable<ITreeNode> GetChildren(ITreeNode model)
    parameters:
    - id: model
      type: Terminal.Gui.ITreeNode
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Terminal.Gui.ITreeNode}
      description: ''
    content.vb: Public Overrides Function GetChildren(model As ITreeNode) As IEnumerable(Of ITreeNode)
  overridden: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  overload: Terminal.Gui.TreeNodeBuilder.GetChildren*
references:
- uid: Terminal.Gui.ITreeBuilder`1
  commentId: T:Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<T>
  nameWithType: ITreeBuilder<T>
  fullName: Terminal.Gui.ITreeBuilder<T>
  nameWithType.vb: ITreeBuilder(Of T)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of T)
  name.vb: ITreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ITreeNode
  commentId: T:Terminal.Gui.ITreeNode
  parent: Terminal.Gui
  href: Terminal.Gui.ITreeNode.html
  name: ITreeNode
  nameWithType: ITreeNode
  fullName: Terminal.Gui.ITreeNode
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  commentId: T:Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  parent: Terminal.Gui
  definition: Terminal.Gui.TreeBuilder`1
  href: Terminal.Gui.TreeBuilder-1.html
  name: TreeBuilder<ITreeNode>
  nameWithType: TreeBuilder<ITreeNode>
  fullName: Terminal.Gui.TreeBuilder<Terminal.Gui.ITreeNode>
  nameWithType.vb: TreeBuilder(Of ITreeNode)
  fullName.vb: Terminal.Gui.TreeBuilder(Of Terminal.Gui.ITreeNode)
  name.vb: TreeBuilder(Of ITreeNode)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: <
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
- uid: Terminal.Gui.ITreeBuilder{Terminal.Gui.ITreeNode}
  commentId: T:Terminal.Gui.ITreeBuilder{Terminal.Gui.ITreeNode}
  parent: Terminal.Gui
  definition: Terminal.Gui.ITreeBuilder`1
  href: Terminal.Gui.ITreeBuilder-1.html
  name: ITreeBuilder<ITreeNode>
  nameWithType: ITreeBuilder<ITreeNode>
  fullName: Terminal.Gui.ITreeBuilder<Terminal.Gui.ITreeNode>
  nameWithType.vb: ITreeBuilder(Of ITreeNode)
  fullName.vb: Terminal.Gui.ITreeBuilder(Of Terminal.Gui.ITreeNode)
  name.vb: ITreeBuilder(Of ITreeNode)
  spec.csharp:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: <
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.ITreeBuilder`1
    name: ITreeBuilder
    href: Terminal.Gui.ITreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
- uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.SupportsCanExpand
  commentId: P:Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.SupportsCanExpand
  parent: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  definition: Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: TreeBuilder<ITreeNode>.SupportsCanExpand
  fullName: Terminal.Gui.TreeBuilder<Terminal.Gui.ITreeNode>.SupportsCanExpand
  nameWithType.vb: TreeBuilder(Of ITreeNode).SupportsCanExpand
  fullName.vb: Terminal.Gui.TreeBuilder(Of Terminal.Gui.ITreeNode).SupportsCanExpand
- uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  commentId: M:Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  parent: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  definition: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  name: CanExpand(ITreeNode)
  nameWithType: TreeBuilder<ITreeNode>.CanExpand(ITreeNode)
  fullName: Terminal.Gui.TreeBuilder<Terminal.Gui.ITreeNode>.CanExpand(Terminal.Gui.ITreeNode)
  nameWithType.vb: TreeBuilder(Of ITreeNode).CanExpand(ITreeNode)
  fullName.vb: Terminal.Gui.TreeBuilder(Of Terminal.Gui.ITreeNode).CanExpand(Terminal.Gui.ITreeNode)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  - name: (
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.CanExpand(Terminal.Gui.ITreeNode)
  - name: (
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.TreeBuilder`1
  commentId: T:Terminal.Gui.TreeBuilder`1
  href: Terminal.Gui.TreeBuilder-1.html
  name: TreeBuilder<T>
  nameWithType: TreeBuilder<T>
  fullName: Terminal.Gui.TreeBuilder<T>
  nameWithType.vb: TreeBuilder(Of T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T)
  name.vb: TreeBuilder(Of T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1
    name: TreeBuilder
    href: Terminal.Gui.TreeBuilder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  commentId: P:Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.SupportsCanExpand
  name: SupportsCanExpand
  nameWithType: TreeBuilder<T>.SupportsCanExpand
  fullName: Terminal.Gui.TreeBuilder<T>.SupportsCanExpand
  nameWithType.vb: TreeBuilder(Of T).SupportsCanExpand
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).SupportsCanExpand
- uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  commentId: M:Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  name: CanExpand(T)
  nameWithType: TreeBuilder<T>.CanExpand(T)
  fullName: Terminal.Gui.TreeBuilder<T>.CanExpand(T)
  nameWithType.vb: TreeBuilder(Of T).CanExpand(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).CanExpand(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1.CanExpand(`0)
    name: CanExpand
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.CanExpand(`0)
  - name: (
  - name: T
  - name: )
- uid: Terminal.Gui.TreeNodeBuilder.#ctor*
  commentId: Overload:Terminal.Gui.TreeNodeBuilder.#ctor
  href: Terminal.Gui.TreeNodeBuilder.html#Terminal.Gui.TreeNodeBuilder.#ctor
  name: TreeNodeBuilder
  nameWithType: TreeNodeBuilder.TreeNodeBuilder
  fullName: Terminal.Gui.TreeNodeBuilder.TreeNodeBuilder
  nameWithType.vb: TreeNodeBuilder.New
  fullName.vb: Terminal.Gui.TreeNodeBuilder.New
  name.vb: New
- uid: Terminal.Gui.ITreeNode.Children
  commentId: P:Terminal.Gui.ITreeNode.Children
  parent: Terminal.Gui.ITreeNode
  href: Terminal.Gui.ITreeNode.html#Terminal.Gui.ITreeNode.Children
  name: Children
  nameWithType: ITreeNode.Children
  fullName: Terminal.Gui.ITreeNode.Children
- uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  commentId: M:Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  parent: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}
  definition: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  name: GetChildren(ITreeNode)
  nameWithType: TreeBuilder<ITreeNode>.GetChildren(ITreeNode)
  fullName: Terminal.Gui.TreeBuilder<Terminal.Gui.ITreeNode>.GetChildren(Terminal.Gui.ITreeNode)
  nameWithType.vb: TreeBuilder(Of ITreeNode).GetChildren(ITreeNode)
  fullName.vb: Terminal.Gui.TreeBuilder(Of Terminal.Gui.ITreeNode).GetChildren(Terminal.Gui.ITreeNode)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  - name: (
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.html#Terminal.Gui.TreeBuilder{Terminal.Gui.ITreeNode}.GetChildren(Terminal.Gui.ITreeNode)
  - name: (
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
- uid: Terminal.Gui.TreeNodeBuilder.GetChildren*
  commentId: Overload:Terminal.Gui.TreeNodeBuilder.GetChildren
  href: Terminal.Gui.TreeNodeBuilder.html#Terminal.Gui.TreeNodeBuilder.GetChildren(Terminal.Gui.ITreeNode)
  name: GetChildren
  nameWithType: TreeNodeBuilder.GetChildren
  fullName: Terminal.Gui.TreeNodeBuilder.GetChildren
- uid: System.Collections.Generic.IEnumerable{Terminal.Gui.ITreeNode}
  commentId: T:System.Collections.Generic.IEnumerable{Terminal.Gui.ITreeNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ITreeNode>
  nameWithType: IEnumerable<ITreeNode>
  fullName: System.Collections.Generic.IEnumerable<Terminal.Gui.ITreeNode>
  nameWithType.vb: IEnumerable(Of ITreeNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Terminal.Gui.ITreeNode)
  name.vb: IEnumerable(Of ITreeNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ITreeNode
    name: ITreeNode
    href: Terminal.Gui.ITreeNode.html
  - name: )
- uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  commentId: M:Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  name: GetChildren(T)
  nameWithType: TreeBuilder<T>.GetChildren(T)
  fullName: Terminal.Gui.TreeBuilder<T>.GetChildren(T)
  nameWithType.vb: TreeBuilder(Of T).GetChildren(T)
  fullName.vb: Terminal.Gui.TreeBuilder(Of T).GetChildren(T)
  spec.csharp:
  - uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Terminal.Gui.TreeBuilder`1.GetChildren(`0)
    name: GetChildren
    href: Terminal.Gui.TreeBuilder-1.html#Terminal.Gui.TreeBuilder`1.GetChildren(`0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
shouldSkipMarkup: true
