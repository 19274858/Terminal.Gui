### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  id: KeyEvent
  parent: Terminal.Gui
  children:
  - Terminal.Gui.KeyEvent.#ctor
  - Terminal.Gui.KeyEvent.#ctor(Terminal.Gui.Key,Terminal.Gui.KeyModifiers)
  - Terminal.Gui.KeyEvent.IsAlt
  - Terminal.Gui.KeyEvent.IsCapslock
  - Terminal.Gui.KeyEvent.IsCtrl
  - Terminal.Gui.KeyEvent.IsNumlock
  - Terminal.Gui.KeyEvent.IsScrolllock
  - Terminal.Gui.KeyEvent.IsShift
  - Terminal.Gui.KeyEvent.Key
  - Terminal.Gui.KeyEvent.KeyValue
  - Terminal.Gui.KeyEvent.ToString
  langs:
  - csharp
  - vb
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
  type: Class
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyEvent
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 539
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Describes a keyboard event.
  example: []
  syntax:
    content: public class KeyEvent
    content.vb: Public Class KeyEvent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: Terminal.Gui.KeyEvent.Key
  commentId: F:Terminal.Gui.KeyEvent.Key
  id: Key
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: KeyEvent.Key
  fullName: Terminal.Gui.KeyEvent.Key
  type: Field
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Key
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 545
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Symbolic definition for the key.
  example: []
  syntax:
    content: public Key Key
    return:
      type: Terminal.Gui.Key
    content.vb: Public Key As Key
- uid: Terminal.Gui.KeyEvent.KeyValue
  commentId: P:Terminal.Gui.KeyEvent.KeyValue
  id: KeyValue
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: KeyValue
  nameWithType: KeyEvent.KeyValue
  fullName: Terminal.Gui.KeyEvent.KeyValue
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: KeyValue
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 552
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The key value cast to an integer, you will typical use this for

    extracting the Unicode rune value out of a key, when none of the

    symbolic options are in use.
  example: []
  syntax:
    content: public int KeyValue { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property KeyValue As Integer
  overload: Terminal.Gui.KeyEvent.KeyValue*
- uid: Terminal.Gui.KeyEvent.IsShift
  commentId: P:Terminal.Gui.KeyEvent.IsShift
  id: IsShift
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsShift
  nameWithType: KeyEvent.IsShift
  fullName: Terminal.Gui.KeyEvent.IsShift
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsShift
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 558
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether the Shift key was pressed.
  example: []
  syntax:
    content: public bool IsShift { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is shift; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsShift As Boolean
  overload: Terminal.Gui.KeyEvent.IsShift*
- uid: Terminal.Gui.KeyEvent.IsAlt
  commentId: P:Terminal.Gui.KeyEvent.IsAlt
  id: IsAlt
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsAlt
  nameWithType: KeyEvent.IsAlt
  fullName: Terminal.Gui.KeyEvent.IsAlt
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsAlt
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 564
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether the Alt key was pressed (real or synthesized)
  example: []
  syntax:
    content: public bool IsAlt { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is alternate; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsAlt As Boolean
  overload: Terminal.Gui.KeyEvent.IsAlt*
- uid: Terminal.Gui.KeyEvent.IsCtrl
  commentId: P:Terminal.Gui.KeyEvent.IsCtrl
  id: IsCtrl
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsCtrl
  nameWithType: KeyEvent.IsCtrl
  fullName: Terminal.Gui.KeyEvent.IsCtrl
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsCtrl
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 571
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Determines whether the value is a control key (and NOT just the ctrl key)
  example: []
  syntax:
    content: public bool IsCtrl { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is ctrl; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsCtrl As Boolean
  overload: Terminal.Gui.KeyEvent.IsCtrl*
- uid: Terminal.Gui.KeyEvent.IsCapslock
  commentId: P:Terminal.Gui.KeyEvent.IsCapslock
  id: IsCapslock
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsCapslock
  nameWithType: KeyEvent.IsCapslock
  fullName: Terminal.Gui.KeyEvent.IsCapslock
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsCapslock
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 577
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether the Caps lock key was pressed (real or synthesized)
  example: []
  syntax:
    content: public bool IsCapslock { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is alternate; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsCapslock As Boolean
  overload: Terminal.Gui.KeyEvent.IsCapslock*
- uid: Terminal.Gui.KeyEvent.IsNumlock
  commentId: P:Terminal.Gui.KeyEvent.IsNumlock
  id: IsNumlock
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsNumlock
  nameWithType: KeyEvent.IsNumlock
  fullName: Terminal.Gui.KeyEvent.IsNumlock
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsNumlock
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 583
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether the Num lock key was pressed (real or synthesized)
  example: []
  syntax:
    content: public bool IsNumlock { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is alternate; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsNumlock As Boolean
  overload: Terminal.Gui.KeyEvent.IsNumlock*
- uid: Terminal.Gui.KeyEvent.IsScrolllock
  commentId: P:Terminal.Gui.KeyEvent.IsScrolllock
  id: IsScrolllock
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: IsScrolllock
  nameWithType: KeyEvent.IsScrolllock
  fullName: Terminal.Gui.KeyEvent.IsScrolllock
  type: Property
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: IsScrolllock
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 589
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Gets a value indicating whether the Scroll lock key was pressed (real or synthesized)
  example: []
  syntax:
    content: public bool IsScrolllock { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if is alternate; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsScrolllock As Boolean
  overload: Terminal.Gui.KeyEvent.IsScrolllock*
- uid: Terminal.Gui.KeyEvent.#ctor
  commentId: M:Terminal.Gui.KeyEvent.#ctor
  id: '#ctor'
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: KeyEvent()
  nameWithType: KeyEvent.KeyEvent()
  fullName: Terminal.Gui.KeyEvent.KeyEvent()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 594
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Constructs a new <xref href="Terminal.Gui.KeyEvent" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public KeyEvent()
    content.vb: Public Sub New()
  overload: Terminal.Gui.KeyEvent.#ctor*
  nameWithType.vb: KeyEvent.New()
  fullName.vb: Terminal.Gui.KeyEvent.New()
  name.vb: New()
- uid: Terminal.Gui.KeyEvent.#ctor(Terminal.Gui.Key,Terminal.Gui.KeyModifiers)
  commentId: M:Terminal.Gui.KeyEvent.#ctor(Terminal.Gui.Key,Terminal.Gui.KeyModifiers)
  id: '#ctor(Terminal.Gui.Key,Terminal.Gui.KeyModifiers)'
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: KeyEvent(Key, KeyModifiers)
  nameWithType: KeyEvent.KeyEvent(Key, KeyModifiers)
  fullName: Terminal.Gui.KeyEvent.KeyEvent(Terminal.Gui.Key, Terminal.Gui.KeyModifiers)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: .ctor
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 603
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Constructs a new <xref href="Terminal.Gui.KeyEvent" data-throw-if-not-resolved="false"></xref> from the provided Key value - can be a rune cast into a Key value
  example: []
  syntax:
    content: public KeyEvent(Key k, KeyModifiers km)
    parameters:
    - id: k
      type: Terminal.Gui.Key
    - id: km
      type: Terminal.Gui.KeyModifiers
    content.vb: Public Sub New(k As Key, km As KeyModifiers)
  overload: Terminal.Gui.KeyEvent.#ctor*
  nameWithType.vb: KeyEvent.New(Key, KeyModifiers)
  fullName.vb: Terminal.Gui.KeyEvent.New(Terminal.Gui.Key, Terminal.Gui.KeyModifiers)
  name.vb: New(Key, KeyModifiers)
- uid: Terminal.Gui.KeyEvent.ToString
  commentId: M:Terminal.Gui.KeyEvent.ToString
  id: ToString
  parent: Terminal.Gui.KeyEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: KeyEvent.ToString()
  fullName: Terminal.Gui.KeyEvent.ToString()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Input/Event.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ToString
    path: ../Terminal.Gui/Input/Event.cs
    startLine: 613
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Pretty prints the KeyEvent
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Terminal.Gui.KeyEvent.ToString*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  href: Terminal.Gui.Key.html
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui.KeyEvent.KeyValue*
  commentId: Overload:Terminal.Gui.KeyEvent.KeyValue
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.KeyValue
  name: KeyValue
  nameWithType: KeyEvent.KeyValue
  fullName: Terminal.Gui.KeyEvent.KeyValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Terminal.Gui.KeyEvent.IsShift*
  commentId: Overload:Terminal.Gui.KeyEvent.IsShift
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsShift
  name: IsShift
  nameWithType: KeyEvent.IsShift
  fullName: Terminal.Gui.KeyEvent.IsShift
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.KeyEvent.IsAlt*
  commentId: Overload:Terminal.Gui.KeyEvent.IsAlt
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsAlt
  name: IsAlt
  nameWithType: KeyEvent.IsAlt
  fullName: Terminal.Gui.KeyEvent.IsAlt
- uid: Terminal.Gui.KeyEvent.IsCtrl*
  commentId: Overload:Terminal.Gui.KeyEvent.IsCtrl
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsCtrl
  name: IsCtrl
  nameWithType: KeyEvent.IsCtrl
  fullName: Terminal.Gui.KeyEvent.IsCtrl
- uid: Terminal.Gui.KeyEvent.IsCapslock*
  commentId: Overload:Terminal.Gui.KeyEvent.IsCapslock
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsCapslock
  name: IsCapslock
  nameWithType: KeyEvent.IsCapslock
  fullName: Terminal.Gui.KeyEvent.IsCapslock
- uid: Terminal.Gui.KeyEvent.IsNumlock*
  commentId: Overload:Terminal.Gui.KeyEvent.IsNumlock
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsNumlock
  name: IsNumlock
  nameWithType: KeyEvent.IsNumlock
  fullName: Terminal.Gui.KeyEvent.IsNumlock
- uid: Terminal.Gui.KeyEvent.IsScrolllock*
  commentId: Overload:Terminal.Gui.KeyEvent.IsScrolllock
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.IsScrolllock
  name: IsScrolllock
  nameWithType: KeyEvent.IsScrolllock
  fullName: Terminal.Gui.KeyEvent.IsScrolllock
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  href: Terminal.Gui.KeyEvent.html
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.KeyEvent.#ctor*
  commentId: Overload:Terminal.Gui.KeyEvent.#ctor
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.#ctor
  name: KeyEvent
  nameWithType: KeyEvent.KeyEvent
  fullName: Terminal.Gui.KeyEvent.KeyEvent
  nameWithType.vb: KeyEvent.New
  fullName.vb: Terminal.Gui.KeyEvent.New
  name.vb: New
- uid: Terminal.Gui.KeyModifiers
  commentId: T:Terminal.Gui.KeyModifiers
  parent: Terminal.Gui
  href: Terminal.Gui.KeyModifiers.html
  name: KeyModifiers
  nameWithType: KeyModifiers
  fullName: Terminal.Gui.KeyModifiers
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Terminal.Gui.KeyEvent.ToString*
  commentId: Overload:Terminal.Gui.KeyEvent.ToString
  href: Terminal.Gui.KeyEvent.html#Terminal.Gui.KeyEvent.ToString
  name: ToString
  nameWithType: KeyEvent.ToString
  fullName: Terminal.Gui.KeyEvent.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
shouldSkipMarkup: true
