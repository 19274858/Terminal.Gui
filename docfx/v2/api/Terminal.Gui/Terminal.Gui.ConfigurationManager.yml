### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.ConfigurationManager
  commentId: T:Terminal.Gui.ConfigurationManager
  id: ConfigurationManager
  parent: Terminal.Gui
  children:
  - Terminal.Gui.ConfigurationManager.Applied
  - Terminal.Gui.ConfigurationManager.Apply
  - Terminal.Gui.ConfigurationManager.AppName
  - Terminal.Gui.ConfigurationManager.AppSettings
  - Terminal.Gui.ConfigurationManager.GetEmptyJson
  - Terminal.Gui.ConfigurationManager.Glyphs
  - Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  - Terminal.Gui.ConfigurationManager.Locations
  - Terminal.Gui.ConfigurationManager.OnApplied
  - Terminal.Gui.ConfigurationManager.OnUpdated
  - Terminal.Gui.ConfigurationManager.PrintJsonErrors
  - Terminal.Gui.ConfigurationManager.Reset
  - Terminal.Gui.ConfigurationManager.Settings
  - Terminal.Gui.ConfigurationManager.Themes
  - Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  - Terminal.Gui.ConfigurationManager.Updated
  langs:
  - csharp
  - vb
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Terminal.Gui.ConfigurationManager
  type: Class
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ConfigurationManager
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 59
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Provides settings and configuration management for Terminal.Gui applications. 

    <p>

    Users can set Terminal.Gui settings on a global or per-application basis by providing JSON formatted configuration files.

    The configuration files can be placed in at <code>.tui</code> folder in the user's home directory (e.g. <code>C:/Users/username/.tui</code>, 

    or <code>/usr/username/.tui</code>),

    the folder where the Terminal.Gui application was launched from (e.g. <code>./.tui</code>), or as a resource

    within the Terminal.Gui application's main assembly. 

    </p>

    <p>

    Settings are defined in JSON format, according to this schema: 

    https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json

    </p>

    <p>

    Settings that will apply to all applications (global settings) reside in files named <code>config.json</code>. Settings 

    that will apply to a specific Terminal.Gui application reside in files named <code>appname.config.json</code>,

    where <code>appname</code> is the assembly name of the application (e.g. <code>UICatalog.config.json</code>).

    </p>

    Settings are applied using the following precedence (higher precedence settings

    overwrite lower precedence settings):

    <p>

    1. Application configuration found in the users's home directory (<code>~/.tui/appname.config.json</code>) -- Highest precedence 

    </p>

    <p>

    2. Application configuration found in the directory the app was launched from (<code>./.tui/appname.config.json</code>).

    </p>

    <p>

    3. Application configuration found in the applications's resources (<code>Resources/config.json</code>). 

    </p>

    <p>

    4. Global configuration found in the user's home directory (<code>~/.tui/config.json</code>).

    </p>

    <p>

    5. Global configuration found in the directory the app was launched from (<code>./.tui/config.json</code>).

    </p>

    <p>
        6. Global configuration in <code>Terminal.Gui.dll</code>'s resources (<code>Terminal.Gui.Resources.config.json</code>) -- Lowest Precidence.
    </p>
  example: []
  syntax:
    content: public static class ConfigurationManager
    content.vb: Public Module ConfigurationManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Terminal.Gui.ConfigurationManager.Settings
  commentId: P:Terminal.Gui.ConfigurationManager.Settings
  id: Settings
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: ConfigurationManager.Settings
  fullName: Terminal.Gui.ConfigurationManager.Settings
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Settings
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 99
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The root object of Terminal.Gui configuration settings / JSON schema. Contains only properties with the <xref href="Terminal.Gui.SettingsScope" data-throw-if-not-resolved="false"></xref>

    attribute value.
  example: []
  syntax:
    content: public static SettingsScope? Settings { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.SettingsScope
    content.vb: Public Shared Property Settings As SettingsScope
  overload: Terminal.Gui.ConfigurationManager.Settings*
- uid: Terminal.Gui.ConfigurationManager.Themes
  commentId: P:Terminal.Gui.ConfigurationManager.Themes
  id: Themes
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Themes
  nameWithType: ConfigurationManager.Themes
  fullName: Terminal.Gui.ConfigurationManager.Themes
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Themes
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 115
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    The root object of Terminal.Gui themes manager. Contains only properties with the <xref href="Terminal.Gui.ThemeScope" data-throw-if-not-resolved="false"></xref>

    attribute value.
  example: []
  syntax:
    content: public static ThemeManager? Themes { get; }
    parameters: []
    return:
      type: Terminal.Gui.ThemeManager
    content.vb: Public Shared ReadOnly Property Themes As ThemeManager
  overload: Terminal.Gui.ConfigurationManager.Themes*
- uid: Terminal.Gui.ConfigurationManager.AppSettings
  commentId: P:Terminal.Gui.ConfigurationManager.AppSettings
  id: AppSettings
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: AppSettings
  nameWithType: ConfigurationManager.AppSettings
  fullName: Terminal.Gui.ConfigurationManager.AppSettings
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AppSettings
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 120
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Application-specific configuration settings scope.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("AppSettings")]

      public static AppScope? AppSettings { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.AppScope
    content.vb: >-
      <JsonPropertyName("AppSettings")>

      Public Shared Property AppSettings As AppScope
  overload: Terminal.Gui.ConfigurationManager.AppSettings*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AppSettings
- uid: Terminal.Gui.ConfigurationManager.Glyphs
  commentId: P:Terminal.Gui.ConfigurationManager.Glyphs
  id: Glyphs
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Glyphs
  nameWithType: ConfigurationManager.Glyphs
  fullName: Terminal.Gui.ConfigurationManager.Glyphs
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Glyphs
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 126
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: The set of glyphs used to draw checkboxes, lines, borders, etc...See also <xref href="Terminal.Gui.GlyphDefinitions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("Glyphs")]

      public static GlyphDefinitions Glyphs { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.GlyphDefinitions
    content.vb: >-
      <JsonPropertyName("Glyphs")>

      Public Shared Property Glyphs As GlyphDefinitions
  overload: Terminal.Gui.ConfigurationManager.Glyphs*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Glyphs
- uid: Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  commentId: P:Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  id: ThrowOnJsonErrors
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: ThrowOnJsonErrors
  nameWithType: ConfigurationManager.ThrowOnJsonErrors
  fullName: Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: ThrowOnJsonErrors
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 208
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets or sets whether the <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref> should throw an exception if it encounters 

    an error on deserialization. If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> (the default), the error is logged and printed to the 

    console when <xref href="Terminal.Gui.Application.Shutdown" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public static bool? ThrowOnJsonErrors { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Property ThrowOnJsonErrors As Boolean?
  overload: Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors*
- uid: Terminal.Gui.ConfigurationManager.PrintJsonErrors
  commentId: M:Terminal.Gui.ConfigurationManager.PrintJsonErrors
  id: PrintJsonErrors
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: PrintJsonErrors()
  nameWithType: ConfigurationManager.PrintJsonErrors()
  fullName: Terminal.Gui.ConfigurationManager.PrintJsonErrors()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: PrintJsonErrors
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 222
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Prints any Json deserialization errors that occurred during deserialization to the console.
  example: []
  syntax:
    content: public static void PrintJsonErrors()
    content.vb: Public Shared Sub PrintJsonErrors()
  overload: Terminal.Gui.ConfigurationManager.PrintJsonErrors*
- uid: Terminal.Gui.ConfigurationManager.OnUpdated
  commentId: M:Terminal.Gui.ConfigurationManager.OnUpdated
  id: OnUpdated
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: OnUpdated()
  nameWithType: ConfigurationManager.OnUpdated()
  fullName: Terminal.Gui.ConfigurationManager.OnUpdated()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnUpdated
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 239
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called when the configuration has been updated from a configuration file. Invokes the <xref href="Terminal.Gui.ConfigurationManager.Updated" data-throw-if-not-resolved="false"></xref>

    event.
  example: []
  syntax:
    content: public static void OnUpdated()
    content.vb: Public Shared Sub OnUpdated()
  overload: Terminal.Gui.ConfigurationManager.OnUpdated*
- uid: Terminal.Gui.ConfigurationManager.Updated
  commentId: E:Terminal.Gui.ConfigurationManager.Updated
  id: Updated
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: ConfigurationManager.Updated
  fullName: Terminal.Gui.ConfigurationManager.Updated
  type: Event
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Updated
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 249
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event fired when the configuration has been updated from a configuration source.  

    application.
  example: []
  syntax:
    content: public static event EventHandler<ConfigurationManagerEventArgs>? Updated
    return:
      type: System.EventHandler{Terminal.Gui.ConfigurationManagerEventArgs}
    content.vb: Public Shared Event Updated As EventHandler(Of ConfigurationManagerEventArgs)
- uid: Terminal.Gui.ConfigurationManager.Reset
  commentId: M:Terminal.Gui.ConfigurationManager.Reset
  id: Reset
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ConfigurationManager.Reset()
  fullName: Terminal.Gui.ConfigurationManager.Reset()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Reset
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 259
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Resets the state of <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref>. Should be called whenever a new app session

    (e.g. in <xref href="Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)" data-throw-if-not-resolved="false"></xref> starts. Called by <xref href="Terminal.Gui.ConfigurationManager.Load(System.Boolean)" data-throw-if-not-resolved="false"></xref>

    if the <code>reset</code> parameter is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  remarks: ''
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset()
  overload: Terminal.Gui.ConfigurationManager.Reset*
- uid: Terminal.Gui.ConfigurationManager.Apply
  commentId: M:Terminal.Gui.ConfigurationManager.Apply
  id: Apply
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Apply()
  nameWithType: ConfigurationManager.Apply()
  fullName: Terminal.Gui.ConfigurationManager.Apply()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Apply
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 313
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Applies the configuration settings to the running <xref href="Terminal.Gui.Application" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static void Apply()
    content.vb: Public Shared Sub Apply()
  overload: Terminal.Gui.ConfigurationManager.Apply*
- uid: Terminal.Gui.ConfigurationManager.OnApplied
  commentId: M:Terminal.Gui.ConfigurationManager.OnApplied
  id: OnApplied
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: OnApplied()
  nameWithType: ConfigurationManager.OnApplied()
  fullName: Terminal.Gui.ConfigurationManager.OnApplied()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: OnApplied
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 340
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Called when an updated configuration has been applied to the  

    application. Fires the <xref href="Terminal.Gui.ConfigurationManager.Applied" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: public static void OnApplied()
    content.vb: Public Shared Sub OnApplied()
  overload: Terminal.Gui.ConfigurationManager.OnApplied*
- uid: Terminal.Gui.ConfigurationManager.Applied
  commentId: E:Terminal.Gui.ConfigurationManager.Applied
  id: Applied
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Applied
  nameWithType: ConfigurationManager.Applied
  fullName: Terminal.Gui.ConfigurationManager.Applied
  type: Event
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Applied
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 354
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Event fired when an updated configuration has been applied to the  

    application.
  example: []
  syntax:
    content: public static event EventHandler<ConfigurationManagerEventArgs>? Applied
    return:
      type: System.EventHandler{Terminal.Gui.ConfigurationManagerEventArgs}
    content.vb: Public Shared Event Applied As EventHandler(Of ConfigurationManagerEventArgs)
- uid: Terminal.Gui.ConfigurationManager.AppName
  commentId: P:Terminal.Gui.ConfigurationManager.AppName
  id: AppName
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: ConfigurationManager.AppName
  fullName: Terminal.Gui.ConfigurationManager.AppName
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: AppName
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 359
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Name of the running application. By default this property is set to the application's assembly name.
  example: []
  syntax:
    content: public static string AppName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property AppName As String
  overload: Terminal.Gui.ConfigurationManager.AppName*
- uid: Terminal.Gui.ConfigurationManager.Locations
  commentId: P:Terminal.Gui.ConfigurationManager.Locations
  id: Locations
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Locations
  nameWithType: ConfigurationManager.Locations
  fullName: Terminal.Gui.ConfigurationManager.Locations
  type: Property
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Locations
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 392
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Gets and sets the locations where <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref> will look for config files.

    The value is <xref href="Terminal.Gui.ConfigurationManager.ConfigLocations.All" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ConfigurationManager.ConfigLocations Locations { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.ConfigurationManager.ConfigLocations
    content.vb: Public Shared Property Locations As ConfigurationManager.ConfigLocations
  overload: Terminal.Gui.ConfigurationManager.Locations*
- uid: Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  commentId: M:Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  id: Load(System.Boolean)
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: Load(bool)
  nameWithType: ConfigurationManager.Load(bool)
  fullName: Terminal.Gui.ConfigurationManager.Load(bool)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: Load
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 404
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: >-
    Loads all settings found in the various configuration storage locations to 

    the <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref>. Optionally,

    resets all settings attributed with <xref href="Terminal.Gui.SerializableConfigurationProperty" data-throw-if-not-resolved="false"></xref> to the defaults.
  remarks: Use <xref href="Terminal.Gui.ConfigurationManager.Apply" data-throw-if-not-resolved="false"></xref> to cause the loaded settings to be applied to the running application.
  example: []
  syntax:
    content: public static void Load(bool reset = false)
    parameters:
    - id: reset
      type: System.Boolean
      description: >-
        If <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> the state of <xref href="Terminal.Gui.ConfigurationManager" data-throw-if-not-resolved="false"></xref> will
            be reset to the defaults.
    content.vb: Public Shared Sub Load(reset As Boolean = False)
  overload: Terminal.Gui.ConfigurationManager.Load*
  nameWithType.vb: ConfigurationManager.Load(Boolean)
  fullName.vb: Terminal.Gui.ConfigurationManager.Load(Boolean)
  name.vb: Load(Boolean)
- uid: Terminal.Gui.ConfigurationManager.GetEmptyJson
  commentId: M:Terminal.Gui.ConfigurationManager.GetEmptyJson
  id: GetEmptyJson
  parent: Terminal.Gui.ConfigurationManager
  langs:
  - csharp
  - vb
  name: GetEmptyJson()
  nameWithType: ConfigurationManager.GetEmptyJson()
  fullName: Terminal.Gui.ConfigurationManager.GetEmptyJson()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Configuration/ConfigurationManager.cs
      branch: v2_develop
      repo: tig:tig/Terminal.Gui.git
    id: GetEmptyJson
    path: ../Terminal.Gui/Configuration/ConfigurationManager.cs
    startLine: 436
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Returns an empty Json document with just the $schema tag.
  example: []
  syntax:
    content: public static string GetEmptyJson()
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetEmptyJson() As String
  overload: Terminal.Gui.ConfigurationManager.GetEmptyJson*
references:
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  href: Terminal.html
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
  spec.csharp:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
  spec.vb:
  - uid: Terminal
    name: Terminal
    href: Terminal.html
  - name: .
  - uid: Terminal.Gui
    name: Gui
    href: Terminal.Gui.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.SettingsScope
  commentId: T:Terminal.Gui.SettingsScope
  parent: Terminal.Gui
  href: Terminal.Gui.SettingsScope.html
  name: SettingsScope
  nameWithType: SettingsScope
  fullName: Terminal.Gui.SettingsScope
- uid: Terminal.Gui.ConfigurationManager.Settings*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Settings
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Settings
  name: Settings
  nameWithType: ConfigurationManager.Settings
  fullName: Terminal.Gui.ConfigurationManager.Settings
- uid: Terminal.Gui.ThemeScope
  commentId: T:Terminal.Gui.ThemeScope
  parent: Terminal.Gui
  href: Terminal.Gui.ThemeScope.html
  name: ThemeScope
  nameWithType: ThemeScope
  fullName: Terminal.Gui.ThemeScope
- uid: Terminal.Gui.ConfigurationManager.Themes*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Themes
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Themes
  name: Themes
  nameWithType: ConfigurationManager.Themes
  fullName: Terminal.Gui.ConfigurationManager.Themes
- uid: Terminal.Gui.ThemeManager
  commentId: T:Terminal.Gui.ThemeManager
  parent: Terminal.Gui
  href: Terminal.Gui.ThemeManager.html
  name: ThemeManager
  nameWithType: ThemeManager
  fullName: Terminal.Gui.ThemeManager
- uid: Terminal.Gui.ConfigurationManager.AppSettings*
  commentId: Overload:Terminal.Gui.ConfigurationManager.AppSettings
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.AppSettings
  name: AppSettings
  nameWithType: ConfigurationManager.AppSettings
  fullName: Terminal.Gui.ConfigurationManager.AppSettings
- uid: Terminal.Gui.AppScope
  commentId: T:Terminal.Gui.AppScope
  parent: Terminal.Gui
  href: Terminal.Gui.AppScope.html
  name: AppScope
  nameWithType: AppScope
  fullName: Terminal.Gui.AppScope
- uid: Terminal.Gui.GlyphDefinitions
  commentId: T:Terminal.Gui.GlyphDefinitions
  parent: Terminal.Gui
  href: Terminal.Gui.GlyphDefinitions.html
  name: GlyphDefinitions
  nameWithType: GlyphDefinitions
  fullName: Terminal.Gui.GlyphDefinitions
- uid: Terminal.Gui.ConfigurationManager.Glyphs*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Glyphs
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Glyphs
  name: Glyphs
  nameWithType: ConfigurationManager.Glyphs
  fullName: Terminal.Gui.ConfigurationManager.Glyphs
- uid: Terminal.Gui.ConfigurationManager
  commentId: T:Terminal.Gui.ConfigurationManager
  href: Terminal.Gui.ConfigurationManager.html
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Terminal.Gui.ConfigurationManager
- uid: Terminal.Gui.Application.Shutdown
  commentId: M:Terminal.Gui.Application.Shutdown
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  name: Shutdown()
  nameWithType: Application.Shutdown()
  fullName: Terminal.Gui.Application.Shutdown()
  spec.csharp:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Shutdown
    name: Shutdown
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Shutdown
  - name: (
  - name: )
- uid: Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors*
  commentId: Overload:Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
  name: ThrowOnJsonErrors
  nameWithType: ConfigurationManager.ThrowOnJsonErrors
  fullName: Terminal.Gui.ConfigurationManager.ThrowOnJsonErrors
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Terminal.Gui.ConfigurationManager.PrintJsonErrors*
  commentId: Overload:Terminal.Gui.ConfigurationManager.PrintJsonErrors
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.PrintJsonErrors
  name: PrintJsonErrors
  nameWithType: ConfigurationManager.PrintJsonErrors
  fullName: Terminal.Gui.ConfigurationManager.PrintJsonErrors
- uid: Terminal.Gui.ConfigurationManager.Updated
  commentId: E:Terminal.Gui.ConfigurationManager.Updated
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Updated
  name: Updated
  nameWithType: ConfigurationManager.Updated
  fullName: Terminal.Gui.ConfigurationManager.Updated
- uid: Terminal.Gui.ConfigurationManager.OnUpdated*
  commentId: Overload:Terminal.Gui.ConfigurationManager.OnUpdated
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.OnUpdated
  name: OnUpdated
  nameWithType: ConfigurationManager.OnUpdated
  fullName: Terminal.Gui.ConfigurationManager.OnUpdated
- uid: System.EventHandler{Terminal.Gui.ConfigurationManagerEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.ConfigurationManagerEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ConfigurationManagerEventArgs>
  nameWithType: EventHandler<ConfigurationManagerEventArgs>
  fullName: System.EventHandler<Terminal.Gui.ConfigurationManagerEventArgs>
  nameWithType.vb: EventHandler(Of ConfigurationManagerEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.ConfigurationManagerEventArgs)
  name.vb: EventHandler(Of ConfigurationManagerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: Terminal.Gui.ConfigurationManagerEventArgs
    name: ConfigurationManagerEventArgs
    href: Terminal.Gui.ConfigurationManagerEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: Terminal.Gui.ConfigurationManagerEventArgs
    name: ConfigurationManagerEventArgs
    href: Terminal.Gui.ConfigurationManagerEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  commentId: M:Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  name: Init(ConsoleDriver)
  nameWithType: Application.Init(ConsoleDriver)
  fullName: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  spec.csharp:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
  spec.vb:
  - uid: Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
    name: Init
    href: Terminal.Gui.Application.html#Terminal.Gui.Application.Init(Terminal.Gui.ConsoleDriver)
  - name: (
  - uid: Terminal.Gui.ConsoleDriver
    name: ConsoleDriver
    href: Terminal.Gui.ConsoleDriver.html
  - name: )
- uid: Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  commentId: M:Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  isExternal: true
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  name: Load(bool)
  nameWithType: ConfigurationManager.Load(bool)
  fullName: Terminal.Gui.ConfigurationManager.Load(bool)
  nameWithType.vb: ConfigurationManager.Load(Boolean)
  fullName.vb: Terminal.Gui.ConfigurationManager.Load(Boolean)
  name.vb: Load(Boolean)
  spec.csharp:
  - uid: Terminal.Gui.ConfigurationManager.Load(System.Boolean)
    name: Load
    href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ConfigurationManager.Load(System.Boolean)
    name: Load
    href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Terminal.Gui.ConfigurationManager.Reset*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Reset
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Reset
  name: Reset
  nameWithType: ConfigurationManager.Reset
  fullName: Terminal.Gui.ConfigurationManager.Reset
- uid: Terminal.Gui.Application
  commentId: T:Terminal.Gui.Application
  href: Terminal.Gui.Application.html
  name: Application
  nameWithType: Application
  fullName: Terminal.Gui.Application
- uid: Terminal.Gui.ConfigurationManager.Apply*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Apply
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Apply
  name: Apply
  nameWithType: ConfigurationManager.Apply
  fullName: Terminal.Gui.ConfigurationManager.Apply
- uid: Terminal.Gui.ConfigurationManager.Applied
  commentId: E:Terminal.Gui.ConfigurationManager.Applied
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Applied
  name: Applied
  nameWithType: ConfigurationManager.Applied
  fullName: Terminal.Gui.ConfigurationManager.Applied
- uid: Terminal.Gui.ConfigurationManager.OnApplied*
  commentId: Overload:Terminal.Gui.ConfigurationManager.OnApplied
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.OnApplied
  name: OnApplied
  nameWithType: ConfigurationManager.OnApplied
  fullName: Terminal.Gui.ConfigurationManager.OnApplied
- uid: Terminal.Gui.ConfigurationManager.AppName*
  commentId: Overload:Terminal.Gui.ConfigurationManager.AppName
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.AppName
  name: AppName
  nameWithType: ConfigurationManager.AppName
  fullName: Terminal.Gui.ConfigurationManager.AppName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Terminal.Gui.ConfigurationManager.ConfigLocations.All
  commentId: F:Terminal.Gui.ConfigurationManager.ConfigLocations.All
  href: Terminal.Gui.ConfigurationManager.ConfigLocations.html#Terminal.Gui.ConfigurationManager.ConfigLocations.All
  name: All
  nameWithType: ConfigurationManager.ConfigLocations.All
  fullName: Terminal.Gui.ConfigurationManager.ConfigLocations.All
- uid: Terminal.Gui.ConfigurationManager.Locations*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Locations
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Locations
  name: Locations
  nameWithType: ConfigurationManager.Locations
  fullName: Terminal.Gui.ConfigurationManager.Locations
- uid: Terminal.Gui.ConfigurationManager.ConfigLocations
  commentId: T:Terminal.Gui.ConfigurationManager.ConfigLocations
  parent: Terminal.Gui
  href: Terminal.Gui.ConfigurationManager.html
  name: ConfigurationManager.ConfigLocations
  nameWithType: ConfigurationManager.ConfigLocations
  fullName: Terminal.Gui.ConfigurationManager.ConfigLocations
  spec.csharp:
  - uid: Terminal.Gui.ConfigurationManager
    name: ConfigurationManager
    href: Terminal.Gui.ConfigurationManager.html
  - name: .
  - uid: Terminal.Gui.ConfigurationManager.ConfigLocations
    name: ConfigLocations
    href: Terminal.Gui.ConfigurationManager.ConfigLocations.html
  spec.vb:
  - uid: Terminal.Gui.ConfigurationManager
    name: ConfigurationManager
    href: Terminal.Gui.ConfigurationManager.html
  - name: .
  - uid: Terminal.Gui.ConfigurationManager.ConfigLocations
    name: ConfigLocations
    href: Terminal.Gui.ConfigurationManager.ConfigLocations.html
- uid: Terminal.Gui.SerializableConfigurationProperty
  commentId: T:Terminal.Gui.SerializableConfigurationProperty
  href: Terminal.Gui.SerializableConfigurationProperty.html
  name: SerializableConfigurationProperty
  nameWithType: SerializableConfigurationProperty
  fullName: Terminal.Gui.SerializableConfigurationProperty
- uid: Terminal.Gui.ConfigurationManager.Apply
  commentId: M:Terminal.Gui.ConfigurationManager.Apply
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Apply
  name: Apply()
  nameWithType: ConfigurationManager.Apply()
  fullName: Terminal.Gui.ConfigurationManager.Apply()
  spec.csharp:
  - uid: Terminal.Gui.ConfigurationManager.Apply
    name: Apply
    href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Apply
  - name: (
  - name: )
  spec.vb:
  - uid: Terminal.Gui.ConfigurationManager.Apply
    name: Apply
    href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Apply
  - name: (
  - name: )
- uid: Terminal.Gui.ConfigurationManager.Load*
  commentId: Overload:Terminal.Gui.ConfigurationManager.Load
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.Load(System.Boolean)
  name: Load
  nameWithType: ConfigurationManager.Load
  fullName: Terminal.Gui.ConfigurationManager.Load
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Terminal.Gui.ConfigurationManager.GetEmptyJson*
  commentId: Overload:Terminal.Gui.ConfigurationManager.GetEmptyJson
  href: Terminal.Gui.ConfigurationManager.html#Terminal.Gui.ConfigurationManager.GetEmptyJson
  name: GetEmptyJson
  nameWithType: ConfigurationManager.GetEmptyJson
  fullName: Terminal.Gui.ConfigurationManager.GetEmptyJson
shouldSkipMarkup: true
