{
  "api/Terminal.Gui/Terminal.Gui.AllowedType.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AllowedType.html",
    "title": "Class AllowedType",
    "keywords": "Class AllowedType Describes a requirement on what FileInfo can be selected. This can be combined with other IAllowedType in a FileDialog to for example show only .csv files but let user change to open any if they want. Inheritance object AllowedType Implements IAllowedType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class AllowedType : IAllowedType Constructors | Improve this Doc View Source AllowedType(string, params string[]) Initializes a new instance of the AllowedType class. Declaration public AllowedType(string description, params string[] extensions) Parameters Type Name Description string description The human readable text to display. string[] extensions Extension(s) to match e.g. .csv. Properties | Improve this Doc View Source Description Gets or Sets the human readable description for the file type e.g. \"Comma Separated Values\". Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Extensions Gets or Sets the permitted file extension(s) (e.g. \".csv\"). Declaration public string[] Extensions { get; set; } Property Value Type Description string[] Methods | Improve this Doc View Source IsAllowed(string) Returns true if the file at path is compatible with this allow option. Note that the file may not exist (e.g. in the case of saving). Declaration public bool IsAllowed(string path) Parameters Type Name Description string path Returns Type Description bool | Improve this Doc View Source ToString() Returns Description plus all Extensions separated by semicolons. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements IAllowedType"
  },
  "api/Terminal.Gui/Terminal.Gui.AllowedTypeAny.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AllowedTypeAny.html",
    "title": "Class AllowedTypeAny",
    "keywords": "Class AllowedTypeAny IAllowedType that allows selection of any types (*.*). Inheritance object AllowedTypeAny Implements IAllowedType Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class AllowedTypeAny : IAllowedType Methods | Improve this Doc View Source IsAllowed(string) Returns true if the file at path is compatible with this allow option. Note that the file may not exist (e.g. in the case of saving). Declaration public bool IsAllowed(string path) Parameters Type Name Description string path Returns Type Description bool | Improve this Doc View Source ToString() Returns a string representation of this AllowedTypeAny. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements IAllowedType"
  },
  "api/Terminal.Gui/Terminal.Gui.AppendAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AppendAutocomplete.html",
    "title": "Class AppendAutocomplete",
    "keywords": "Class AppendAutocomplete Autocomplete for a TextField which shows suggestions within the box. Displayed suggestions can be completed using the tab key. Inheritance object AutocompleteBase AppendAutocomplete Implements IAutocomplete Inherited Members AutocompleteBase.PopupInsideContainer AutocompleteBase.SuggestionGenerator AutocompleteBase.MaxWidth AutocompleteBase.MaxHeight AutocompleteBase.Visible AutocompleteBase.Suggestions AutocompleteBase.SelectedIdx AutocompleteBase.SelectionKey AutocompleteBase.CloseKey AutocompleteBase.Reopen AutocompleteBase.Context AutocompleteBase.EnsureSelectedIdxIsValid() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class AppendAutocomplete : AutocompleteBase, IAutocomplete Constructors | Improve this Doc View Source AppendAutocomplete(TextField) Creates a new instance of the AppendAutocomplete class. Declaration public AppendAutocomplete(TextField textField) Parameters Type Name Description TextField textField Properties | Improve this Doc View Source ColorScheme The color used for rendering the appended text. Note that only Normal is used and then only Foreground (Background comes from HostControl). Declaration public override ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme Overrides AutocompleteBase.ColorScheme | Improve this Doc View Source HostControl The host control that will use autocomplete. Declaration public override View HostControl { get; set; } Property Value Type Description View Overrides AutocompleteBase.HostControl Methods | Improve this Doc View Source ClearSuggestions() Clears Suggestions Declaration public override void ClearSuggestions() Overrides AutocompleteBase.ClearSuggestions() | Improve this Doc View Source GenerateSuggestions(AutocompleteContext) Populates Suggestions with all Suggestion proposed by SuggestionGenerator at the given context (cursor position) Declaration public override void GenerateSuggestions(AutocompleteContext context) Parameters Type Name Description AutocompleteContext context Overrides AutocompleteBase.GenerateSuggestions(AutocompleteContext) | Improve this Doc View Source MouseEvent(MouseEvent, bool) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public override bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. bool fromHost If was called from the popup or from the host. Returns Type Description bool trueif the mouse can be handled falseotherwise. Overrides AutocompleteBase.MouseEvent(MouseEvent, bool) | Improve this Doc View Source ProcessKey(KeyEventArgs) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public override bool ProcessKey(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a The key event. Returns Type Description bool trueif the key can be handled falseotherwise. Overrides AutocompleteBase.ProcessKey(KeyEventArgs) | Improve this Doc View Source RenderOverlay(Point) Renders the current suggestion into the TextField Declaration public override void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt Overrides AutocompleteBase.RenderOverlay(Point) Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.Application.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Application.html",
    "title": "Class Application",
    "keywords": "Class Application A static, singleton class representing the application. This class is the entry point for the application. Inheritance object Application Remarks Creates a instance of the main loop to process input events, handle timers and other sources of data. The Iteration event is invoked on each iteration of the main loop. When invoked it sets the SynchronizationContext to one that is tied to the main loop allowing user code to use async/await. Examples // A simple Terminal.Gui app that creates a window with a frame and title with // 5 rows/columns of padding. Application.Init(); var win = new Window ($\"Example App ({Application.QuitKey} to quit)\") { X = 5, Y = 5, Width = Dim.Fill (5), Height = Dim.Fill (5) }; Application.Top.Add(win); Application.Run(); Application.Shutdown(); Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class Application Properties | Improve this Doc View Source AlternateBackwardKey Alternative key to navigate backwards through views. Shift+Ctrl+Tab is the primary key. Declaration [JsonConverter(typeof(KeyJsonConverter))] public static Key AlternateBackwardKey { get; set; } Property Value Type Description Key | Improve this Doc View Source AlternateForwardKey Alternative key to navigate forwards through views. Ctrl+Tab is the primary key. Declaration [JsonConverter(typeof(KeyJsonConverter))] public static Key AlternateForwardKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Current The current Toplevel object. This is updated when Run(Func<Exception, bool>) enters and leaves to point to the current Toplevel . Declaration public static Toplevel Current { get; } Property Value Type Description Toplevel The current. | Improve this Doc View Source Driver Gets the ConsoleDriver that has been selected. See also UseSystemConsole. Declaration public static ConsoleDriver Driver { get; } Property Value Type Description ConsoleDriver | Improve this Doc View Source EndAfterFirstIteration Set to true to cause End(RunState) to be called after the first iteration. Set to false (the default) to cause the application to continue running until Application.RequestStop () is called. Declaration public static bool EndAfterFirstIteration { get; set; } Property Value Type Description bool | Improve this Doc View Source Force16Colors Gets or sets whether Driver will be forced to output only the 16 colors defined in ColorName. The default is false, meaning 24-bit (TrueColor) colors will be output as long as the selected ConsoleDriver supports TrueColor. Declaration public static bool Force16Colors { get; set; } Property Value Type Description bool | Improve this Doc View Source IsMouseDisabled Disable or enable the mouse. The mouse is enabled by default. Declaration public static bool IsMouseDisabled { get; set; } Property Value Type Description bool | Improve this Doc View Source MouseGrabView Gets the view that grabbed the mouse (e.g. for dragging). When this is set, all mouse events will be routed to this view until the view calls UngrabMouse() or the mouse is released. Declaration public static View MouseGrabView { get; } Property Value Type Description View | Improve this Doc View Source OverlappedChildren Gets the list of the Overlapped children which are not modal Toplevel from the OverlappedTop. Declaration public static List<Toplevel> OverlappedChildren { get; } Property Value Type Description List<Toplevel> | Improve this Doc View Source OverlappedTop The Toplevel object used for the application on startup which IsOverlappedContainer is true. Declaration public static Toplevel OverlappedTop { get; } Property Value Type Description Toplevel | Improve this Doc View Source QuitKey Gets or sets the key to quit the application. Declaration [JsonConverter(typeof(KeyJsonConverter))] public static Key QuitKey { get; set; } Property Value Type Description Key | Improve this Doc View Source SupportedCultures Gets all cultures supported by the application without the invariant language. Declaration public static List<CultureInfo> SupportedCultures { get; } Property Value Type Description List<CultureInfo> | Improve this Doc View Source Top The Toplevel object used for the application on startup (Top) Declaration public static Toplevel Top { get; } Property Value Type Description Toplevel The top. | Improve this Doc View Source UseSystemConsole If true, forces the use of the System.Console-based (see NetDriver) driver. The default is false. Declaration public static bool UseSystemConsole { get; set; } Property Value Type Description bool | Improve this Doc View Source WantContinuousButtonPressedView The current View object that wants continuous mouse button pressed events. Declaration public static View WantContinuousButtonPressedView { get; } Property Value Type Description View Methods | Improve this Doc View Source AddTimeout(TimeSpan, Func<bool>) Adds a timeout to the application. Declaration public static object AddTimeout(TimeSpan time, Func<bool> callback) Parameters Type Name Description TimeSpan time Func<bool> callback Returns Type Description object | Improve this Doc View Source Begin(Toplevel) Building block API: Prepares the provided Toplevel for execution. Declaration public static RunState Begin(Toplevel Toplevel) Parameters Type Name Description Toplevel Toplevel The Toplevel to prepare execution for. Returns Type Description RunState The RunState handle that needs to be passed to the End(RunState) method upon completion. | Improve this Doc View Source BringOverlappedTopToFront() Brings the superview of the most focused overlapped view is on front. Declaration public static void BringOverlappedTopToFront() | Improve this Doc View Source End(RunState) Building block API: completes the execution of a Toplevel that was started with Begin(Toplevel) . Declaration public static void End(RunState runState) Parameters Type Name Description RunState runState The RunState returned by the Begin(Toplevel) method. | Improve this Doc View Source GetTopOverlappedChild(Type, string[]) Gets the current visible Toplevel overlapped child that matches the arguments pattern. Declaration public static Toplevel GetTopOverlappedChild(Type type = null, string[] exclude = null) Parameters Type Name Description Type type The type. string[] exclude The strings to exclude. Returns Type Description Toplevel The matched view. | Improve this Doc View Source GrabMouse(View) Grabs the mouse, forcing all mouse events to be routed to the specified view until UngrabMouse() is called. Declaration public static void GrabMouse(View view) Parameters Type Name Description View view View that will receive all mouse events until UngrabMouse() is invoked. | Improve this Doc View Source Init(ConsoleDriver) Initializes a new instance of Terminal.Gui Application. Declaration public static void Init(ConsoleDriver driver = null) Parameters Type Name Description ConsoleDriver driver The ConsoleDriver to use. If not specified the default driver for the platform will be used (see WindowsDriver, CursesDriver, and NetDriver). | Improve this Doc View Source Invoke(Action) Runs action on the thread that is processing events Declaration public static void Invoke(Action action) Parameters Type Name Description Action action the action to be invoked on the main processing thread. | Improve this Doc View Source MoveToOverlappedChild(Toplevel) Move to the next Overlapped child from the OverlappedTop and set it as the Top if it is not already. Declaration public static bool MoveToOverlappedChild(Toplevel top) Parameters Type Name Description Toplevel top Returns Type Description bool | Improve this Doc View Source OnKeyDown(KeyEventArgs) Called when a key is pressed (and not yet released). Fires the KeyDown event. Declaration public static bool OnKeyDown(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Called after a key has been pressed and released. Fires the KeyPressed event. Called for new KeyPressed events before any processing is performed or views evaluate. Use for global key handling and/or debugging. Declaration public static bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool true if the key was handled. | Improve this Doc View Source OnKeyUp(KeyEventArgs) Called when a key is released. Fires the KeyUp event. Declaration public static bool OnKeyUp(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool | Improve this Doc View Source OnMouseEvent(MouseEventEventArgs) Called when a mouse event occurs. Fires the MouseEvent event. Declaration public static void OnMouseEvent(MouseEventEventArgs a) Parameters Type Name Description MouseEventEventArgs a The mouse event with coordinates relative to the screen. | Improve this Doc View Source OnSizeChanging(SizeChangedEventArgs) Called when the application's size changes. Sets the size of all Toplevels and fires the SizeChanging event. Declaration public static bool OnSizeChanging(SizeChangedEventArgs args) Parameters Type Name Description SizeChangedEventArgs args The new size. Returns Type Description bool if the size was changed. | Improve this Doc View Source OverlappedMoveNext() Move to the next Overlapped child from the OverlappedTop. Declaration public static void OverlappedMoveNext() | Improve this Doc View Source OverlappedMovePrevious() Move to the previous Overlapped child from the OverlappedTop. Declaration public static void OverlappedMovePrevious() | Improve this Doc View Source Refresh() Triggers a refresh of the entire display. Declaration public static void Refresh() | Improve this Doc View Source RemoveTimeout(object) Removes a previously scheduled timeout Declaration public static bool RemoveTimeout(object token) Parameters Type Name Description object token Returns Type Description bool | Improve this Doc View Source RequestStop(Toplevel) Stops running the most recent Toplevel or the top if provided. Declaration public static void RequestStop(Toplevel top = null) Parameters Type Name Description Toplevel top The Toplevel to stop. | Improve this Doc View Source Run(Func<Exception, bool>) Runs the application by calling Run(Toplevel, Func<Exception, bool>) with the value of Top. Declaration public static void Run(Func<Exception, bool> errorHandler = null) Parameters Type Name Description Func<Exception, bool> errorHandler | Improve this Doc View Source Run(Toplevel, Func<Exception, bool>) Runs the main loop on the given Toplevel container. Declaration public static void Run(Toplevel view, Func<Exception, bool> errorHandler = null) Parameters Type Name Description Toplevel view The Toplevel to run as a modal. Func<Exception, bool> errorHandler RELEASE builds only: Handler for any unhandled exceptions (resumes when returns true, rethrows when null). | Improve this Doc View Source Run<T>(Func<Exception, bool>, ConsoleDriver) Runs the application by calling Run(Toplevel, Func<Exception, bool>) with a new instance of the specified Toplevel-derived class. Calling Init(ConsoleDriver) first is not needed as this function will initialize the application. Shutdown() must be called when the application is closing (typically after Run> has returned) to ensure resources are cleaned up and terminal settings restored. Declaration public static void Run<T>(Func<Exception, bool> errorHandler = null, ConsoleDriver driver = null) where T : Toplevel, new() Parameters Type Name Description Func<Exception, bool> errorHandler ConsoleDriver driver The ConsoleDriver to use. If not specified the default driver for the platform will be used (WindowsDriver, CursesDriver, or NetDriver). Must be null if Init(ConsoleDriver) has already been called. Type Parameters Name Description T | Improve this Doc View Source RunIteration(ref RunState, ref bool) Run one application iteration. Declaration public static void RunIteration(ref RunState state, ref bool firstIteration) Parameters Type Name Description RunState state The state returned by Begin(Toplevel). bool firstIteration Set to true if this is the first run loop iteration. Upon return, it will be set to false if at least one iteration happened. | Improve this Doc View Source RunLoop(RunState) Building block API: Runs the main loop for the created Toplevel. Declaration public static void RunLoop(RunState state) Parameters Type Name Description RunState state The state returned by the Begin(Toplevel) method. | Improve this Doc View Source Shutdown() Shutdown an application initialized with Init(ConsoleDriver). Declaration public static void Shutdown() | Improve this Doc View Source UngrabMouse() Releases the mouse grab, so mouse events will be routed to the view on which the mouse is. Declaration public static void UngrabMouse() | Improve this Doc View Source Wakeup() Wakes up the running application that might be waiting on input. Declaration public static void Wakeup() Events | Improve this Doc View Source GrabbedMouse Invoked after a view has grabbed the mouse. Declaration public static event EventHandler<ViewEventArgs> GrabbedMouse Event Type Type Description EventHandler<ViewEventArgs> | Improve this Doc View Source GrabbingMouse Invoked when a view wants to grab the mouse; can be canceled. Declaration public static event EventHandler<GrabMouseEventArgs> GrabbingMouse Event Type Type Description EventHandler<GrabMouseEventArgs> | Improve this Doc View Source Iteration This event is raised on each iteration of the main loop. Declaration public static event EventHandler<IterationEventArgs> Iteration Event Type Type Description EventHandler<IterationEventArgs> | Improve this Doc View Source KeyDown Event fired when a key is pressed (and not yet released). Declaration public static event EventHandler<KeyEventArgs> KeyDown Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyPressed Event fired after a key has been pressed and released. Set Handled to true to suppress the event. Declaration public static event EventHandler<KeyEventArgs> KeyPressed Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyUp Event fired when a key is released. Declaration public static event EventHandler<KeyEventArgs> KeyUp Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source MouseEvent Event fired when a mouse move or click occurs. Coordinates are screen relative. Declaration public static event EventHandler<MouseEventEventArgs> MouseEvent Event Type Type Description EventHandler<MouseEventEventArgs> | Improve this Doc View Source NotifyNewRunState Notify that a new RunState was created (Begin(Toplevel) was called). The token is created in Begin(Toplevel) and this event will be fired before that function exits. Declaration public static event EventHandler<RunStateEventArgs> NotifyNewRunState Event Type Type Description EventHandler<RunStateEventArgs> | Improve this Doc View Source NotifyStopRunState Notify that a existent RunState is stopping (End(RunState) was called). Declaration public static event EventHandler<ToplevelEventArgs> NotifyStopRunState Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source SizeChanging Invoked when the terminal's size changed. The new size of the terminal is provided. Declaration public static event EventHandler<SizeChangedEventArgs> SizeChanging Event Type Type Description EventHandler<SizeChangedEventArgs> | Improve this Doc View Source UnGrabbedMouse Invoked after a view has un-grabbed the mouse. Declaration public static event EventHandler<ViewEventArgs> UnGrabbedMouse Event Type Type Description EventHandler<ViewEventArgs> | Improve this Doc View Source UnGrabbingMouse Invoked when a view wants un-grab the mouse; can be canceled. Declaration public static event EventHandler<GrabMouseEventArgs> UnGrabbingMouse Event Type Type Description EventHandler<GrabMouseEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.AppScope.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AppScope.html",
    "title": "Class AppScope",
    "keywords": "Class AppScope The Scope<T> class for application-defined configuration settings. Inheritance object Dictionary<string, ConfigProperty> Scope<AppScope> AppScope Implements IDictionary<string, ConfigProperty> ICollection<KeyValuePair<string, ConfigProperty>> IReadOnlyDictionary<string, ConfigProperty> IReadOnlyCollection<KeyValuePair<string, ConfigProperty>> IEnumerable<KeyValuePair<string, ConfigProperty>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Examples Use the SerializableConfigurationProperty attribute to mark properties that should be serialized as part of application-defined configuration settings. public class MyAppSettings { [SerializableConfigurationProperty (Scope = typeof (AppScope))] public static bool? MyProperty { get; set; } = true; } THe resultant Json will look like this: \"AppSettings\": { \"MyAppSettings.MyProperty\": true, \"UICatalog.ShowStatusBar\": true }, Inherited Members Scope<AppScope>.Update(Scope<AppScope>) Scope<AppScope>.RetrieveValues() Dictionary<string, ConfigProperty>.Add(string, ConfigProperty) Dictionary<string, ConfigProperty>.Clear() Dictionary<string, ConfigProperty>.ContainsKey(string) Dictionary<string, ConfigProperty>.ContainsValue(ConfigProperty) Dictionary<string, ConfigProperty>.EnsureCapacity(int) Dictionary<string, ConfigProperty>.GetEnumerator() Dictionary<string, ConfigProperty>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, ConfigProperty>.OnDeserialization(object) Dictionary<string, ConfigProperty>.Remove(string) Dictionary<string, ConfigProperty>.Remove(string, out ConfigProperty) Dictionary<string, ConfigProperty>.TrimExcess() Dictionary<string, ConfigProperty>.TrimExcess(int) Dictionary<string, ConfigProperty>.TryAdd(string, ConfigProperty) Dictionary<string, ConfigProperty>.TryGetValue(string, out ConfigProperty) Dictionary<string, ConfigProperty>.Comparer Dictionary<string, ConfigProperty>.Count Dictionary<string, ConfigProperty>.this[string] Dictionary<string, ConfigProperty>.Keys Dictionary<string, ConfigProperty>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(ScopeJsonConverter<AppScope>))] public class AppScope : Scope<AppScope>, IDictionary<string, ConfigProperty>, ICollection<KeyValuePair<string, ConfigProperty>>, IReadOnlyDictionary<string, ConfigProperty>, IReadOnlyCollection<KeyValuePair<string, ConfigProperty>>, IEnumerable<KeyValuePair<string, ConfigProperty>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable"
  },
  "api/Terminal.Gui/Terminal.Gui.AspectGetterDelegate-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AspectGetterDelegate-1.html",
    "title": "Delegate AspectGetterDelegate<T>",
    "keywords": "Delegate AspectGetterDelegate<T> Delegates of this type are used to fetch string representations of user's model objects Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public delegate string AspectGetterDelegate<T>(T toRender) where T : class Parameters Type Name Description T toRender The object that is being rendered Returns Type Description string Type Parameters Name Description T"
  },
  "api/Terminal.Gui/Terminal.Gui.Attribute.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Attribute.html",
    "title": "Struct Attribute",
    "keywords": "Struct Attribute Attributes represent how text is styled when displayed in the terminal. Implements IEquatable<Attribute> Remarks Attribute provides a platform independent representation of colors (and someday other forms of text styling). They encode both the foreground and the background color and are used in the ColorScheme class to define color schemes that can be used in an application. Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(AttributeJsonConverter))] public readonly struct Attribute : IEquatable<Attribute> Constructors | Improve this Doc View Source Attribute() Initializes a new instance with default values. Declaration public Attribute() | Improve this Doc View Source Attribute(Color, Color) Initializes a new instance of the Attribute struct. Declaration public Attribute(Color foreground, Color background) Parameters Type Name Description Color foreground Foreground Color background Background | Improve this Doc View Source Attribute(Color, ColorName) Initializes a new instance of the Attribute struct. Declaration public Attribute(Color foreground, ColorName backgroundName) Parameters Type Name Description Color foreground Foreground ColorName backgroundName Background | Improve this Doc View Source Attribute(Color) Initializes a new instance of the Attribute struct with the same colors for the foreground and background. Declaration public Attribute(Color color) Parameters Type Name Description Color color The color. | Improve this Doc View Source Attribute(ColorName, Color) Initializes a new instance of the Attribute struct. Declaration public Attribute(ColorName foregroundName, Color background) Parameters Type Name Description ColorName foregroundName Foreground Color background Background | Improve this Doc View Source Attribute(ColorName, ColorName) Initializes a new instance of the Attribute struct. Declaration public Attribute(ColorName foregroundName, ColorName backgroundName) Parameters Type Name Description ColorName foregroundName Foreground ColorName backgroundName Background Fields | Improve this Doc View Source Default Default empty attribute. Declaration public static readonly Attribute Default Field Value Type Description Attribute Properties | Improve this Doc View Source Background The background color. Declaration [JsonConverter(typeof(ColorJsonConverter))] public Color Background { get; } Property Value Type Description Color | Improve this Doc View Source Foreground The foreground color. Declaration [JsonConverter(typeof(ColorJsonConverter))] public Color Foreground { get; } Property Value Type Description Color Methods | Improve this Doc View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source Equals(Attribute) Declaration public bool Equals(Attribute other) Parameters Type Name Description Attribute other Returns Type Description bool | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators | Improve this Doc View Source operator ==(Attribute, Attribute) Compares two attributes for equality. Declaration public static bool operator ==(Attribute left, Attribute right) Parameters Type Name Description Attribute left Attribute right Returns Type Description bool | Improve this Doc View Source operator !=(Attribute, Attribute) Compares two attributes for inequality. Declaration public static bool operator !=(Attribute left, Attribute right) Parameters Type Name Description Attribute left Attribute right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.AutocompleteBase.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AutocompleteBase.html",
    "title": "Class AutocompleteBase",
    "keywords": "Class AutocompleteBase Abstract implementation of IAutocomplete allows for tailoring how autocomplete is rendered/interacted with. Inheritance object AutocompleteBase AppendAutocomplete PopupAutocomplete Implements IAutocomplete Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class AutocompleteBase : IAutocomplete Properties | Improve this Doc View Source CloseKey The key that the user can press to close the currently popped autocomplete menu Declaration public virtual Key CloseKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ColorScheme The colors to use to render the overlay. Accessing this property before the Application has been initialized will cause an error Declaration public abstract ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Context The context used by the autocomplete menu. Declaration public virtual AutocompleteContext Context { get; set; } Property Value Type Description AutocompleteContext | Improve this Doc View Source HostControl The host control that will use autocomplete. Declaration public abstract View HostControl { get; set; } Property Value Type Description View | Improve this Doc View Source MaxHeight The maximum number of visible rows in the autocomplete dropdown to render Declaration public virtual int MaxHeight { get; set; } Property Value Type Description int | Improve this Doc View Source MaxWidth The maximum width of the autocomplete dropdown Declaration public virtual int MaxWidth { get; set; } Property Value Type Description int | Improve this Doc View Source PopupInsideContainer Gets or sets where the popup will be displayed. Declaration public bool PopupInsideContainer { get; set; } Property Value Type Description bool | Improve this Doc View Source Reopen The key that the user can press to reopen the currently popped autocomplete menu Declaration public virtual Key Reopen { get; set; } Property Value Type Description Key | Improve this Doc View Source SelectedIdx The currently selected index into Suggestions that the user has highlighted Declaration public virtual int SelectedIdx { get; set; } Property Value Type Description int | Improve this Doc View Source SelectionKey The key that the user must press to accept the currently selected autocomplete suggestion Declaration public virtual Key SelectionKey { get; set; } Property Value Type Description Key | Improve this Doc View Source SuggestionGenerator Gets or Sets the class responsible for generating Suggestions based on a given AutocompleteContext of the HostControl. Declaration public ISuggestionGenerator SuggestionGenerator { get; set; } Property Value Type Description ISuggestionGenerator | Improve this Doc View Source Suggestions The strings that form the current list of suggestions to render based on what the user has typed so far. Declaration public virtual ReadOnlyCollection<Suggestion> Suggestions { get; set; } Property Value Type Description ReadOnlyCollection<Suggestion> | Improve this Doc View Source Visible True if the autocomplete should be considered open and visible Declaration public virtual bool Visible { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source ClearSuggestions() Clears Suggestions Declaration public virtual void ClearSuggestions() | Improve this Doc View Source EnsureSelectedIdxIsValid() Updates SelectedIdx to be a valid index within Suggestions Declaration public virtual void EnsureSelectedIdxIsValid() | Improve this Doc View Source GenerateSuggestions(AutocompleteContext) Populates Suggestions with all Suggestion proposed by SuggestionGenerator at the given context (cursor position) Declaration public virtual void GenerateSuggestions(AutocompleteContext context) Parameters Type Name Description AutocompleteContext context | Improve this Doc View Source MouseEvent(MouseEvent, bool) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public abstract bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. bool fromHost If was called from the popup or from the host. Returns Type Description bool trueif the mouse can be handled falseotherwise. | Improve this Doc View Source ProcessKey(KeyEventArgs) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public abstract bool ProcessKey(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a The key event. Returns Type Description bool trueif the key can be handled falseotherwise. | Improve this Doc View Source RenderOverlay(Point) Renders the autocomplete dialog inside the given HostControl at the given point. Declaration public abstract void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.AutocompleteContext.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AutocompleteContext.html",
    "title": "Class AutocompleteContext",
    "keywords": "Class AutocompleteContext Describes the current state of a View which is proposing autocomplete. Suggestions are based on this state. Inheritance object AutocompleteContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class AutocompleteContext Constructors | Improve this Doc View Source AutocompleteContext(List<RuneCell>, int, bool) Creates a new instance of the AutocompleteContext class Declaration public AutocompleteContext(List<RuneCell> currentLine, int cursorPosition, bool canceled = false) Parameters Type Name Description List<RuneCell> currentLine int cursorPosition bool canceled Properties | Improve this Doc View Source Canceled Gets or sets if the autocomplete was canceled from popup. Declaration public bool Canceled { get; set; } Property Value Type Description bool | Improve this Doc View Source CurrentLine The text on the current line. Declaration public List<RuneCell> CurrentLine { get; set; } Property Value Type Description List<RuneCell> | Improve this Doc View Source CursorPosition The position of the input cursor within the CurrentLine. Declaration public int CursorPosition { get; set; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.Axis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Axis.html",
    "title": "Class Axis",
    "keywords": "Class Axis Renders a continuous line with grid line ticks and labels Inheritance object Axis HorizontalAxis VerticalAxis Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class Axis Constructors | Improve this Doc View Source Axis(Orientation) Populates base properties and sets the read only Orientation Declaration protected Axis(Orientation orientation) Parameters Type Name Description Orientation orientation Fields | Improve this Doc View Source LabelGetter Allows you to control what label text is rendered for a given Increment when ShowLabelsEvery is above 0 Declaration public LabelGetterDelegate LabelGetter Field Value Type Description LabelGetterDelegate Properties | Improve this Doc View Source Increment Number of units of graph space between ticks on axis. 0 for no ticks Declaration public float Increment { get; set; } Property Value Type Description float | Improve this Doc View Source Minimum The minimum axis point to show. Defaults to null (no minimum) Declaration public float? Minimum { get; set; } Property Value Type Description float? | Improve this Doc View Source Orientation Direction of the axis Declaration public Orientation Orientation { get; } Property Value Type Description Orientation | Improve this Doc View Source ShowLabelsEvery The number of Increment before an label is added. 0 = never show labels Declaration public uint ShowLabelsEvery { get; set; } Property Value Type Description uint | Improve this Doc View Source Text Displayed below/to left of labels (see Orientation). If text is not visible, check MarginBottom / MarginLeft Declaration public string Text { get; set; } Property Value Type Description string | Improve this Doc View Source Visible True to render axis. Defaults to true Declaration public bool Visible { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source DrawAxisLabel(GraphView, int, string) Draws a custom label text at screenPosition units along the axis (X or Y depending on Orientation) Declaration public abstract void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph int screenPosition string text | Improve this Doc View Source DrawAxisLabels(GraphView) Draws labels and axis Increment ticks Declaration public abstract void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph | Improve this Doc View Source DrawAxisLine(GraphView, int, int) Draws a single cell of the solid line of the axis Declaration protected abstract void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph int x int y | Improve this Doc View Source DrawAxisLine(GraphView) Draws the solid line of the axis Declaration public abstract void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph | Improve this Doc View Source Reset() Resets all configurable properties of the axis to default values Declaration public virtual void Reset()"
  },
  "api/Terminal.Gui/Terminal.Gui.AxisIncrementToRender.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.AxisIncrementToRender.html",
    "title": "Class AxisIncrementToRender",
    "keywords": "Class AxisIncrementToRender A location on an axis of a GraphView that may or may not have a label associated with it Inheritance object AxisIncrementToRender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class AxisIncrementToRender Constructors | Improve this Doc View Source AxisIncrementToRender(Orientation, int, float) Describe a new section of an axis that requires an axis increment symbol and/or label Declaration public AxisIncrementToRender(Orientation orientation, int screen, float value) Parameters Type Name Description Orientation orientation int screen float value Properties | Improve this Doc View Source Orientation Direction of the parent axis Declaration public Orientation Orientation { get; } Property Value Type Description Orientation | Improve this Doc View Source ScreenLocation The screen location (X or Y depending on Orientation) that the increment will be rendered at Declaration public int ScreenLocation { get; } Property Value Type Description int | Improve this Doc View Source Value The value at this position on the axis in graph space Declaration public float Value { get; } Property Value Type Description float"
  },
  "api/Terminal.Gui/Terminal.Gui.BarSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.BarSeries.html",
    "title": "Class BarSeries",
    "keywords": "Class BarSeries Series of bars positioned at regular intervals Inheritance object BarSeries Implements ISeries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class BarSeries : ISeries Properties | Improve this Doc View Source BarEvery Determines the spacing of bars along the axis. Defaults to 1 i.e. every 1 unit of graph space a bar is rendered. Note that you should also consider CellSize when changing this. Declaration public float BarEvery { get; set; } Property Value Type Description float | Improve this Doc View Source Bars Ordered collection of graph bars to position along axis Declaration public List<BarSeriesBar> Bars { get; set; } Property Value Type Description List<BarSeriesBar> | Improve this Doc View Source DrawLabels True to draw Text along the axis under the bar. Defaults to true. Declaration public bool DrawLabels { get; set; } Property Value Type Description bool | Improve this Doc View Source Offset The number of units of graph space along the axis before rendering the first bar (and subsequent bars - see BarEvery). Defaults to 0 Declaration public float Offset { get; set; } Property Value Type Description float | Improve this Doc View Source Orientation Direction bars protrude from the corresponding axis. Defaults to vertical Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source OverrideBarColor Overrides the Fill with a fixed color Declaration public Attribute? OverrideBarColor { get; set; } Property Value Type Description Attribute? Methods | Improve this Doc View Source AdjustColor(GraphCellToRender) Applies any color overriding Declaration protected virtual GraphCellToRender AdjustColor(GraphCellToRender graphCellToRender) Parameters Type Name Description GraphCellToRender graphCellToRender Returns Type Description GraphCellToRender | Improve this Doc View Source DrawBarLine(GraphView, Point, Point, BarSeriesBar) Override to do custom drawing of the bar e.g. to apply varying color or changing the fill symbol mid bar. Declaration protected virtual void DrawBarLine(GraphView graph, Point start, Point end, BarSeriesBar beingDrawn) Parameters Type Name Description GraphView graph Point start Screen position of the start of the bar Point end Screen position of the end of the bar BarSeriesBar beingDrawn The Bar that occupies this space and is being drawn | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws bars that are currently in the drawBounds Declaration public virtual void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds Screen area of the graph excluding margins RectangleF graphBounds Graph space area that should be drawn into drawBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.BarSeriesBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.BarSeriesBar.html",
    "title": "Class BarSeriesBar",
    "keywords": "Class BarSeriesBar A single bar in a BarSeries Inheritance object BarSeriesBar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class BarSeriesBar Constructors | Improve this Doc View Source BarSeriesBar(string, GraphCellToRender, float) Creates a new instance of a single bar rendered in the given fill that extends out value graph space units in the default Orientation Declaration public BarSeriesBar(string text, GraphCellToRender fill, float value) Parameters Type Name Description string text GraphCellToRender fill float value Properties | Improve this Doc View Source Fill The color and character that will be rendered in the console when the bar extends over it Declaration public GraphCellToRender Fill { get; set; } Property Value Type Description GraphCellToRender | Improve this Doc View Source Text Optional text that describes the bar. This will be rendered on the corresponding Axis unless DrawLabels is false Declaration public string Text { get; set; } Property Value Type Description string | Improve this Doc View Source Value The value in graph space X/Y (depending on Orientation) to which the bar extends. Declaration public float Value { get; } Property Value Type Description float"
  },
  "api/Terminal.Gui/Terminal.Gui.Button.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Button.html",
    "title": "Class Button",
    "keywords": "Class Button Button is a View that provides an item that invokes raises the Clicked event. Inheritance object Responder View Button Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks Provides a button showing text that raises the Clicked event when clicked on with a mouse or when the user presses SPACE, ENTER, or the HotKey. The hot key is the first letter or digit following the first underscore ('_') in the button text. Use HotKeySpecifier to change the hot key specifier from the default of ('_'). If no hot key specifier is found, the first uppercase letter encountered will be used as the hot key. When the button is configured as the default (IsDefault) and the user presses the ENTER key, if no other View processes the KeyEventArgs, the Button's Clicked event will will be fired. Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Button : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Button() Initializes a new instance of Button using Computed layout. Declaration public Button() | Improve this Doc View Source Button(int, int, string, bool) Initializes a new instance of Button using Absolute layout, based on the given text. Declaration public Button(int x, int y, string text, bool is_default) Parameters Type Name Description int x X position where the button will be shown. int y Y position where the button will be shown. string text The button's text bool is_default If true, a special decoration is used, and the user pressing the enter key in a Dialog will implicitly activate this button. | Improve this Doc View Source Button(int, int, string) Initializes a new instance of Button using Absolute layout, based on the given text Declaration public Button(int x, int y, string text) Parameters Type Name Description int x X position where the button will be shown. int y Y position where the button will be shown. string text The button's text | Improve this Doc View Source Button(string, bool) Initializes a new instance of Button using Computed layout. Declaration public Button(string text, bool is_default = false) Parameters Type Name Description string text The button's text bool is_default If true, a special decoration is used, and the user pressing the enter key in a Dialog will implicitly activate this button. Properties | Improve this Doc View Source HotKey Gets or sets the hot key defined for this view. Pressing the hot key on the keyboard while this view has focus will cause the MouseClick event to fire. See for an overview of Terminal.Gui keyboard APIs. HotKey - A keyboard chord composed of the Alt key and another character that selects a visible UI item. For example, in a Dialog, a Button with the text of \"_Text\" can be selected with Alt-T. Or, in a Menu with \"_File _Edit\", Alt-F will select (show) the File menu. If the \"_File\" menu has a sub-menu of \"_New\" Alt-N will ONLY select the \"_New\" sub-menu if the \"_File\" menu is already opened. This API is a helper API for configuring a key binding for the hot key. It uses the HotKey to determine the hot key from Title by looking for the first character prefixed with HotKeySpecifier. If the hot key is changed, the HotKeyChanged event is fired. Declaration public override Key HotKey { get; set; } Property Value Type Description Key Overrides View.HotKey | Improve this Doc View Source IsDefault Gets or sets whether the Button is the default action to activate in a dialog. Declaration public bool IsDefault { get; set; } Property Value Type Description bool true if is default; otherwise, false. | Improve this Doc View Source NoDecorations Declaration public bool NoDecorations { get; set; } Property Value Type Description bool | Improve this Doc View Source NoPadding Declaration public bool NoPadding { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnClicked() Virtual method to invoke the Clicked event. Declaration public virtual void OnClicked() | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source UpdateTextFormatterText() Can be overridden if the Text has different format than the default. Declaration protected override void UpdateTextFormatterText() Overrides View.UpdateTextFormatterText() Events | Improve this Doc View Source Clicked The event fired when the user clicks the primary mouse button within the Bounds of this View or if the user presses the action key while this view is focused. (TODO: IsDefault) Declaration public event EventHandler Clicked Event Type Type Description EventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Cell.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Cell.html",
    "title": "Class Cell",
    "keywords": "Class Cell Represents a single row/column in a Terminal.Gui rendering surface (e.g. LineCanvas and ConsoleDriver). Inheritance object Cell Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Cell Properties | Improve this Doc View Source Attribute The attributes to use when drawing the Glyph. Declaration public Attribute? Attribute { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source IsDirty Gets or sets a value indicating whether this Cell has been modified since the last time it was drawn. Declaration public bool IsDirty { get; set; } Property Value Type Description bool | Improve this Doc View Source Rune The character to display. If Rune is null, then Rune is ignored. Declaration public Rune Rune { get; set; } Property Value Type Description Rune"
  },
  "api/Terminal.Gui/Terminal.Gui.CellActivatedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CellActivatedEventArgs.html",
    "title": "Class CellActivatedEventArgs",
    "keywords": "Class CellActivatedEventArgs Defines the event arguments for CellActivated event Inheritance object EventArgs CellActivatedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CellActivatedEventArgs : EventArgs Constructors | Improve this Doc View Source CellActivatedEventArgs(ITableSource, int, int) Creates a new instance of arguments describing a cell being activated in TableView Declaration public CellActivatedEventArgs(ITableSource t, int col, int row) Parameters Type Name Description ITableSource t int col int row Properties | Improve this Doc View Source Col The column index of the Table cell that is being activated Declaration public int Col { get; } Property Value Type Description int | Improve this Doc View Source Row The row index of the Table cell that is being activated Declaration public int Row { get; } Property Value Type Description int | Improve this Doc View Source Table The current table to which the new indexes refer. May be null e.g. if selection change is the result of clearing the table from the view Declaration public ITableSource Table { get; } Property Value Type Description ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.CellColorGetterArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CellColorGetterArgs.html",
    "title": "Class CellColorGetterArgs",
    "keywords": "Class CellColorGetterArgs Arguments for a CellColorGetterDelegate. Describes a cell for which a rendering ColorScheme is being sought Inheritance object CellColorGetterArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CellColorGetterArgs Properties | Improve this Doc View Source CellValue The hard typed value being rendered in the cell for which color is needed Declaration public object CellValue { get; } Property Value Type Description object | Improve this Doc View Source ColIdex The index of column in Table for which color is needed Declaration public int ColIdex { get; } Property Value Type Description int | Improve this Doc View Source Representation The textual representation of CellValue (what will actually be drawn to the screen) Declaration public string Representation { get; } Property Value Type Description string | Improve this Doc View Source RowIndex The index of the row in Table for which color is needed Declaration public int RowIndex { get; } Property Value Type Description int | Improve this Doc View Source RowScheme the color scheme that is going to be used to render the cell if no cell specific color scheme is returned Declaration public ColorScheme RowScheme { get; } Property Value Type Description ColorScheme | Improve this Doc View Source Table The data table hosted by the TableView control. Declaration public ITableSource Table { get; } Property Value Type Description ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.CellColorGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CellColorGetterDelegate.html",
    "title": "Delegate CellColorGetterDelegate",
    "keywords": "Delegate CellColorGetterDelegate Delegate for providing color to TableView cells based on the value being rendered Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public delegate ColorScheme CellColorGetterDelegate(CellColorGetterArgs args) Parameters Type Name Description CellColorGetterArgs args Contains information about the cell for which color is needed Returns Type Description ColorScheme"
  },
  "api/Terminal.Gui/Terminal.Gui.CellToggledEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CellToggledEventArgs.html",
    "title": "Class CellToggledEventArgs",
    "keywords": "Class CellToggledEventArgs Event args for the CellToggled event. Inheritance object EventArgs CellToggledEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CellToggledEventArgs : EventArgs Constructors | Improve this Doc View Source CellToggledEventArgs(ITableSource, int, int) Creates a new instance of arguments describing a cell being toggled in TableView Declaration public CellToggledEventArgs(ITableSource t, int col, int row) Parameters Type Name Description ITableSource t int col int row Properties | Improve this Doc View Source Cancel Gets or sets whether to cancel the processing of this event Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Col The column index of the Table cell that is being toggled Declaration public int Col { get; } Property Value Type Description int | Improve this Doc View Source Row The row index of the Table cell that is being toggled Declaration public int Row { get; } Property Value Type Description int | Improve this Doc View Source Table The current table to which the new indexes refer. May be null e.g. if selection change is the result of clearing the table from the view Declaration public ITableSource Table { get; } Property Value Type Description ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.CheckBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CheckBox.html",
    "title": "Class CheckBox",
    "keywords": "Class CheckBox The CheckBox View shows an on/off toggle that the user can set Inheritance object Responder View CheckBox Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CheckBox : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source CheckBox() Initializes a new instance of CheckBox based on the given text, using Computed layout. Declaration public CheckBox() | Improve this Doc View Source CheckBox(int, int, string, bool) Initializes a new instance of CheckBox using Absolute layout. Declaration public CheckBox(int x, int y, string s, bool is_checked) Parameters Type Name Description int x int y string s bool is_checked | Improve this Doc View Source CheckBox(int, int, string) Initializes a new instance of CheckBox using Absolute layout. Declaration public CheckBox(int x, int y, string s) Parameters Type Name Description int x int y string s | Improve this Doc View Source CheckBox(string, bool) Initializes a new instance of CheckBox based on the given text, using Computed layout. Declaration public CheckBox(string s, bool is_checked = false) Parameters Type Name Description string s S. bool is_checked If set to true is checked. Properties | Improve this Doc View Source AllowNullChecked If true allows Checked to be null, true or false. If false only allows Checked to be true or false. Declaration public bool AllowNullChecked { get; set; } Property Value Type Description bool | Improve this Doc View Source Checked The state of the CheckBox Declaration public bool? Checked { get; set; } Property Value Type Description bool? | Improve this Doc View Source HotKey Gets or sets the hot key defined for this view. Pressing the hot key on the keyboard while this view has focus will cause the MouseClick event to fire. See for an overview of Terminal.Gui keyboard APIs. HotKey - A keyboard chord composed of the Alt key and another character that selects a visible UI item. For example, in a Dialog, a Button with the text of \"_Text\" can be selected with Alt-T. Or, in a Menu with \"_File _Edit\", Alt-F will select (show) the File menu. If the \"_File\" menu has a sub-menu of \"_New\" Alt-N will ONLY select the \"_New\" sub-menu if the \"_File\" menu is already opened. This API is a helper API for configuring a key binding for the hot key. It uses the HotKey to determine the hot key from Title by looking for the first character prefixed with HotKeySpecifier. If the hot key is changed, the HotKeyChanged event is fired. Declaration public override Key HotKey { get; set; } Property Value Type Description Key Overrides View.HotKey Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnToggled(ToggleEventArgs) Called when the Checked property changes. Invokes the Toggled event. Declaration public virtual void OnToggled(ToggleEventArgs e) Parameters Type Name Description ToggleEventArgs e | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source UpdateTextFormatterText() Can be overridden if the Text has different format than the default. Declaration protected override void UpdateTextFormatterText() Overrides View.UpdateTextFormatterText() Events | Improve this Doc View Source Toggled Toggled event, raised when the CheckBox is toggled. Declaration public event EventHandler<ToggleEventArgs> Toggled Event Type Type Description EventHandler<ToggleEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperBase.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperBase.html",
    "title": "Class CheckBoxTableSourceWrapperBase",
    "keywords": "Class CheckBoxTableSourceWrapperBase ITableSource for a TableView which adds a checkbox column as an additional column in the table. Inheritance object CheckBoxTableSourceWrapperBase CheckBoxTableSourceWrapperByIndex CheckBoxTableSourceWrapperByObject<T> Implements ITableSource Remarks This class wraps another ITableSource and dynamically serves its rows/cols plus an extra column. Data in the wrapped source can be dynamic (change over time). Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class CheckBoxTableSourceWrapperBase : ITableSource Constructors | Improve this Doc View Source CheckBoxTableSourceWrapperBase(TableView, ITableSource) Creates a new instance of the class presenting the data in toWrap plus an additional checkbox column. Declaration public CheckBoxTableSourceWrapperBase(TableView tableView, ITableSource toWrap) Parameters Type Name Description TableView tableView The TableView this source will be used with. This is required for event registration. ITableSource toWrap The original data source of the TableView that you want to add checkboxes to. Properties | Improve this Doc View Source CheckedRune Gets or sets the character to use for checked entries. Defaults to Checked Declaration public Rune CheckedRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration public string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration public int Columns { get; } Property Value Type Description int | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration public object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source RadioCheckedRune Gets or sets the character to use for checked entry when UseRadioButtons is true. Defaults to Selected Declaration public Rune RadioCheckedRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source RadioUnCheckedRune Gets or sets the character to use for unchecked entries when UseRadioButtons is true. Defaults to UnSelected Declaration public Rune RadioUnCheckedRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration public int Rows { get; } Property Value Type Description int | Improve this Doc View Source UnCheckedRune Gets or sets the character to use for UnChecked entries. Defaults to UnChecked Declaration public Rune UnCheckedRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source UseRadioButtons Gets or sets whether to only allow a single row to be toggled at once (Radio button). Declaration public bool UseRadioButtons { get; set; } Property Value Type Description bool | Improve this Doc View Source Wrapping Gets the ITableSource that this instance is wrapping. Declaration public ITableSource Wrapping { get; } Property Value Type Description ITableSource Methods | Improve this Doc View Source ClearAllToggles() Clears the toggled state of all rows. Declaration protected abstract void ClearAllToggles() | Improve this Doc View Source IsChecked(int) Returns true if row is checked. Declaration protected abstract bool IsChecked(int row) Parameters Type Name Description int row Returns Type Description bool | Improve this Doc View Source ToggleAllRows() Called when the 'toggled all' action is performed. This should change state from 'some selected' to 'all selected' or clear selection if all area already selected. Declaration protected abstract void ToggleAllRows() | Improve this Doc View Source ToggleRow(int) Flips the checked state of the given row/ Declaration protected abstract void ToggleRow(int row) Parameters Type Name Description int row | Improve this Doc View Source ToggleRows(int[]) Flips the checked state for a collection of rows. If some (but not all) are selected they should flip to all selected. Declaration protected abstract void ToggleRows(int[] range) Parameters Type Name Description int[] range Implements ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperByIndex.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperByIndex.html",
    "title": "Class CheckBoxTableSourceWrapperByIndex",
    "keywords": "Class CheckBoxTableSourceWrapperByIndex Implementation of CheckBoxTableSourceWrapperBase which records toggled rows by their row number. Inheritance object CheckBoxTableSourceWrapperBase CheckBoxTableSourceWrapperByIndex Implements ITableSource Inherited Members CheckBoxTableSourceWrapperBase.CheckedRune CheckBoxTableSourceWrapperBase.UnCheckedRune CheckBoxTableSourceWrapperBase.UseRadioButtons CheckBoxTableSourceWrapperBase.RadioCheckedRune CheckBoxTableSourceWrapperBase.RadioUnCheckedRune CheckBoxTableSourceWrapperBase.Wrapping CheckBoxTableSourceWrapperBase.this[int, int] CheckBoxTableSourceWrapperBase.Rows CheckBoxTableSourceWrapperBase.Columns CheckBoxTableSourceWrapperBase.ColumnNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CheckBoxTableSourceWrapperByIndex : CheckBoxTableSourceWrapperBase, ITableSource Constructors | Improve this Doc View Source CheckBoxTableSourceWrapperByIndex(TableView, ITableSource) Creates a new instance of the class presenting the data in toWrap plus an additional checkbox column. Declaration public CheckBoxTableSourceWrapperByIndex(TableView tableView, ITableSource toWrap) Parameters Type Name Description TableView tableView The TableView this source will be used with. This is required for event registration. ITableSource toWrap The original data source of the TableView that you want to add checkboxes to. Properties | Improve this Doc View Source CheckedRows Gets the collection of all the checked rows in the Wrapping ITableSource. Declaration public HashSet<int> CheckedRows { get; } Property Value Type Description HashSet<int> Methods | Improve this Doc View Source ClearAllToggles() Clears the toggled state of all rows. Declaration protected override void ClearAllToggles() Overrides CheckBoxTableSourceWrapperBase.ClearAllToggles() | Improve this Doc View Source IsChecked(int) Returns true if row is checked. Declaration protected override bool IsChecked(int row) Parameters Type Name Description int row Returns Type Description bool Overrides CheckBoxTableSourceWrapperBase.IsChecked(int) | Improve this Doc View Source ToggleAllRows() Called when the 'toggled all' action is performed. This should change state from 'some selected' to 'all selected' or clear selection if all area already selected. Declaration protected override void ToggleAllRows() Overrides CheckBoxTableSourceWrapperBase.ToggleAllRows() | Improve this Doc View Source ToggleRow(int) Flips the checked state of the given row/ Declaration protected override void ToggleRow(int row) Parameters Type Name Description int row Overrides CheckBoxTableSourceWrapperBase.ToggleRow(int) | Improve this Doc View Source ToggleRows(int[]) Flips the checked state for a collection of rows. If some (but not all) are selected they should flip to all selected. Declaration protected override void ToggleRows(int[] range) Parameters Type Name Description int[] range Overrides CheckBoxTableSourceWrapperBase.ToggleRows(int[]) Implements ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperByObject-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CheckBoxTableSourceWrapperByObject-1.html",
    "title": "Class CheckBoxTableSourceWrapperByObject<T>",
    "keywords": "Class CheckBoxTableSourceWrapperByObject<T> Implementation of CheckBoxTableSourceWrapperBase which records toggled rows by a property on row objects. Inheritance object CheckBoxTableSourceWrapperBase CheckBoxTableSourceWrapperByObject<T> Implements ITableSource Inherited Members CheckBoxTableSourceWrapperBase.CheckedRune CheckBoxTableSourceWrapperBase.UnCheckedRune CheckBoxTableSourceWrapperBase.UseRadioButtons CheckBoxTableSourceWrapperBase.RadioCheckedRune CheckBoxTableSourceWrapperBase.RadioUnCheckedRune CheckBoxTableSourceWrapperBase.Wrapping CheckBoxTableSourceWrapperBase.this[int, int] CheckBoxTableSourceWrapperBase.Rows CheckBoxTableSourceWrapperBase.Columns CheckBoxTableSourceWrapperBase.ColumnNames object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CheckBoxTableSourceWrapperByObject<T> : CheckBoxTableSourceWrapperBase, ITableSource Type Parameters Name Description T Constructors | Improve this Doc View Source CheckBoxTableSourceWrapperByObject(TableView, IEnumerableTableSource<T>, Func<T, bool>, Action<T, bool>) Creates a new instance of the class wrapping the collection toWrap. Declaration public CheckBoxTableSourceWrapperByObject(TableView tableView, IEnumerableTableSource<T> toWrap, Func<T, bool> getter, Action<T, bool> setter) Parameters Type Name Description TableView tableView The table you will use the source with. IEnumerableTableSource<T> toWrap The collection of objects you will record checked state for Func<T, bool> getter Delegate method for retrieving checked state from your objects of type T. Action<T, bool> setter Delegate method for setting new checked states on your objects of type T. Methods | Improve this Doc View Source ClearAllToggles() Clears the toggled state of all rows. Declaration protected override void ClearAllToggles() Overrides CheckBoxTableSourceWrapperBase.ClearAllToggles() | Improve this Doc View Source IsChecked(int) Returns true if row is checked. Declaration protected override bool IsChecked(int row) Parameters Type Name Description int row Returns Type Description bool Overrides CheckBoxTableSourceWrapperBase.IsChecked(int) | Improve this Doc View Source ToggleAllRows() Called when the 'toggled all' action is performed. This should change state from 'some selected' to 'all selected' or clear selection if all area already selected. Declaration protected override void ToggleAllRows() Overrides CheckBoxTableSourceWrapperBase.ToggleAllRows() | Improve this Doc View Source ToggleRow(int) Flips the checked state of the given row/ Declaration protected override void ToggleRow(int row) Parameters Type Name Description int row Overrides CheckBoxTableSourceWrapperBase.ToggleRow(int) | Improve this Doc View Source ToggleRows(int[]) Flips the checked state for a collection of rows. If some (but not all) are selected they should flip to all selected. Declaration protected override void ToggleRows(int[] range) Parameters Type Name Description int[] range Overrides CheckBoxTableSourceWrapperBase.ToggleRows(int[]) Implements ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.Clipboard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Clipboard.html",
    "title": "Class Clipboard",
    "keywords": "Class Clipboard Provides cut, copy, and paste support for the OS clipboard. Inheritance object Clipboard Remarks On Windows, the Clipboard class uses the Windows Clipboard APIs via P/Invoke. On Linux, when not running under Windows Subsystem for Linux (WSL), the Clipboard class uses the xclip command line tool. If xclip is not installed, the clipboard will not work. On Linux, when running under Windows Subsystem for Linux (WSL), the Clipboard class launches Windows' powershell.exe via WSL interop and uses the \"Set-Clipboard\" and \"Get-Clipboard\" Powershell CmdLets. On the Mac, the Clipboard class uses the MacO OS X pbcopy and pbpaste command line tools and the Mac clipboard APIs vai P/Invoke. Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class Clipboard Properties | Improve this Doc View Source Contents Gets (copies from) or sets (pastes to) the contents of the OS clipboard. Declaration public static string Contents { get; set; } Property Value Type Description string | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard. Declaration public static bool IsSupported { get; } Property Value Type Description bool Methods | Improve this Doc View Source TryGetClipboardData(out string) Copies the _contents of the OS clipboard to result if possible. Declaration public static bool TryGetClipboardData(out string result) Parameters Type Name Description string result The _contents of the OS clipboard if successful, Empty if not. Returns Type Description bool true the OS clipboard was retrieved, false otherwise. | Improve this Doc View Source TrySetClipboardData(string) Pastes the text to the OS clipboard if possible. Declaration public static bool TrySetClipboardData(string text) Parameters Type Name Description string text The text to paste to the OS clipboard. Returns Type Description bool true the OS clipboard was set, false otherwise."
  },
  "api/Terminal.Gui/Terminal.Gui.ClipboardBase.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ClipboardBase.html",
    "title": "Class ClipboardBase",
    "keywords": "Class ClipboardBase Shared abstract class to enforce rules from the implementation of the IClipboard interface. Inheritance object ClipboardBase FakeDriver.FakeClipboard Implements IClipboard Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class ClipboardBase : IClipboard Properties | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard Declaration public abstract bool IsSupported { get; } Property Value Type Description bool Methods | Improve this Doc View Source GetClipboardData() Returns the contents of the OS clipboard if possible. Declaration public string GetClipboardData() Returns Type Description string The contents of the OS clipboard if successful. Exceptions Type Condition NotSupportedException Thrown if it was not possible to copy from the OS clipboard. | Improve this Doc View Source GetClipboardDataImpl() Returns the contents of the OS clipboard if possible. Implemented by ConsoleDriver-specific subclasses. Declaration protected abstract string GetClipboardDataImpl() Returns Type Description string The contents of the OS clipboard if successful. Exceptions Type Condition NotSupportedException Thrown if it was not possible to copy from the OS clipboard. | Improve this Doc View Source SetClipboardData(string) Pastes the text to the OS clipboard if possible. Declaration public void SetClipboardData(string text) Parameters Type Name Description string text The text to paste to the OS clipboard. Exceptions Type Condition NotSupportedException Thrown if it was not possible to paste to the OS clipboard. | Improve this Doc View Source SetClipboardDataImpl(string) Pastes the text to the OS clipboard if possible. Implemented by ConsoleDriver-specific subclasses. Declaration protected abstract void SetClipboardDataImpl(string text) Parameters Type Name Description string text The text to paste to the OS clipboard. Exceptions Type Condition NotSupportedException Thrown if it was not possible to paste to the OS clipboard. | Improve this Doc View Source TryGetClipboardData(out string) Copies the contents of the OS clipboard to result if possible. Declaration public bool TryGetClipboardData(out string result) Parameters Type Name Description string result The contents of the OS clipboard if successful. Returns Type Description bool true the OS clipboard was retrieved, false otherwise. | Improve this Doc View Source TrySetClipboardData(string) Pastes the text to the OS clipboard if possible. Declaration public bool TrySetClipboardData(string text) Parameters Type Name Description string text The text to paste to the OS clipboard. Returns Type Description bool true the OS clipboard was set, false otherwise. Implements IClipboard"
  },
  "api/Terminal.Gui/Terminal.Gui.CollectionNavigator.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CollectionNavigator.html",
    "title": "Class CollectionNavigator",
    "keywords": "Class CollectionNavigator Navigates a collection of items using keystrokes. The keystrokes are used to build a search string. The SearchString is used to find the next item in the collection that matches the search string when GetNextMatchingItem(int, char) is called. If the user types keystrokes that can't be found in the collection, the search string is cleared and the next item is found that starts with the last keystroke. If the user pauses keystrokes for a short time (see TypingDelay), the search string is cleared. Inheritance object CollectionNavigatorBase CollectionNavigator Remarks This implementation is based on a static Collection of objects. Inherited Members CollectionNavigatorBase.TypingDelay CollectionNavigatorBase.Comparer CollectionNavigatorBase.SearchStringChanged CollectionNavigatorBase.SearchString CollectionNavigatorBase.OnSearchStringChanged(KeystrokeNavigatorEventArgs) CollectionNavigatorBase.GetNextMatchingItem(int, char) CollectionNavigatorBase.IsCompatibleKey(KeyEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class CollectionNavigator : CollectionNavigatorBase Constructors | Improve this Doc View Source CollectionNavigator() Constructs a new CollectionNavigator. Declaration public CollectionNavigator() | Improve this Doc View Source CollectionNavigator(IList) Constructs a new CollectionNavigator for the given collection. Declaration public CollectionNavigator(IList collection) Parameters Type Name Description IList collection Properties | Improve this Doc View Source Collection The collection of objects to search. ToString() is used to search the collection. Declaration public IList Collection { get; set; } Property Value Type Description IList Methods | Improve this Doc View Source ElementAt(int) Returns the collection being navigated element at idx. Declaration protected override object ElementAt(int idx) Parameters Type Name Description int idx Returns Type Description object Overrides CollectionNavigatorBase.ElementAt(int) | Improve this Doc View Source GetCollectionLength() Return the number of elements in the collection Declaration protected override int GetCollectionLength() Returns Type Description int Overrides CollectionNavigatorBase.GetCollectionLength()"
  },
  "api/Terminal.Gui/Terminal.Gui.CollectionNavigatorBase.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CollectionNavigatorBase.html",
    "title": "Class CollectionNavigatorBase",
    "keywords": "Class CollectionNavigatorBase Navigates a collection of items using keystrokes. The keystrokes are used to build a search string. The SearchString is used to find the next item in the collection that matches the search string when GetNextMatchingItem(int, char) is called. If the user types keystrokes that can't be found in the collection, the search string is cleared and the next item is found that starts with the last keystroke. If the user pauses keystrokes for a short time (see TypingDelay), the search string is cleared. Inheritance object CollectionNavigatorBase CollectionNavigator TableCollectionNavigator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class CollectionNavigatorBase Properties | Improve this Doc View Source Comparer The compararer function to use when searching the collection. Declaration public StringComparer Comparer { get; set; } Property Value Type Description StringComparer | Improve this Doc View Source SearchString Gets the current search string. This includes the set of keystrokes that have been pressed since the last unsuccessful match or after TypingDelay) milliseconds. Useful for debugging. Declaration public string SearchString { get; } Property Value Type Description string | Improve this Doc View Source TypingDelay Gets or sets the number of milliseconds to delay before clearing the search string. The delay is reset on each call to GetNextMatchingItem(int, char). The default is 500ms. Declaration public int TypingDelay { get; set; } Property Value Type Description int Methods | Improve this Doc View Source ElementAt(int) Returns the collection being navigated element at idx. Declaration protected abstract object ElementAt(int idx) Parameters Type Name Description int idx Returns Type Description object | Improve this Doc View Source GetCollectionLength() Return the number of elements in the collection Declaration protected abstract int GetCollectionLength() Returns Type Description int | Improve this Doc View Source GetNextMatchingItem(int, char) Gets the index of the next item in the collection that matches the current SearchString plus the provided character (typically from a key press). Declaration public int GetNextMatchingItem(int currentIndex, char keyStruck) Parameters Type Name Description int currentIndex The index in the collection to start the search from. char keyStruck The character of the key the user pressed. Returns Type Description int The index of the item that matches what the user has typed. Returns -1 if no item in the collection matched. | Improve this Doc View Source IsCompatibleKey(KeyEventArgs) Returns true if a is a searchable key (e.g. letters, numbers, etc) that are valid to pass to this class for search filtering. Declaration public static bool IsCompatibleKey(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool | Improve this Doc View Source OnSearchStringChanged(KeystrokeNavigatorEventArgs) Invoked when the SearchString changes. Useful for debugging. Invokes the SearchStringChanged event. Declaration public virtual void OnSearchStringChanged(KeystrokeNavigatorEventArgs e) Parameters Type Name Description KeystrokeNavigatorEventArgs e Events | Improve this Doc View Source SearchStringChanged This event is invoked when SearchString changes. Useful for debugging. Declaration public event EventHandler<KeystrokeNavigatorEventArgs> SearchStringChanged Event Type Type Description EventHandler<KeystrokeNavigatorEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.Color.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Color.html",
    "title": "Class Color",
    "keywords": "Class Color Represents a 24-bit color. Provides automatic mapping between the legacy 4-bit (16 color) system and 24-bit colors (see ColorName). Used with Attribute. Inheritance object Color Implements IEquatable<Color> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(ColorJsonConverter))] public class Color : IEquatable<Color> Constructors | Improve this Doc View Source Color() Initializes a new instance of the Color. Declaration public Color() | Improve this Doc View Source Color(int, int, int, int) Initializes a new instance of the Color class. Declaration public Color(int red, int green, int blue, int alpha = 255) Parameters Type Name Description int red The red 8-bits. int green The green 8-bits. int blue The blue 8-bits. int alpha Optional; defaults to 0xFF. The Alpha channel is not supported by Terminal.Gui. | Improve this Doc View Source Color(int) Initializes a new instance of the Color class with an encoded 24-bit color value. Declaration public Color(int rgba) Parameters Type Name Description int rgba The encoded 24-bit color value (see Rgba). | Improve this Doc View Source Color(string) Initializes a new instance of the Color color from string. See TryParse(string, out Color) for details. Declaration public Color(string colorString) Parameters Type Name Description string colorString Exceptions Type Condition Exception | Improve this Doc View Source Color(ColorName) Initializes a new instance of the Color color from a legacy 16-color value. Declaration public Color(ColorName colorName) Parameters Type Name Description ColorName colorName The 16-color value. Fields | Improve this Doc View Source Black The black color. Declaration public const ColorName Black = Black Field Value Type Description ColorName | Improve this Doc View Source Blue The blue color. Declaration public const ColorName Blue = Blue Field Value Type Description ColorName | Improve this Doc View Source BrightBlue The bright bBlue color. Declaration public const ColorName BrightBlue = BrightBlue Field Value Type Description ColorName | Improve this Doc View Source BrightCyan The bright cyan color. Declaration public const ColorName BrightCyan = BrightCyan Field Value Type Description ColorName | Improve this Doc View Source BrightGreen The bright green color. Declaration public const ColorName BrightGreen = BrightGreen Field Value Type Description ColorName | Improve this Doc View Source BrightMagenta The bright magenta color. Declaration public const ColorName BrightMagenta = BrightMagenta Field Value Type Description ColorName | Improve this Doc View Source BrightRed The bright red color. Declaration public const ColorName BrightRed = BrightRed Field Value Type Description ColorName | Improve this Doc View Source BrightYellow The bright yellow color. Declaration public const ColorName BrightYellow = BrightYellow Field Value Type Description ColorName | Improve this Doc View Source Cyan The cyan color. Declaration public const ColorName Cyan = Cyan Field Value Type Description ColorName | Improve this Doc View Source DarkGray The dark gray color. Declaration public const ColorName DarkGray = DarkGray Field Value Type Description ColorName | Improve this Doc View Source Gray The gray color. Declaration public const ColorName Gray = Gray Field Value Type Description ColorName | Improve this Doc View Source Green The green color. Declaration public const ColorName Green = Green Field Value Type Description ColorName | Improve this Doc View Source Magenta The magenta color. Declaration public const ColorName Magenta = Magenta Field Value Type Description ColorName | Improve this Doc View Source Red The red color. Declaration public const ColorName Red = Red Field Value Type Description ColorName | Improve this Doc View Source White The White color. Declaration public const ColorName White = White Field Value Type Description ColorName | Improve this Doc View Source Yellow The yellow color. Declaration public const ColorName Yellow = Yellow Field Value Type Description ColorName Properties | Improve this Doc View Source A Alpha color component. Declaration public int A { get; set; } Property Value Type Description int | Improve this Doc View Source B Blue color component. Declaration public int B { get; set; } Property Value Type Description int | Improve this Doc View Source ColorName Gets or sets the Color using a legacy 16-color ColorName value. get will return the closest 16 color match to the true color when no exact value is found. Declaration public ColorName ColorName { get; set; } Property Value Type Description ColorName | Improve this Doc View Source Colors Gets or sets the 24-bit color value for each of the legacy 16-color values. Declaration public static Dictionary<ColorName, string> Colors { get; set; } Property Value Type Description Dictionary<ColorName, string> | Improve this Doc View Source G Green color component. Declaration public int G { get; set; } Property Value Type Description int | Improve this Doc View Source R Red color component. Declaration public int R { get; set; } Property Value Type Description int | Improve this Doc View Source Rgba Gets or sets the color value encoded as ARGB32. (<see cref=\"A\"/> << 24) | (<see cref=\"R\"/> << 16) | (<see cref=\"G\"/> << 8) | <see cref=\"B\"/> Declaration public int Rgba { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Improve this Doc View Source Equals(Color) Declaration public bool Equals(Color other) Parameters Type Name Description Color other Returns Type Description bool | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Improve this Doc View Source ToString() Converts the color to a string representation. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() | Improve this Doc View Source TryParse(string, out Color) Converts the provided string to a new Color instance. Declaration public static bool TryParse(string text, out Color color) Parameters Type Name Description string text The text to analyze. Formats supported are \"#RGB\", \"#RRGGBB\", \"#RGBA\", \"#RRGGBBAA\", \"rgb(r,g,b)\", \"rgb(r,g,b,a)\", and any of the ColorName. Color color The parsed value. Returns Type Description bool A boolean value indicating whether parsing was successful. Operators | Improve this Doc View Source operator ==(Color, Color) Equality operator for two Color objects.. Declaration public static bool operator ==(Color left, Color right) Parameters Type Name Description Color left Color right Returns Type Description bool | Improve this Doc View Source operator ==(Color, ColorName) Equality operator for Color and ColorName objects. Declaration public static bool operator ==(Color left, ColorName right) Parameters Type Name Description Color left ColorName right Returns Type Description bool | Improve this Doc View Source operator ==(ColorName, Color) Equality operator for Color and ColorName objects. Declaration public static bool operator ==(ColorName left, Color right) Parameters Type Name Description ColorName left Color right Returns Type Description bool | Improve this Doc View Source explicit operator int(Color) Cast to int. Declaration public static explicit operator int(Color color) Parameters Type Name Description Color color Returns Type Description int | Improve this Doc View Source explicit operator ColorName(Color) Cast to ColorName. Declaration public static explicit operator ColorName(Color color) Parameters Type Name Description Color color Returns Type Description ColorName | Improve this Doc View Source explicit operator Color(ColorName) Cast from ColorName. Declaration public static explicit operator Color(ColorName colorName) Parameters Type Name Description ColorName colorName Returns Type Description Color | Improve this Doc View Source implicit operator Color(int) Cast from int. Declaration public static implicit operator Color(int rgba) Parameters Type Name Description int rgba Returns Type Description Color | Improve this Doc View Source operator !=(Color, Color) Inequality operator for two Color objects. Declaration public static bool operator !=(Color left, Color right) Parameters Type Name Description Color left Color right Returns Type Description bool | Improve this Doc View Source operator !=(Color, ColorName) Inequality operator for Color and ColorName objects. Declaration public static bool operator !=(Color left, ColorName right) Parameters Type Name Description Color left ColorName right Returns Type Description bool | Improve this Doc View Source operator !=(ColorName, Color) Inequality operator for Color and ColorName objects. Declaration public static bool operator !=(ColorName left, Color right) Parameters Type Name Description ColorName left Color right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ColorEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorEventArgs.html",
    "title": "Class ColorEventArgs",
    "keywords": "Class ColorEventArgs Event arguments for the Color events. Inheritance object EventArgs ColorEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ColorEventArgs : EventArgs Constructors | Improve this Doc View Source ColorEventArgs() Initializes a new instance of ColorEventArgs Declaration public ColorEventArgs() Properties | Improve this Doc View Source Color The new Thickness. Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source PreviousColor The previous Thickness. Declaration public Color PreviousColor { get; set; } Property Value Type Description Color"
  },
  "api/Terminal.Gui/Terminal.Gui.ColorName.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorName.html",
    "title": "Enum ColorName",
    "keywords": "Enum ColorName Defines the 16 legacy color names and values that can be used to set the foreground and background colors in Terminal.Gui apps. Used with Color. Remarks These colors match the 16 colors defined for ANSI escape sequences for 4-bit (16) colors. For terminals that support 24-bit color (TrueColor), the RGB values for each of these colors can be configured using the Colors property. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum ColorName Fields Name Description Black The black color. ANSI escape sequence: \\u001b[30m. Blue The blue color. ANSI escape sequence: \\u001b[34m. BrightBlue The bright blue color. ANSI escape sequence: \\u001b[34;1m. BrightCyan The bright cyan color. ANSI escape sequence: \\u001b[36;1m. BrightGreen The bright green color. ANSI escape sequence: \\u001b[32;1m. BrightMagenta The bright magenta color. ANSI escape sequence: \\u001b[35;1m. BrightRed The bright red color. ANSI escape sequence: \\u001b[31;1m. BrightYellow The bright yellow color. ANSI escape sequence: \\u001b[33;1m. Cyan The cyan color. ANSI escape sequence: \\u001b[36m. DarkGray The dark gray color (also known as Bright Black). ANSI escape sequence: \\u001b[30;1m. Gray The gray color (also known as White). ANSI escape sequence: \\u001b[37m. Green The green color. ANSI escape sequence: \\u001b[32m. Magenta The magenta color. ANSI escape sequence: \\u001b[35m. Red The red color. ANSI escape sequence: \\u001b[31m. White The White color (also known as Bright White). ANSI escape sequence: \\u001b[37;1m. Yellow The yellow color (also known as Brown). ANSI escape sequence: \\u001b[33m."
  },
  "api/Terminal.Gui/Terminal.Gui.ColorPicker.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorPicker.html",
    "title": "Class ColorPicker",
    "keywords": "Class ColorPicker The ColorPicker View Color picker. Inheritance object Responder View ColorPicker Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ColorPicker : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ColorPicker() Initializes a new instance of ColorPicker. Declaration public ColorPicker() Properties | Improve this Doc View Source BoxHeight Height of a color box Declaration public int BoxHeight { get; set; } Property Value Type Description int | Improve this Doc View Source BoxWidth Width of a color box Declaration public int BoxWidth { get; set; } Property Value Type Description int | Improve this Doc View Source Cursor Cursor for the selected color. Declaration public Point Cursor { get; set; } Property Value Type Description Point | Improve this Doc View Source SelectedColor Selected color. Declaration public ColorName SelectedColor { get; set; } Property Value Type Description ColorName Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveDown() Moves the selected item index to the next row. Declaration public virtual bool MoveDown() Returns Type Description bool | Improve this Doc View Source MoveLeft() Moves the selected item index to the previous column. Declaration public virtual bool MoveLeft() Returns Type Description bool | Improve this Doc View Source MoveRight() Moves the selected item index to the next column. Declaration public virtual bool MoveRight() Returns Type Description bool | Improve this Doc View Source MoveUp() Moves the selected item index to the previous row. Declaration public virtual bool MoveUp() Returns Type Description bool | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) Events | Improve this Doc View Source ColorChanged Fired when a color is picked. Declaration public event EventHandler<ColorEventArgs> ColorChanged Event Type Type Description EventHandler<ColorEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Colors.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Colors.html",
    "title": "Class Colors",
    "keywords": "Class Colors The default ColorSchemes for the application. Inheritance object Colors Remarks This property can be set in a Theme to change the default Colors for the application. Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class Colors Properties | Improve this Doc View Source Base The base color scheme, for the default Toplevel views. Declaration public static ColorScheme Base { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source ColorSchemes Provides the defined ColorSchemes. Declaration [JsonConverter(typeof(DictionaryJsonConverter<ColorScheme>))] public static Dictionary<string, ColorScheme> ColorSchemes { get; } Property Value Type Description Dictionary<string, ColorScheme> | Improve this Doc View Source Dialog The dialog color scheme, for standard popup dialog boxes Declaration public static ColorScheme Dialog { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Error The color scheme for showing errors. Declaration public static ColorScheme Error { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Menu The menu bar color Declaration public static ColorScheme Menu { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source TopLevel The application Toplevel color scheme, for the default Toplevel views. Declaration public static ColorScheme TopLevel { get; set; } Property Value Type Description ColorScheme Methods | Improve this Doc View Source Create() Creates a new dictionary of new ColorScheme objects. Declaration public static Dictionary<string, ColorScheme> Create() Returns Type Description Dictionary<string, ColorScheme>"
  },
  "api/Terminal.Gui/Terminal.Gui.ColorScheme.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColorScheme.html",
    "title": "Class ColorScheme",
    "keywords": "Class ColorScheme Defines the Attributes for common visible elements in a View. Containers such as Window and FrameView use ColorScheme to determine the colors used by sub-views. Inheritance object ColorScheme Implements IEquatable<ColorScheme> Remarks See also: ColorSchemes. Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(ColorSchemeJsonConverter))] public class ColorScheme : IEquatable<ColorScheme> Constructors | Improve this Doc View Source ColorScheme() Creates a new instance. Declaration public ColorScheme() | Improve this Doc View Source ColorScheme(Attribute) Creates a new instance, initialized with the values from attribute. Declaration public ColorScheme(Attribute attribute) Parameters Type Name Description Attribute attribute The attribute to initialize the new instance with. | Improve this Doc View Source ColorScheme(ColorScheme) Creates a new instance, initialized with the values from scheme. Declaration public ColorScheme(ColorScheme scheme) Parameters Type Name Description ColorScheme scheme The scheme to initialize the new instance with. Properties | Improve this Doc View Source Disabled The default foreground and background color for text, when the view is disabled. Declaration public Attribute Disabled { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Focus The foreground and background color for text when the view has the focus. Declaration public Attribute Focus { get; set; } Property Value Type Description Attribute | Improve this Doc View Source HotFocus The foreground and background color for text when the view is highlighted (hot) and has focus. Declaration public Attribute HotFocus { get; set; } Property Value Type Description Attribute | Improve this Doc View Source HotNormal The foreground and background color for text when the view is highlighted (hot). Declaration public Attribute HotNormal { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Normal The foreground and background color for text when the view is not focused, hot, or disabled. Declaration public Attribute Normal { get; set; } Property Value Type Description Attribute Methods | Improve this Doc View Source Equals(object) Compares two ColorScheme objects for equality. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool true if the two objects are equal Overrides object.Equals(object) | Improve this Doc View Source Equals(ColorScheme) Compares two ColorScheme objects for equality. Declaration public bool Equals(ColorScheme other) Parameters Type Name Description ColorScheme other Returns Type Description bool true if the two objects are equal | Improve this Doc View Source GetHashCode() Returns a hashcode for this instance. Declaration public override int GetHashCode() Returns Type Description int hashcode for this instance Overrides object.GetHashCode() Operators | Improve this Doc View Source operator ==(ColorScheme, ColorScheme) Compares two ColorScheme objects for equality. Declaration public static bool operator ==(ColorScheme left, ColorScheme right) Parameters Type Name Description ColorScheme left ColorScheme right Returns Type Description bool true if the two objects are equivalent | Improve this Doc View Source operator !=(ColorScheme, ColorScheme) Compares two ColorScheme objects for inequality. Declaration public static bool operator !=(ColorScheme left, ColorScheme right) Parameters Type Name Description ColorScheme left ColorScheme right Returns Type Description bool true if the two objects are not equivalent Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ColumnStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ColumnStyle.html",
    "title": "Class ColumnStyle",
    "keywords": "Class ColumnStyle Describes how to render a given column in a TableView including Alignment and textual representation of cells (e.g. date formats) See TableView Deep Dive for more information. Inheritance object ColumnStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ColumnStyle Fields | Improve this Doc View Source AlignmentGetter Defines a delegate for returning custom alignment per cell based on cell values. When specified this will override Alignment Declaration public Func<object, TextAlignment> AlignmentGetter Field Value Type Description Func<object, TextAlignment> | Improve this Doc View Source ColorGetter Defines a delegate for returning a custom color scheme per cell based on cell values. Return null for the default Declaration public CellColorGetterDelegate ColorGetter Field Value Type Description CellColorGetterDelegate | Improve this Doc View Source RepresentationGetter Defines a delegate for returning custom representations of cell values. If not set then ToString() is used. Return values from your delegate may be truncated e.g. based on MaxWidth Declaration public Func<object, string> RepresentationGetter Field Value Type Description Func<object, string> Properties | Improve this Doc View Source Alignment Defines the default alignment for all values rendered in this column. For custom alignment based on cell contents use AlignmentGetter. Declaration public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment | Improve this Doc View Source Format Defines the format for values e.g. \"yyyy-MM-dd\" for dates Declaration public string Format { get; set; } Property Value Type Description string | Improve this Doc View Source MaxWidth Set the maximum width of the column in characters. This value will be ignored if more than the tables MaxCellWidth. Defaults to DefaultMaxCellWidth Declaration public int MaxWidth { get; set; } Property Value Type Description int | Improve this Doc View Source MinAcceptableWidth Enables flexible sizing of this column based on available screen space to render into. Declaration public int MinAcceptableWidth { get; set; } Property Value Type Description int | Improve this Doc View Source MinWidth Set the minimum width of the column in characters. Setting this will ensure that even when a column has short content/header it still fills a given width of the control. This value will be ignored if more than the tables MaxCellWidth or the MaxWidth For setting a flexible column width (down to a lower limit) use MinAcceptableWidth instead Declaration public int MinWidth { get; set; } Property Value Type Description int | Improve this Doc View Source Visible Gets or Sets a value indicating whether the column should be visible to the user. This affects both whether it is rendered and whether it can be selected. Defaults to true. Declaration public bool Visible { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source GetAlignment(object) Returns the alignment for the cell based on cellValue and AlignmentGetter/Alignment Declaration public TextAlignment GetAlignment(object cellValue) Parameters Type Name Description object cellValue Returns Type Description TextAlignment | Improve this Doc View Source GetRepresentation(object) Returns the full string to render (which may be truncated if too long) that the current style says best represents the given value Declaration public string GetRepresentation(object value) Parameters Type Name Description object value Returns Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.ComboBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ComboBox.html",
    "title": "Class ComboBox",
    "keywords": "Class ComboBox Provides a drop-down list of items the user can select from. Inheritance object Responder View ComboBox Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ComboBox : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ComboBox() Public constructor Declaration public ComboBox() | Improve this Doc View Source ComboBox(IList) Initialize with the source. Declaration public ComboBox(IList source) Parameters Type Name Description IList source The source. | Improve this Doc View Source ComboBox(string) Public constructor Declaration public ComboBox(string text) Parameters Type Name Description string text | Improve this Doc View Source ComboBox(Rect, IList) Public constructor Declaration public ComboBox(Rect rect, IList source) Parameters Type Name Description Rect rect IList source Properties | Improve this Doc View Source ColorScheme Declaration public ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source HideDropdownListOnClick Gets or sets if the drop-down list can be hide with a button click event. Declaration public bool HideDropdownListOnClick { get; set; } Property Value Type Description bool | Improve this Doc View Source IsShow Gets the drop down list state, expanded or collapsed. Declaration public bool IsShow { get; } Property Value Type Description bool | Improve this Doc View Source ReadOnly If set to true its not allow any changes in the text. Declaration public bool ReadOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source SearchText Current search text Declaration public string SearchText { get; set; } Property Value Type Description string | Improve this Doc View Source SelectedItem Gets the index of the currently selected item in the Source Declaration public int SelectedItem { get; set; } Property Value Type Description int The selected item or -1 none selected. | Improve this Doc View Source Source Gets or sets the IListDataSource backing this ComboBox, enabling custom rendering. Declaration public IListDataSource Source { get; set; } Property Value Type Description IListDataSource The source. | Improve this Doc View Source Text The currently selected list item Declaration public string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Collapse() Collapses the drop down list. Returns true if the state chagned or false if it was already collapsed and no action was taken Declaration public virtual bool Collapse() Returns Type Description bool | Improve this Doc View Source Expand() Expands the drop down list. Returns true if the state chagned or false if it was already expanded and no action was taken Declaration public virtual bool Expand() Returns Type Description bool | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnCollapsed() Virtual method which invokes the Collapsed event. Declaration public virtual void OnCollapsed() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnExpanded() Virtual method which invokes the Expanded event. Declaration public virtual void OnExpanded() | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs e) Parameters Type Name Description KeyEventArgs e Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnOpenSelectedItem() Invokes the OnOpenSelectedItem event if it is defined. Declaration public virtual bool OnOpenSelectedItem() Returns Type Description bool | Improve this Doc View Source OnSelectedChanged() Invokes the SelectedChanged event if it is defined. Declaration public virtual bool OnSelectedChanged() Returns Type Description bool | Improve this Doc View Source SetSource(IList) Sets the source of the ComboBox to an IList. Declaration public void SetSource(IList source) Parameters Type Name Description IList source Events | Improve this Doc View Source Collapsed This event is raised when the drop-down list is collapsed. Declaration public event EventHandler Collapsed Event Type Type Description EventHandler | Improve this Doc View Source Expanded This event is raised when the drop-down list is expanded. Declaration public event EventHandler Expanded Event Type Type Description EventHandler | Improve this Doc View Source OpenSelectedItem This event is raised when the user Double Clicks on an item or presses ENTER to open the selected item. Declaration public event EventHandler<ListViewItemEventArgs> OpenSelectedItem Event Type Type Description EventHandler<ListViewItemEventArgs> | Improve this Doc View Source SelectedItemChanged This event is raised when the selected item in the ComboBox has changed. Declaration public event EventHandler<ListViewItemEventArgs> SelectedItemChanged Event Type Type Description EventHandler<ListViewItemEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Command.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Command.html",
    "title": "Enum Command",
    "keywords": "Enum Command Actions which can be performed by the application or bound to keys in a View control. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum Command Fields Name Description Accept Accepts the current state (e.g. selection, button press etc). BackTab Tabs back to the previous item. BottomEnd Moves to the bottom/end. BottomEndExtend Extends the selection to the bottom/end. Cancel Cancels an action or any temporary states on the control e.g. expanding a combo list. Collapse Collapses a list or item (with subitems). CollapseAll Recursively collapses a list items of their children (if any). Copy Copies the current selection. Cut Cuts the current selection. CutToEndLine Cuts to the clipboard the characters from the current position to the end of the line. CutToStartLine Cuts to the clipboard the characters from the current position to the start of the line. DeleteAll Deletes all objects. DeleteCharLeft Deletes the character on the left. DeleteCharRight Deletes the character on the right. DisableOverwrite Disables overwrite mode (EnableOverwrite) EnableOverwrite Enables overwrite mode such that newly typed text overwrites the text that is already there (typically associated with the Insert key). EndOfLine Moves the cursor to the end of line. EndOfLineExtend Extends the selection to the end of line. EndOfPage Moves the cursor to the bottom of page. Expand Expands a list or item (with subitems). ExpandAll Recursively Expands all child items and their child items (if any). KillWordBackwards Deletes the characters backwards. KillWordForwards Deletes the characters forwards. Left Moves the selection left one by the minimum increment supported by the View e.g. single character, cell, item etc. LeftExtend Extends the selection left one by the minimum increment supported by the view e.g. single character, cell, item etc. LeftHome Moves to the left begin. LeftHomeExtend Extends the selection to the left begin. LineDown Moves down one item (cell, line, etc...). LineDownExtend Extends the selection down one (cell, line, etc...). LineDownToLastBranch Moves down to the last child node of the branch that holds the current selection. LineUp Moves up one (cell, line, etc...). LineUpExtend Extends the selection up one item (cell, line, etc...). LineUpToFirstBranch Moves up to the first child node of the branch that holds the current selection. New Creates a new document. NewLine Inserts a new item. NextView Moves focus to the next view. NextViewOrTop Moves focus to the next view or Toplevel (case of Overlapped). OpenSelectedItem Open the selected item. PageDown Move one page down. PageDownExtend Move one page page extending the selection to cover revealed objects/characters. PageLeft Moves to the left page. PageRight Moves to the right page. PageUp Move one page up. PageUpExtend Move one page up extending the selection to cover revealed objects/characters. Paste Pastes the current selection. PreviousView Moves focuss to the previous view. PreviousViewOrTop Moves focus to the next previous or Toplevel (case of Overlapped). QuitToplevel Quit a Toplevel. Redo Redo changes. Refresh Refresh. Right Moves the selection right one by the minimum increment supported by the view e.g. single character, cell, item etc. RightEnd Moves to the right end. RightEndExtend Extends the selection to the right end. RightExtend Extends the selection right one by the minimum increment supported by the view e.g. single character, cell, item etc. Save Saves the current document. SaveAs Saves the current document with a new name. ScrollDown Scrolls down one (cell, line, etc...) (without changing the selection). ScrollLeft Scrolls one item (cell, character, etc...) to the left ScrollRight Scrolls one item (cell, character, etc...) to the right. ScrollUp Scrolls up one item (cell, line, etc...) (without changing the selection). Select Selects an item SelectAll Selects all objects. ShowContext Shows context about the item (e.g. a context menu). StartOfLine Moves the cursor to the start of line. StartOfLineExtend Extends the selection to the start of line. StartOfPage Moves the cursor to the top of page. Suspend Suspend a application (Only implemented in CursesDriver). Tab Tabs to the next item. ToggleChecked Toggle the checked state. ToggleExpandCollapse Toggles the Expanded or collapsed state of a a list or item (with subitems). ToggleExtend Toggles the selection. ToggleOverwrite Toggles overwrite mode such that newly typed text overwrites the text that is already there (typically associated with the Insert key). TopHome Moves to the top/home. TopHomeExtend Extends the selection to the top/home. Undo Undo changes. UnixEmulation Unix emulation. WordLeft Moves the caret to the start of the previous word. WordLeftExtend Extends the selection to the start of the previous word. WordRight Moves the caret to the start of the next word. WordRightExtend Extends the selection to the start of the next word."
  },
  "api/Terminal.Gui/Terminal.Gui.ConfigProperty.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConfigProperty.html",
    "title": "Class ConfigProperty",
    "keywords": "Class ConfigProperty Holds a property's value and the PropertyInfo that allows ConfigurationManager to get and set the property's value. Inheritance object ConfigProperty Remarks Configuration properties must be public and static and have the SerializableConfigurationProperty attribute. If the type of the property requires specialized JSON serialization, a JsonConverter must be provided using the JsonConverterAttribute attribute. Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ConfigProperty Properties | Improve this Doc View Source PropertyInfo Describes the property. Declaration public PropertyInfo? PropertyInfo { get; set; } Property Value Type Description PropertyInfo | Improve this Doc View Source PropertyValue Holds the property's value as it was either read from the class's implementation or from a config file. If the property has not been set (e.g. because no configuration file specified a value), this will be null. Declaration public object? PropertyValue { get; set; } Property Value Type Description object Methods | Improve this Doc View Source Apply() Applies the PropertyValue to the property described by PropertyInfo. Declaration public bool Apply() Returns Type Description bool | Improve this Doc View Source GetJsonPropertyName(PropertyInfo) Helper to get either the Json property named (specified by [JsonPropertyName(name)] or the actual property name. Declaration public static string GetJsonPropertyName(PropertyInfo pi) Parameters Type Name Description PropertyInfo pi Returns Type Description string | Improve this Doc View Source RetrieveValue() Retrieves (using reflection) the value of the static property described in PropertyInfo into PropertyValue. Declaration public object? RetrieveValue() Returns Type Description object"
  },
  "api/Terminal.Gui/Terminal.Gui.ConfigurationManager.ConfigLocations.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConfigurationManager.ConfigLocations.html",
    "title": "Enum ConfigurationManager.ConfigLocations",
    "keywords": "Enum ConfigurationManager.ConfigLocations Describes the location of the configuration files. The constants can be combined (bitwise) to specify multiple locations. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [Flags] public enum ConfigurationManager.ConfigLocations Fields Name Description All This constant is a combination of all locations DefaultOnly Global configuration in Terminal.Gui.dll's resources (Terminal.Gui.Resources.config.json) -- Lowest Precidence. None No configuration will be loaded."
  },
  "api/Terminal.Gui/Terminal.Gui.ConfigurationManager.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConfigurationManager.html",
    "title": "Class ConfigurationManager",
    "keywords": "Class ConfigurationManager Provides settings and configuration management for Terminal.Gui applications. Users can set Terminal.Gui settings on a global or per-application basis by providing JSON formatted configuration files. The configuration files can be placed in at .tui folder in the user's home directory (e.g. C:/Users/username/.tui, or /usr/username/.tui), the folder where the Terminal.Gui application was launched from (e.g. ./.tui), or as a resource within the Terminal.Gui application's main assembly. Settings are defined in JSON format, according to this schema: https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json Settings that will apply to all applications (global settings) reside in files named config.json. Settings that will apply to a specific Terminal.Gui application reside in files named appname.config.json, where appname is the assembly name of the application (e.g. UICatalog.config.json). Settings are applied using the following precedence (higher precedence settings overwrite lower precedence settings): 1. Application configuration found in the users's home directory (~/.tui/appname.config.json) -- Highest precedence 2. Application configuration found in the directory the app was launched from (./.tui/appname.config.json). 3. Application configuration found in the applications's resources (Resources/config.json). 4. Global configuration found in the user's home directory (~/.tui/config.json). 5. Global configuration found in the directory the app was launched from (./.tui/config.json). 6. Global configuration in Terminal.Gui.dll's resources (Terminal.Gui.Resources.config.json) -- Lowest Precidence. Inheritance object ConfigurationManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class ConfigurationManager Properties | Improve this Doc View Source AppName Name of the running application. By default this property is set to the application's assembly name. Declaration public static string AppName { get; set; } Property Value Type Description string | Improve this Doc View Source AppSettings Application-specific configuration settings scope. Declaration [JsonPropertyName(\"AppSettings\")] public static AppScope? AppSettings { get; set; } Property Value Type Description AppScope | Improve this Doc View Source Glyphs The set of glyphs used to draw checkboxes, lines, borders, etc...See also GlyphDefinitions. Declaration [JsonPropertyName(\"Glyphs\")] public static GlyphDefinitions Glyphs { get; set; } Property Value Type Description GlyphDefinitions | Improve this Doc View Source Locations Gets and sets the locations where ConfigurationManager will look for config files. The value is All. Declaration public static ConfigurationManager.ConfigLocations Locations { get; set; } Property Value Type Description ConfigurationManager.ConfigLocations | Improve this Doc View Source Settings The root object of Terminal.Gui configuration settings / JSON schema. Contains only properties with the SettingsScope attribute value. Declaration public static SettingsScope? Settings { get; set; } Property Value Type Description SettingsScope | Improve this Doc View Source Themes The root object of Terminal.Gui themes manager. Contains only properties with the ThemeScope attribute value. Declaration public static ThemeManager? Themes { get; } Property Value Type Description ThemeManager | Improve this Doc View Source ThrowOnJsonErrors Gets or sets whether the ConfigurationManager should throw an exception if it encounters an error on deserialization. If false (the default), the error is logged and printed to the console when Shutdown() is called. Declaration public static bool? ThrowOnJsonErrors { get; set; } Property Value Type Description bool? Methods | Improve this Doc View Source Apply() Applies the configuration settings to the running Application instance. Declaration public static void Apply() | Improve this Doc View Source GetEmptyJson() Returns an empty Json document with just the $schema tag. Declaration public static string GetEmptyJson() Returns Type Description string | Improve this Doc View Source Load(bool) Loads all settings found in the various configuration storage locations to the ConfigurationManager. Optionally, resets all settings attributed with SerializableConfigurationProperty to the defaults. Declaration public static void Load(bool reset = false) Parameters Type Name Description bool reset If true the state of ConfigurationManager will be reset to the defaults. | Improve this Doc View Source OnApplied() Called when an updated configuration has been applied to the application. Fires the Applied event. Declaration public static void OnApplied() | Improve this Doc View Source OnUpdated() Called when the configuration has been updated from a configuration file. Invokes the Updated event. Declaration public static void OnUpdated() | Improve this Doc View Source PrintJsonErrors() Prints any Json deserialization errors that occurred during deserialization to the console. Declaration public static void PrintJsonErrors() | Improve this Doc View Source Reset() Resets the state of ConfigurationManager. Should be called whenever a new app session (e.g. in Init(ConsoleDriver) starts. Called by Load(bool) if the reset parameter is true. Declaration public static void Reset() Events | Improve this Doc View Source Applied Event fired when an updated configuration has been applied to the application. Declaration public static event EventHandler<ConfigurationManagerEventArgs>? Applied Event Type Type Description EventHandler<ConfigurationManagerEventArgs> | Improve this Doc View Source Updated Event fired when the configuration has been updated from a configuration source. application. Declaration public static event EventHandler<ConfigurationManagerEventArgs>? Updated Event Type Type Description EventHandler<ConfigurationManagerEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.ConfigurationManagerEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConfigurationManagerEventArgs.html",
    "title": "Class ConfigurationManagerEventArgs",
    "keywords": "Class ConfigurationManagerEventArgs Event arguments for the ConfigurationManager events. Inheritance object EventArgs ConfigurationManagerEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ConfigurationManagerEventArgs : EventArgs Constructors | Improve this Doc View Source ConfigurationManagerEventArgs() Initializes a new instance of ConfigurationManagerEventArgs Declaration public ConfigurationManagerEventArgs()"
  },
  "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.DiagnosticFlags.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.DiagnosticFlags.html",
    "title": "Enum ConsoleDriver.DiagnosticFlags",
    "keywords": "Enum ConsoleDriver.DiagnosticFlags Enables diagnostic functions Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [Flags] public enum ConsoleDriver.DiagnosticFlags : uint Fields Name Description FramePadding When enabled, OnDrawFrames() will draw a 'L', 'R', 'T', and 'B' when clearing Thickness's instead of ' '. FrameRuler When enabled, OnDrawFrames() will draw a ruler in the frame for any side with a padding value greater than 0. Off All diagnostics off"
  },
  "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConsoleDriver.html",
    "title": "Class ConsoleDriver",
    "keywords": "Class ConsoleDriver Base class for Terminal.Gui ConsoleDriver implementations. Inheritance object ConsoleDriver FakeDriver Remarks There are currently four implementations: - CursesDriver (for Unix and Mac) - WindowsDriver - NetDriver that uses the .NET Console API - FakeConsole for unit testing. Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class ConsoleDriver Properties | Improve this Doc View Source Clip Gets or sets the clip rectangle that AddRune(Rune) and AddStr(string) are subject to. Declaration public Rect Clip { get; set; } Property Value Type Description Rect The rectangle describing the bounds of Clip. | Improve this Doc View Source Clipboard Get the operating system clipboard. Declaration public IClipboard Clipboard { get; } Property Value Type Description IClipboard | Improve this Doc View Source Col Gets the column last set by Move(int, int). Col and Row are used by AddRune(Rune) and AddStr(string) to determine where to add content. Declaration public int Col { get; } Property Value Type Description int | Improve this Doc View Source Cols The number of columns visible in the terminal. Declaration public virtual int Cols { get; } Property Value Type Description int | Improve this Doc View Source Contents The contents of the application output. The driver outputs this buffer to the terminal when UpdateScreen() is called. The format of the array is rows, columns, and 3 values on the last column: Rune, Attribute and Dirty Flag Declaration public Cell[,] Contents { get; } Property Value Type Description Cell[,] | Improve this Doc View Source CurrentAttribute The Attribute that will be used for the next AddRune(Rune) or AddStr(string) call. Declaration public Attribute CurrentAttribute { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Diagnostics Set flags to enable/disable ConsoleDriver diagnostics. Declaration public static ConsoleDriver.DiagnosticFlags Diagnostics { get; set; } Property Value Type Description ConsoleDriver.DiagnosticFlags | Improve this Doc View Source Left The leftmost column in the terminal. Declaration public virtual int Left { get; } Property Value Type Description int | Improve this Doc View Source Row Gets the row last set by Move(int, int). Col and Row are used by AddRune(Rune) and AddStr(string) to determine where to add content. Declaration public int Row { get; } Property Value Type Description int | Improve this Doc View Source Rows The number of rows visible in the terminal. Declaration public virtual int Rows { get; } Property Value Type Description int | Improve this Doc View Source SupportsTrueColor Gets whether the ConsoleDriver supports TrueColor output. Declaration public virtual bool SupportsTrueColor { get; } Property Value Type Description bool | Improve this Doc View Source Top The topmost row in the terminal. Declaration public virtual int Top { get; } Property Value Type Description int Methods | Improve this Doc View Source AddRune(char) Adds the specified char to the display at the current cursor position. This method is a convenience method that calls AddRune(Rune) with the Rune constructor. Declaration public void AddRune(char c) Parameters Type Name Description char c Character to add. | Improve this Doc View Source AddRune(Rune) Adds the specified rune to the display at the current cursor position. Declaration public void AddRune(Rune rune) Parameters Type Name Description Rune rune Rune to add. | Improve this Doc View Source AddStr(string) Adds the str to the display at the cursor position. Declaration public void AddStr(string str) Parameters Type Name Description string str String. | Improve this Doc View Source ClearContents() Clears the Contents of the driver. Declaration public void ClearContents() | Improve this Doc View Source EnsureCursorVisibility() Determines if the terminal cursor should be visible or not and sets it accordingly. Declaration public abstract bool EnsureCursorVisibility() Returns Type Description bool true upon success | Improve this Doc View Source FillRect(Rect, char) Fills the specified rectangle with the specified char. This method is a convenience method that calls FillRect(Rect, Rune). Declaration public void FillRect(Rect rect, char c) Parameters Type Name Description Rect rect char c | Improve this Doc View Source FillRect(Rect, Rune) Fills the specified rectangle with the specified rune. Declaration public void FillRect(Rect rect, Rune rune = default) Parameters Type Name Description Rect rect Rune rune | Improve this Doc View Source GetAttribute() Gets the current Attribute. Declaration public Attribute GetAttribute() Returns Type Description Attribute The current attribute. | Improve this Doc View Source GetCursorVisibility(out CursorVisibility) Gets the terminal cursor visibility. Declaration public abstract bool GetCursorVisibility(out CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The current CursorVisibility Returns Type Description bool true upon success | Improve this Doc View Source GetVersionInfo() Returns the name of the driver and relevant library version information. Declaration public virtual string GetVersionInfo() Returns Type Description string | Improve this Doc View Source IsRuneSupported(Rune) Tests if the specified rune is supported by the driver. Declaration public virtual bool IsRuneSupported(Rune rune) Parameters Type Name Description Rune rune Returns Type Description bool true if the rune can be properly presented; false if the driver does not support displaying this rune. | Improve this Doc View Source IsValidLocation(int, int) Tests whether the specified coordinate are valid for drawing. Declaration public bool IsValidLocation(int col, int row) Parameters Type Name Description int col The column. int row The row. Returns Type Description bool false if the coordinate is outside of the screen bounds or outside of Clip. true otherwise. | Improve this Doc View Source MakeColor(Color, Color) Makes an Attribute. Declaration public virtual Attribute MakeColor(Color foreground, Color background) Parameters Type Name Description Color foreground The foreground color. Color background The background color. Returns Type Description Attribute The attribute for the foreground and background colors. | Improve this Doc View Source Move(int, int) Updates Col and Row to the specified column and row in Contents. Used by AddRune(Rune) and AddStr(string) to determine where to add content. Declaration public virtual void Move(int col, int row) Parameters Type Name Description int col Column to move to. int row Row to move to. | Improve this Doc View Source OnKeyDown(KeyEventArgs) Called when a key is pressed. Fires the KeyDown event. Declaration public void OnKeyDown(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Called after a key has been pressed and released. Fires the KeyPressed event. Declaration public void OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a | Improve this Doc View Source OnKeyUp(KeyEventArgs) Called when a key is released. Fires the KeyUp event. Declaration public void OnKeyUp(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a | Improve this Doc View Source OnMouseEvent(MouseEventEventArgs) Called when a mouse event occurs. Fires the MouseEvent event. Declaration public void OnMouseEvent(MouseEventEventArgs a) Parameters Type Name Description MouseEventEventArgs a | Improve this Doc View Source OnSizeChanged(SizeChangedEventArgs) Called when the terminal size changes. Fires the SizeChanged event. Declaration public void OnSizeChanged(SizeChangedEventArgs args) Parameters Type Name Description SizeChangedEventArgs args | Improve this Doc View Source Refresh() Updates the screen to reflect all the changes that have been done to the display buffer Declaration public abstract void Refresh() | Improve this Doc View Source SendKeys(char, ConsoleKey, bool, bool, bool) Simulates a key press. Declaration public abstract void SendKeys(char keyChar, ConsoleKey key, bool shift, bool alt, bool ctrl) Parameters Type Name Description char keyChar The key character. ConsoleKey key The key. bool shift If true simulates the Shift key being pressed. bool alt If true simulates the Alt key being pressed. bool ctrl If true simulates the Ctrl key being pressed. | Improve this Doc View Source SetAttribute(Attribute) Selects the specified attribute as the attribute to use for future calls to AddRune and AddString. Declaration public Attribute SetAttribute(Attribute c) Parameters Type Name Description Attribute c C. Returns Type Description Attribute | Improve this Doc View Source SetCursorVisibility(CursorVisibility) Sets the terminal cursor visibility. Declaration public abstract bool SetCursorVisibility(CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The wished CursorVisibility Returns Type Description bool true upon success | Improve this Doc View Source Suspend() Suspends the application (e.g. on Linux via SIGTSTP) and upon resume, resets the console driver. Declaration public abstract void Suspend() | Improve this Doc View Source UpdateCursor() Sets the position of the terminal cursor to Col and Row. Declaration public abstract void UpdateCursor() | Improve this Doc View Source UpdateScreen() Redraws the physical screen with the contents that have been queued up via any of the printing commands. Declaration public abstract void UpdateScreen() Events | Improve this Doc View Source KeyDown Event fired when a key is pressed. Declaration public event EventHandler<KeyEventArgs> KeyDown Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyPressed Event fired after a key has been pressed and released. Declaration public event EventHandler<KeyEventArgs> KeyPressed Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyUp Event fired when a key is released. Declaration public event EventHandler<KeyEventArgs> KeyUp Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source MouseEvent Event fired when a mouse event occurs. Declaration public event EventHandler<MouseEventEventArgs> MouseEvent Event Type Type Description EventHandler<MouseEventEventArgs> | Improve this Doc View Source SizeChanged The event fired when the terminal is resized. Declaration public event EventHandler<SizeChangedEventArgs> SizeChanged Event Type Type Description EventHandler<SizeChangedEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.ConsoleKeyMapping.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ConsoleKeyMapping.html",
    "title": "Class ConsoleKeyMapping",
    "keywords": "Class ConsoleKeyMapping Helper class to handle the scan code and virtual key from a ConsoleKey. Inheritance object ConsoleKeyMapping Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class ConsoleKeyMapping Methods | Improve this Doc View Source GetConsoleKeyFromKey(uint, ConsoleModifiers, out uint, out uint) Get the ConsoleKey from a Key. Declaration public static uint GetConsoleKeyFromKey(uint keyValue, ConsoleModifiers modifiers, out uint scanCode, out uint outputChar) Parameters Type Name Description uint keyValue The key value. ConsoleModifiers modifiers The modifiers keys. uint scanCode The resulting scan code. uint outputChar The resulting output character. Returns Type Description uint The ConsoleKey or the outputChar. | Improve this Doc View Source GetConsoleKeyFromKey(Key) Gets the ConsoleKey from the provided Key. Declaration public static ConsoleKey GetConsoleKeyFromKey(Key key) Parameters Type Name Description Key key Returns Type Description ConsoleKey | Improve this Doc View Source GetKeyCharFromConsoleKey(uint, ConsoleModifiers, out uint, out uint) Get the output character from the ConsoleKey. Declaration public static uint GetKeyCharFromConsoleKey(uint unicodeChar, ConsoleModifiers modifiers, out uint consoleKey, out uint scanCode) Parameters Type Name Description uint unicodeChar The unicode character. ConsoleModifiers modifiers The modifiers keys. uint consoleKey The resulting console key. uint scanCode The resulting scan code. Returns Type Description uint The output character or the consoleKey. | Improve this Doc View Source MapConsoleKeyToKey(ConsoleKey, out bool) Maps a ConsoleKey to a Key. Declaration public static Key MapConsoleKeyToKey(ConsoleKey consoleKey, out bool isMappable) Parameters Type Name Description ConsoleKey consoleKey The console key. bool isMappable If true is mapped to a valid character, otherwise false. Returns Type Description Key The Key or the consoleKey. | Improve this Doc View Source MapKeyModifiers(ConsoleKeyInfo, Key) Maps a ConsoleKeyInfo to a Key. Declaration public static Key MapKeyModifiers(ConsoleKeyInfo keyInfo, Key key) Parameters Type Name Description ConsoleKeyInfo keyInfo The console key info. Key key The key. Returns Type Description Key The Key with ConsoleModifiers or the key | Improve this Doc View Source MapKeyToConsoleKey(uint, out bool) Maps a Key to a ConsoleKey. Declaration public static uint MapKeyToConsoleKey(uint keyValue, out bool isMappable) Parameters Type Name Description uint keyValue The key value. bool isMappable If true is mapped to a valid character, otherwise false. Returns Type Description uint The ConsoleKey or the keyValue."
  },
  "api/Terminal.Gui/Terminal.Gui.ContentsChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ContentsChangedEventArgs.html",
    "title": "Class ContentsChangedEventArgs",
    "keywords": "Class ContentsChangedEventArgs Event arguments for events for when the contents of the TextView change. E.g. the ContentsChanged event. Inheritance object EventArgs ContentsChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ContentsChangedEventArgs : EventArgs Constructors | Improve this Doc View Source ContentsChangedEventArgs(int, int) Creates a new ContentsChanged instance. Declaration public ContentsChangedEventArgs(int currentRow, int currentColumn) Parameters Type Name Description int currentRow Contains the row where the change occurred. int currentColumn Contains the column where the change occured. Properties | Improve this Doc View Source Col Contains the column where the change occurred. Declaration public int Col { get; } Property Value Type Description int | Improve this Doc View Source Row Contains the row where the change occurred. Declaration public int Row { get; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.ContextMenu.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ContextMenu.html",
    "title": "Class ContextMenu",
    "keywords": "Class ContextMenu ContextMenu provides a pop-up menu that can be positioned anywhere within a View. ContextMenu is analogous to MenuBar and, once activated, works like a sub-menu of a MenuBarItem (but can be positioned anywhere). By default, a ContextMenu with sub-menus is displayed in a cascading manner, where each sub-menu pops out of the ContextMenu frame (either to the right or left, depending on where the ContextMenu is relative to the edge of the screen). By setting UseSubMenusSingleFrame to true, this behavior can be changed such that all sub-menus are drawn within the ContextMenu frame. ContextMenus can be activated using the Shift-F10 key (by default; use the Key to change to another key). Callers can cause the ContextMenu to be activated on a right-mouse click (or other interaction) by calling Show(). ContextMenus are located using screen using screen coordinates and appear above all other Views. Inheritance object ContextMenu Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public sealed class ContextMenu : IDisposable Constructors | Improve this Doc View Source ContextMenu() Initializes a context menu with no menu items. Declaration public ContextMenu() | Improve this Doc View Source ContextMenu(int, int, MenuBarItem) Initializes a context menu with menu items at a specific screen location. Declaration public ContextMenu(int x, int y, MenuBarItem menuItems) Parameters Type Name Description int x The left position (screen relative). int y The top position (screen relative). MenuBarItem menuItems The menu items. | Improve this Doc View Source ContextMenu(View, MenuBarItem) Initializes a context menu, with a View specifying the parent/host of the menu. Declaration public ContextMenu(View host, MenuBarItem menuItems) Parameters Type Name Description View host The host view. MenuBarItem menuItems The menu items for the context menu. Properties | Improve this Doc View Source DefaultKey The default shortcut key for activating the context menu. Declaration public static Key DefaultKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ForceMinimumPosToZero Sets or gets whether the context menu be forced to the right, ensuring it is not clipped, if the x position is less than zero. The default is true which means the context menu will be forced to the right. If set to false, the context menu will be clipped on the left if x is less than zero. Declaration public bool ForceMinimumPosToZero { get; set; } Property Value Type Description bool | Improve this Doc View Source Host The host View which position will be used, otherwise if it's null the container will be used. Declaration public View Host { get; set; } Property Value Type Description View | Improve this Doc View Source IsShow Gets whether the ContextMenu is showing or not. Declaration public static bool IsShow { get; } Property Value Type Description bool | Improve this Doc View Source Key Key specifies they keyboard key that will activate the context menu with the keyboard. Declaration public Key Key { get; set; } Property Value Type Description Key | Improve this Doc View Source MenuBar Gets the MenuBar that is hosting this context menu. Declaration public MenuBar MenuBar { get; } Property Value Type Description MenuBar | Improve this Doc View Source MenuItems Gets or sets the menu items for this context menu. Declaration public MenuBarItem MenuItems { get; set; } Property Value Type Description MenuBarItem | Improve this Doc View Source MouseFlags MouseFlags specifies the mouse action used to activate the context menu by mouse. Declaration public MouseFlags MouseFlags { get; set; } Property Value Type Description MouseFlags | Improve this Doc View Source Position Gets or sets the menu position. Declaration public Point Position { get; set; } Property Value Type Description Point | Improve this Doc View Source UseSubMenusSingleFrame Gets or sets if sub-menus will be displayed using a \"single frame\" menu style. If true, the ContextMenu and any sub-menus that would normally cascade will be displayed within a single frame. If false (the default), sub-menus will cascade using separate frames for each level of the menu hierarchy. Declaration public bool UseSubMenusSingleFrame { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source Dispose() Disposes the context menu object. Declaration public void Dispose() | Improve this Doc View Source Hide() Hides (closes) the ContextMenu. Declaration public void Hide() | Improve this Doc View Source Show() Shows (opens) the ContextMenu, displaying the MenuItems it contains. Declaration public void Show() Events | Improve this Doc View Source KeyChanged Event invoked when the Key is changed. Declaration public event EventHandler<KeyChangedEventArgs> KeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs> | Improve this Doc View Source MouseFlagsChanged Event invoked when the MouseFlags is changed. Declaration public event EventHandler<MouseFlagsChangedEventArgs> MouseFlagsChanged Event Type Type Description EventHandler<MouseFlagsChangedEventArgs> Implements IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.CursorVisibility.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.CursorVisibility.html",
    "title": "Enum CursorVisibility",
    "keywords": "Enum CursorVisibility Terminal Cursor Visibility settings. Remarks Hex value are set as 0xAABBCCDD where : AA stand for the TERMINFO DECSUSR parameter value to be used under Linux and MacOS BB stand for the NCurses curs_set parameter value to be used under Linux and MacOS CC stand for the CONSOLE_CURSOR_INFO.bVisible parameter value to be used under Windows DD stand for the CONSOLE_CURSOR_INFO.dwSize parameter value to be used under Windows Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum CursorVisibility Fields Name Description Box Cursor caret is displayed as a blinking block ▉ BoxFix Cursor caret is displayed a block ▉ Default Cursor caret has default Invisible Cursor caret is hidden Underline Cursor caret is normally shown as a blinking underline bar _ UnderlineFix Cursor caret is normally shown as a underline bar _ Vertical Cursor caret is displayed a blinking vertical bar | VerticalFix Cursor caret is displayed a blinking vertical bar |"
  },
  "api/Terminal.Gui/Terminal.Gui.DataTableSource.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DataTableSource.html",
    "title": "Class DataTableSource",
    "keywords": "Class DataTableSource ITableSource implementation that wraps a DataTable. This class is mutable: changes are permitted to the wrapped DataTable. Inheritance object DataTableSource Implements ITableSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DataTableSource : ITableSource Constructors | Improve this Doc View Source DataTableSource(DataTable) Creates a new instance based on the data in table. Declaration public DataTableSource(DataTable table) Parameters Type Name Description DataTable table Properties | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration public string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration public int Columns { get; } Property Value Type Description int | Improve this Doc View Source DataTable The data table this source wraps. Declaration public DataTable DataTable { get; } Property Value Type Description DataTable | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration public object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration public int Rows { get; } Property Value Type Description int Implements ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.DateField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DateField.html",
    "title": "Class DateField",
    "keywords": "Class DateField Simple Date editing View Inheritance object Responder View TextField DateField Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The DateField View provides date editing functionality with mouse support. Inherited Members TextField.Caption TextField.CaptionColor TextField.Used TextField.ReadOnly TextField.TextChanging TextField.TextChanged TextField.OnEnter(View) TextField.OnLeave(View) TextField.Autocomplete TextField.Frame TextField.Text TextField.Secret TextField.ScrollOffset TextField.IsDirty TextField.HasHistoryChanges TextField.ContextMenu TextField.PositionCursor() TextField.OnDrawContent(Rect) TextField.GetNormalColor() TextField.CanFocus TextField.OnKeyPressed(KeyEventArgs) TextField.KillWordBackwards() TextField.KillWordForwards() TextField.Redo() TextField.Undo() TextField.MoveEnd() TextField.SelectAll() TextField.DeleteAll() TextField.SelectedStart TextField.SelectedLength TextField.SelectedText TextField.ClearAllSelection() TextField.Copy() TextField.Cut() TextField.Paste() TextField.OnTextChanging(string) TextField.DesiredCursorVisibility TextField.InsertText(string, bool) TextField.ClearHistoryChanges() View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DateField : TextField, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DateField() Initializes a new instance of DateField using Computed layout. Declaration public DateField() | Improve this Doc View Source DateField(DateTime) Initializes a new instance of DateField using Computed layout. Declaration public DateField(DateTime date) Parameters Type Name Description DateTime date | Improve this Doc View Source DateField(int, int, DateTime, bool) Initializes a new instance of DateField using Absolute layout. Declaration public DateField(int x, int y, DateTime date, bool isShort = false) Parameters Type Name Description int x The x coordinate. int y The y coordinate. DateTime date Initial date contents. bool isShort If true, shows only two digits for the year. Properties | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public override int CursorPosition { get; set; } Property Value Type Description int Overrides TextField.CursorPosition | Improve this Doc View Source Date Gets or sets the date of the DateField. Declaration public DateTime Date { get; set; } Property Value Type Description DateTime | Improve this Doc View Source IsShortFormat Get or set the date format for the widget. Declaration public bool IsShortFormat { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source DeleteCharLeft(bool) Deletes the left character. Declaration public override void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description bool useOldCursorPos Overrides TextField.DeleteCharLeft(bool) | Improve this Doc View Source DeleteCharRight() Deletes the right character. Declaration public override void DeleteCharRight() Overrides TextField.DeleteCharRight() | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description bool true, if the event was handled, false otherwise. Overrides TextField.MouseEvent(MouseEvent) | Improve this Doc View Source OnDateChanged(DateTimeEventArgs<DateTime>) Event firing method for the DateChanged event. Declaration public virtual void OnDateChanged(DateTimeEventArgs<DateTime> args) Parameters Type Name Description DateTimeEventArgs<DateTime> args Event arguments Events | Improve this Doc View Source DateChanged DateChanged event, raised when the Date property has changed. Declaration public event EventHandler<DateTimeEventArgs<DateTime>> DateChanged Event Type Type Description EventHandler<DateTimeEventArgs<DateTime>> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.DateTimeEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DateTimeEventArgs-1.html",
    "title": "Class DateTimeEventArgs<T>",
    "keywords": "Class DateTimeEventArgs<T> Defines the event arguments for DateChanged and TimeChanged events. Inheritance object EventArgs DateTimeEventArgs<T> Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DateTimeEventArgs<T> : EventArgs Type Parameters Name Description T Constructors | Improve this Doc View Source DateTimeEventArgs(T, T, string) Initializes a new instance of DateTimeEventArgs<T> Declaration public DateTimeEventArgs(T oldValue, T newValue, string format) Parameters Type Name Description T oldValue The old DateField or TimeField value. T newValue The new DateField or TimeField value. string format The DateField or TimeField format string. Properties | Improve this Doc View Source Format The DateField or TimeField format. Declaration public string Format { get; } Property Value Type Description string | Improve this Doc View Source NewValue The new DateField or TimeField value. Declaration public T NewValue { get; } Property Value Type Description T | Improve this Doc View Source OldValue The old DateField or TimeField value. Declaration public T OldValue { get; } Property Value Type Description T"
  },
  "api/Terminal.Gui/Terminal.Gui.DefaultFileOperations.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DefaultFileOperations.html",
    "title": "Class DefaultFileOperations",
    "keywords": "Class DefaultFileOperations Default file operation handlers using modal dialogs. Inheritance object DefaultFileOperations Implements IFileOperations Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DefaultFileOperations : IFileOperations Methods | Improve this Doc View Source Delete(IEnumerable<IFileSystemInfo>) Specifies how to handle file/directory deletion attempts in FileDialog. Declaration public bool Delete(IEnumerable<IFileSystemInfo> toDelete) Parameters Type Name Description IEnumerable<IFileSystemInfo> toDelete Returns Type Description bool true if operation was completed or false if cancelled | Improve this Doc View Source New(IFileSystem, IDirectoryInfo) Specifies how to handle 'new directory' operation in FileDialog. Declaration public IFileSystemInfo New(IFileSystem fileSystem, IDirectoryInfo inDirectory) Parameters Type Name Description IFileSystem fileSystem IDirectoryInfo inDirectory The parent directory in which the new directory should be created Returns Type Description IFileSystemInfo The newly created directory or null if cancelled. | Improve this Doc View Source Rename(IFileSystem, IFileSystemInfo) Specifies how to handle file/directory rename attempts in FileDialog. Declaration public IFileSystemInfo Rename(IFileSystem fileSystem, IFileSystemInfo toRename) Parameters Type Name Description IFileSystem fileSystem IFileSystemInfo toRename Returns Type Description IFileSystemInfo The new name for the file or null if cancelled Implements IFileOperations"
  },
  "api/Terminal.Gui/Terminal.Gui.DelegateTreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DelegateTreeBuilder-1.html",
    "title": "Class DelegateTreeBuilder<T>",
    "keywords": "Class DelegateTreeBuilder<T> Implementation of ITreeBuilder<T> that uses user defined functions Inheritance object TreeBuilder<T> DelegateTreeBuilder<T> Implements ITreeBuilder<T> Inherited Members TreeBuilder<T>.SupportsCanExpand object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DelegateTreeBuilder<T> : TreeBuilder<T>, ITreeBuilder<T> Type Parameters Name Description T Constructors | Improve this Doc View Source DelegateTreeBuilder(Func<T, IEnumerable<T>>, Func<T, bool>) Constructs an implementation of ITreeBuilder<T> that calls the user defined method childGetter to determine children and canExpand to determine expandability Declaration public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter, Func<T, bool> canExpand) Parameters Type Name Description Func<T, IEnumerable<T>> childGetter Func<T, bool> canExpand | Improve this Doc View Source DelegateTreeBuilder(Func<T, IEnumerable<T>>) Constructs an implementation of ITreeBuilder<T> that calls the user defined method childGetter to determine children Declaration public DelegateTreeBuilder(Func<T, IEnumerable<T>> childGetter) Parameters Type Name Description Func<T, IEnumerable<T>> childGetter Methods | Improve this Doc View Source CanExpand(T) Returns whether a node can be expanded based on the delegate passed during construction Declaration public override bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description bool Overrides TreeBuilder<T>.CanExpand(T) | Improve this Doc View Source GetChildren(T) Returns children using the delegate method passed during construction Declaration public override IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description IEnumerable<T> Overrides TreeBuilder<T>.GetChildren(T) Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Dialog.ButtonAlignments.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dialog.ButtonAlignments.html",
    "title": "Enum Dialog.ButtonAlignments",
    "keywords": "Enum Dialog.ButtonAlignments Determines the horizontal alignment of the Dialog buttons. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum Dialog.ButtonAlignments Fields Name Description Center Center-aligns the buttons (the default). Justify Justifies the buttons Left Left-aligns the buttons Right Right-aligns the buttons"
  },
  "api/Terminal.Gui/Terminal.Gui.Dialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dialog.html",
    "title": "Class Dialog",
    "keywords": "Class Dialog The Dialog View is a Window that by default is centered and contains one or more Buttons. It defaults to the Dialog color scheme and has a 1 cell padding around the edges. Inheritance object Responder View Toplevel Window Dialog FileDialog Wizard Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks To run the Dialog modally, create the Dialog, and pass it to Run(Func<Exception, bool>). This will execute the dialog until it terminates via the [ESC] or [CTRL-Q] key, or when one of the views or buttons added to the dialog calls RequestStop(Toplevel). Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Dialog : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Dialog() Initializes a new instance of the Dialog class using Computed positioning with no Buttons. Declaration public Dialog() | Improve this Doc View Source Dialog(params Button[]) Initializes a new instance of the Dialog class using Computed positioning and an optional set of Buttons to display Declaration public Dialog(params Button[] buttons) Parameters Type Name Description Button[] buttons Optional buttons to lay out at the bottom of the dialog. Properties | Improve this Doc View Source ButtonAlignment Determines how the Dialog Buttons are aligned along the bottom of the dialog. Declaration public Dialog.ButtonAlignments ButtonAlignment { get; set; } Property Value Type Description Dialog.ButtonAlignments | Improve this Doc View Source DefaultButtonAlignment The default Dialog.ButtonAlignments for Dialog. Declaration [JsonConverter(typeof(JsonStringEnumConverter))] public static Dialog.ButtonAlignments DefaultButtonAlignment { get; set; } Property Value Type Description Dialog.ButtonAlignments Methods | Improve this Doc View Source AddButton(Button) Adds a Button to the Dialog, its layout will be controlled by the Dialog Declaration public void AddButton(Button button) Parameters Type Name Description Button button Button to add. | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Dim.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Dim.html",
    "title": "Class Dim",
    "keywords": "Class Dim Dim properties of a View to control the position. Inheritance object Dim Remarks Use the Dim objects on the Width or Height properties of a View to control the position. These can be used to set the absolute position, when merely assigning an integer value (via the implicit integer to Pos conversion), and they can be combined to produce more useful layouts, like: Pos.Center - 3, which would shift the position of the View 3 characters to the left after centering for example. Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Dim Methods | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object other) Parameters Type Name Description object other The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source Fill(int) Initializes a new instance of the Dim class that fills the dimension, but leaves the specified number of colums for a margin. Declaration public static Dim Fill(int margin = 0) Parameters Type Name Description int margin Margin to use. Returns Type Description Dim The Fill dimension. | Improve this Doc View Source Function(Func<int>) Creates a \"DimFunc\" from the specified function. Declaration public static Dim Function(Func<int> function) Parameters Type Name Description Func<int> function The function to be executed. Returns Type Description Dim The Dim returned from the function. | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Improve this Doc View Source Height(View) Returns a Dim object tracks the Height of the specified View. Declaration public static Dim Height(View view) Parameters Type Name Description View view The view that will be tracked. Returns Type Description Dim The Dim of the other View. | Improve this Doc View Source Percent(float, bool) Creates a percentage Dim object Declaration public static Dim Percent(float n, bool r = false) Parameters Type Name Description float n A value between 0 and 100 representing the percentage. bool r If true the Percent is computed based on the remaining space after the X/Y anchor positions. If false is computed based on the whole original space. Returns Type Description Dim The percent Dim object. | Improve this Doc View Source Sized(int) Creates an Absolute Dim from the specified integer value. Declaration public static Dim Sized(int n) Parameters Type Name Description int n The value to convert to the Dim. Returns Type Description Dim The Absolute Dim. | Improve this Doc View Source Width(View) Returns a Dim object tracks the Width of the specified View. Declaration public static Dim Width(View view) Parameters Type Name Description View view The view that will be tracked. Returns Type Description Dim The Dim of the other View. Operators | Improve this Doc View Source operator +(Dim, Dim) Adds a Dim to a Dim, yielding a new Dim. Declaration public static Dim operator +(Dim left, Dim right) Parameters Type Name Description Dim left The first Dim to add. Dim right The second Dim to add. Returns Type Description Dim The Dim that is the sum of the values of left and right. | Improve this Doc View Source implicit operator Dim(int) Creates an Absolute Dim from the specified integer value. Declaration public static implicit operator Dim(int n) Parameters Type Name Description int n The value to convert to the pos. Returns Type Description Dim The Absolute Dim. | Improve this Doc View Source operator -(Dim, Dim) Subtracts a Dim from a Dim, yielding a new Dim. Declaration public static Dim operator -(Dim left, Dim right) Parameters Type Name Description Dim left The Dim to subtract from (the minuend). Dim right The Dim to subtract (the subtrahend). Returns Type Description Dim The Dim that is the left minus right."
  },
  "api/Terminal.Gui/Terminal.Gui.DisplayModeLayout.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DisplayModeLayout.html",
    "title": "Enum DisplayModeLayout",
    "keywords": "Enum DisplayModeLayout Used for choose the display mode of this RadioGroup Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum DisplayModeLayout Fields Name Description Horizontal Horizontal mode display. Vertical Vertical mode display. It's the default."
  },
  "api/Terminal.Gui/Terminal.Gui.DrawEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DrawEventArgs.html",
    "title": "Class DrawEventArgs",
    "keywords": "Class DrawEventArgs Event args for draw events Inheritance object EventArgs DrawEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DrawEventArgs : EventArgs Constructors | Improve this Doc View Source DrawEventArgs(Rect) Creates a new instance of the DrawEventArgs class. Declaration public DrawEventArgs(Rect rect) Parameters Type Name Description Rect rect Gets the view-relative rectangle describing the currently visible viewport into the View. Properties | Improve this Doc View Source Cancel If set to true, the draw operation will be canceled, if applicable. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Rect Gets the view-relative rectangle describing the currently visible viewport into the View. Declaration public Rect Rect { get; } Property Value Type Description Rect"
  },
  "api/Terminal.Gui/Terminal.Gui.DrawTreeViewLineEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.DrawTreeViewLineEventArgs-1.html",
    "title": "Class DrawTreeViewLineEventArgs<T>",
    "keywords": "Class DrawTreeViewLineEventArgs<T> Event args for the DrawLine event Inheritance object DrawTreeViewLineEventArgs<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class DrawTreeViewLineEventArgs<T> where T : class Type Parameters Name Description T Properties | Improve this Doc View Source Handled Set to true to cancel drawing (e.g. if you have already manually drawn content). Declaration public bool Handled { get; set; } Property Value Type Description bool | Improve this Doc View Source IndexOfExpandCollapseSymbol If line contains a branch that can be expanded/collapsed then this is the index in RuneCells at which the symbol is (or null for leaf elements). Declaration public int? IndexOfExpandCollapseSymbol { get; init; } Property Value Type Description int? | Improve this Doc View Source IndexOfModelText The notional index in RuneCells which contains the first character of the AspectGetter text (i.e. after all branch lines and expansion/collapse sybmols). Declaration public int IndexOfModelText { get; init; } Property Value Type Description int | Improve this Doc View Source Model The object at this line in the tree Declaration public T Model { get; init; } Property Value Type Description T | Improve this Doc View Source RuneCells The rune and color of each symbol that will be rendered. Note that only Normal is respected. You can modify these to change what is rendered. Declaration public List<RuneCell> RuneCells { get; init; } Property Value Type Description List<RuneCell> | Improve this Doc View Source Tree The TreeView<T> that is performing the rendering. Declaration public TreeView<T> Tree { get; init; } Property Value Type Description TreeView<T> | Improve this Doc View Source Y The line within tree view bounds that is being rendered Declaration public int Y { get; init; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.EnumerableTableSource-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EnumerableTableSource-1.html",
    "title": "Class EnumerableTableSource<T>",
    "keywords": "Class EnumerableTableSource<T> ITableSource implementation that wraps arbitrary data. Inheritance object EnumerableTableSource<T> Implements IEnumerableTableSource<T> ITableSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class EnumerableTableSource<T> : IEnumerableTableSource<T>, ITableSource Type Parameters Name Description T Constructors | Improve this Doc View Source EnumerableTableSource(IEnumerable<T>, Dictionary<string, Func<T, object>>) Creates a new instance of the class that presents data collection as a table. Declaration public EnumerableTableSource(IEnumerable<T> data, Dictionary<string, Func<T, object>> columnDefinitions) Parameters Type Name Description IEnumerable<T> data The data that you want to present. The members of this collection will be frozen after construction. Dictionary<string, Func<T, object>> columnDefinitions Getter methods for each property you want to present in the table. For example: new () { { \"Colname1\", (t)=>t.SomeField}, { \"Colname2\", (t)=>t.SomeOtherField} } Properties | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration public string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration public int Columns { get; } Property Value Type Description int | Improve this Doc View Source Data Gets the object collection hosted by this wrapper. Declaration public IReadOnlyCollection<T> Data { get; } Property Value Type Description IReadOnlyCollection<T> | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration public object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration public int Rows { get; } Property Value Type Description int Methods | Improve this Doc View Source GetAllObjects() Return all objects in the table. Declaration public IEnumerable<T> GetAllObjects() Returns Type Description IEnumerable<T> | Improve this Doc View Source GetObjectOnRow(int) Return the object on the given row. Declaration public T GetObjectOnRow(int row) Parameters Type Name Description int row Returns Type Description T Implements IEnumerableTableSource<T> ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.EscSeqReqStatus.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EscSeqReqStatus.html",
    "title": "Class EscSeqReqStatus",
    "keywords": "Class EscSeqReqStatus Represents the status of an ANSI escape sequence request made to the terminal using EscSeqRequests. Inheritance object EscSeqReqStatus Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class EscSeqReqStatus Constructors | Improve this Doc View Source EscSeqReqStatus(string, int) Creates a new state of escape sequence request. Declaration public EscSeqReqStatus(string terminator, int numReq) Parameters Type Name Description string terminator The terminator. int numReq The number of requests. Properties | Improve this Doc View Source NumOutstanding Gets the number of unfinished requests. Declaration public int NumOutstanding { get; set; } Property Value Type Description int | Improve this Doc View Source NumRequests Gets the number of requests. Declaration public int NumRequests { get; } Property Value Type Description int | Improve this Doc View Source Terminator Gets the Escape Sequence Termintor (e.g. ESC[8t ... t is the terminator). Declaration public string Terminator { get; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.EscSeqRequests.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EscSeqRequests.html",
    "title": "Class EscSeqRequests",
    "keywords": "Class EscSeqRequests Manages ANSI Escape Sequence requests and responses. The list of EscSeqReqStatus contains the status of the request. Each request is identified by the terminator (e.g. ESC[8t ... t is the terminator). Inheritance object EscSeqRequests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class EscSeqRequests Properties | Improve this Doc View Source Statuses Gets the EscSeqReqStatus list. Declaration public List<EscSeqReqStatus> Statuses { get; } Property Value Type Description List<EscSeqReqStatus> Methods | Improve this Doc View Source Add(string, int) Adds a new request for the ANSI Escape Sequence defined by terminator. Adds a EscSeqReqStatus instance to Statuses list. Declaration public void Add(string terminator, int numReq = 1) Parameters Type Name Description string terminator The terminator. int numReq The number of requests. | Improve this Doc View Source HasResponse(string) Indicates if a EscSeqReqStatus with the terminator exists in the Statuses list. Declaration public bool HasResponse(string terminator) Parameters Type Name Description string terminator Returns Type Description bool true if exist, false otherwise. | Improve this Doc View Source Remove(string) Removes a request defined by terminator. If a matching EscSeqReqStatus is found and the number of outstanding requests is greater than 0, the number of outstanding requests is decremented. If the number of outstanding requests is 0, the EscSeqReqStatus is removed from Statuses. Declaration public void Remove(string terminator) Parameters Type Name Description string terminator The terminating string."
  },
  "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.ClearScreenOptions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.ClearScreenOptions.html",
    "title": "Enum EscSeqUtils.ClearScreenOptions",
    "keywords": "Enum EscSeqUtils.ClearScreenOptions Options for ANSI ESC \"[xJ\" - Clears part of the screen. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum EscSeqUtils.ClearScreenOptions Fields Name Description CursorToBeginningOfScreen If n is 1, clear from cursor to beginning of the screen. CursorToEndOfScreen If n is 0 (or missing), clear from cursor to end of screen. EntireScreen If n is 2, clear entire screen (and moves cursor to upper left on DOS ANSI.SYS). EntireScreenAndScrollbackBuffer If n is 3, clear entire screen and delete all lines saved in the scrollback buffer"
  },
  "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.DECSCUSR_Style.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.DECSCUSR_Style.html",
    "title": "Enum EscSeqUtils.DECSCUSR_Style",
    "keywords": "Enum EscSeqUtils.DECSCUSR_Style Styles for ANSI ESC \"[x q\" - Set Cursor Style Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum EscSeqUtils.DECSCUSR_Style Fields Name Description BlinkingBar DECSCUSR - Blinking Bar - Blinking bar cursor shape BlinkingBlock DECSCUSR - Blinking Block - Blinking block cursor shape BlinkingUnderline DECSCUSR - Blinking Underline - Blinking underline cursor shape SteadyBar DECSCUSR - Steady Bar - Steady bar cursor shape SteadyBlock DECSCUSR - Steady Block - Steady block cursor shape SteadyUnderline DECSCUSR - Steady Underline - Steady underline cursor shape UserShape DECSCUSR - User Shape - Default cursor shape configured by the user"
  },
  "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.EscSeqUtils.html",
    "title": "Class EscSeqUtils",
    "keywords": "Class EscSeqUtils Provides a platform-independent API for managing ANSI escape sequences. Inheritance object EscSeqUtils Remarks Useful resources: * https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html * https://vt100.net/ Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class EscSeqUtils Fields | Improve this Doc View Source CSI ESC [ - The CSI (Control Sequence Introducer). Declaration public static readonly string CSI Field Value Type Description string | Improve this Doc View Source CSI_ActivateAltBufferNoBackscroll ESC [ ? 1047 h - Activate xterm alternative buffer (no backscroll) Declaration public static readonly string CSI_ActivateAltBufferNoBackscroll Field Value Type Description string | Improve this Doc View Source CSI_DisableAnyEventMouse ESC [ ? 1003 l - Disable any mouse event tracking. Declaration public static readonly string CSI_DisableAnyEventMouse Field Value Type Description string | Improve this Doc View Source CSI_DisableSgrExtModeMouse ESC [ ? 1006 l - Disable SGR (Select Graphic Rendition). Declaration public static readonly string CSI_DisableSgrExtModeMouse Field Value Type Description string | Improve this Doc View Source CSI_DisableUrxvtExtModeMouse ESC [ ? 1015 l - Disable URXVT (Unicode Extended Virtual Terminal). Declaration public static readonly string CSI_DisableUrxvtExtModeMouse Field Value Type Description string | Improve this Doc View Source CSI_EnableAnyEventMouse ESC [ ? 1003 h - Enable mouse event tracking. Declaration public static readonly string CSI_EnableAnyEventMouse Field Value Type Description string | Improve this Doc View Source CSI_EnableSgrExtModeMouse ESC [ ? 1006 h - Enable SGR (Select Graphic Rendition). Declaration public static readonly string CSI_EnableSgrExtModeMouse Field Value Type Description string | Improve this Doc View Source CSI_EnableUrxvtExtModeMouse ESC [ ? 1015 h - Enable URXVT (Unicode Extended Virtual Terminal). Declaration public static readonly string CSI_EnableUrxvtExtModeMouse Field Value Type Description string | Improve this Doc View Source CSI_HideCursor ESC [ ? 25 l - DECTCEM Text Cursor Enable Mode Hide Hide the cursor Declaration public static readonly string CSI_HideCursor Field Value Type Description string | Improve this Doc View Source CSI_ReportDeviceAttributes_Terminator The terminator indicating a reply to CSI_SendDeviceAttributes or CSI_SendDeviceAttributes2 Declaration public const string CSI_ReportDeviceAttributes_Terminator = \"c\" Field Value Type Description string | Improve this Doc View Source CSI_ReportTerminalSizeInChars CSI 1 8 t | yes | yes | yes | report window size in chars https://terminalguide.namepad.de/seq/csi_st-18/ Declaration public static readonly string CSI_ReportTerminalSizeInChars Field Value Type Description string | Improve this Doc View Source CSI_ReportTerminalSizeInChars_ResponseValue The value of the response to CSI_ReportTerminalSizeInChars indicating value 1 and 2 are the terminal size in chars. Declaration public const string CSI_ReportTerminalSizeInChars_ResponseValue = \"8\" Field Value Type Description string | Improve this Doc View Source CSI_ReportTerminalSizeInChars_Terminator The terminator indicating a reply to CSI_ReportTerminalSizeInChars : ESC [ 8 ; height ; width t Declaration public const string CSI_ReportTerminalSizeInChars_Terminator = \"t\" Field Value Type Description string | Improve this Doc View Source CSI_RequestCursorPositionReport ESC [ ? 6 n - Request Cursor Position Report (?) (DECXCPR) https://terminalguide.namepad.de/seq/csi_sn__p-6/ Declaration public static readonly string CSI_RequestCursorPositionReport Field Value Type Description string | Improve this Doc View Source CSI_RequestCursorPositionReport_Terminator The terminal reply to CSI_RequestCursorPositionReport. ESC [ ? (y) ; (x) R Declaration public const string CSI_RequestCursorPositionReport_Terminator = \"R\" Field Value Type Description string | Improve this Doc View Source CSI_RestoreAltBufferWithBackscroll ESC [ ? 1047 l - Restore xterm working buffer (with backscroll) Declaration public static readonly string CSI_RestoreAltBufferWithBackscroll Field Value Type Description string | Improve this Doc View Source CSI_RestoreCursorAndRestoreAltBufferWithBackscroll ESC [ ? 1049 l - Restore cursor position and restore xterm working buffer (with backscroll) Declaration public static readonly string CSI_RestoreCursorAndRestoreAltBufferWithBackscroll Field Value Type Description string | Improve this Doc View Source CSI_RestoreCursorPosition ESC [ 8 - DECSR Restore Cursor Position from Memory** Declaration public static readonly string CSI_RestoreCursorPosition Field Value Type Description string | Improve this Doc View Source CSI_SaveCursorAndActivateAltBufferNoBackscroll ESC [ ? 1049 h - Save cursor position and activate xterm alternative buffer (no backscroll) Declaration public static readonly string CSI_SaveCursorAndActivateAltBufferNoBackscroll Field Value Type Description string | Improve this Doc View Source CSI_SaveCursorPosition ESC [ 7 - Save Cursor Position in Memory** Declaration public static readonly string CSI_SaveCursorPosition Field Value Type Description string | Improve this Doc View Source CSI_SendDeviceAttributes ESC [ 0 c - Send Device Attributes (Primary DA) https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h3-Application-Program-Command-functions https://www.xfree86.org/current/ctlseqs.html Windows Terminal v1.17 and below emits “\\x1b[?1;0c”, indicating \"VT101 with No Options\". Windows Terminal v1.18+ emits: \\x1b[?61;6;7;22;23;24;28;32;42c\" See https://github.com/microsoft/terminal/pull/14906 61 - The device conforms to level 1 of the character cell display architecture (See https://github.com/microsoft/terminal/issues/15693#issuecomment-1633304497) 6 = Selective erase 7 = Soft fonts 22 = Color text 23 = Greek character sets 24 = Turkish character sets 28 = Rectangular area operations 32 = Text macros 42 = ISO Latin-2 character set Declaration public static readonly string CSI_SendDeviceAttributes Field Value Type Description string | Improve this Doc View Source CSI_SendDeviceAttributes2 ESC [ > 0 c - Send Device Attributes (Secondary DA) Windows Terminal v1.18+ emits: \"\\x1b[>0;10;1c\" (vt100, firmware version 1.0, vt220) Declaration public static readonly string CSI_SendDeviceAttributes2 Field Value Type Description string | Improve this Doc View Source CSI_ShowCursor ESC [ ? 25 h - DECTCEM Text Cursor Enable Mode Show Show the cursor Declaration public static readonly string CSI_ShowCursor Field Value Type Description string | Improve this Doc View Source KeyEsc Escape key code (ASCII 27/0x1B). Declaration public static readonly char KeyEsc Field Value Type Description char Properties | Improve this Doc View Source CSI_DisableMouseEvents Control sequence for disabling mouse events. Declaration public static string CSI_DisableMouseEvents { get; set; } Property Value Type Description string | Improve this Doc View Source CSI_EnableMouseEvents Control sequence for enabling mouse events. Declaration public static string CSI_EnableMouseEvents { get; set; } Property Value Type Description string Methods | Improve this Doc View Source CSI_ClearScreen(ClearScreenOptions) ESC [ x J - Clears part of the screen. See EscSeqUtils.ClearScreenOptions. Declaration public static string CSI_ClearScreen(EscSeqUtils.ClearScreenOptions option) Parameters Type Name Description EscSeqUtils.ClearScreenOptions option Returns Type Description string | Improve this Doc View Source CSI_SetBackgroundColor(int) ESC[48;5;{id}m - Set background color (256 colors) Declaration public static string CSI_SetBackgroundColor(int id) Parameters Type Name Description int id Returns Type Description string | Improve this Doc View Source CSI_SetBackgroundColorRGB(int, int, int) ESC[48;2;{r};{g};{b}m Set background color as RGB. Declaration public static string CSI_SetBackgroundColorRGB(int r, int g, int b) Parameters Type Name Description int r int g int b Returns Type Description string | Improve this Doc View Source CSI_SetCursorPosition(int, int) ESC [ y ; x H - CUP Cursor Position - Cursor moves to x ; y coordinate within the viewport, where x is the column of the y line Declaration public static string CSI_SetCursorPosition(int y, int x) Parameters Type Name Description int y int x Returns Type Description string | Improve this Doc View Source CSI_SetCursorStyle(DECSCUSR_Style) ESC [ n SP q - Select Cursor Style (DECSCUSR) https://terminalguide.namepad.de/seq/csi_sq_t_space/ Declaration public static string CSI_SetCursorStyle(EscSeqUtils.DECSCUSR_Style style) Parameters Type Name Description EscSeqUtils.DECSCUSR_Style style Returns Type Description string | Improve this Doc View Source CSI_SetForegroundColor(int) ESC[38;5;{id}m - Set foreground color (256 colors) Declaration public static string CSI_SetForegroundColor(int id) Parameters Type Name Description int id Returns Type Description string | Improve this Doc View Source CSI_SetForegroundColorRGB(int, int, int) ESC[38;2;{r};{g};{b}m Set foreground color as RGB. Declaration public static string CSI_SetForegroundColorRGB(int r, int g, int b) Parameters Type Name Description int r int g int b Returns Type Description string | Improve this Doc View Source CSI_SetGraphicsRendition(params int[]) ESC [ (n) m - SGR - Set Graphics Rendition - Set the format of the screen and text as specified by (n) This command is special in that the (n) position can accept between 0 and 16 parameters separated by semicolons. When no parameters are specified, it is treated the same as a single 0 parameter. https://terminalguide.namepad.de/seq/csi_sm/ Declaration public static string CSI_SetGraphicsRendition(params int[] parameters) Parameters Type Name Description int[] parameters Returns Type Description string | Improve this Doc View Source CSI_SetTerminalWindowSize(int, int) ESC [ 8 ; height ; width t - Set Terminal Window Size https://terminalguide.namepad.de/seq/csi_st-8/ Declaration public static string CSI_SetTerminalWindowSize(int height, int width) Parameters Type Name Description int height int width Returns Type Description string | Improve this Doc View Source DecodeEscSeq(EscSeqRequests, ref ConsoleKeyInfo, ref ConsoleKey, ConsoleKeyInfo[], ref ConsoleModifiers, out string, out string, out string[], out string, out bool, out List<MouseFlags>, out Point, out bool, Action<MouseFlags, Point>) Decodes an ANSI escape sequence. Declaration public static void DecodeEscSeq(EscSeqRequests escSeqRequests, ref ConsoleKeyInfo newConsoleKeyInfo, ref ConsoleKey key, ConsoleKeyInfo[] cki, ref ConsoleModifiers mod, out string c1Control, out string code, out string[] values, out string terminator, out bool isMouse, out List<MouseFlags> buttonState, out Point pos, out bool isResponse, Action<MouseFlags, Point> continuousButtonPressedHandler) Parameters Type Name Description EscSeqRequests escSeqRequests The EscSeqRequests which may contain a request. ConsoleKeyInfo newConsoleKeyInfo The ConsoleKeyInfo which may changes. ConsoleKey key The ConsoleKey which may changes. ConsoleKeyInfo[] cki The ConsoleKeyInfo array. ConsoleModifiers mod The ConsoleModifiers which may changes. string c1Control The control returned by the GetC1ControlChar(char) method. string code The code returned by the GetEscapeResult(char[]) method. string[] values The values returned by the GetEscapeResult(char[]) method. string terminator The terminator returned by the GetEscapeResult(char[]) method. bool isMouse Indicates if the escape sequence is a mouse event. List<MouseFlags> buttonState The MouseFlags button state. Point pos The MouseFlags position. bool isResponse Indicates if the escape sequence is a response to a request. Action<MouseFlags, Point> continuousButtonPressedHandler The handler that will process the event. | Improve this Doc View Source GetC1ControlChar(char) Gets the c1Control used in the called escape sequence. Declaration public static string GetC1ControlChar(char c) Parameters Type Name Description char c The char used. Returns Type Description string The c1Control. | Improve this Doc View Source GetConsoleKey(char, string, ref ConsoleModifiers) Gets the ConsoleKey depending on terminating and value. Declaration public static ConsoleKey GetConsoleKey(char terminator, string value, ref ConsoleModifiers mod) Parameters Type Name Description char terminator The terminator indicating a reply to CSI_SendDeviceAttributes or CSI_SendDeviceAttributes2. string value The value. ConsoleModifiers mod The ConsoleModifiers which may changes. Returns Type Description ConsoleKey The ConsoleKey and probably the ConsoleModifiers. | Improve this Doc View Source GetConsoleModifiers(string) Gets the ConsoleModifiers from the value. Declaration public static ConsoleModifiers GetConsoleModifiers(string value) Parameters Type Name Description string value The value. Returns Type Description ConsoleModifiers The ConsoleModifiers or zero. | Improve this Doc View Source GetEscapeResult(char[]) Gets all the needed information about a escape sequence. Declaration public static (string c1Control, string code, string[] values, string terminating) GetEscapeResult(char[] kChar) Parameters Type Name Description char[] kChar The array with all chars. Returns Type Description (string c1Control, string code, string[] values, string terminating) The c1Control returned by GetC1ControlChar(char), code, values and terminating. | Improve this Doc View Source GetKeyCharArray(ConsoleKeyInfo[]) A helper to get only the KeyChar from the ConsoleKeyInfo array. Declaration public static char[] GetKeyCharArray(ConsoleKeyInfo[] cki) Parameters Type Name Description ConsoleKeyInfo[] cki Returns Type Description char[] The char array of the escape sequence. | Improve this Doc View Source GetMouse(ConsoleKeyInfo[], out List<MouseFlags>, out Point, Action<MouseFlags, Point>) Gets the MouseFlags mouse button flags and the position. Declaration public static void GetMouse(ConsoleKeyInfo[] cki, out List<MouseFlags> mouseFlags, out Point pos, Action<MouseFlags, Point> continuousButtonPressedHandler) Parameters Type Name Description ConsoleKeyInfo[] cki The ConsoleKeyInfo array. List<MouseFlags> mouseFlags The mouse button flags. Point pos The mouse position. Action<MouseFlags, Point> continuousButtonPressedHandler The handler that will process the event. | Improve this Doc View Source GetParentProcess(Process) Get the terminal that holds the console driver. Declaration public static Process GetParentProcess(Process process) Parameters Type Name Description Process process The process. Returns Type Description Process If supported the executable console process, null otherwise. | Improve this Doc View Source MapConsoleKeyInfo(ConsoleKeyInfo) Ensures a console key is mapped to one that works correctly with ANSI escape sequences. Declaration public static ConsoleKeyInfo MapConsoleKeyInfo(ConsoleKeyInfo consoleKeyInfo) Parameters Type Name Description ConsoleKeyInfo consoleKeyInfo The ConsoleKeyInfo. Returns Type Description ConsoleKeyInfo The ConsoleKeyInfo modified. | Improve this Doc View Source ResizeArray(ConsoleKeyInfo, ConsoleKeyInfo[]) A helper to resize the ConsoleKeyInfo as needed. Declaration public static ConsoleKeyInfo[] ResizeArray(ConsoleKeyInfo consoleKeyInfo, ConsoleKeyInfo[] cki) Parameters Type Name Description ConsoleKeyInfo consoleKeyInfo The ConsoleKeyInfo. ConsoleKeyInfo[] cki The ConsoleKeyInfo array to resize. Returns Type Description ConsoleKeyInfo[] The ConsoleKeyInfo resized."
  },
  "api/Terminal.Gui/Terminal.Gui.FakeConsole.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeConsole.html",
    "title": "Class FakeConsole",
    "keywords": "Class FakeConsole Inheritance object FakeConsole Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class FakeConsole Fields | Improve this Doc View Source HEIGHT Specifies the initial console height. Declaration public const int HEIGHT = 25 Field Value Type Description int | Improve this Doc View Source MockKeyPresses A stack of keypresses to return when ReadKey is called. Declaration public static Stack<ConsoleKeyInfo> MockKeyPresses Field Value Type Description Stack<ConsoleKeyInfo> | Improve this Doc View Source WIDTH Specifies the initial console width. Declaration public const int WIDTH = 80 Field Value Type Description int Properties | Improve this Doc View Source BackgroundColor Declaration public static ConsoleColor BackgroundColor { get; set; } Property Value Type Description ConsoleColor | Improve this Doc View Source BufferHeight Declaration public static int BufferHeight { get; set; } Property Value Type Description int | Improve this Doc View Source BufferWidth Declaration public static int BufferWidth { get; set; } Property Value Type Description int | Improve this Doc View Source CapsLock Declaration public static bool CapsLock { get; } Property Value Type Description bool | Improve this Doc View Source CursorLeft Declaration public static int CursorLeft { get; set; } Property Value Type Description int | Improve this Doc View Source CursorSize Declaration public static int CursorSize { get; set; } Property Value Type Description int | Improve this Doc View Source CursorTop Declaration public static int CursorTop { get; set; } Property Value Type Description int | Improve this Doc View Source CursorVisible Declaration public static bool CursorVisible { get; set; } Property Value Type Description bool | Improve this Doc View Source Error Declaration public static TextWriter Error { get; } Property Value Type Description TextWriter | Improve this Doc View Source ForegroundColor Declaration public static ConsoleColor ForegroundColor { get; set; } Property Value Type Description ConsoleColor | Improve this Doc View Source In Declaration public static TextReader In { get; } Property Value Type Description TextReader | Improve this Doc View Source InputEncoding Declaration public static Encoding InputEncoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source IsErrorRedirected Declaration public static bool IsErrorRedirected { get; } Property Value Type Description bool | Improve this Doc View Source IsInputRedirected Declaration public static bool IsInputRedirected { get; } Property Value Type Description bool | Improve this Doc View Source IsOutputRedirected Declaration public static bool IsOutputRedirected { get; } Property Value Type Description bool | Improve this Doc View Source KeyAvailable Declaration public static bool KeyAvailable { get; } Property Value Type Description bool | Improve this Doc View Source LargestWindowHeight Declaration public static int LargestWindowHeight { get; } Property Value Type Description int | Improve this Doc View Source LargestWindowWidth Declaration public static int LargestWindowWidth { get; } Property Value Type Description int | Improve this Doc View Source NumberLock Declaration public static bool NumberLock { get; } Property Value Type Description bool | Improve this Doc View Source Out Declaration public static TextWriter Out { get; } Property Value Type Description TextWriter | Improve this Doc View Source OutputEncoding Declaration public static Encoding OutputEncoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source Title Declaration public static string Title { get; set; } Property Value Type Description string | Improve this Doc View Source TreatControlCAsInput Declaration public static bool TreatControlCAsInput { get; set; } Property Value Type Description bool | Improve this Doc View Source WindowHeight Declaration public static int WindowHeight { get; set; } Property Value Type Description int | Improve this Doc View Source WindowLeft Declaration public static int WindowLeft { get; set; } Property Value Type Description int | Improve this Doc View Source WindowTop Declaration public static int WindowTop { get; set; } Property Value Type Description int | Improve this Doc View Source WindowWidth Declaration public static int WindowWidth { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Beep() Declaration public static void Beep() | Improve this Doc View Source Beep(int, int) Declaration public static void Beep(int frequency, int duration) Parameters Type Name Description int frequency int duration | Improve this Doc View Source Clear() Declaration public static void Clear() | Improve this Doc View Source MoveBufferArea(int, int, int, int, int, int, char, ConsoleColor, ConsoleColor) Declaration public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor) Parameters Type Name Description int sourceLeft int sourceTop int sourceWidth int sourceHeight int targetLeft int targetTop char sourceChar ConsoleColor sourceForeColor ConsoleColor sourceBackColor | Improve this Doc View Source MoveBufferArea(int, int, int, int, int, int) Declaration public static void MoveBufferArea(int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop) Parameters Type Name Description int sourceLeft int sourceTop int sourceWidth int sourceHeight int targetLeft int targetTop | Improve this Doc View Source OpenStandardError() Declaration public static Stream OpenStandardError() Returns Type Description Stream | Improve this Doc View Source OpenStandardError(int) Declaration public static Stream OpenStandardError(int bufferSize) Parameters Type Name Description int bufferSize Returns Type Description Stream | Improve this Doc View Source OpenStandardInput() Declaration public static Stream OpenStandardInput() Returns Type Description Stream | Improve this Doc View Source OpenStandardInput(int) Declaration public static Stream OpenStandardInput(int bufferSize) Parameters Type Name Description int bufferSize Returns Type Description Stream | Improve this Doc View Source OpenStandardOutput() Declaration public static Stream OpenStandardOutput() Returns Type Description Stream | Improve this Doc View Source OpenStandardOutput(int) Declaration public static Stream OpenStandardOutput(int bufferSize) Parameters Type Name Description int bufferSize Returns Type Description Stream | Improve this Doc View Source PushMockKeyPress(Key) Helper to push a Key onto MockKeyPresses. Declaration public static void PushMockKeyPress(Key key) Parameters Type Name Description Key key | Improve this Doc View Source Read() Declaration public static int Read() Returns Type Description int | Improve this Doc View Source ReadKey() Declaration public static ConsoleKeyInfo ReadKey() Returns Type Description ConsoleKeyInfo | Improve this Doc View Source ReadLine() Declaration public static string ReadLine() Returns Type Description string | Improve this Doc View Source ResetColor() Declaration public static void ResetColor() | Improve this Doc View Source SetBufferSize(int, int) Declaration public static void SetBufferSize(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source SetCursorPosition(int, int) Declaration public static void SetCursorPosition(int left, int top) Parameters Type Name Description int left int top | Improve this Doc View Source SetError(TextWriter) Declaration public static void SetError(TextWriter newError) Parameters Type Name Description TextWriter newError | Improve this Doc View Source SetIn(TextReader) Declaration public static void SetIn(TextReader newIn) Parameters Type Name Description TextReader newIn | Improve this Doc View Source SetOut(TextWriter) Declaration public static void SetOut(TextWriter newOut) Parameters Type Name Description TextWriter newOut | Improve this Doc View Source SetWindowPosition(int, int) Declaration public static void SetWindowPosition(int left, int top) Parameters Type Name Description int left int top | Improve this Doc View Source SetWindowSize(int, int) Declaration public static void SetWindowSize(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source Write(bool) Declaration public static void Write(bool value) Parameters Type Name Description bool value | Improve this Doc View Source Write(char) Declaration public static void Write(char value) Parameters Type Name Description char value | Improve this Doc View Source Write(char[], int, int) Declaration public static void Write(char[] buffer, int index, int count) Parameters Type Name Description char[] buffer int index int count | Improve this Doc View Source Write(char[]) Declaration public static void Write(char[] buffer) Parameters Type Name Description char[] buffer | Improve this Doc View Source Write(decimal) Declaration public static void Write(decimal value) Parameters Type Name Description decimal value | Improve this Doc View Source Write(double) Declaration public static void Write(double value) Parameters Type Name Description double value | Improve this Doc View Source Write(int) Declaration public static void Write(int value) Parameters Type Name Description int value | Improve this Doc View Source Write(long) Declaration public static void Write(long value) Parameters Type Name Description long value | Improve this Doc View Source Write(object) Declaration public static void Write(object value) Parameters Type Name Description object value | Improve this Doc View Source Write(float) Declaration public static void Write(float value) Parameters Type Name Description float value | Improve this Doc View Source Write(string, object, object, object, object) Declaration public static void Write(string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description string format object arg0 object arg1 object arg2 object arg3 | Improve this Doc View Source Write(string, object, object, object) Declaration public static void Write(string format, object arg0, object arg1, object arg2) Parameters Type Name Description string format object arg0 object arg1 object arg2 | Improve this Doc View Source Write(string, object, object) Declaration public static void Write(string format, object arg0, object arg1) Parameters Type Name Description string format object arg0 object arg1 | Improve this Doc View Source Write(string, object) Declaration public static void Write(string format, object arg0) Parameters Type Name Description string format object arg0 | Improve this Doc View Source Write(string, params object[]) Declaration public static void Write(string format, params object[] arg) Parameters Type Name Description string format object[] arg | Improve this Doc View Source Write(string) Declaration public static void Write(string value) Parameters Type Name Description string value | Improve this Doc View Source Write(uint) Declaration public static void Write(uint value) Parameters Type Name Description uint value | Improve this Doc View Source Write(ulong) Declaration public static void Write(ulong value) Parameters Type Name Description ulong value | Improve this Doc View Source WriteLine() Declaration public static void WriteLine() | Improve this Doc View Source WriteLine(bool) Declaration public static void WriteLine(bool value) Parameters Type Name Description bool value | Improve this Doc View Source WriteLine(char) Declaration public static void WriteLine(char value) Parameters Type Name Description char value | Improve this Doc View Source WriteLine(char[], int, int) Declaration public static void WriteLine(char[] buffer, int index, int count) Parameters Type Name Description char[] buffer int index int count | Improve this Doc View Source WriteLine(char[]) Declaration public static void WriteLine(char[] buffer) Parameters Type Name Description char[] buffer | Improve this Doc View Source WriteLine(decimal) Declaration public static void WriteLine(decimal value) Parameters Type Name Description decimal value | Improve this Doc View Source WriteLine(double) Declaration public static void WriteLine(double value) Parameters Type Name Description double value | Improve this Doc View Source WriteLine(int) Declaration public static void WriteLine(int value) Parameters Type Name Description int value | Improve this Doc View Source WriteLine(long) Declaration public static void WriteLine(long value) Parameters Type Name Description long value | Improve this Doc View Source WriteLine(object) Declaration public static void WriteLine(object value) Parameters Type Name Description object value | Improve this Doc View Source WriteLine(float) Declaration public static void WriteLine(float value) Parameters Type Name Description float value | Improve this Doc View Source WriteLine(string, object, object, object, object) Declaration public static void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) Parameters Type Name Description string format object arg0 object arg1 object arg2 object arg3 | Improve this Doc View Source WriteLine(string, object, object, object) Declaration public static void WriteLine(string format, object arg0, object arg1, object arg2) Parameters Type Name Description string format object arg0 object arg1 object arg2 | Improve this Doc View Source WriteLine(string, object, object) Declaration public static void WriteLine(string format, object arg0, object arg1) Parameters Type Name Description string format object arg0 object arg1 | Improve this Doc View Source WriteLine(string, object) Declaration public static void WriteLine(string format, object arg0) Parameters Type Name Description string format object arg0 | Improve this Doc View Source WriteLine(string, params object[]) Declaration public static void WriteLine(string format, params object[] arg) Parameters Type Name Description string format object[] arg | Improve this Doc View Source WriteLine(string) Declaration public static void WriteLine(string value) Parameters Type Name Description string value | Improve this Doc View Source WriteLine(uint) Declaration public static void WriteLine(uint value) Parameters Type Name Description uint value | Improve this Doc View Source WriteLine(ulong) Declaration public static void WriteLine(ulong value) Parameters Type Name Description ulong value"
  },
  "api/Terminal.Gui/Terminal.Gui.FakeDriver.Behaviors.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeDriver.Behaviors.html",
    "title": "Class FakeDriver.Behaviors",
    "keywords": "Class FakeDriver.Behaviors Inheritance object FakeDriver.Behaviors Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FakeDriver.Behaviors Constructors | Improve this Doc View Source Behaviors(bool, bool, bool) Declaration public Behaviors(bool useFakeClipboard = false, bool fakeClipboardAlwaysThrowsNotSupportedException = false, bool fakeClipboardIsSupportedAlwaysTrue = false) Parameters Type Name Description bool useFakeClipboard bool fakeClipboardAlwaysThrowsNotSupportedException bool fakeClipboardIsSupportedAlwaysTrue Properties | Improve this Doc View Source FakeClipboardAlwaysThrowsNotSupportedException Declaration public bool FakeClipboardAlwaysThrowsNotSupportedException { get; } Property Value Type Description bool | Improve this Doc View Source FakeClipboardIsSupportedAlwaysFalse Declaration public bool FakeClipboardIsSupportedAlwaysFalse { get; } Property Value Type Description bool | Improve this Doc View Source UseFakeClipboard Declaration public bool UseFakeClipboard { get; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.FakeDriver.FakeClipboard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeDriver.FakeClipboard.html",
    "title": "Class FakeDriver.FakeClipboard",
    "keywords": "Class FakeDriver.FakeClipboard Inheritance object ClipboardBase FakeDriver.FakeClipboard Implements IClipboard Inherited Members ClipboardBase.GetClipboardData() ClipboardBase.SetClipboardData(string) ClipboardBase.TryGetClipboardData(out string) ClipboardBase.TrySetClipboardData(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FakeDriver.FakeClipboard : ClipboardBase, IClipboard Constructors | Improve this Doc View Source FakeClipboard(bool, bool) Declaration public FakeClipboard(bool fakeClipboardThrowsNotSupportedException = false, bool isSupportedAlwaysFalse = false) Parameters Type Name Description bool fakeClipboardThrowsNotSupportedException bool isSupportedAlwaysFalse Fields | Improve this Doc View Source FakeException Declaration public Exception FakeException Field Value Type Description Exception Properties | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard Declaration public override bool IsSupported { get; } Property Value Type Description bool Overrides ClipboardBase.IsSupported Methods | Improve this Doc View Source GetClipboardDataImpl() Returns the contents of the OS clipboard if possible. Implemented by ConsoleDriver-specific subclasses. Declaration protected override string GetClipboardDataImpl() Returns Type Description string The contents of the OS clipboard if successful. Overrides ClipboardBase.GetClipboardDataImpl() Exceptions Type Condition NotSupportedException Thrown if it was not possible to copy from the OS clipboard. | Improve this Doc View Source SetClipboardDataImpl(string) Pastes the text to the OS clipboard if possible. Implemented by ConsoleDriver-specific subclasses. Declaration protected override void SetClipboardDataImpl(string text) Parameters Type Name Description string text The text to paste to the OS clipboard. Overrides ClipboardBase.SetClipboardDataImpl(string) Exceptions Type Condition NotSupportedException Thrown if it was not possible to paste to the OS clipboard. Implements IClipboard"
  },
  "api/Terminal.Gui/Terminal.Gui.FakeDriver.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FakeDriver.html",
    "title": "Class FakeDriver",
    "keywords": "Class FakeDriver Implements a mock ConsoleDriver for unit testing Inheritance object ConsoleDriver FakeDriver Inherited Members ConsoleDriver.SizeChanged ConsoleDriver.OnSizeChanged(SizeChangedEventArgs) ConsoleDriver.Cols ConsoleDriver.Rows ConsoleDriver.Left ConsoleDriver.Top ConsoleDriver.Clipboard ConsoleDriver.Contents ConsoleDriver.Col ConsoleDriver.Row ConsoleDriver.Move(int, int) ConsoleDriver.IsRuneSupported(Rune) ConsoleDriver.AddRune(Rune) ConsoleDriver.AddRune(char) ConsoleDriver.AddStr(string) ConsoleDriver.IsValidLocation(int, int) ConsoleDriver.Clip ConsoleDriver.ClearContents() ConsoleDriver.CurrentAttribute ConsoleDriver.SetAttribute(Attribute) ConsoleDriver.GetAttribute() ConsoleDriver.MakeColor(Color, Color) ConsoleDriver.KeyPressed ConsoleDriver.OnKeyPressed(KeyEventArgs) ConsoleDriver.KeyUp ConsoleDriver.OnKeyUp(KeyEventArgs) ConsoleDriver.KeyDown ConsoleDriver.OnKeyDown(KeyEventArgs) ConsoleDriver.MouseEvent ConsoleDriver.OnMouseEvent(MouseEventEventArgs) ConsoleDriver.Diagnostics ConsoleDriver.FillRect(Rect, Rune) ConsoleDriver.FillRect(Rect, char) ConsoleDriver.GetVersionInfo() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FakeDriver : ConsoleDriver Constructors | Improve this Doc View Source FakeDriver() Declaration public FakeDriver() Fields | Improve this Doc View Source FakeBehaviors Declaration public static FakeDriver.Behaviors FakeBehaviors Field Value Type Description FakeDriver.Behaviors Properties | Improve this Doc View Source SupportsTrueColor Gets whether the ConsoleDriver supports TrueColor output. Declaration public override bool SupportsTrueColor { get; } Property Value Type Description bool Overrides ConsoleDriver.SupportsTrueColor Methods | Improve this Doc View Source EnsureCursorVisibility() Determines if the terminal cursor should be visible or not and sets it accordingly. Declaration public override bool EnsureCursorVisibility() Returns Type Description bool true upon success Overrides ConsoleDriver.EnsureCursorVisibility() | Improve this Doc View Source FromVKPacketToKConsoleKeyInfo(ConsoleKeyInfo) Declaration public ConsoleKeyInfo FromVKPacketToKConsoleKeyInfo(ConsoleKeyInfo consoleKeyInfo) Parameters Type Name Description ConsoleKeyInfo consoleKeyInfo Returns Type Description ConsoleKeyInfo | Improve this Doc View Source GetCursorVisibility(out CursorVisibility) Gets the terminal cursor visibility. Declaration public override bool GetCursorVisibility(out CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The current CursorVisibility Returns Type Description bool true upon success Overrides ConsoleDriver.GetCursorVisibility(out CursorVisibility) | Improve this Doc View Source Refresh() Updates the screen to reflect all the changes that have been done to the display buffer Declaration public override void Refresh() Overrides ConsoleDriver.Refresh() | Improve this Doc View Source ResizeScreen() Declaration public virtual void ResizeScreen() | Improve this Doc View Source SendKeys(char, ConsoleKey, bool, bool, bool) Simulates a key press. Declaration public override void SendKeys(char keyChar, ConsoleKey key, bool shift, bool alt, bool control) Parameters Type Name Description char keyChar The key character. ConsoleKey key The key. bool shift If true simulates the Shift key being pressed. bool alt If true simulates the Alt key being pressed. bool control Overrides ConsoleDriver.SendKeys(char, ConsoleKey, bool, bool, bool) | Improve this Doc View Source SetBufferSize(int, int) Declaration public void SetBufferSize(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source SetCursorVisibility(CursorVisibility) Sets the terminal cursor visibility. Declaration public override bool SetCursorVisibility(CursorVisibility visibility) Parameters Type Name Description CursorVisibility visibility The wished CursorVisibility Returns Type Description bool true upon success Overrides ConsoleDriver.SetCursorVisibility(CursorVisibility) | Improve this Doc View Source SetWindowPosition(int, int) Declaration public void SetWindowPosition(int left, int top) Parameters Type Name Description int left int top | Improve this Doc View Source SetWindowSize(int, int) Declaration public void SetWindowSize(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source Suspend() Suspends the application (e.g. on Linux via SIGTSTP) and upon resume, resets the console driver. Declaration public override void Suspend() Overrides ConsoleDriver.Suspend() | Improve this Doc View Source UpdateCursor() Sets the position of the terminal cursor to Col and Row. Declaration public override void UpdateCursor() Overrides ConsoleDriver.UpdateCursor() | Improve this Doc View Source UpdateScreen() Redraws the physical screen with the contents that have been queued up via any of the printing commands. Declaration public override void UpdateScreen() Overrides ConsoleDriver.UpdateScreen()"
  },
  "api/Terminal.Gui/Terminal.Gui.FileDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileDialog.html",
    "title": "Class FileDialog",
    "keywords": "Class FileDialog Modal dialog for selecting files/directories. Has auto-complete and expandable navigation pane (Recent, Root drives etc). Inheritance object Responder View Toplevel Window Dialog FileDialog OpenDialog SaveDialog Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Dialog.DefaultButtonAlignment Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.OnKeyPressed(KeyEventArgs) Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FileDialog : Dialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FileDialog() Initializes a new instance of the FileDialog class. Declaration public FileDialog() | Improve this Doc View Source FileDialog(IFileSystem) Initializes a new instance of the FileDialog class with a custom System.IO.Abstractions.IFileSystem. Declaration public FileDialog(IFileSystem fileSystem) Parameters Type Name Description IFileSystem fileSystem Properties | Improve this Doc View Source AllowedTypes Gets or Sets a collection of file types that the user can/must select. Only applies when OpenMode is File or Mixed. Declaration public List<IAllowedType> AllowedTypes { get; set; } Property Value Type Description List<IAllowedType> | Improve this Doc View Source AllowsMultipleSelection Gets or Sets a value indicating whether to allow selecting multiple existing files/directories. Defaults to false. Declaration public bool AllowsMultipleSelection { get; set; } Property Value Type Description bool | Improve this Doc View Source Canceled Gets a value indicating whether the FileDialog was closed without confirming a selection. Declaration public bool Canceled { get; } Property Value Type Description bool | Improve this Doc View Source CurrentFilter The UI selected IAllowedType from combo box. May be null. Declaration public IAllowedType CurrentFilter { get; } Property Value Type Description IAllowedType | Improve this Doc View Source FileOperationsHandler Gets or sets behavior of the FileDialog when the user attempts to delete a selected file(s). Set to null to prevent deleting. Declaration public IFileOperations FileOperationsHandler { get; set; } Property Value Type Description IFileOperations | Improve this Doc View Source MaxSearchResults The maximum number of results that will be collected when searching before stopping. Declaration public static int MaxSearchResults { get; set; } Property Value Type Description int | Improve this Doc View Source MultiSelected Gets all files/directories selected or an empty collection AllowsMultipleSelection is false or Canceled. Declaration public IReadOnlyList<string> MultiSelected { get; } Property Value Type Description IReadOnlyList<string> | Improve this Doc View Source MustExist True if the file/folder must exist already to be selected. This prevents user from entering the name of something that doesn't exist. Defaults to false. Declaration public bool MustExist { get; set; } Property Value Type Description bool | Improve this Doc View Source OpenMode Gets or Sets which FileSystemInfo type can be selected. Defaults to Mixed (i.e. DirectoryInfo or FileInfo). Declaration public OpenMode OpenMode { get; set; } Property Value Type Description OpenMode | Improve this Doc View Source Path Gets or Sets the selected path in the dialog. This is the result that should be used if AllowsMultipleSelection is off and Canceled is true. Declaration public string Path { get; set; } Property Value Type Description string | Improve this Doc View Source SearchMatcher Defines how the dialog matches files/folders when using the search box. Provide a custom implementation if you want to tailor how matching is performed. Declaration public ISearchMatcher SearchMatcher { get; set; } Property Value Type Description ISearchMatcher | Improve this Doc View Source Style Gets settings for controlling how visual elements behave. Style changes should be made before the Dialog is loaded and shown to the user for the first time. Declaration public FileDialogStyle Style { get; } Property Value Type Description FileDialogStyle Methods | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Toplevel.Dispose(bool) | Improve this Doc View Source GetDefaultTitle() Gets a default dialog title, when Title is not set or empty, result of the function will be shown. Declaration protected virtual string GetDefaultTitle() Returns Type Description string | Improve this Doc View Source IsCompatibleWithAllowedExtensions(IFileInfo) Returns true if there are no AllowedTypes or one of them agrees that file IsAllowed(string). Declaration public bool IsCompatibleWithAllowedExtensions(IFileInfo file) Parameters Type Name Description IFileInfo file Returns Type Description bool | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides Toplevel.OnDrawContent(Rect) | Improve this Doc View Source OnLoaded() Called from Begin(Toplevel) before the Toplevel redraws for the first time. Declaration public override void OnLoaded() Overrides Toplevel.OnLoaded() Events | Improve this Doc View Source FilesSelected Event fired when user attempts to confirm a selection (or multi selection). Allows you to cancel the selection or undertake alternative behavior e.g. open a dialog \"File already exists, Overwrite? yes/no\". Declaration public event EventHandler<FilesSelectedEventArgs> FilesSelected Event Type Type Description EventHandler<FilesSelectedEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.FileDialogStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileDialogStyle.html",
    "title": "Class FileDialogStyle",
    "keywords": "Class FileDialogStyle Stores style settings for FileDialog. Inheritance object FileDialogStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FileDialogStyle Constructors | Improve this Doc View Source FileDialogStyle(IFileSystem) Creates a new instance of the FileDialogStyle class. Declaration public FileDialogStyle(IFileSystem fileSystem) Parameters Type Name Description IFileSystem fileSystem Properties | Improve this Doc View Source CancelButtonText Gets or sets the text on the 'Cancel' button. Declaration public string CancelButtonText { get; set; } Property Value Type Description string | Improve this Doc View Source ColorProvider Gets or sets the class thatis responsible for determining which color to use to represent files and directories when UseColors is true. Declaration public FileSystemColorProvider ColorProvider { get; set; } Property Value Type Description FileSystemColorProvider | Improve this Doc View Source Culture Gets or sets the culture to use (e.g. for number formatting). Defaults to CurrentUICulture. Declaration public CultureInfo Culture { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source DateFormat Gets or sets the format to use for date/times in the Modified column. Defaults to SortableDateTimePattern of the CurrentCulture Declaration public string DateFormat { get; set; } Property Value Type Description string | Improve this Doc View Source DefaultUseColors Gets or sets the default value to use for UseColors. This can be populated from .tui config files via ConfigurationManager Declaration public static bool DefaultUseColors { get; set; } Property Value Type Description bool | Improve this Doc View Source DefaultUseUnicodeCharacters Gets or sets the default value to use for UseUnicodeCharacters. This can be populated from .tui config files via ConfigurationManager Declaration public static bool DefaultUseUnicodeCharacters { get; set; } Property Value Type Description bool | Improve this Doc View Source DirectoryAlreadyExistsFeedback Gets or sets error message when user OpenMode is File and user enters the name of an existing directory (File system cannot have a folder with the same name as a file). Declaration public string DirectoryAlreadyExistsFeedback { get; set; } Property Value Type Description string | Improve this Doc View Source DirectoryMustExistFeedback Gets or sets error message when user selects a directory that does not exist and OpenMode is Directory and MustExist is true. Declaration public string DirectoryMustExistFeedback { get; set; } Property Value Type Description string | Improve this Doc View Source FileAlreadyExistsFeedback Gets or sets error message when user OpenMode is Directory and user enters the name of an existing file (File system cannot have a folder with the same name as a file). Declaration public string FileAlreadyExistsFeedback { get; set; } Property Value Type Description string | Improve this Doc View Source FileMustExistFeedback Gets or sets error message when user selects a file that does not exist and OpenMode is File and MustExist is true. Declaration public string FileMustExistFeedback { get; set; } Property Value Type Description string | Improve this Doc View Source FilenameColumnName Gets or sets the header text displayed in the Filename column of the files table. Declaration public string FilenameColumnName { get; set; } Property Value Type Description string | Improve this Doc View Source FileOrDirectoryMustExistFeedback Gets or sets error message when user selects a file/dir that does not exist and OpenMode is Mixed and MustExist is true. Declaration public string FileOrDirectoryMustExistFeedback { get; set; } Property Value Type Description string | Improve this Doc View Source FlipOkCancelButtonLayoutOrder Gets or sets whether to flip the order of the Ok and Cancel buttons. Defaults to false (Ok button then Cancel button). Set to true to show Cancel button on left then Ok button instead. Declaration public bool FlipOkCancelButtonLayoutOrder { get; set; } Property Value Type Description bool | Improve this Doc View Source IconProvider Gets or sets the class responsible for determining which symbol to use to represent files and directories. Declaration public FileSystemIconProvider IconProvider { get; set; } Property Value Type Description FileSystemIconProvider | Improve this Doc View Source ModifiedColumnName Gets or sets the header text displayed in the Modified column of the files table. Declaration public string ModifiedColumnName { get; set; } Property Value Type Description string | Improve this Doc View Source OkButtonText Gets or sets the text on the 'Ok' button. Typically you may want to change this to \"Open\" or \"Save\" etc. Declaration public string OkButtonText { get; set; } Property Value Type Description string | Improve this Doc View Source PathCaption Gets or sets the text displayed in the 'Path' text box when user has not supplied any input yet. Declaration public string PathCaption { get; set; } Property Value Type Description string | Improve this Doc View Source SearchCaption Gets or sets the text displayed in the 'Search' text box when user has not supplied any input yet. Declaration public string SearchCaption { get; set; } Property Value Type Description string | Improve this Doc View Source SizeColumnName Gets or sets the header text displayed in the Size column of the files table. Declaration public string SizeColumnName { get; set; } Property Value Type Description string | Improve this Doc View Source TableStyle Gets the style settings for the table of files (in currently selected directory). Declaration public TableStyle TableStyle { get; } Property Value Type Description TableStyle | Improve this Doc View Source TreeRootGetter Gets or Sets the method for getting the root tree objects that are displayed in the collapse-able tree in the FileDialog. Defaults to all accessible GetLogicalDrives() and unique Environment.SpecialFolder. Declaration public Func<Dictionary<IDirectoryInfo, string>> TreeRootGetter { get; set; } Property Value Type Description Func<Dictionary<IDirectoryInfo, string>> | Improve this Doc View Source TreeStyle Gets the style settings for the collapse-able directory/places tree Declaration public TreeStyle TreeStyle { get; } Property Value Type Description TreeStyle | Improve this Doc View Source TypeColumnName Gets or sets the header text displayed in the Type column of the files table. Declaration public string TypeColumnName { get; set; } Property Value Type Description string | Improve this Doc View Source UseColors Gets or Sets a value indicating whether different colors should be used for different file types/directories. Defaults to false. Declaration public bool UseColors { get; set; } Property Value Type Description bool | Improve this Doc View Source UseUnicodeCharacters Gets or sets whether to use advanced unicode characters which might not be installed on all users computers. Declaration public bool UseUnicodeCharacters { get; set; } Property Value Type Description bool | Improve this Doc View Source WrongFileTypeFeedback Gets or sets error message when user attempts to select a file type that is not one of AllowedTypes Declaration public string WrongFileTypeFeedback { get; set; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.FilesSelectedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FilesSelectedEventArgs.html",
    "title": "Class FilesSelectedEventArgs",
    "keywords": "Class FilesSelectedEventArgs Event args for the FilesSelected event Inheritance object EventArgs FilesSelectedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FilesSelectedEventArgs : EventArgs Constructors | Improve this Doc View Source FilesSelectedEventArgs(FileDialog) Creates a new instance of the FilesSelectedEventArgs Declaration public FilesSelectedEventArgs(FileDialog dialog) Parameters Type Name Description FileDialog dialog Properties | Improve this Doc View Source Cancel Set to true if you want to prevent the selection going ahead (this will leave the FileDialog still showing). Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Dialog The dialog where the choice is being made. Use Path and/or MultiSelected to evaluate the users choice. Declaration public FileDialog Dialog { get; } Property Value Type Description FileDialog"
  },
  "api/Terminal.Gui/Terminal.Gui.FileSystemColorProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileSystemColorProvider.html",
    "title": "Class FileSystemColorProvider",
    "keywords": "Class FileSystemColorProvider Provides a way to get the color of a file or directory. Inheritance object FileSystemColorProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FileSystemColorProvider Fields | Improve this Doc View Source ExtensionToColor Mapping of file extension to color. Declaration public Dictionary<string, Color> ExtensionToColor Field Value Type Description Dictionary<string, Color> Properties | Improve this Doc View Source FilenameToColor Mapping of file/dir name to color. Declaration public Dictionary<string, Color> FilenameToColor { get; set; } Property Value Type Description Dictionary<string, Color> Methods | Improve this Doc View Source GetColor(IFileSystemInfo) Gets the color to use. Declaration public Color GetColor(IFileSystemInfo file) Parameters Type Name Description IFileSystemInfo file Returns Type Description Color"
  },
  "api/Terminal.Gui/Terminal.Gui.FileSystemIconProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileSystemIconProvider.html",
    "title": "Class FileSystemIconProvider",
    "keywords": "Class FileSystemIconProvider Determines which symbol to use to represent files and directories. Inheritance object FileSystemIconProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FileSystemIconProvider Properties | Improve this Doc View Source IsOpenGetter Gets or sets the delegate to be used to determine opened state of directories when resolving GetIcon(IFileSystemInfo). Defaults to always false. Declaration public Func<IDirectoryInfo, bool> IsOpenGetter { get; set; } Property Value Type Description Func<IDirectoryInfo, bool> | Improve this Doc View Source UseNerdIcons Gets or sets a flag indicating whether to use Nerd Font icons. Defaults to Enable which can be configured by end users from their ./.tui/config.json via ConfigurationManager. Enabling UseNerdIcons implicitly disables UseUnicodeCharacters. Declaration public bool UseNerdIcons { get; set; } Property Value Type Description bool | Improve this Doc View Source UseUnicodeCharacters Gets or sets a flag indicating whether to use common unicode characters for file/directory icons. Declaration public bool UseUnicodeCharacters { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source GetIcon(IFileSystemInfo) Returns the character to use to represent fileSystemInfo or an empty space if no icon should be used. Declaration public Rune GetIcon(IFileSystemInfo fileSystemInfo) Parameters Type Name Description IFileSystemInfo fileSystemInfo The file or directory requiring an icon. Returns Type Description Rune | Improve this Doc View Source GetIconWithOptionalSpace(IFileSystemInfo) Returns GetIcon(IFileSystemInfo) with an extra space on the end if icon is likely to overlap adjacent cells. Declaration public string GetIconWithOptionalSpace(IFileSystemInfo fileSystemInfo) Parameters Type Name Description IFileSystemInfo fileSystemInfo Returns Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.FileSystemTreeBuilder.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FileSystemTreeBuilder.html",
    "title": "Class FileSystemTreeBuilder",
    "keywords": "Class FileSystemTreeBuilder TreeView builder for creating file system based trees. Inheritance object FileSystemTreeBuilder Implements ITreeBuilder<IFileSystemInfo> IComparer<IFileSystemInfo> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FileSystemTreeBuilder : ITreeBuilder<IFileSystemInfo>, IComparer<IFileSystemInfo> Constructors | Improve this Doc View Source FileSystemTreeBuilder() Creates a new instance of the FileSystemTreeBuilder class. Declaration public FileSystemTreeBuilder() Properties | Improve this Doc View Source IncludeFiles Gets or sets a flag indicating whether to show files as leaf elements in the tree. Defaults to true. Declaration public bool IncludeFiles { get; } Property Value Type Description bool | Improve this Doc View Source Sorter Gets or sets the order of directory children. Defaults to this. Declaration public IComparer<IFileSystemInfo> Sorter { get; set; } Property Value Type Description IComparer<IFileSystemInfo> | Improve this Doc View Source SupportsCanExpand Returns true if CanExpand(T) is implemented by this class Declaration public bool SupportsCanExpand { get; } Property Value Type Description bool Methods | Improve this Doc View Source CanExpand(IFileSystemInfo) Returns true/false for whether a model has children. This method should be implemented when GetChildren(T) is an expensive operation otherwise SupportsCanExpand should return false (in which case this method will not be called) Declaration public bool CanExpand(IFileSystemInfo toExpand) Parameters Type Name Description IFileSystemInfo toExpand Returns Type Description bool | Improve this Doc View Source Compare(IFileSystemInfo, IFileSystemInfo) Declaration public int Compare(IFileSystemInfo x, IFileSystemInfo y) Parameters Type Name Description IFileSystemInfo x IFileSystemInfo y Returns Type Description int | Improve this Doc View Source GetChildren(IFileSystemInfo) Returns all children of a given forObject which should be added to the tree as new branches underneath it Declaration public IEnumerable<IFileSystemInfo> GetChildren(IFileSystemInfo forObject) Parameters Type Name Description IFileSystemInfo forObject Returns Type Description IEnumerable<IFileSystemInfo> Implements ITreeBuilder<T> IComparer<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.FocusEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FocusEventArgs.html",
    "title": "Class FocusEventArgs",
    "keywords": "Class FocusEventArgs Defines the event arguments for SetFocus() Inheritance object EventArgs FocusEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FocusEventArgs : EventArgs Constructors | Improve this Doc View Source FocusEventArgs(View) Constructs. Declaration public FocusEventArgs(View view) Parameters Type Name Description View view The view that gets or loses focus. Properties | Improve this Doc View Source Handled Indicates if the current focus event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description bool | Improve this Doc View Source View Indicates the current view that gets or loses focus. Declaration public View View { get; set; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.Frame.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Frame.html",
    "title": "Class Frame",
    "keywords": "Class Frame Frames are a special form of View that act as adornments; they appear outside of the Bounds enabling borders, menus, etc... Inheritance object Responder View Frame Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(Rect) View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.Draw() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Frame : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Properties | Improve this Doc View Source BorderStyle Declaration public LineStyle BorderStyle { get; set; } Property Value Type Description LineStyle | Improve this Doc View Source Bounds Gets the rectangle that describes the inner area of the frame. The Location is always (0,0). Declaration public override Rect Bounds { get; set; } Property Value Type Description Rect Overrides View.Bounds | Improve this Doc View Source Parent The Parent of this Frame (the View this Frame surrounds). Declaration public View Parent { get; set; } Property Value Type Description View | Improve this Doc View Source SuperView Frames cannot be used as sub-views, so this method always throws an InvalidOperationException. TODO: Are we sure? Declaration public override View SuperView { get; set; } Property Value Type Description View Overrides View.SuperView | Improve this Doc View Source SuperViewRendersLineCanvas Frames only render to their Parent or Parent's SuperView's LineCanvas, so this always throws an InvalidOperationException. Declaration public override bool SuperViewRendersLineCanvas { get; set; } Property Value Type Description bool Overrides View.SuperViewRendersLineCanvas | Improve this Doc View Source Thickness Defines the rectangle that the Frame will use to draw its content. Declaration public Thickness Thickness { get; set; } Property Value Type Description Thickness Methods | Improve this Doc View Source BoundsToScreen(int, int, out int, out int, bool) Converts a Bounds-relative coordinate to a screen-relative coordinate. The output is optionally clamped to the screen dimensions. Declaration public override void BoundsToScreen(int col, int row, out int rcol, out int rrow, bool clipped = true) Parameters Type Name Description int col int row int rcol int rrow bool clipped Overrides View.BoundsToScreen(int, int, out int, out int, bool) | Improve this Doc View Source DrawFrame(Rect, bool) Draws a frame in the current view, clipped by the boundary of this view Declaration [Obsolete(\"This method is obsolete in v2. Use use LineCanvas or Frame instead.\", false)] public void DrawFrame(Rect region, bool clear) Parameters Type Name Description Rect region View-relative region for the frame to be drawn. bool clear If set to true it clear the region. | Improve this Doc View Source DrawTitle(Rect, string) Draws the title for a Window-style view. Declaration public void DrawTitle(Rect region, string title) Parameters Type Name Description Rect region Screen relative region where the title will be drawn. string title The title. | Improve this Doc View Source FrameToScreen() Gets the Frame with a screen-relative location. Declaration public override Rect FrameToScreen() Returns Type Description Rect The location and size of the view in screen-relative coordinates. Overrides View.FrameToScreen() | Improve this Doc View Source OnDrawContent(Rect) Redraws the Frames that comprise the Frame. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnDrawFrames() Does nothing for Frame Declaration public override bool OnDrawFrames() Returns Type Description bool Overrides View.OnDrawFrames() | Improve this Doc View Source OnDrawSubViews(Rect) Declaration public virtual void OnDrawSubViews(Rect clipRect) Parameters Type Name Description Rect clipRect | Improve this Doc View Source OnRenderLineCanvas() Does nothing for Frame Declaration public override bool OnRenderLineCanvas() Returns Type Description bool Overrides View.OnRenderLineCanvas() | Improve this Doc View Source OnThicknessChanged(Thickness) Called whenever the Thickness property changes. Declaration public virtual void OnThicknessChanged(Thickness previousThickness) Parameters Type Name Description Thickness previousThickness Events | Improve this Doc View Source ThicknessChanged Fired whenever the Thickness property changes. Declaration public event EventHandler<ThicknessEventArgs> ThicknessChanged Event Type Type Description EventHandler<ThicknessEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.FrameView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.FrameView.html",
    "title": "Class FrameView",
    "keywords": "Class FrameView The FrameView is a container frame that draws a frame around the contents. It is similar to a GroupBox in Windows. Inheritance object Responder View FrameView WizardStep Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class FrameView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FrameView() Initializes a new instance of the FrameView class using Computed layout. Declaration public FrameView() | Improve this Doc View Source FrameView(string) Initializes a new instance of the FrameView class using Computed layout. Declaration public FrameView(string title) Parameters Type Name Description string title Title. | Improve this Doc View Source FrameView(Rect, string, View[]) Initializes a new instance of the FrameView class using Absolute layout. Declaration public FrameView(Rect frame, string title = null, View[] views = null) Parameters Type Name Description Rect frame Frame. string title Title. View[] views Views. Properties | Improve this Doc View Source DefaultBorderStyle The default LineStyle for FrameView's border. The default is Single. Declaration [JsonConverter(typeof(JsonStringEnumConverter))] public static LineStyle DefaultBorderStyle { get; set; } Property Value Type Description LineStyle Methods | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.GlyphDefinitions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.GlyphDefinitions.html",
    "title": "Class GlyphDefinitions",
    "keywords": "Class GlyphDefinitions Defines the standard set of glyphs used to draw checkboxes, lines, borders, etc... Inheritance object GlyphDefinitions Remarks Access with Glyphs (which is a global using alias for Glyphs). The default glyphs can be changed via the ConfigurationManager. Within a config.json file The Json property name is the property name prefixed with \"Glyphs.\". The JSon property can be either a decimal number or a string. The string may be one of: - A unicode char (e.g. \"☑\") - A hex value in U+ format (e.g. \"U+2611\") - A hex value in UTF-16 format (e.g. \"\\\\u2611\") Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class GlyphDefinitions Properties | Improve this Doc View Source Apple Apple (non-BMP). Because snek. And because it's an example of a non-BMP surrogate pair. See Issue #2610. Declaration public Rune Apple { get; set; } Property Value Type Description Rune | Improve this Doc View Source AppleBMP Apple (BMP). Because snek. See Issue #2610. Declaration public Rune AppleBMP { get; set; } Property Value Type Description Rune | Improve this Doc View Source BlackCircle Black Circle . Default is (U+025cf) - ●. Declaration public Rune BlackCircle { get; set; } Property Value Type Description Rune | Improve this Doc View Source BlocksMeterSegment Half block meter segment (e.g. for ProgressBar). Declaration public Rune BlocksMeterSegment { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomSideLineLtHv Box Drawings Light Vertical and Heavy Horizontal (U+257D) - ╽ Declaration public Rune BottomSideLineLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTee Box Drawings Bottom Tee - Single Vertical and Single Horizontal (U+2534) - ┴ Declaration public Rune BottomTee { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeDbl Box Drawings Bottom Tee - Double Vertical and Double Horizontal (U+2569) - ╩ Declaration public Rune BottomTeeDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeDblH Box Drawings Bottom Tee - Single Vertical and Double Horizontal (U+2567) - ╧ Declaration public Rune BottomTeeDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeDblV Box Drawings Bottom Tee - Double Vertical and Single Horizontal (U+2568) - ╨ Declaration public Rune BottomTeeDblV { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeHvDblH Box Drawings Bottom Tee - Heavy Vertical and Heavy Horizontal (U+2539) - ┻ Declaration public Rune BottomTeeHvDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeHvH Box Drawings Bottom Tee - Heavy Horizontal and Light Vertical (U+2535) - ┷ Declaration public Rune BottomTeeHvH { get; set; } Property Value Type Description Rune | Improve this Doc View Source BottomTeeHvV Box Drawings Bottom Tee - Light Horizontal and Heavy Vertical (U+253D) - ┸ Declaration public Rune BottomTeeHvV { get; set; } Property Value Type Description Rune | Improve this Doc View Source Checked Checked indicator (e.g. for ListView and CheckBox). Declaration public Rune Checked { get; set; } Property Value Type Description Rune | Improve this Doc View Source Close Close. Default is Heavy Ballot X (U+2718) - ✘. Declaration public Rune Close { get; set; } Property Value Type Description Rune | Improve this Doc View Source Collapse Expand (e.g. for TreeView. Declaration public Rune Collapse { get; set; } Property Value Type Description Rune | Improve this Doc View Source ContinuousMeterSegment Continuous block meter segment (e.g. for ProgressBar). Declaration public Rune ContinuousMeterSegment { get; set; } Property Value Type Description Rune | Improve this Doc View Source Cross Box Drawings Cross - Single Vertical and Single Horizontal (U+253C) - ┼ Declaration public Rune Cross { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossDbl Box Drawings Cross - Double Vertical and Double Horizontal (U+256C) - ╬ Declaration public Rune CrossDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossDblH Box Drawings Cross - Single Vertical and Double Horizontal (U+256A) - ╪ Declaration public Rune CrossDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossDblV Box Drawings Cross - Double Vertical and Single Horizontal (U+256B) - ╫ Declaration public Rune CrossDblV { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossHv Box Drawings Cross - Heavy Vertical and Heavy Horizontal (U+254B) - ╋ Declaration public Rune CrossHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossHvH Box Drawings Cross - Heavy Horizontal and Light Vertical (U+253F) - ┿ Declaration public Rune CrossHvH { get; set; } Property Value Type Description Rune | Improve this Doc View Source CrossHvV Box Drawings Cross - Light Horizontal and Heavy Vertical (U+2541) - ╂ Declaration public Rune CrossHvV { get; set; } Property Value Type Description Rune | Improve this Doc View Source Diamond Diamond (e.g. for ScrollBarView. Default is Lozenge (U+25CA) - ◊. Declaration public Rune Diamond { get; set; } Property Value Type Description Rune | Improve this Doc View Source Dot Dot. Default is (U+2219) - ∙. Declaration public Rune Dot { get; set; } Property Value Type Description Rune | Improve this Doc View Source DownArrow Down arrow. Declaration public Rune DownArrow { get; set; } Property Value Type Description Rune | Improve this Doc View Source Expand Expand (e.g. for TreeView. Declaration public Rune Expand { get; set; } Property Value Type Description Rune | Improve this Doc View Source File File icon. Defaults to ☰ (Trigram For Heaven) Declaration public Rune File { get; set; } Property Value Type Description Rune | Improve this Doc View Source Folder Folder icon. Defaults to ꤉ (Kayah Li Digit Nine) Declaration public Rune Folder { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfBottomLine Box Drawings Light Down (U+2577) - ╷ Declaration public Rune HalfBottomLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfBottomLineLt Box Drawings Light Vertical and Horizontal (U+257B) - ╻ Declaration public Rune HalfBottomLineLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfLeftLine Box Drawings Light Left (U+2574) - ╴ Declaration public Rune HalfLeftLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfLeftLineHv Box Drawings Heavy Left (U+2578) - ╸ Declaration public Rune HalfLeftLineHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfRightLine Box Drawings Light Horizontal (U+2576) - ╶ Declaration public Rune HalfRightLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfRightLineHv Box Drawings Heavy Horizontal (U+257A) - ╺ Declaration public Rune HalfRightLineHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfTopLine Box Drawings Light Vertical (U+2575) - ╵ Declaration public Rune HalfTopLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source HalfTopLineHv Box Drawings Heavy Vertical (U+2579) - ╹ Declaration public Rune HalfTopLineHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLine Box Drawings Horizontal Line - Light (U+2500) - ─ Declaration public Rune HLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineDa2 Box Drawings Light Double Dash Horizontal (U+254C) - ╌ Declaration public Rune HLineDa2 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineDa3 Box Drawings Light Triple Dash Horizontal (U+2504) - ┄ Declaration public Rune HLineDa3 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineDa4 Box Drawings Light Quadruple Dash Horizontal (U+2508) - ┈ Declaration public Rune HLineDa4 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineDbl Box Drawings Double Horizontal (U+2550) - ═ Declaration public Rune HLineDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineHv Box Drawings Heavy Horizontal (U+2501) - ━ Declaration public Rune HLineHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineHvDa2 Box Drawings Heavy Double Dash Horizontal (U+254D) - ╍ Declaration public Rune HLineHvDa2 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineHvDa3 Box Drawings Heavy Triple Dash Horizontal (U+2505) - ┅ Declaration public Rune HLineHvDa3 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HLineHvDa4 Box Drawings Heavy Quadruple Dash Horizontal (U+2509) - ┉ Declaration public Rune HLineHvDa4 { get; set; } Property Value Type Description Rune | Improve this Doc View Source HorizontalEllipsis Horizontal Ellipsis - … U+2026 Declaration public Rune HorizontalEllipsis { get; set; } Property Value Type Description Rune | Improve this Doc View Source IdenticalTo Identical To (U+226) Declaration public Rune IdenticalTo { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftArrow Left arrow. Declaration public Rune LeftArrow { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftBracket Left Bracket (e.g. for Button. Default is (U+005B) - [. Declaration public Rune LeftBracket { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftDefaultIndicator Left default indicator (e.g. for Button. Declaration public Rune LeftDefaultIndicator { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftSideLineHvLt Box Drawings Heavy Left and Light Horizontal (U+257E) - ╾ Declaration public Rune LeftSideLineHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTee Box Drawings Left Tee - Single Vertical and Single Horizontal (U+251C) - ├ Declaration public Rune LeftTee { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeDbl Box Drawings Left Tee - Double Vertical and Double Horizontal (U+2560) - ╠ Declaration public Rune LeftTeeDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeDblH Box Drawings Left Tee - Single Vertical and Double Horizontal (U+255E) - ╞ Declaration public Rune LeftTeeDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeDblV Box Drawings Left Tee - Double Vertical and Single Horizontal (U+255F) - ╟ Declaration public Rune LeftTeeDblV { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeHvDblH Box Drawings Left Tee - Heavy Vertical and Heavy Horizontal (U+2527) - ┣ Declaration public Rune LeftTeeHvDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeHvH Box Drawings Left Tee - Heavy Horizontal and Light Vertical (U+2523) - ┝ Declaration public Rune LeftTeeHvH { get; set; } Property Value Type Description Rune | Improve this Doc View Source LeftTeeHvV Box Drawings Left Tee - Light Horizontal and Heavy Vertical (U+252B) - ┠ Declaration public Rune LeftTeeHvV { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCorner Box Drawings Lower Left Corner - Light Vertical and Light Horizontal (U+2514) - └ Declaration public Rune LLCorner { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerDbl Box Drawings Double Vertical and Double Left (U+255A) - ╚ Declaration public Rune LLCornerDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerDblSingle Box Drawings Double Down and Single Left (U+2559) - ╙ Declaration public Rune LLCornerDblSingle { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerHv Box Drawings Heavy Vertical and Horizontal (U+2517) - ┗ Declaration public Rune LLCornerHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerHvLt Box Drawings Heavy Vertical and Horizontal Light (U+2516) - ┖ Declaration public Rune LLCornerHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerLtHv Box Drawings Vertical Light and Horizontal Heavy (U+2511) - ┕ Declaration public Rune LLCornerLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerR Box Drawings Upper Left Corner - Light Arc Down and Left (U+2570) - ╰ Declaration public Rune LLCornerR { get; set; } Property Value Type Description Rune | Improve this Doc View Source LLCornerSingleDbl Box Drawings Single Vertical and Double Left (U+2558) - ╘ Declaration public Rune LLCornerSingleDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCorner Box Drawings Lower Right Corner - Light (U+2518) - ┘ Declaration public Rune LRCorner { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerDbl Box Drawings Lower Right Corner - Double (U+255D) - ╝ Declaration public Rune LRCornerDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerDblSingle Box Drawings Lower Right Corner - Double Vertical and Single Horizontal (U+255C) - ╜ Declaration public Rune LRCornerDblSingle { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerHv Box Drawings Lower Right Corner - Heavy (U+251B) - ┛ Declaration public Rune LRCornerHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerHvLt Box Drawings Lower Right Corner - Heavy Vertical and Light Horizontal (U+251A) - ┚ Declaration public Rune LRCornerHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerLtHv Box Drawings Lower Right Corner - Light Vertical and Heavy Horizontal (U+2519) - ┙ Declaration public Rune LRCornerLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerR Box Drawings Lower Right Corner - Rounded (U+256F) - ╯ Declaration public Rune LRCornerR { get; set; } Property Value Type Description Rune | Improve this Doc View Source LRCornerSingleDbl Box Drawings Lower Right Corner - Single Vertical and Double Horizontal (U+255B) - ╛ Declaration public Rune LRCornerSingleDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source Maximize Maximize. Default is Upper Horizontal Shadowed White Circle (U+273D) - ✽. Declaration public Rune Maximize { get; set; } Property Value Type Description Rune | Improve this Doc View Source Minimize Minimize. Default is Lower Horizontal Shadowed White Circle (U+274F) - ❏. Declaration public Rune Minimize { get; set; } Property Value Type Description Rune | Improve this Doc View Source NullChecked Null Checked indicator (e.g. for ListView and CheckBox). Declaration public Rune NullChecked { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightArrow Horizontal arrow. Declaration public Rune RightArrow { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightBracket Horizontal Bracket (e.g. for Button. Default is (U+005D) - ]. Declaration public Rune RightBracket { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightDefaultIndicator Horizontal default indicator (e.g. for Button. Declaration public Rune RightDefaultIndicator { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightSideLineLtHv Box Drawings Light Horizontal and Heavy Horizontal (U+257C) - ╼ Declaration public Rune RightSideLineLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTee Box Drawings Righ Tee - Single Vertical and Single Horizontal (U+2524) - ┤ Declaration public Rune RightTee { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeDbl Box Drawings Right Tee - Double Vertical and Double Horizontal (U+2563) - ╣ Declaration public Rune RightTeeDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeDblH Box Drawings Right Tee - Single Vertical and Double Horizontal (U+2561) - ╡ Declaration public Rune RightTeeDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeDblV Box Drawings Right Tee - Double Vertical and Single Horizontal (U+2562) - ╢ Declaration public Rune RightTeeDblV { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeHvDblH Box Drawings Right Tee - Heavy Vertical and Heavy Horizontal (U+252C) - ┫ Declaration public Rune RightTeeHvDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeHvH Box Drawings Right Tee - Heavy Horizontal and Light Vertical (U+2528) - ┥ Declaration public Rune RightTeeHvH { get; set; } Property Value Type Description Rune | Improve this Doc View Source RightTeeHvV Box Drawings Right Tee - Light Horizontal and Heavy Vertical (U+2530) - ┨ Declaration public Rune RightTeeHvV { get; set; } Property Value Type Description Rune | Improve this Doc View Source Selected Selected indicator (e.g. for ListView and RadioGroup). Declaration public Rune Selected { get; set; } Property Value Type Description Rune | Improve this Doc View Source Stipple Stipple pattern (e.g. for ScrollBarView). Default is Light Shade (U+2591) - ░. Declaration public Rune Stipple { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopSideLineHvLt Box Drawings Heavy Vertical and Light Horizontal (U+257F) - ╿ Declaration public Rune TopSideLineHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTee Box Drawings Top Tee - Single Vertical and Single Horizontal (U+252C) - ┬ Declaration public Rune TopTee { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeDbl Box Drawings Top Tee - Double Vertical and Double Horizontal (U+2566) - ╦ Declaration public Rune TopTeeDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeDblH Box Drawings Top Tee - Single Vertical and Double Horizontal (U+2564) - ╤ Declaration public Rune TopTeeDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeDblV Box Drawings Top Tee - Double Vertical and Single Horizontal (U+2565) - ╥ Declaration public Rune TopTeeDblV { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeHvDblH Box Drawings Top Tee - Heavy Vertical and Heavy Horizontal (U+2533) - ┳ Declaration public Rune TopTeeHvDblH { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeHvH Box Drawings Top Tee - Heavy Horizontal and Light Vertical (U+252F) - ┯ Declaration public Rune TopTeeHvH { get; set; } Property Value Type Description Rune | Improve this Doc View Source TopTeeHvV Box Drawings Top Tee - Light Horizontal and Heavy Vertical (U+2537) - ┰ Declaration public Rune TopTeeHvV { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCorner Box Drawings Upper Left Corner - Light Vertical and Light Horizontal (U+250C) - ┌ Declaration public Rune ULCorner { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerDbl Box Drawings Upper Left Corner - Double (U+2554) - ╔ Declaration public Rune ULCornerDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerDblSingle Box Drawings Double Down and Single Horizontal (U+2553) - ╓ Declaration public Rune ULCornerDblSingle { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerHv Box Drawings Heavy Down and Horizontal (U+250F) - ┏ Declaration public Rune ULCornerHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerHvLt Box Drawings Down Heavy and Horizontal Light (U+251E) - ┎ Declaration public Rune ULCornerHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerLtHv Box Drawings Down Light and Horizontal Heavy (U+250D) - ┎ Declaration public Rune ULCornerLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerR Box Drawings Upper Left Corner - Light Arc Down and Horizontal (U+256D) - ╭ Declaration public Rune ULCornerR { get; set; } Property Value Type Description Rune | Improve this Doc View Source ULCornerSingleDbl Box Drawings Single Down and Double Horizontal (U+2552) - ╒ Declaration public Rune ULCornerSingleDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source UnChecked Not Checked indicator (e.g. for ListView and CheckBox). Declaration public Rune UnChecked { get; set; } Property Value Type Description Rune | Improve this Doc View Source UnSelected Not Selected indicator (e.g. for ListView and RadioGroup). Declaration public Rune UnSelected { get; set; } Property Value Type Description Rune | Improve this Doc View Source UpArrow Vertical arrow. Declaration public Rune UpArrow { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCorner Box Drawings Upper Horizontal Corner - Light Vertical and Light Horizontal (U+2510) - ┐ Declaration public Rune URCorner { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerDbl Box Drawings Upper Horizontal Corner - Double Vertical and Double Horizontal (U+2557) - ╗ Declaration public Rune URCornerDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerDblSingle Box Drawings Double Vertical and Single Left (U+2556) - ╖ Declaration public Rune URCornerDblSingle { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerHv Box Drawings Heavy Down and Left (U+2513) - ┓ Declaration public Rune URCornerHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerHvLt Box Drawings Heavy Vertical and Left Down Light (U+2511) - ┑ Declaration public Rune URCornerHvLt { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerLtHv Box Drawings Down Light and Horizontal Heavy (U+2514) - ┒ Declaration public Rune URCornerLtHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerR Box Drawings Upper Horizontal Corner - Light Arc Vertical and Horizontal (U+256E) - ╮ Declaration public Rune URCornerR { get; set; } Property Value Type Description Rune | Improve this Doc View Source URCornerSingleDbl Box Drawings Single Vertical and Double Left (U+2555) - ╕ Declaration public Rune URCornerSingleDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source VerticalFourDots Vertical Four Dots - ⁞ U+205e Declaration public Rune VerticalFourDots { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLine Box Drawings Vertical Line - Light (U+2502) - │ Declaration public Rune VLine { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineDa2 Box Drawings Light Double Dash Vertical (U+254E) - ╎ Declaration public Rune VLineDa2 { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineDa3 Box Drawings Light Triple Dash Vertical (U+2506) - ┆ Declaration public Rune VLineDa3 { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineDa4 Box Drawings Light Quadruple Dash Vertical (U+250A) - ┊ Declaration public Rune VLineDa4 { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineDbl Box Drawings Double Vertical (U+2551) - ║ Declaration public Rune VLineDbl { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineHv Box Drawings Heavy Vertical (U+2503) - ┃ Declaration public Rune VLineHv { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineHvDa2 Box Drawings Heavy Double Dash Vertical (U+254F) - ╏ Declaration public Rune VLineHvDa2 { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineHvDa3 Box Drawings Heavy Triple Dash Vertical (U+2507) - ┇ Declaration public Rune VLineHvDa3 { get; set; } Property Value Type Description Rune | Improve this Doc View Source VLineHvDa4 Box Drawings Heavy Quadruple Dash Vertical (U+250B) - ┋ Declaration public Rune VLineHvDa4 { get; set; } Property Value Type Description Rune"
  },
  "api/Terminal.Gui/Terminal.Gui.GrabMouseEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.GrabMouseEventArgs.html",
    "title": "Class GrabMouseEventArgs",
    "keywords": "Class GrabMouseEventArgs Args GrabMouse(View) related events. Inheritance object EventArgs GrabMouseEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class GrabMouseEventArgs : EventArgs Constructors | Improve this Doc View Source GrabMouseEventArgs(View) Creates a new instance of the GrabMouseEventArgs class. Declaration public GrabMouseEventArgs(View view) Parameters Type Name Description View view The view that the event is about. Properties | Improve this Doc View Source Cancel Flag that allows the cancellation of the event. If set to true in the event handler, the event will be canceled. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source View Gets the view that grabbed the mouse. Declaration public View View { get; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.GraphCellToRender.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.GraphCellToRender.html",
    "title": "Class GraphCellToRender",
    "keywords": "Class GraphCellToRender Describes how to render a single row/column of a GraphView based on the value(s) in ISeries at that location Inheritance object GraphCellToRender Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class GraphCellToRender Constructors | Improve this Doc View Source GraphCellToRender(Rune, Attribute?) Creates instance and sets Rune and Color (or default if null) Declaration public GraphCellToRender(Rune rune, Attribute? color) Parameters Type Name Description Rune rune Attribute? color | Improve this Doc View Source GraphCellToRender(Rune, Attribute) Creates instance and sets Rune with custom graph coloring Declaration public GraphCellToRender(Rune rune, Attribute color) Parameters Type Name Description Rune rune Attribute color | Improve this Doc View Source GraphCellToRender(Rune) Creates instance and sets Rune with default graph coloring Declaration public GraphCellToRender(Rune rune) Parameters Type Name Description Rune rune Properties | Improve this Doc View Source Color Optional color to render the Rune with Declaration public Attribute? Color { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source Rune The character to render in the console Declaration public Rune Rune { get; set; } Property Value Type Description Rune"
  },
  "api/Terminal.Gui/Terminal.Gui.GraphView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.GraphView.html",
    "title": "Class GraphView",
    "keywords": "Class GraphView Control for rendering graphs (bar, scatter etc) Inheritance object Responder View GraphView Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class GraphView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source GraphView() Creates a new graph with a 1 to 1 graph space with absolute layout Declaration public GraphView() Properties | Improve this Doc View Source Annotations Elements drawn into graph after series have been drawn e.g. Legends etc Declaration public List<IAnnotation> Annotations { get; } Property Value Type Description List<IAnnotation> | Improve this Doc View Source AxisX Horizontal axis Declaration public HorizontalAxis AxisX { get; set; } Property Value Type Description HorizontalAxis | Improve this Doc View Source AxisY Vertical axis Declaration public VerticalAxis AxisY { get; set; } Property Value Type Description VerticalAxis | Improve this Doc View Source CellSize Translates console width/height into graph space. Defaults to 1 row/col of console space being 1 unit of graph space. Declaration public PointF CellSize { get; set; } Property Value Type Description PointF | Improve this Doc View Source GraphColor The color of the background of the graph and axis/labels Declaration public Attribute? GraphColor { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source MarginBottom Amount of space to leave on bottom of control. Graph content (Series) will not be rendered in margins but axis labels may be Declaration public uint MarginBottom { get; set; } Property Value Type Description uint | Improve this Doc View Source MarginLeft Amount of space to leave on left of control. Graph content (Series) will not be rendered in margins but axis labels may be Declaration public uint MarginLeft { get; set; } Property Value Type Description uint | Improve this Doc View Source ScrollOffset The graph space position of the bottom left of the control. Changing this scrolls the viewport around in the graph Declaration public PointF ScrollOffset { get; set; } Property Value Type Description PointF | Improve this Doc View Source Series Collection of data series that are rendered in the graph Declaration public List<ISeries> Series { get; } Property Value Type Description List<ISeries> Methods | Improve this Doc View Source DrawLine(Point, Point, Rune) Draws a line between two points in screen space. Can be diagonals. Declaration public void DrawLine(Point start, Point end, Rune symbol) Parameters Type Name Description Point start Point end Rune symbol The symbol to use for the line | Improve this Doc View Source GraphSpaceToScreen(PointF) Calculates the screen location for a given point in graph space. Bear in mind these be off screen Declaration public Point GraphSpaceToScreen(PointF location) Parameters Type Name Description PointF location Point in graph space that may or may not be represented in the visible area of graph currently presented. E.g. 0,0 for origin Returns Type Description Point Screen position (Column/Row) which would be used to render the graph location. Note that this can be outside the current client area of the control | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source PageDown() Scrolls the graph down 1 page Declaration public void PageDown() | Improve this Doc View Source PageUp() Scrolls the graph up 1 page Declaration public void PageUp() | Improve this Doc View Source Reset() Clears all settings configured on the graph and resets all properties to default values (CellSize, ScrollOffset etc) Declaration public void Reset() | Improve this Doc View Source ScreenToGraphSpace(int, int) Returns the section of the graph that is represented by the given screen position Declaration public RectangleF ScreenToGraphSpace(int col, int row) Parameters Type Name Description int col int row Returns Type Description RectangleF | Improve this Doc View Source ScreenToGraphSpace(Rect) Returns the section of the graph that is represented by the screen area Declaration public RectangleF ScreenToGraphSpace(Rect screenArea) Parameters Type Name Description Rect screenArea Returns Type Description RectangleF | Improve this Doc View Source Scroll(float, float) Scrolls the view by a given number of units in graph space. See CellSize to translate this into rows/cols Declaration public void Scroll(float offsetX, float offsetY) Parameters Type Name Description float offsetX float offsetY | Improve this Doc View Source SetDriverColorToGraphColor() Sets the color attribute of Driver to the GraphColor (if defined) or ColorScheme otherwise. Declaration public void SetDriverColorToGraphColor() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.HexView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HexView.html",
    "title": "Class HexView",
    "keywords": "Class HexView An hex viewer and editor View over a Stream Inheritance object Responder View HexView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks HexView provides a hex editor on top of a seekable Stream with the left side showing an hex dump of the values in the Stream and the right side showing the contents (filtered to non-control sequence ASCII characters). Users can switch from one side to the other by using the tab key. To enable editing, set AllowEdits to true. When AllowEdits is true the user can make changes to the hexadecimal values of the Stream. Any changes are tracked in the Edits property (a SortedDictionary<TKey, TValue>) indicating the position where the changes were made and the new values. A convenience method, ApplyEdits(Stream) will apply the edits to the Stream. Control the first byte shown by setting the DisplayStart property to an offset in the stream. Inherited Members View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class HexView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source HexView() Initializes a HexView class using Computed layout. Declaration public HexView() | Improve this Doc View Source HexView(Stream) Initializes a HexView class using Computed layout. Declaration public HexView(Stream source) Parameters Type Name Description Stream source The Stream to view and edit as hex, this Stream must support seeking, or an exception will be thrown. Properties | Improve this Doc View Source AllowEdits Gets or sets whether this HexView allow editing of the Stream of the underlying Stream. Declaration public bool AllowEdits { get; set; } Property Value Type Description bool true if allow edits; otherwise, false. | Improve this Doc View Source BytesPerLine The bytes length per line. Declaration public int BytesPerLine { get; } Property Value Type Description int | Improve this Doc View Source CursorPosition Gets the current cursor position starting at one for both, line and column. Declaration public Point CursorPosition { get; } Property Value Type Description Point | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source DisplayStart Sets or gets the offset into the Stream that will displayed at the top of the HexView Declaration public long DisplayStart { get; set; } Property Value Type Description long The display start. | Improve this Doc View Source Edits Gets a SortedDictionary<TKey, TValue> describing the edits done to the HexView. Each Key indicates an offset where an edit was made and the Value is the changed byte. Declaration public IReadOnlyDictionary<long, byte> Edits { get; } Property Value Type Description IReadOnlyDictionary<long, byte> The edits. | Improve this Doc View Source Frame Gets or sets the frame for the view. The frame is relative to the SuperView's Bounds. Declaration public override Rect Frame { get; set; } Property Value Type Description Rect The frame. Overrides View.Frame | Improve this Doc View Source Position Gets the current character position starting at one, related to the Stream. Declaration public long Position { get; } Property Value Type Description long | Improve this Doc View Source Source Sets or gets the Stream the HexView is operating on; the stream must support seeking (CanSeek == true). Declaration public Stream Source { get; set; } Property Value Type Description Stream The source. Methods | Improve this Doc View Source ApplyEdits(Stream) This method applies and edits made to the Stream and resets the contents of the Edits property. Declaration public void ApplyEdits(Stream stream = null) Parameters Type Name Description Stream stream If provided also applies the changes to the passed Stream | Improve this Doc View Source DiscardEdits() This method discards the edits made to the Stream by resetting the contents of the Edits property. Declaration public void DiscardEdits() | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEdited(HexViewEditEventArgs) Method used to invoke the Edited event passing the KeyValuePair<TKey, TValue>. Declaration public virtual void OnEdited(HexViewEditEventArgs e) Parameters Type Name Description HexViewEditEventArgs e The key value pair. | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnPositionChanged() Method used to invoke the PositionChanged event passing the HexViewEventArgs arguments. Declaration public virtual void OnPositionChanged() | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() Events | Improve this Doc View Source Edited Event to be invoked when an edit is made on the Stream. Declaration public event EventHandler<HexViewEditEventArgs> Edited Event Type Type Description EventHandler<HexViewEditEventArgs> | Improve this Doc View Source PositionChanged Event to be invoked when the position and cursor position changes. Declaration public event EventHandler<HexViewEventArgs> PositionChanged Event Type Type Description EventHandler<HexViewEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.HexViewEditEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HexViewEditEventArgs.html",
    "title": "Class HexViewEditEventArgs",
    "keywords": "Class HexViewEditEventArgs Defines the event arguments for Edited event. Inheritance object EventArgs HexViewEditEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class HexViewEditEventArgs : EventArgs Constructors | Improve this Doc View Source HexViewEditEventArgs(long, byte) Creates a new instance of the HexViewEditEventArgs class. Declaration public HexViewEditEventArgs(long position, byte newValue) Parameters Type Name Description long position byte newValue Properties | Improve this Doc View Source NewValue Gets the new value for that Position. Declaration public byte NewValue { get; } Property Value Type Description byte | Improve this Doc View Source Position Gets the location of the edit. Declaration public long Position { get; } Property Value Type Description long"
  },
  "api/Terminal.Gui/Terminal.Gui.HexViewEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HexViewEventArgs.html",
    "title": "Class HexViewEventArgs",
    "keywords": "Class HexViewEventArgs Defines the event arguments for PositionChanged event. Inheritance object EventArgs HexViewEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class HexViewEventArgs : EventArgs Constructors | Improve this Doc View Source HexViewEventArgs(long, Point, int) Initializes a new instance of HexViewEventArgs Declaration public HexViewEventArgs(long pos, Point cursor, int lineLength) Parameters Type Name Description long pos The character position. Point cursor The cursor position. int lineLength Line bytes length. Properties | Improve this Doc View Source BytesPerLine The bytes length per line. Declaration public int BytesPerLine { get; } Property Value Type Description int | Improve this Doc View Source CursorPosition Gets the current cursor position starting at one for both, line and column. Declaration public Point CursorPosition { get; } Property Value Type Description Point | Improve this Doc View Source Position Gets the current character position starting at one, related to the Stream. Declaration public long Position { get; } Property Value Type Description long"
  },
  "api/Terminal.Gui/Terminal.Gui.HorizontalAxis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.HorizontalAxis.html",
    "title": "Class HorizontalAxis",
    "keywords": "Class HorizontalAxis The horizontal (x axis) of a GraphView Inheritance object Axis HorizontalAxis Inherited Members Axis.Orientation Axis.Increment Axis.ShowLabelsEvery Axis.Visible Axis.LabelGetter Axis.Text Axis.Minimum Axis.Reset() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class HorizontalAxis : Axis Constructors | Improve this Doc View Source HorizontalAxis() Creates a new instance of axis with an Orientation of Horizontal Declaration public HorizontalAxis() Methods | Improve this Doc View Source DrawAxisLabel(GraphView, int, string) Draws the given text on the axis at x screenPosition. For the screen y position use GetAxisYPosition(GraphView) Declaration public override void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph Graph being drawn onto int screenPosition Number of screen columns along the axis to take before rendering string text Text to render under the axis tick Overrides Axis.DrawAxisLabel(GraphView, int, string) | Improve this Doc View Source DrawAxisLabels(GraphView) Draws the horizontal x axis labels and Increment ticks Declaration public override void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLabels(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView, int, int) Draws a horizontal axis line at the given x, y screen coordinates Declaration protected override void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph int x int y Overrides Axis.DrawAxisLine(GraphView, int, int) | Improve this Doc View Source DrawAxisLine(GraphView) Draws the horizontal axis line Declaration public override void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLine(GraphView) | Improve this Doc View Source GetAxisYPosition(GraphView) Returns the Y screen position of the origin (typically 0,0) of graph space. Return value is bounded by the screen i.e. the axis is always rendered even if the origin is offscreen. Declaration public int GetAxisYPosition(GraphView graph) Parameters Type Name Description GraphView graph Returns Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.html",
    "title": "Namespace Terminal.Gui",
    "keywords": "Namespace Terminal.Gui Classes AllowedType Describes a requirement on what FileInfo can be selected. This can be combined with other IAllowedType in a FileDialog to for example show only .csv files but let user change to open any if they want. AllowedTypeAny IAllowedType that allows selection of any types (*.*). AppendAutocomplete Autocomplete for a TextField which shows suggestions within the box. Displayed suggestions can be completed using the tab key. Application A static, singleton class representing the application. This class is the entry point for the application. AppScope The Scope<T> class for application-defined configuration settings. AutocompleteBase Abstract implementation of IAutocomplete allows for tailoring how autocomplete is rendered/interacted with. AutocompleteContext Describes the current state of a View which is proposing autocomplete. Suggestions are based on this state. Axis Renders a continuous line with grid line ticks and labels AxisIncrementToRender A location on an axis of a GraphView that may or may not have a label associated with it BarSeries Series of bars positioned at regular intervals BarSeriesBar A single bar in a BarSeries Button Button is a View that provides an item that invokes raises the Clicked event. Cell Represents a single row/column in a Terminal.Gui rendering surface (e.g. LineCanvas and ConsoleDriver). CellActivatedEventArgs Defines the event arguments for CellActivated event CellColorGetterArgs Arguments for a CellColorGetterDelegate. Describes a cell for which a rendering ColorScheme is being sought CellToggledEventArgs Event args for the CellToggled event. CheckBox The CheckBox View shows an on/off toggle that the user can set CheckBoxTableSourceWrapperBase ITableSource for a TableView which adds a checkbox column as an additional column in the table. CheckBoxTableSourceWrapperByIndex Implementation of CheckBoxTableSourceWrapperBase which records toggled rows by their row number. CheckBoxTableSourceWrapperByObject<T> Implementation of CheckBoxTableSourceWrapperBase which records toggled rows by a property on row objects. Clipboard Provides cut, copy, and paste support for the OS clipboard. ClipboardBase Shared abstract class to enforce rules from the implementation of the IClipboard interface. CollectionNavigator Navigates a collection of items using keystrokes. The keystrokes are used to build a search string. The SearchString is used to find the next item in the collection that matches the search string when GetNextMatchingItem(int, char) is called. If the user types keystrokes that can't be found in the collection, the search string is cleared and the next item is found that starts with the last keystroke. If the user pauses keystrokes for a short time (see TypingDelay), the search string is cleared. CollectionNavigatorBase Navigates a collection of items using keystrokes. The keystrokes are used to build a search string. The SearchString is used to find the next item in the collection that matches the search string when GetNextMatchingItem(int, char) is called. If the user types keystrokes that can't be found in the collection, the search string is cleared and the next item is found that starts with the last keystroke. If the user pauses keystrokes for a short time (see TypingDelay), the search string is cleared. Color Represents a 24-bit color. Provides automatic mapping between the legacy 4-bit (16 color) system and 24-bit colors (see ColorName). Used with Attribute. ColorEventArgs Event arguments for the Color events. ColorPicker The ColorPicker View Color picker. Colors The default ColorSchemes for the application. ColorScheme Defines the Attributes for common visible elements in a View. Containers such as Window and FrameView use ColorScheme to determine the colors used by sub-views. ColumnStyle Describes how to render a given column in a TableView including Alignment and textual representation of cells (e.g. date formats) See TableView Deep Dive for more information. ComboBox Provides a drop-down list of items the user can select from. ConfigProperty Holds a property's value and the PropertyInfo that allows ConfigurationManager to get and set the property's value. ConfigurationManager Provides settings and configuration management for Terminal.Gui applications. Users can set Terminal.Gui settings on a global or per-application basis by providing JSON formatted configuration files. The configuration files can be placed in at .tui folder in the user's home directory (e.g. C:/Users/username/.tui, or /usr/username/.tui), the folder where the Terminal.Gui application was launched from (e.g. ./.tui), or as a resource within the Terminal.Gui application's main assembly. Settings are defined in JSON format, according to this schema: https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json Settings that will apply to all applications (global settings) reside in files named config.json. Settings that will apply to a specific Terminal.Gui application reside in files named appname.config.json, where appname is the assembly name of the application (e.g. UICatalog.config.json). Settings are applied using the following precedence (higher precedence settings overwrite lower precedence settings): 1. Application configuration found in the users's home directory (~/.tui/appname.config.json) -- Highest precedence 2. Application configuration found in the directory the app was launched from (./.tui/appname.config.json). 3. Application configuration found in the applications's resources (Resources/config.json). 4. Global configuration found in the user's home directory (~/.tui/config.json). 5. Global configuration found in the directory the app was launched from (./.tui/config.json). 6. Global configuration in Terminal.Gui.dll's resources (Terminal.Gui.Resources.config.json) -- Lowest Precidence. ConfigurationManagerEventArgs Event arguments for the ConfigurationManager events. ConsoleDriver Base class for Terminal.Gui ConsoleDriver implementations. ConsoleKeyMapping Helper class to handle the scan code and virtual key from a ConsoleKey. ContentsChangedEventArgs Event arguments for events for when the contents of the TextView change. E.g. the ContentsChanged event. ContextMenu ContextMenu provides a pop-up menu that can be positioned anywhere within a View. ContextMenu is analogous to MenuBar and, once activated, works like a sub-menu of a MenuBarItem (but can be positioned anywhere). By default, a ContextMenu with sub-menus is displayed in a cascading manner, where each sub-menu pops out of the ContextMenu frame (either to the right or left, depending on where the ContextMenu is relative to the edge of the screen). By setting UseSubMenusSingleFrame to true, this behavior can be changed such that all sub-menus are drawn within the ContextMenu frame. ContextMenus can be activated using the Shift-F10 key (by default; use the Key to change to another key). Callers can cause the ContextMenu to be activated on a right-mouse click (or other interaction) by calling Show(). ContextMenus are located using screen using screen coordinates and appear above all other Views. DataTableSource ITableSource implementation that wraps a DataTable. This class is mutable: changes are permitted to the wrapped DataTable. DateField Simple Date editing View DateTimeEventArgs<T> Defines the event arguments for DateChanged and TimeChanged events. DefaultFileOperations Default file operation handlers using modal dialogs. DelegateTreeBuilder<T> Implementation of ITreeBuilder<T> that uses user defined functions Dialog The Dialog View is a Window that by default is centered and contains one or more Buttons. It defaults to the Dialog color scheme and has a 1 cell padding around the edges. Dim Dim properties of a View to control the position. DrawEventArgs Event args for draw events DrawTreeViewLineEventArgs<T> Event args for the DrawLine event EnumerableTableSource<T> ITableSource implementation that wraps arbitrary data. EscSeqReqStatus Represents the status of an ANSI escape sequence request made to the terminal using EscSeqRequests. EscSeqRequests Manages ANSI Escape Sequence requests and responses. The list of EscSeqReqStatus contains the status of the request. Each request is identified by the terminator (e.g. ESC[8t ... t is the terminator). EscSeqUtils Provides a platform-independent API for managing ANSI escape sequences. FakeConsole FakeDriver Implements a mock ConsoleDriver for unit testing FakeDriver.Behaviors FakeDriver.FakeClipboard FileDialog Modal dialog for selecting files/directories. Has auto-complete and expandable navigation pane (Recent, Root drives etc). FileDialogStyle Stores style settings for FileDialog. FilesSelectedEventArgs Event args for the FilesSelected event FileSystemColorProvider Provides a way to get the color of a file or directory. FileSystemIconProvider Determines which symbol to use to represent files and directories. FileSystemTreeBuilder TreeView builder for creating file system based trees. FocusEventArgs Defines the event arguments for SetFocus() Frame Frames are a special form of View that act as adornments; they appear outside of the Bounds enabling borders, menus, etc... FrameView The FrameView is a container frame that draws a frame around the contents. It is similar to a GroupBox in Windows. GlyphDefinitions Defines the standard set of glyphs used to draw checkboxes, lines, borders, etc... GrabMouseEventArgs Args GrabMouse(View) related events. GraphCellToRender Describes how to render a single row/column of a GraphView based on the value(s) in ISeries at that location GraphView Control for rendering graphs (bar, scatter etc) HexView An hex viewer and editor View over a Stream HexViewEditEventArgs Defines the event arguments for Edited event. HexViewEventArgs Defines the event arguments for PositionChanged event. HorizontalAxis The horizontal (x axis) of a GraphView IterationEventArgs Event arguments for the Iteration event. KeyChangedEventArgs Event args for when a Key is changed from one value to a new value (e.g. in HotKeyChanged) KeyEventArgs Defines the event arguments for keyboard events. KeyModifiers Identifies the state of the \"shift\"-keys within a event. KeystrokeNavigatorEventArgs Event arguments for the SearchStringChanged event. Label The Label View displays a string at a given position and supports multiple lines separated by newline characters. Multi-line Labels support word wrap. LayoutEventArgs Event arguments for the LayoutComplete event. LegendAnnotation A box containing symbol definitions e.g. meanings for colors in a graph. The 'Key' to the graph Line Draws a single line using the LineStyle specified by BorderStyle. LineCanvas Facilitates box drawing and line intersection detection and rendering. Does not support diagonal lines. LineF Describes two points in graph space and a line between them LineView A straight line control either horizontal or vertical ListColumnStyle Defines rendering options that affect how the view is displayed. ListTableSource ITableSource implementation that wraps a IList. This class is mutable: changes are permitted to the wrapped IList. ListView ListView View renders a scrollable list of data where each item can be activated to perform an action. ListViewItemEventArgs EventArgs for ListView events. ListViewRowEventArgs EventArgs used by the RowRender event. ListWrapper Provides a default implementation of IListDataSource that renders ListView items using ToString(). MenuBar Provides a menu bar that spans the top of a Toplevel View with drop-down and cascading menus. By default, any sub-sub-menus (sub-menus of the MenuItems added to MenuBarItems) are displayed in a cascading manner, where each sub-sub-menu pops out of the sub-menu frame (either to the right or left, depending on where the sub-menu is relative to the edge of the screen). By setting UseSubMenusSingleFrame to true, this behavior can be changed such that all sub-sub-menus are drawn within a single frame below the MenuBar. MenuBarItem MenuBarItem is a menu item on an app's MenuBar. MenuBarItems do not support Shortcut. MenuClosingEventArgs An EventArgs which allows passing a cancelable menu closing event. MenuItem A MenuItem has title, an associated help text, and an action to execute on activation. MenuItems can also have a checked indicator (see Checked). MenuOpenedEventArgs Defines arguments for the MenuOpened event MenuOpeningEventArgs An EventArgs which allows passing a cancelable menu opening event or replacing with a new MenuBarItem. MessageBox MessageBox displays a modal message to the user, with a title, a message and a series of options that the user can choose from. MouseEvent Low-level construct that conveys the details of mouse events, such as coordinates and button state, from ConsoleDrivers up to Application and Views. MouseEventEventArgs Specifies the event arguments for MouseEvent. This is a higher-level construct than the wrapped MouseEvent class and is used for the events defined on View and subclasses of View (e.g. MouseEnter and MouseClick). MouseFlagsChangedEventArgs Args for events that describe a change in MouseFlags MultiBarSeries Collection of BarSeries in which bars are clustered by category ObjectActivatedEventArgs<T> Event args for the ObjectActivated event OpenDialog The OpenDialogprovides an interactive dialog box for users to select files or directories. OrientationEventArgs EventArgs for Orientation events. PathAnnotation Sequence of lines to connect points e.g. of a ScatterSeries PointEventArgs Event args for events which relate to a single Point PopupAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Pos Describes the position of a View which can be an absolute value, a percentage, centered, or relative to the ending dimension. Integer values are implicitly convertible to an absolute Pos. These objects are created using the static methods Percent, AnchorEnd, and Center. The Pos objects can be combined with the addition and subtraction operators. ProgressBar A Progress Bar view that can indicate progress of an activity visually. RadioGroup Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time. Responder Responder base class implemented by objects that want to participate on keyboard and mouse input. RowColorGetterArgs Arguments for RowColorGetterDelegate. Describes a row of data in a ITableSource for which ColorScheme is sought. Ruler Draws a ruler on the screen. RuneCell Represents a single row/column within the TextView. Includes the glyph and the foreground/background colors. RuneCellEventArgs Args for events that relate to a specific RuneCell. RuneExtensions Extends Rune to support TUI text manipulation. RunState The execution state for a Toplevel view. RunStateEventArgs Event arguments for events about RunState SaveDialog The SaveDialog provides an interactive dialog box for users to pick a file to save. ScatterSeries Series composed of any number of discrete data points Scope<T> Defines a configuration settings scope. Classes that inherit from this abstract class can be used to define scopes for configuration settings. Each scope is a JSON object that contains a set of configuration settings. ScrollBarView ScrollBarViews are views that display a 1-character scrollbar, either horizontal or vertical ScrollView Scrollviews are views that present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. SelectedCellChangedEventArgs Defines the event arguments for SelectedCellChanged SelectedItemChangedArgs Event arguments for the SelectedItemChagned event. SelectionChangedEventArgs<T> Event arguments describing a change in selected object in a tree view SerializableConfigurationProperty An attribute that can be applied to a property to indicate that it should included in the configuration file. SettingsScope The root object of Terminal.Gui configuration settings / JSON schema. Contains only properties attributed with SettingsScope. ShortcutHelper Represents a helper to manipulate shortcut keys used on views. SingleWordSuggestionGenerator ISuggestionGenerator which suggests from a collection of words those that match the AutocompleteContext. You can update AllSuggestions at any time to change candidates considered for autocomplete. SizeChangedEventArgs Args for events about Size (e.g. Resized) Slider Slider control. Slider<T> Provides a slider control letting the user navigate from a set of typed options in a linear manner using the keyboard or mouse. SliderAttributes Slider<T> Legend Style SliderEventArgs<T> EventArgs for Slider<T> events. SliderOption<T> Represents an option in a Slider<T> . SliderOptionEventArgs EventArgs for Slider<T> SliderOption<T> events. SliderStyle Slider<T> Style SpinnerStyle SpinnerStyles used in a SpinnerView. SpinnerStyle.Aesthetic SpinnerStyle.Aesthetic2 SpinnerStyle.Arc SpinnerStyle.Arrow SpinnerStyle.Arrow2 SpinnerStyle.Arrow3 SpinnerStyle.Balloon SpinnerStyle.Balloon2 SpinnerStyle.BetaWave SpinnerStyle.BluePulse SpinnerStyle.Bounce SpinnerStyle.BouncingBall SpinnerStyle.BouncingBar SpinnerStyle.BoxBounce SpinnerStyle.BoxBounce2 SpinnerStyle.Christmas SpinnerStyle.Circle SpinnerStyle.CircleHalves SpinnerStyle.CircleQuarters SpinnerStyle.Clock SpinnerStyle.Custom SpinnerStyle.Dots SpinnerStyle.Dots10 SpinnerStyle.Dots11 SpinnerStyle.Dots12 SpinnerStyle.Dots2 SpinnerStyle.Dots3 SpinnerStyle.Dots4 SpinnerStyle.Dots5 SpinnerStyle.Dots6 SpinnerStyle.Dots7 SpinnerStyle.Dots8 SpinnerStyle.Dots8Bit SpinnerStyle.Dots9 SpinnerStyle.Dqpb SpinnerStyle.Earth SpinnerStyle.FingerDance SpinnerStyle.FistBump SpinnerStyle.Flip SpinnerStyle.Grenade SpinnerStyle.GrowHorizontal SpinnerStyle.GrowVertical SpinnerStyle.Hamburger SpinnerStyle.Hearts SpinnerStyle.Layer SpinnerStyle.Line SpinnerStyle.Line2 SpinnerStyle.Material SpinnerStyle.MindBlown SpinnerStyle.Monkey SpinnerStyle.Moon SpinnerStyle.Noise SpinnerStyle.OrangeBluePulse SpinnerStyle.OrangePulse SpinnerStyle.Pipe SpinnerStyle.Points SpinnerStyle.Pong SpinnerStyle.Runner SpinnerStyle.Shark SpinnerStyle.SimpleDots SpinnerStyle.SimpleDotsScrolling SpinnerStyle.Smiley SpinnerStyle.SoccerHeader SpinnerStyle.Speaker SpinnerStyle.SquareCorners SpinnerStyle.Squish SpinnerStyle.Star SpinnerStyle.Star2 SpinnerStyle.TimeTravelClock SpinnerStyle.Toggle SpinnerStyle.Toggle10 SpinnerStyle.Toggle11 SpinnerStyle.Toggle12 SpinnerStyle.Toggle13 SpinnerStyle.Toggle2 SpinnerStyle.Toggle3 SpinnerStyle.Toggle4 SpinnerStyle.Toggle5 SpinnerStyle.Toggle6 SpinnerStyle.Toggle7 SpinnerStyle.Toggle8 SpinnerStyle.Toggle9 SpinnerStyle.Triangle SpinnerStyle.Weather SpinnerView A View which displays (by default) a spinning line character. SplitterEventArgs Provides data for TileView events. StackExtensions Extension of Stack<T> helper to work with specific IEqualityComparer<T> StatusBar A status bar is a View that snaps to the bottom of a Toplevel displaying set of StatusItems. The StatusBar should be context sensitive. This means, if the main menu and an open text editor are visible, the items probably shown will be ~F1~ Help ~F2~ Save ~F3~ Load. While a dialog to ask a file to load is executed, the remaining commands will probably be ~F1~ Help. So for each context must be a new instance of a status bar. StatusItem StatusItem objects are contained by StatusBar Views. Each StatusItem has a title, a shortcut (hotkey), and an Command that will be invoked when the Shortcut is pressed. The Shortcut will be a global hotkey for the application in the current context of the screen. The color of the Title will be changed after each ~. A Title set to `~F1~ Help` will render as *F1* using HotNormal and *Help* as HotNormal. StepChangeEventArgs EventArgs for WizardStep events. StraightLine A line between two points on a horizontal or vertical Orientation and a given style/color. StraightLineExtensions Extension methods for StraightLine (including collections). StringExtensions Extensions to string to support TUI text manipulation. Suggestion A replacement suggestion made by IAutocomplete SuperViewChangedEventArgs Args for events where the SuperView of a View is changed (e.g. Removed / Added events). Tab A single tab in a TabView TabChangedEventArgs Describes a change in SelectedTab TableCollectionNavigator Collection navigator for cycling selections in a TableView. TableSelection Describes a selected region of the table TableStyle Defines rendering options that affect how the table is displayed. See TableView Deep Dive for more information. TableView View for tabular data based on a ITableSource. See TableView Deep Dive for more information. TabMouseEventArgs Describes a mouse event over a specific Tab in a TabView. TabStyle Describes render stylistic selections of a TabView TabView Control that hosts multiple sub views, presenting a single one at once TextAnnotation Displays text at a given position (in screen space or graph space) TextChangedEventArgs Event args for the TextChanged event TextChangingEventArgs An EventArgs which allows passing a cancelable new text value event. TextField Single-line text entry View TextFieldAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextField. TextFormatter Provides text formatting. Supports HotKeys, horizontal alignment, vertical alignment, multiple lines, and word-based line wrap. TextValidateField Text field that validates input through a ITextValidateProvider TextView Multi-line text editing View. TextViewAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextView. ThemeManager Contains a dictionary of the Themes for a Terminal.Gui application. ThemeManagerEventArgs Event arguments for the ThemeManager events. ThemeScope The root object for a Theme. A Theme is a set of settings that are applied to the running Application as a group. Thickness Describes the thickness of a frame around a rectangle. Four int values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. ThicknessEventArgs Event arguments for the Thickness events. Tile A single ContentView presented in a TileView. To create new instances use RebuildForTileCount(int) or InsertTile(int). TileView A View consisting of a moveable bar that divides the display area into resizeable Tiles. TimeField Time editing View Timeout Provides data for timers running manipulation. TitleEventArgs Event arguments for Title change events. ToggleEventArgs EventArgs for the Toggled event Toplevel Toplevel views can be modally executed. They are used for both an application's main view (filling the entire screeN and for pop-up views such as Dialog, MessageBox, and Wizard. ToplevelClosingEventArgs EventArgs implementation for the Closing event. ToplevelComparer Implements the IComparer<T> to sort the Toplevel from the OverlappedChildren if needed. ToplevelEqualityComparer Implements the IEqualityComparer<T> for comparing two Toplevels used by StackExtensions. ToplevelEventArgs Args for events that relate to a specific Toplevel. TreeBuilder<T> Abstract implementation of ITreeBuilder<T>. TreeNode Simple class for representing nodes, use with regular (non generic) TreeView. TreeNodeBuilder ITreeBuilder<T> implementation for ITreeNode objects TreeStyle Defines rendering options that affect how the tree is displayed. TreeTableSource<T> An ITableSource with expandable rows. TreeView Convenience implementation of generic TreeView<T> for any tree were all nodes implement ITreeNode. See TreeView Deep Dive for more information. TreeView<T> Hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder<T>. See TreeView Deep Dive for more information. TreeViewTextFilter<T> ITreeViewFilter<T> implementation which searches the AspectGetter of the model for the given Text. VerticalAxis The vertical (i.e. Y axis) of a GraphView View View is the base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views, called SubViews. ViewEventArgs Args for events that relate to specific View Window A Toplevel View with BorderStyle set to Single. Wizard Provides navigation and a user interface (UI) to collect related data across multiple steps. Each step (WizardStep) can host arbitrary Views, much like a Dialog. Each step also has a pane for help text. Along the bottom of the Wizard view are customizable buttons enabling the user to navigate forward and backward through the Wizard. WizardButtonEventArgs EventArgs for WizardStep transition events. WizardStep Represents a basic step that is displayed in a Wizard. The WizardStep view is divided horizontally in two. On the left is the content view where Views can be added, On the right is the help for the step. Set HelpText to set the help text. If the help text is empty the help pane will not be shown. If there are no Views added to the WizardStep the HelpText (if not empty) will fill the wizard step. Structs Attribute Attributes represent how text is styled when displayed in the terminal. Point Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane. PointF Represents an ordered pair of x and y coordinates that define a point in a two-dimensional plane. Rect Stores a set of four integers that represent the location and size of a rectangle RectangleF Stores the location and size of a rectangular region. Size Stores an ordered pair of integers, which specify a Height and Width. SizeF Represents the size of a rectangular region with an ordered pair of width and height. Interfaces IAllowedType Interface for FileDialog restrictions on which file type(s) the user is allowed to select/enter. IAnnotation Describes an overlay element that is rendered either before or after a series. Annotations can be positioned either in screen space (e.g. a legend) or in graph space (e.g. a line showing high point) Unlike ISeries, annotations are allowed to draw into graph margins IAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. IClipboard Definition to interact with the OS clipboard. IEnumerableTableSource<T> Interface for all ITableSource which present an object per row (of type T). IFileOperations Interface for defining how to handle file/directory deletion, rename and newing attempts in FileDialog. IListDataSource Implement IListDataSource to provide custom rendering for a ListView. ISearchMatcher Defines whether a given file/directory matches a set of search terms. ISeries Describes a series of data that can be rendered into a GraphView> ISuggestionGenerator Generates autocomplete Suggestion based on a given cursor location within a string ITableSource Tabular matrix of data to be displayed in a TableView. ITreeBuilder<T> Interface for supplying data to a TreeView<T> on demand as root level nodes are expanded by the user ITreeNode Interface to implement when you want the regular (non generic) TreeView to automatically determine children for your class (without having to specify an ITreeBuilder<T>) ITreeView Interface for all non generic members of TreeView<T>. See TreeView Deep Dive for more information. ITreeViewFilter<T> Provides filtering for a TreeView. Enums ColorName Defines the 16 legacy color names and values that can be used to set the foreground and background colors in Terminal.Gui apps. Used with Color. Command Actions which can be performed by the application or bound to keys in a View control. ConfigurationManager.ConfigLocations Describes the location of the configuration files. The constants can be combined (bitwise) to specify multiple locations. ConsoleDriver.DiagnosticFlags Enables diagnostic functions CursorVisibility Terminal Cursor Visibility settings. Dialog.ButtonAlignments Determines the horizontal alignment of the Dialog buttons. DisplayModeLayout Used for choose the display mode of this RadioGroup EscSeqUtils.ClearScreenOptions Options for ANSI ESC \"[xJ\" - Clears part of the screen. EscSeqUtils.DECSCUSR_Style Styles for ANSI ESC \"[x q\" - Set Cursor Style Key The Key enumeration contains special encoding for some keys, but can also encode all the unicode values that can be passed. LayoutStyle Determines the LayoutStyle for a View, if Absolute, during LayoutSubviews(), the value from the Frame will be used, if the value is Computed, then Frame will be updated from the X, Y Pos objects and the Width and Height Dim objects. LineStyle Defines the style of lines for a LineCanvas. MenuItemCheckStyle Specifies how a MenuItem shows selection state. MouseFlags Mouse flags reported in MouseEvent. OpenMode Determine which System.IO type to open. Orientation Direction of an element (horizontal or vertical) ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. ProgressBarStyle Specifies the style that a ProgressBar uses to indicate the progress of an operation. SliderType Slider<T> Types TextAlignment Text alignment enumeration, controls how text is displayed. TextDirection Text direction enumeration, controls how text is displayed. VerticalTextAlignment Vertical text alignment enumeration, controls how text is displayed. Delegates AspectGetterDelegate<T> Delegates of this type are used to fetch string representations of user's model objects CellColorGetterDelegate Delegate for providing color to TableView cells based on the value being rendered LabelGetterDelegate Delegate for custom formatting of axis labels. Determines what should be displayed at a given label RowColorGetterDelegate Delegate for providing color for a whole row of a TableView SplitterEventHandler Represents a method that will handle splitter events."
  },
  "api/Terminal.Gui/Terminal.Gui.IAllowedType.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IAllowedType.html",
    "title": "Interface IAllowedType",
    "keywords": "Interface IAllowedType Interface for FileDialog restrictions on which file type(s) the user is allowed to select/enter. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IAllowedType Methods | Improve this Doc View Source IsAllowed(string) Returns true if the file at path is compatible with this allow option. Note that the file may not exist (e.g. in the case of saving). Declaration bool IsAllowed(string path) Parameters Type Name Description string path Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.IAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IAnnotation.html",
    "title": "Interface IAnnotation",
    "keywords": "Interface IAnnotation Describes an overlay element that is rendered either before or after a series. Annotations can be positioned either in screen space (e.g. a legend) or in graph space (e.g. a line showing high point) Unlike ISeries, annotations are allowed to draw into graph margins Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IAnnotation Properties | Improve this Doc View Source BeforeSeries True if annotation should be drawn before ISeries. This allows Series and later annotations to potentially draw over the top of this annotation. Declaration bool BeforeSeries { get; } Property Value Type Description bool Methods | Improve this Doc View Source Render(GraphView) Called once after series have been rendered (or before if BeforeSeries is true). Use Driver to draw and Bounds to avoid drawing outside of graph Declaration void Render(GraphView graph) Parameters Type Name Description GraphView graph"
  },
  "api/Terminal.Gui/Terminal.Gui.IAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IAutocomplete.html",
    "title": "Interface IAutocomplete",
    "keywords": "Interface IAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IAutocomplete Properties | Improve this Doc View Source CloseKey The key that the user can press to close the currently popped autocomplete menu Declaration Key CloseKey { get; set; } Property Value Type Description Key | Improve this Doc View Source ColorScheme The colors to use to render the overlay. Accessing this property before the Application has been initialized will cause an error Declaration ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Context The context used by the autocomplete menu. Declaration AutocompleteContext Context { get; set; } Property Value Type Description AutocompleteContext | Improve this Doc View Source HostControl The host control that will use autocomplete. Declaration View HostControl { get; set; } Property Value Type Description View | Improve this Doc View Source MaxHeight The maximum number of visible rows in the autocomplete dropdown to render Declaration int MaxHeight { get; set; } Property Value Type Description int | Improve this Doc View Source MaxWidth The maximum width of the autocomplete dropdown Declaration int MaxWidth { get; set; } Property Value Type Description int | Improve this Doc View Source PopupInsideContainer Gets or sets where the popup will be displayed. Declaration bool PopupInsideContainer { get; set; } Property Value Type Description bool | Improve this Doc View Source Reopen The key that the user can press to reopen the currently popped autocomplete menu Declaration Key Reopen { get; set; } Property Value Type Description Key | Improve this Doc View Source SelectedIdx The currently selected index into Suggestions that the user has highlighted Declaration int SelectedIdx { get; set; } Property Value Type Description int | Improve this Doc View Source SelectionKey The key that the user must press to accept the currently selected autocomplete suggestion Declaration Key SelectionKey { get; set; } Property Value Type Description Key | Improve this Doc View Source SuggestionGenerator Gets or Sets the class responsible for generating Suggestions based on a given AutocompleteContext of the HostControl. Declaration ISuggestionGenerator SuggestionGenerator { get; set; } Property Value Type Description ISuggestionGenerator | Improve this Doc View Source Suggestions The strings that form the current list of suggestions to render based on what the user has typed so far. Declaration ReadOnlyCollection<Suggestion> Suggestions { get; set; } Property Value Type Description ReadOnlyCollection<Suggestion> | Improve this Doc View Source Visible True if the autocomplete should be considered open and visible Declaration bool Visible { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source ClearSuggestions() Clears Suggestions Declaration void ClearSuggestions() | Improve this Doc View Source GenerateSuggestions(AutocompleteContext) Populates Suggestions with all Suggestion proposed by SuggestionGenerator at the given context (cursor position) Declaration void GenerateSuggestions(AutocompleteContext context) Parameters Type Name Description AutocompleteContext context | Improve this Doc View Source MouseEvent(MouseEvent, bool) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. bool fromHost If was called from the popup or from the host. Returns Type Description bool trueif the mouse can be handled falseotherwise. | Improve this Doc View Source ProcessKey(KeyEventArgs) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration bool ProcessKey(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a The key event. Returns Type Description bool trueif the key can be handled falseotherwise. | Improve this Doc View Source RenderOverlay(Point) Renders the autocomplete dialog inside the given HostControl at the given point. Declaration void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt"
  },
  "api/Terminal.Gui/Terminal.Gui.IClipboard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IClipboard.html",
    "title": "Interface IClipboard",
    "keywords": "Interface IClipboard Definition to interact with the OS clipboard. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IClipboard Properties | Improve this Doc View Source IsSupported Returns true if the environmental dependencies are in place to interact with the OS clipboard. Declaration bool IsSupported { get; } Property Value Type Description bool Methods | Improve this Doc View Source GetClipboardData() Get the operation system clipboard. Declaration string GetClipboardData() Returns Type Description string Exceptions Type Condition NotSupportedException Thrown if it was not possible to read the clipboard contents. | Improve this Doc View Source SetClipboardData(string) Sets the operation system clipboard. Declaration void SetClipboardData(string text) Parameters Type Name Description string text Exceptions Type Condition NotSupportedException Thrown if it was not possible to set the clipboard contents. | Improve this Doc View Source TryGetClipboardData(out string) Gets the operation system clipboard if possible. Declaration bool TryGetClipboardData(out string result) Parameters Type Name Description string result Clipboard contents read Returns Type Description bool true if it was possible to read the OS clipboard. | Improve this Doc View Source TrySetClipboardData(string) Sets the operation system clipboard if possible. Declaration bool TrySetClipboardData(string text) Parameters Type Name Description string text Returns Type Description bool True if the clipboard content was set successfully."
  },
  "api/Terminal.Gui/Terminal.Gui.IEnumerableTableSource-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IEnumerableTableSource-1.html",
    "title": "Interface IEnumerableTableSource<T>",
    "keywords": "Interface IEnumerableTableSource<T> Interface for all ITableSource which present an object per row (of type T). Inherited Members ITableSource.Rows ITableSource.Columns ITableSource.ColumnNames ITableSource.this[int, int] Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IEnumerableTableSource<T> : ITableSource Type Parameters Name Description T Methods | Improve this Doc View Source GetAllObjects() Return all objects in the table. Declaration IEnumerable<T> GetAllObjects() Returns Type Description IEnumerable<T> | Improve this Doc View Source GetObjectOnRow(int) Return the object on the given row. Declaration T GetObjectOnRow(int row) Parameters Type Name Description int row Returns Type Description T"
  },
  "api/Terminal.Gui/Terminal.Gui.IFileOperations.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IFileOperations.html",
    "title": "Interface IFileOperations",
    "keywords": "Interface IFileOperations Interface for defining how to handle file/directory deletion, rename and newing attempts in FileDialog. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IFileOperations Methods | Improve this Doc View Source Delete(IEnumerable<IFileSystemInfo>) Specifies how to handle file/directory deletion attempts in FileDialog. Declaration bool Delete(IEnumerable<IFileSystemInfo> toDelete) Parameters Type Name Description IEnumerable<IFileSystemInfo> toDelete Returns Type Description bool true if operation was completed or false if cancelled | Improve this Doc View Source New(IFileSystem, IDirectoryInfo) Specifies how to handle 'new directory' operation in FileDialog. Declaration IFileSystemInfo New(IFileSystem fileSystem, IDirectoryInfo inDirectory) Parameters Type Name Description IFileSystem fileSystem IDirectoryInfo inDirectory The parent directory in which the new directory should be created Returns Type Description IFileSystemInfo The newly created directory or null if cancelled. | Improve this Doc View Source Rename(IFileSystem, IFileSystemInfo) Specifies how to handle file/directory rename attempts in FileDialog. Declaration IFileSystemInfo Rename(IFileSystem fileSystem, IFileSystemInfo toRename) Parameters Type Name Description IFileSystem fileSystem IFileSystemInfo toRename Returns Type Description IFileSystemInfo The new name for the file or null if cancelled"
  },
  "api/Terminal.Gui/Terminal.Gui.IListDataSource.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IListDataSource.html",
    "title": "Interface IListDataSource",
    "keywords": "Interface IListDataSource Implement IListDataSource to provide custom rendering for a ListView. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface IListDataSource Properties | Improve this Doc View Source Count Returns the number of elements to display Declaration int Count { get; } Property Value Type Description int | Improve this Doc View Source Length Returns the maximum length of elements to display Declaration int Length { get; } Property Value Type Description int Methods | Improve this Doc View Source IsMarked(int) Should return whether the specified item is currently marked. Declaration bool IsMarked(int item) Parameters Type Name Description int item Item index. Returns Type Description bool true, if marked, false otherwise. | Improve this Doc View Source Render(ListView, ConsoleDriver, bool, int, int, int, int, int) This method is invoked to render a specified item, the method should cover the entire provided width. Declaration void Render(ListView container, ConsoleDriver driver, bool selected, int item, int col, int line, int width, int start = 0) Parameters Type Name Description ListView container The list view to render. ConsoleDriver driver The console driver to render. bool selected Describes whether the item being rendered is currently selected by the user. int item The index of the item to render, zero for the first item and so on. int col The column where the rendering will start int line The line where the rendering will be done. int width The width that must be filled out. int start The index of the string to be displayed. | Improve this Doc View Source SetMark(int, bool) Flags the item as marked. Declaration void SetMark(int item, bool value) Parameters Type Name Description int item Item index. bool value If set to true value. | Improve this Doc View Source ToList() Return the source as IList. Declaration IList ToList() Returns Type Description IList"
  },
  "api/Terminal.Gui/Terminal.Gui.ISearchMatcher.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ISearchMatcher.html",
    "title": "Interface ISearchMatcher",
    "keywords": "Interface ISearchMatcher Defines whether a given file/directory matches a set of search terms. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ISearchMatcher Methods | Improve this Doc View Source Initialize(string) Called once for each new search. Defines the string the user has provided as search terms. Declaration void Initialize(string terms) Parameters Type Name Description string terms | Improve this Doc View Source IsMatch(IFileSystemInfo) Return true if f is a match to the last provided search terms Declaration bool IsMatch(IFileSystemInfo f) Parameters Type Name Description IFileSystemInfo f Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.ISeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ISeries.html",
    "title": "Interface ISeries",
    "keywords": "Interface ISeries Describes a series of data that can be rendered into a GraphView> Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ISeries Methods | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws the graphBounds section of a series into the graph view drawBounds Declaration void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Graph series is to be drawn onto Rect drawBounds Visible area of the graph in Console Screen units (excluding margins) RectangleF graphBounds Visible area of the graph in Graph space units"
  },
  "api/Terminal.Gui/Terminal.Gui.ISuggestionGenerator.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ISuggestionGenerator.html",
    "title": "Interface ISuggestionGenerator",
    "keywords": "Interface ISuggestionGenerator Generates autocomplete Suggestion based on a given cursor location within a string Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ISuggestionGenerator Methods | Improve this Doc View Source GenerateSuggestions(AutocompleteContext) Generates autocomplete Suggestion based on a given context Declaration IEnumerable<Suggestion> GenerateSuggestions(AutocompleteContext context) Parameters Type Name Description AutocompleteContext context Returns Type Description IEnumerable<Suggestion> | Improve this Doc View Source IsWordChar(Rune) Returns true if rune is a character that would continue autocomplete suggesting. Returns false if it is a 'breaking' character (i.e. terminating current word boundary) Declaration bool IsWordChar(Rune rune) Parameters Type Name Description Rune rune Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.ITableSource.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITableSource.html",
    "title": "Interface ITableSource",
    "keywords": "Interface ITableSource Tabular matrix of data to be displayed in a TableView. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ITableSource Properties | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration int Columns { get; } Property Value Type Description int | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration int Rows { get; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.IterationEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.IterationEventArgs.html",
    "title": "Class IterationEventArgs",
    "keywords": "Class IterationEventArgs Event arguments for the Iteration event. Inheritance object IterationEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class IterationEventArgs"
  },
  "api/Terminal.Gui/Terminal.Gui.ITreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITreeBuilder-1.html",
    "title": "Interface ITreeBuilder<T>",
    "keywords": "Interface ITreeBuilder<T> Interface for supplying data to a TreeView<T> on demand as root level nodes are expanded by the user Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ITreeBuilder<T> Type Parameters Name Description T Properties | Improve this Doc View Source SupportsCanExpand Returns true if CanExpand(T) is implemented by this class Declaration bool SupportsCanExpand { get; } Property Value Type Description bool Methods | Improve this Doc View Source CanExpand(T) Returns true/false for whether a model has children. This method should be implemented when GetChildren(T) is an expensive operation otherwise SupportsCanExpand should return false (in which case this method will not be called) Declaration bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description bool | Improve this Doc View Source GetChildren(T) Returns all children of a given forObject which should be added to the tree as new branches underneath it Declaration IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description IEnumerable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ITreeNode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITreeNode.html",
    "title": "Interface ITreeNode",
    "keywords": "Interface ITreeNode Interface to implement when you want the regular (non generic) TreeView to automatically determine children for your class (without having to specify an ITreeBuilder<T>) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ITreeNode Properties | Improve this Doc View Source Children The children of your class which should be rendered underneath it when expanded Declaration IList<ITreeNode> Children { get; } Property Value Type Description IList<ITreeNode> | Improve this Doc View Source Tag Optionally allows you to store some custom data/class here. Declaration object Tag { get; set; } Property Value Type Description object | Improve this Doc View Source Text Text to display when rendering the node Declaration string Text { get; set; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.ITreeView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITreeView.html",
    "title": "Interface ITreeView",
    "keywords": "Interface ITreeView Interface for all non generic members of TreeView<T>. See TreeView Deep Dive for more information. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ITreeView Properties | Improve this Doc View Source Style Contains options for changing how the tree is rendered. Declaration TreeStyle Style { get; set; } Property Value Type Description TreeStyle Methods | Improve this Doc View Source ClearObjects() Removes all objects from the tree and clears selection. Declaration void ClearObjects() | Improve this Doc View Source SetNeedsDisplay() Sets a flag indicating this view needs to be redisplayed because its state has changed. Declaration void SetNeedsDisplay()"
  },
  "api/Terminal.Gui/Terminal.Gui.ITreeViewFilter-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ITreeViewFilter-1.html",
    "title": "Interface ITreeViewFilter<T>",
    "keywords": "Interface ITreeViewFilter<T> Provides filtering for a TreeView. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public interface ITreeViewFilter<T> where T : class Type Parameters Name Description T Methods | Improve this Doc View Source IsMatch(T) Return true if the model should be included in the tree. Declaration bool IsMatch(T model) Parameters Type Name Description T model Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.Key.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Key.html",
    "title": "Enum Key",
    "keywords": "Enum Key The Key enumeration contains special encoding for some keys, but can also encode all the unicode values that can be passed. Remarks If the SpecialMask is set, then the value is that of the special mask, otherwise, the value is the one of the lower bits (as extracted by CharMask) Numerics keys are the values between 48 and 57 corresponding to 0 to 9 Upper alpha keys are the values between 65 and 90 corresponding to A to Z Unicode runes are also stored here, the letter 'A\" for example is encoded as a value 65 (not surfaced in the enum). Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [Flags] public enum Key : uint Fields Name Description a The key code for the user pressing A A The key code for the user pressing Shift-A AltMask When this value is set, the Key encodes the sequence Alt-KeyValue. And the actual value must be extracted by removing the AltMask. b The key code for the user pressing B B The key code for the user pressing Shift-B Backspace Backspace key. BackTab Shift-tab key (backwards tab key). c The key code for the user pressing C C The key code for the user pressing Shift-C CharMask Mask that indicates that this is a character value, values outside this range indicate special characters like Alt-key combinations or special keys on the keyboard like function keys, arrows keys and so on. Clear The key code for the user pressing the clear key. CtrlMask When this value is set, the Key encodes the sequence Ctrl-KeyValue. And the actual value must be extracted by removing the CtrlMask. CursorDown Cursor down key. CursorLeft Cursor left key. CursorRight Cursor right key. CursorUp Cursor up key d The key code for the user pressing D D The key code for the user pressing Shift-D D0 Digit 0. D1 Digit 1. D2 Digit 2. D3 Digit 3. D4 Digit 4. D5 Digit 5. D6 Digit 6. D7 Digit 7. D8 Digit 8. D9 Digit 9. Delete The key code for the user pressing the delete key. DeleteChar Delete character key. e The key code for the user pressing E E The key code for the user pressing Shift-E End End key. Enter The key code for the user pressing the return key. Esc The key code for the user pressing the escape key f The key code for the user pressing F F The key code for the user pressing Shift-F F1 F1 key. F10 F10 key. F11 F11 key. F12 F12 key. F13 F13 key. F14 F14 key. F15 F15 key. F16 F16 key. F17 F17 key. F18 F18 key. F19 F19 key. F2 F2 key. F20 F20 key. F21 F21 key. F22 F22 key. F23 F23 key. F24 F24 key. F3 F3 key. F4 F4 key. F5 F5 key. F6 F6 key. F7 F7 key. F8 F8 key. F9 F9 key. g The key code for the user pressing G G The key code for the user pressing Shift-G h The key code for the user pressing H H The key code for the user pressing Shift-H Home Home key. i The key code for the user pressing I I The key code for the user pressing Shift-I InsertChar Insert character key. j The key code for the user pressing J J The key code for the user pressing Shift-J k The key code for the user pressing K K The key code for the user pressing Shift-K l The key code for the user pressing L L The key code for the user pressing Shift-L m The key code for the user pressing M M The key code for the user pressing Shift-M n The key code for the user pressing N N The key code for the user pressing Shift-N Null The key code representing null or empty o The key code for the user pressing O O The key code for the user pressing Shift-O p The key code for the user pressing P P The key code for the user pressing Shift-P PageDown Page Down key. PageUp Page Up key. PrintScreen Print screen character key. q The key code for the user pressing Q Q The key code for the user pressing Shift-Q r The key code for the user pressing R R The key code for the user pressing Shift-R s The key code for the user pressing S S The key code for the user pressing Shift-S ShiftMask When this value is set, the Key encodes the sequence Shift-KeyValue. Space The key code for the user pressing the space bar SpecialMask If the SpecialMask is set, then the value is that of the special mask, otherwise, the value is the one of the lower bits (as extracted by CharMask). t The key code for the user pressing T T The key code for the user pressing Shift-T Tab The key code for the user pressing the tab key (forwards tab key). u The key code for the user pressing U U The key code for the user pressing Shift-U Unknown A key with an unknown mapping was raised. v The key code for the user pressing V V The key code for the user pressing Shift-V w The key code for the user pressing W W The key code for the user pressing Shift-W x The key code for the user pressing X X The key code for the user pressing Shift-X y The key code for the user pressing Y Y The key code for the user pressing Shift-Y z The key code for the user pressing Z Z The key code for the user pressing Shift-Z"
  },
  "api/Terminal.Gui/Terminal.Gui.KeyChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeyChangedEventArgs.html",
    "title": "Class KeyChangedEventArgs",
    "keywords": "Class KeyChangedEventArgs Event args for when a Key is changed from one value to a new value (e.g. in HotKeyChanged) Inheritance object EventArgs KeyChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class KeyChangedEventArgs : EventArgs Constructors | Improve this Doc View Source KeyChangedEventArgs(Key, Key) Creates a new instance of the KeyChangedEventArgs class Declaration public KeyChangedEventArgs(Key oldKey, Key newKey) Parameters Type Name Description Key oldKey Key newKey Properties | Improve this Doc View Source NewKey Gets the new Key that is being used. Use Null to check for empty. Declaration public Key NewKey { get; } Property Value Type Description Key | Improve this Doc View Source OldKey Gets the old Key that was set before the event. Use Null to check for empty. Declaration public Key OldKey { get; } Property Value Type Description Key"
  },
  "api/Terminal.Gui/Terminal.Gui.KeyEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeyEventArgs.html",
    "title": "Class KeyEventArgs",
    "keywords": "Class KeyEventArgs Defines the event arguments for keyboard events. Inheritance object EventArgs KeyEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class KeyEventArgs : EventArgs Constructors | Improve this Doc View Source KeyEventArgs() Constructs a new KeyEventArgs Declaration public KeyEventArgs() | Improve this Doc View Source KeyEventArgs(Key, KeyModifiers) Constructs a new KeyEventArgs from the provided Key value - can be a rune cast into a Key value Declaration public KeyEventArgs(Key k, KeyModifiers km) Parameters Type Name Description Key k The key KeyModifiers km The key modifiers | Improve this Doc View Source KeyEventArgs(Key) Constructs a new KeyEventArgs from the provided Key value - can be a rune cast into a Key value Declaration public KeyEventArgs(Key k) Parameters Type Name Description Key k The key Properties | Improve this Doc View Source Handled Indicates if the current Key event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description bool | Improve this Doc View Source IsAlt Gets a value indicating whether the Alt key was pressed (real or synthesized) Declaration public bool IsAlt { get; } Property Value Type Description bool true if is alternate; otherwise, false. | Improve this Doc View Source IsCapslock Gets a value indicating whether the Caps lock key was pressed (real or synthesized) Declaration public bool IsCapslock { get; } Property Value Type Description bool true if is alternate; otherwise, false. | Improve this Doc View Source IsCtrl Determines whether the value is a control key (and NOT just the ctrl key) Declaration public bool IsCtrl { get; } Property Value Type Description bool true if is ctrl; otherwise, false. | Improve this Doc View Source IsNumlock Gets a value indicating whether the Num lock key was pressed (real or synthesized) Declaration public bool IsNumlock { get; } Property Value Type Description bool true if is alternate; otherwise, false. | Improve this Doc View Source IsScrolllock Gets a value indicating whether the Scroll lock key was pressed (real or synthesized) Declaration public bool IsScrolllock { get; } Property Value Type Description bool true if is alternate; otherwise, false. | Improve this Doc View Source IsShift Gets a value indicating whether the Shift key was pressed. Declaration public bool IsShift { get; } Property Value Type Description bool true if is shift; otherwise, false. | Improve this Doc View Source Key Symbolic definition for the key. Declaration public Key Key { get; set; } Property Value Type Description Key | Improve this Doc View Source KeyValue The key value cast to an integer, you will typical use this for extracting the Unicode rune value out of a key, when none of the symbolic options are in use. Declaration public int KeyValue { get; } Property Value Type Description int Methods | Improve this Doc View Source ToString() Pretty prints the KeyEvent Declaration public override string ToString() Returns Type Description string Overrides object.ToString() | Improve this Doc View Source ToString(Key, Rune) Formats a Key as a string. Declaration public static string ToString(Key key, Rune separator) Parameters Type Name Description Key key The key to format. Rune separator The character to use as a separator between modifier keys and and the key itself. Returns Type Description string The formatted string. If the key is a printable character, it will be returned as a string. Otherwise, the key name will be returned. | Improve this Doc View Source UpdateModifierKeyMasks() Updates the modifier masks to match IsAlt, IsCtrl, and IsShift. Declaration public void UpdateModifierKeyMasks()"
  },
  "api/Terminal.Gui/Terminal.Gui.KeyModifiers.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeyModifiers.html",
    "title": "Class KeyModifiers",
    "keywords": "Class KeyModifiers Identifies the state of the \"shift\"-keys within a event. Inheritance object KeyModifiers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class KeyModifiers Fields | Improve this Doc View Source Alt Check if the Alt key was pressed or not. Declaration public bool Alt Field Value Type Description bool | Improve this Doc View Source Capslock Check if the Caps lock key was pressed or not. Declaration public bool Capslock Field Value Type Description bool | Improve this Doc View Source Ctrl Check if the Ctrl key was pressed or not. Declaration public bool Ctrl Field Value Type Description bool | Improve this Doc View Source Numlock Check if the Num lock key was pressed or not. Declaration public bool Numlock Field Value Type Description bool | Improve this Doc View Source Scrolllock Check if the Scroll lock key was pressed or not. Declaration public bool Scrolllock Field Value Type Description bool | Improve this Doc View Source Shift Check if the Shift key was pressed or not. Declaration public bool Shift Field Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.KeystrokeNavigatorEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.KeystrokeNavigatorEventArgs.html",
    "title": "Class KeystrokeNavigatorEventArgs",
    "keywords": "Class KeystrokeNavigatorEventArgs Event arguments for the SearchStringChanged event. Inheritance object EventArgs KeystrokeNavigatorEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class KeystrokeNavigatorEventArgs : EventArgs Constructors | Improve this Doc View Source KeystrokeNavigatorEventArgs(string) Initializes a new instance of KeystrokeNavigatorEventArgs Declaration public KeystrokeNavigatorEventArgs(string searchString) Parameters Type Name Description string searchString The current SearchString. Properties | Improve this Doc View Source SearchString he current SearchString. Declaration public string SearchString { get; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.Label.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Label.html",
    "title": "Class Label",
    "keywords": "Class Label The Label View displays a string at a given position and supports multiple lines separated by newline characters. Multi-line Labels support word wrap. Inheritance object Responder View Label Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The Label view is functionality identical to View and is included for API backwards compatibility. Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Label : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Label() Initializes a new instance of View using Computed layout. Declaration public Label() | Improve this Doc View Source Label(int, int, string, bool) Declaration public Label(int x, int y, string text, bool autosize = true) Parameters Type Name Description int x int y string text bool autosize | Improve this Doc View Source Label(string, bool) Declaration public Label(string text, bool autosize = true) Parameters Type Name Description string text bool autosize | Improve this Doc View Source Label(string, TextDirection, bool) Declaration public Label(string text, TextDirection direction, bool autosize = true) Parameters Type Name Description string text TextDirection direction bool autosize | Improve this Doc View Source Label(Rect, bool) Declaration public Label(Rect frame, bool autosize = false) Parameters Type Name Description Rect frame bool autosize | Improve this Doc View Source Label(Rect, string, bool) Declaration public Label(Rect rect, string text, bool autosize = false) Parameters Type Name Description Rect rect string text bool autosize Properties | Improve this Doc View Source HotKey Gets or sets the hot key defined for this view. Pressing the hot key on the keyboard while this view has focus will cause the MouseClick event to fire. See for an overview of Terminal.Gui keyboard APIs. HotKey - A keyboard chord composed of the Alt key and another character that selects a visible UI item. For example, in a Dialog, a Button with the text of \"_Text\" can be selected with Alt-T. Or, in a Menu with \"_File _Edit\", Alt-F will select (show) the File menu. If the \"_File\" menu has a sub-menu of \"_New\" Alt-N will ONLY select the \"_New\" sub-menu if the \"_File\" menu is already opened. This API is a helper API for configuring a key binding for the hot key. It uses the HotKey to determine the hot key from Title by looking for the first character prefixed with HotKeySpecifier. If the hot key is changed, the HotKeyChanged event is fired. Declaration public override Key HotKey { get; set; } Property Value Type Description Key Overrides View.HotKey Methods | Improve this Doc View Source OnClicked() Virtual method to invoke the Clicked event. Declaration public virtual void OnClicked() | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnMouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool OnMouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnMouseEvent(MouseEvent) Events | Improve this Doc View Source Clicked The event fired when the user clicks the primary mouse button within the Bounds of this View or if the user presses the action key while this view is focused. (TODO: IsDefault) Declaration public event EventHandler Clicked Event Type Type Description EventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.LabelGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LabelGetterDelegate.html",
    "title": "Delegate LabelGetterDelegate",
    "keywords": "Delegate LabelGetterDelegate Delegate for custom formatting of axis labels. Determines what should be displayed at a given label Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public delegate string LabelGetterDelegate(AxisIncrementToRender toRender) Parameters Type Name Description AxisIncrementToRender toRender The axis increment to which the label is attached Returns Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.LayoutEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LayoutEventArgs.html",
    "title": "Class LayoutEventArgs",
    "keywords": "Class LayoutEventArgs Event arguments for the LayoutComplete event. Inheritance object EventArgs LayoutEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class LayoutEventArgs : EventArgs Properties | Improve this Doc View Source OldBounds The view-relative bounds of the View before it was laid out. Declaration public Rect OldBounds { get; set; } Property Value Type Description Rect"
  },
  "api/Terminal.Gui/Terminal.Gui.LayoutStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LayoutStyle.html",
    "title": "Enum LayoutStyle",
    "keywords": "Enum LayoutStyle Determines the LayoutStyle for a View, if Absolute, during LayoutSubviews(), the value from the Frame will be used, if the value is Computed, then Frame will be updated from the X, Y Pos objects and the Width and Height Dim objects. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum LayoutStyle Fields Name Description Absolute The position and size of the view are based Frame. Computed The position and size of the view will be computed based on X, Y, Width, and Height. Frame will provide the absolute computed values."
  },
  "api/Terminal.Gui/Terminal.Gui.LegendAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LegendAnnotation.html",
    "title": "Class LegendAnnotation",
    "keywords": "Class LegendAnnotation A box containing symbol definitions e.g. meanings for colors in a graph. The 'Key' to the graph Inheritance object LegendAnnotation Implements IAnnotation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class LegendAnnotation : IAnnotation Constructors | Improve this Doc View Source LegendAnnotation(Rect) Creates a new empty legend at the given screen coordinates Declaration public LegendAnnotation(Rect legendBounds) Parameters Type Name Description Rect legendBounds Defines the area available for the legend to render in (within the graph). This is in screen units (i.e. not graph space) Properties | Improve this Doc View Source BeforeSeries Returns false i.e. Lengends render after series Declaration public bool BeforeSeries { get; } Property Value Type Description bool | Improve this Doc View Source Border True to draw a solid border around the legend. Defaults to true. This border will be within the Bounds and so reduces the width/height available for text by 2 Declaration public bool Border { get; set; } Property Value Type Description bool | Improve this Doc View Source Bounds Defines the screen area available for the legend to render in Declaration public Rect Bounds { get; set; } Property Value Type Description Rect Methods | Improve this Doc View Source AddEntry(GraphCellToRender, string) Adds an entry into the legend. Duplicate entries are permissable Declaration public void AddEntry(GraphCellToRender graphCellToRender, string text) Parameters Type Name Description GraphCellToRender graphCellToRender The symbol appearing on the graph that should appear in the legend string text Text to render on this line of the legend. Will be truncated if outside of Legend Bounds | Improve this Doc View Source Render(GraphView) Draws the Legend and all entries into the area within Bounds Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.Line.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Line.html",
    "title": "Class Line",
    "keywords": "Class Line Draws a single line using the LineStyle specified by BorderStyle. Inheritance object Responder View Line Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Line : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Line() Constructs a Line object. Declaration public Line() Properties | Improve this Doc View Source Orientation The direction of the line. If you change this you will need to manually update the Width/Height of the control to cover a relevant area based on the new direction. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation Methods | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnDrawFrames() Prepares LineCanvas. If SuperViewRendersLineCanvas is true, only the LineCanvas of this view's subviews will be rendered. If SuperViewRendersLineCanvas is false (the default), this method will cause the LineCanvas be prepared to be rendered. Declaration public override bool OnDrawFrames() Returns Type Description bool Overrides View.OnDrawFrames() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.LineCanvas.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LineCanvas.html",
    "title": "Class LineCanvas",
    "keywords": "Class LineCanvas Facilitates box drawing and line intersection detection and rendering. Does not support diagonal lines. Inheritance object LineCanvas Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class LineCanvas : IDisposable Constructors | Improve this Doc View Source LineCanvas() Creates a new instance. Declaration public LineCanvas() | Improve this Doc View Source LineCanvas(IEnumerable<StraightLine>) Creates a new instance with the given lines. Declaration public LineCanvas(IEnumerable<StraightLine> lines) Parameters Type Name Description IEnumerable<StraightLine> lines Initial lines for the canvas. Properties | Improve this Doc View Source Bounds Gets the rectangle that describes the bounds of the canvas. Location is the coordinates of the line that is furthest left/top and Size is defined by the line that extends the furthest right/bottom. Declaration public Rect Bounds { get; } Property Value Type Description Rect | Improve this Doc View Source Lines Gets the lines in the canvas. Declaration public IReadOnlyCollection<StraightLine> Lines { get; } Property Value Type Description IReadOnlyCollection<StraightLine> Methods | Improve this Doc View Source AddLine(Point, int, Orientation, LineStyle, Attribute?) Adds a new length long line to the canvas starting at start. Use positive length for the line to extend Right and negative for Left when Orientation is Horizontal. Use positive length for the line to extend Down and negative for Up when Orientation is Vertical. Declaration public void AddLine(Point start, int length, Orientation orientation, LineStyle style, Attribute? attribute = null) Parameters Type Name Description Point start Starting point. int length The length of line. 0 for an intersection (cross or T). Positive for Down/Right. Negative for Up/Left. Orientation orientation The direction of the line. LineStyle style The style of line to use Attribute? attribute | Improve this Doc View Source AddLine(StraightLine) Adds a new line to the canvas Declaration public void AddLine(StraightLine line) Parameters Type Name Description StraightLine line | Improve this Doc View Source Clear() Clears all lines from the LineCanvas. Declaration public void Clear() | Improve this Doc View Source ClearCache() Clears any cached states from the canvas Call this method if you make changes to lines that have already been added. Declaration public void ClearCache() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetCellMap() Evaluates the lines that have been added to the canvas and returns a map containing the glyphs and their locations. The glyphs are the characters that should be rendered so that all lines connect up with the appropriate intersection symbols. Declaration public Dictionary<Point, Cell> GetCellMap() Returns Type Description Dictionary<Point, Cell> A map of all the points within the canvas. | Improve this Doc View Source GetMap() Evaluates the lines that have been added to the canvas and returns a map containing the glyphs and their locations. The glyphs are the characters that should be rendered so that all lines connect up with the appropriate intersection symbols. Declaration public Dictionary<Point, Rune> GetMap() Returns Type Description Dictionary<Point, Rune> A map of all the points within the canvas. | Improve this Doc View Source GetMap(Rect) Evaluates the lines that have been added to the canvas and returns a map containing the glyphs and their locations. The glyphs are the characters that should be rendered so that all lines connect up with the appropriate intersection symbols. Declaration public Dictionary<Point, Rune> GetMap(Rect inArea) Parameters Type Name Description Rect inArea A rectangle to constrain the search by. Returns Type Description Dictionary<Point, Rune> A map of the points within the canvas that intersect with inArea. | Improve this Doc View Source Merge(LineCanvas) Merges one line canvas into this one. Declaration public void Merge(LineCanvas lineCanvas) Parameters Type Name Description LineCanvas lineCanvas | Improve this Doc View Source RemoveLastLine() Removes the last line added to the canvas Declaration public StraightLine RemoveLastLine() Returns Type Description StraightLine | Improve this Doc View Source ToString() Returns the contents of the line canvas rendered to a string. The string will include all columns and rows, even if Bounds has negative coordinates. For example, if the canvas contains a single line that starts at (-1,-1) with a length of 2, the rendered string will have a length of 2. Declaration public override string ToString() Returns Type Description string The canvas rendered to a string. Overrides object.ToString() Implements IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.LineF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LineF.html",
    "title": "Class LineF",
    "keywords": "Class LineF Describes two points in graph space and a line between them Inheritance object LineF Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class LineF Constructors | Improve this Doc View Source LineF(PointF, PointF) Creates a new line between the points Declaration public LineF(PointF start, PointF end) Parameters Type Name Description PointF start PointF end Properties | Improve this Doc View Source End The end point of the line Declaration public PointF End { get; } Property Value Type Description PointF | Improve this Doc View Source Start The start of the line Declaration public PointF Start { get; } Property Value Type Description PointF"
  },
  "api/Terminal.Gui/Terminal.Gui.LineStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LineStyle.html",
    "title": "Enum LineStyle",
    "keywords": "Enum LineStyle Defines the style of lines for a LineCanvas. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum LineStyle Fields Name Description Dashed The border is drawn using thin line glyphs with dashed (double and triple) straight lines. Dotted The border is drawn using thin line glyphs with short dashed (triple and quadruple) straight lines. Double The border is drawn using thin double line CM.Glyphs. Heavy The border is drawn using heavy line CM.Glyphs. HeavyDashed The border is drawn using heavy line glyphs with dashed (double and triple) straight lines. HeavyDotted The border is drawn using heavy line glyphs with short dashed (triple and quadruple) straight lines. None No border is drawn. Rounded The border is drawn using thin line glyphs with rounded corners. RoundedDashed The border is drawn using thin line glyphs with rounded corners and dashed (double and triple) straight lines. RoundedDotted The border is drawn using thin line glyphs with rounded corners and short dashed (triple and quadruple) straight lines. Single The border is drawn using thin line CM.Glyphs."
  },
  "api/Terminal.Gui/Terminal.Gui.LineView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.LineView.html",
    "title": "Class LineView",
    "keywords": "Class LineView A straight line control either horizontal or vertical Inheritance object Responder View LineView Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class LineView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source LineView() Creates a horizontal line Declaration public LineView() | Improve this Doc View Source LineView(Orientation) Creates a horizontal or vertical line based on orientation Declaration public LineView(Orientation orientation) Parameters Type Name Description Orientation orientation Properties | Improve this Doc View Source EndingAnchor The rune to display at the end of the line (right end of horizontal line or bottom end of vertical). If not specified then LineRune is used Declaration public Rune? EndingAnchor { get; set; } Property Value Type Description Rune? | Improve this Doc View Source LineRune The symbol to use for drawing the line Declaration public Rune LineRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source Orientation The direction of the line. If you change this you will need to manually update the Width/Height of the control to cover a relevant area based on the new direction. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source StartingAnchor The rune to display at the start of the line (left end of horizontal line or top end of vertical) If not specified then LineRune is used Declaration public Rune? StartingAnchor { get; set; } Property Value Type Description Rune? Methods | Improve this Doc View Source OnDrawContent(Rect) Draws the line including any starting/ending anchors Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea Overrides View.OnDrawContent(Rect) Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ListColumnStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListColumnStyle.html",
    "title": "Class ListColumnStyle",
    "keywords": "Class ListColumnStyle Defines rendering options that affect how the view is displayed. Inheritance object ListColumnStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListColumnStyle Properties | Improve this Doc View Source Orientation Gets or sets an Orientation enum indicating whether to populate data down each column rather than across each row. Defaults to Horizontal. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source ScrollParallel Gets or sets a flag indicating whether to scroll in the same direction as Orientation. Defaults to false. Declaration public bool ScrollParallel { get; set; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.ListTableSource.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListTableSource.html",
    "title": "Class ListTableSource",
    "keywords": "Class ListTableSource ITableSource implementation that wraps a IList. This class is mutable: changes are permitted to the wrapped IList. Inheritance object ListTableSource Implements ITableSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListTableSource : ITableSource Constructors | Improve this Doc View Source ListTableSource(IList, TableView, ListColumnStyle) Creates a new columned list table instance based on the data in list and dimensions from tableView. Declaration public ListTableSource(IList list, TableView tableView, ListColumnStyle style) Parameters Type Name Description IList list TableView tableView ListColumnStyle style | Improve this Doc View Source ListTableSource(IList, TableView) Declaration public ListTableSource(IList list, TableView tableView) Parameters Type Name Description IList list TableView tableView Fields | Improve this Doc View Source List The list this source wraps. Declaration public IList List Field Value Type Description IList | Improve this Doc View Source Style The style this source uses. Declaration public ListColumnStyle Style Field Value Type Description ListColumnStyle Properties | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration public string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration public int Columns { get; } Property Value Type Description int | Improve this Doc View Source Count The number of items in the IList source Declaration public int Count { get; } Property Value Type Description int | Improve this Doc View Source DataTable The data table this source wraps. Declaration public DataTable DataTable { get; } Property Value Type Description DataTable | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration public object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration public int Rows { get; } Property Value Type Description int Implements ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.ListView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListView.html",
    "title": "Class ListView",
    "keywords": "Class ListView ListView View renders a scrollable list of data where each item can be activated to perform an action. Inheritance object Responder View ListView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The ListView displays lists of data and allows the user to scroll through the data. Items in the can be activated firing an event (with the ENTER key or a mouse double-click). If the AllowsMarking property is true, elements of the list can be marked by the user. By default ListView uses ToString() to render the items of any IList object (e.g. arrays, List<T>, and other collections). Alternatively, an object that implements IListDataSource can be provided giving full control of what is rendered. ListView can display any object that implements the IList interface. string values are converted into string values before rendering, and other values are converted into string by calling ToString() and then converting to string . To change the contents of the ListView, set the Source property (when providing custom rendering via IListDataSource) or call SetSource(IList) an IList is being used. When AllowsMarking is set to true the rendering will prefix the rendered items with [x] or [ ] and bind the SPACE key to toggle the selection. To implement a different marking style set AllowsMarking to false and implement custom rendering. Searching the ListView with the keyboard is supported. Users type the first characters of an item, and the first item that starts with what the user types will be selected. Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ListView() Initializes a new instance of ListView. Set the Source property to display something. Declaration public ListView() | Improve this Doc View Source ListView(IList) Initializes a new instance of ListView that will display the contents of the object implementing the IList interface, with relative positioning. Declaration public ListView(IList source) Parameters Type Name Description IList source An IList data source, if the elements are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result. | Improve this Doc View Source ListView(IListDataSource) Initializes a new instance of ListView that will display the provided data source, using relative positioning. Declaration public ListView(IListDataSource source) Parameters Type Name Description IListDataSource source IListDataSource object that provides a mechanism to render the data. The number of elements on the collection should not change, if you must change, set the \"Source\" property to reset the internal settings of the ListView. | Improve this Doc View Source ListView(Rect, IList) Initializes a new instance of ListView that will display the contents of the object implementing the IList interface with an absolute position. Declaration public ListView(Rect rect, IList source) Parameters Type Name Description Rect rect Frame for the listview. IList source An IList data source, if the elements of the IList are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result. | Improve this Doc View Source ListView(Rect, IListDataSource) Initializes a new instance of ListView with the provided data source and an absolute position Declaration public ListView(Rect rect, IListDataSource source) Parameters Type Name Description Rect rect Frame for the listview. IListDataSource source IListDataSource object that provides a mechanism to render the data. The number of elements on the collection should not change, if you must change, set the \"Source\" property to reset the internal settings of the ListView. Properties | Improve this Doc View Source AllowsMarking Gets or sets whether this ListView allows items to be marked. Declaration public bool AllowsMarking { get; set; } Property Value Type Description bool Set to true to allow marking elements of the list. | Improve this Doc View Source AllowsMultipleSelection If set to true more than one item can be selected. If false selecting an item will cause all others to be un-selected. The default is false. Declaration public bool AllowsMultipleSelection { get; set; } Property Value Type Description bool | Improve this Doc View Source KeystrokeNavigator Gets the CollectionNavigator that searches the Source collection as the user types. Declaration public CollectionNavigator KeystrokeNavigator { get; } Property Value Type Description CollectionNavigator | Improve this Doc View Source LeftItem Gets or sets the leftmost column that is currently visible (when scrolling horizontally). Declaration public int LeftItem { get; set; } Property Value Type Description int The left position. | Improve this Doc View Source Maxlength Gets the widest item in the list. Declaration public int Maxlength { get; } Property Value Type Description int | Improve this Doc View Source SelectedItem Gets or sets the index of the currently selected item. Declaration public int SelectedItem { get; set; } Property Value Type Description int The selected item. | Improve this Doc View Source Source Gets or sets the IListDataSource backing this ListView, enabling custom rendering. Declaration public IListDataSource Source { get; set; } Property Value Type Description IListDataSource The source. | Improve this Doc View Source TopItem Gets or sets the item that is displayed at the top of the ListView. Declaration public int TopItem { get; set; } Property Value Type Description int The top item. Methods | Improve this Doc View Source AllowsAll() If AllowsMarking and AllowsMultipleSelection are both true, unmarks all marked items other than the currently selected. Declaration public virtual bool AllowsAll() Returns Type Description bool true if unmarking was successful. | Improve this Doc View Source EnsureSelectedItemVisible() Ensures the selected item is always visible on the screen. Declaration public void EnsureSelectedItemVisible() | Improve this Doc View Source MarkUnmarkRow() Marks the SelectedItem if it is not already marked. Declaration public virtual bool MarkUnmarkRow() Returns Type Description bool true if the SelectedItem was marked. | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveDown() Changes the SelectedItem to the next item in the list, scrolling the list if needed. Declaration public virtual bool MoveDown() Returns Type Description bool | Improve this Doc View Source MoveEnd() Changes the SelectedItem to last item in the list, scrolling the list if needed. Declaration public virtual bool MoveEnd() Returns Type Description bool | Improve this Doc View Source MoveHome() Changes the SelectedItem to the first item in the list, scrolling the list if needed. Declaration public virtual bool MoveHome() Returns Type Description bool | Improve this Doc View Source MovePageDown() Changes the SelectedItem to the item just below the bottom of the visible list, scrolling if needed. Declaration public virtual bool MovePageDown() Returns Type Description bool | Improve this Doc View Source MovePageUp() Changes the SelectedItem to the item at the top of the visible list. Declaration public virtual bool MovePageUp() Returns Type Description bool | Improve this Doc View Source MoveUp() Changes the SelectedItem to the previous item in the list, scrolling the list if needed. Declaration public virtual bool MoveUp() Returns Type Description bool | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnOpenSelectedItem() Invokes the OpenSelectedItem event if it is defined. Declaration public virtual bool OnOpenSelectedItem() Returns Type Description bool | Improve this Doc View Source OnRowRender(ListViewRowEventArgs) Virtual method that will invoke the RowRender. Declaration public virtual void OnRowRender(ListViewRowEventArgs rowEventArgs) Parameters Type Name Description ListViewRowEventArgs rowEventArgs | Improve this Doc View Source OnSelectedChanged() Invokes the SelectedItemChanged event if it is defined. Declaration public virtual bool OnSelectedChanged() Returns Type Description bool | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source ScrollDown(int) Scrolls the view down by items items. Declaration public virtual bool ScrollDown(int items) Parameters Type Name Description int items Number of items to scroll down. Returns Type Description bool | Improve this Doc View Source ScrollLeft(int) Scrolls the view left. Declaration public virtual bool ScrollLeft(int cols) Parameters Type Name Description int cols Number of columns to scroll left. Returns Type Description bool | Improve this Doc View Source ScrollRight(int) Scrolls the view right. Declaration public virtual bool ScrollRight(int cols) Parameters Type Name Description int cols Number of columns to scroll right. Returns Type Description bool | Improve this Doc View Source ScrollUp(int) Scrolls the view up by items items. Declaration public virtual bool ScrollUp(int items) Parameters Type Name Description int items Number of items to scroll up. Returns Type Description bool | Improve this Doc View Source SetSource(IList) Sets the source of the ListView to an IList. Declaration public void SetSource(IList source) Parameters Type Name Description IList source | Improve this Doc View Source SetSourceAsync(IList) Sets the source to an IList value asynchronously. Declaration public Task SetSourceAsync(IList source) Parameters Type Name Description IList source Returns Type Description Task An item implementing the IList interface. Events | Improve this Doc View Source OpenSelectedItem This event is raised when the user Double Clicks on an item or presses ENTER to open the selected item. Declaration public event EventHandler<ListViewItemEventArgs> OpenSelectedItem Event Type Type Description EventHandler<ListViewItemEventArgs> | Improve this Doc View Source RowRender This event is invoked when this ListView is being drawn before rendering. Declaration public event EventHandler<ListViewRowEventArgs> RowRender Event Type Type Description EventHandler<ListViewRowEventArgs> | Improve this Doc View Source SelectedItemChanged This event is raised when the selected item in the ListView has changed. Declaration public event EventHandler<ListViewItemEventArgs> SelectedItemChanged Event Type Type Description EventHandler<ListViewItemEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ListViewItemEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListViewItemEventArgs.html",
    "title": "Class ListViewItemEventArgs",
    "keywords": "Class ListViewItemEventArgs EventArgs for ListView events. Inheritance object EventArgs ListViewItemEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListViewItemEventArgs : EventArgs Constructors | Improve this Doc View Source ListViewItemEventArgs(int, object) Initializes a new instance of ListViewItemEventArgs Declaration public ListViewItemEventArgs(int item, object value) Parameters Type Name Description int item The index of the ListView item. object value The ListView item Properties | Improve this Doc View Source Item The index of the ListView item. Declaration public int Item { get; } Property Value Type Description int | Improve this Doc View Source Value The ListView item. Declaration public object Value { get; } Property Value Type Description object"
  },
  "api/Terminal.Gui/Terminal.Gui.ListViewRowEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListViewRowEventArgs.html",
    "title": "Class ListViewRowEventArgs",
    "keywords": "Class ListViewRowEventArgs EventArgs used by the RowRender event. Inheritance object EventArgs ListViewRowEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListViewRowEventArgs : EventArgs Constructors | Improve this Doc View Source ListViewRowEventArgs(int) Initializes with the current row. Declaration public ListViewRowEventArgs(int row) Parameters Type Name Description int row Properties | Improve this Doc View Source Row The current row being rendered. Declaration public int Row { get; } Property Value Type Description int | Improve this Doc View Source RowAttribute The Attribute used by current row or null to maintain the current attribute. Declaration public Attribute? RowAttribute { get; set; } Property Value Type Description Attribute?"
  },
  "api/Terminal.Gui/Terminal.Gui.ListWrapper.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ListWrapper.html",
    "title": "Class ListWrapper",
    "keywords": "Class ListWrapper Provides a default implementation of IListDataSource that renders ListView items using ToString(). Inheritance object ListWrapper Implements IListDataSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ListWrapper : IListDataSource Constructors | Improve this Doc View Source ListWrapper(IList) Declaration public ListWrapper(IList source) Parameters Type Name Description IList source Properties | Improve this Doc View Source Count Returns the number of elements to display Declaration public int Count { get; } Property Value Type Description int | Improve this Doc View Source Length Returns the maximum length of elements to display Declaration public int Length { get; } Property Value Type Description int Methods | Improve this Doc View Source IsMarked(int) Should return whether the specified item is currently marked. Declaration public bool IsMarked(int item) Parameters Type Name Description int item Item index. Returns Type Description bool true, if marked, false otherwise. | Improve this Doc View Source Render(ListView, ConsoleDriver, bool, int, int, int, int, int) This method is invoked to render a specified item, the method should cover the entire provided width. Declaration public void Render(ListView container, ConsoleDriver driver, bool marked, int item, int col, int line, int width, int start = 0) Parameters Type Name Description ListView container The list view to render. ConsoleDriver driver The console driver to render. bool marked int item The index of the item to render, zero for the first item and so on. int col The column where the rendering will start int line The line where the rendering will be done. int width The width that must be filled out. int start The index of the string to be displayed. | Improve this Doc View Source SetMark(int, bool) Flags the item as marked. Declaration public void SetMark(int item, bool value) Parameters Type Name Description int item Item index. bool value If set to true value. | Improve this Doc View Source StartsWith(string) Declaration public int StartsWith(string search) Parameters Type Name Description string search Returns Type Description int | Improve this Doc View Source ToList() Return the source as IList. Declaration public IList ToList() Returns Type Description IList Implements IListDataSource"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuBar.html",
    "title": "Class MenuBar",
    "keywords": "Class MenuBar Provides a menu bar that spans the top of a Toplevel View with drop-down and cascading menus. By default, any sub-sub-menus (sub-menus of the MenuItems added to MenuBarItems) are displayed in a cascading manner, where each sub-sub-menu pops out of the sub-menu frame (either to the right or left, depending on where the sub-menu is relative to the edge of the screen). By setting UseSubMenusSingleFrame to true, this behavior can be changed such that all sub-sub-menus are drawn within a single frame below the MenuBar. Inheritance object Responder View MenuBar Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The MenuBar appears on the first row of the parent Toplevel View and uses the full width. The MenuBar provides global hotkeys for the application. See HotKey. See also: ContextMenu Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source MenuBar() Initializes a new instance of the MenuBar. Declaration public MenuBar() | Improve this Doc View Source MenuBar(MenuBarItem[]) Initializes a new instance of the MenuBar class with the specified set of Toplevel menu items. Declaration public MenuBar(MenuBarItem[] menus) Parameters Type Name Description MenuBarItem[] menus Individual menu items; a null item will result in a separator being drawn. Properties | Improve this Doc View Source HotKeySpecifier The specifier character for the hotkey to all menus. Declaration public static Rune HotKeySpecifier { get; } Property Value Type Description Rune | Improve this Doc View Source IsMenuOpen true if the menu is open; otherwise true. Declaration public bool IsMenuOpen { get; protected set; } Property Value Type Description bool | Improve this Doc View Source Key The Key used to activate the menu bar by keyboard. Declaration public Key Key { get; set; } Property Value Type Description Key | Improve this Doc View Source LastFocused Gets the view that was last focused before opening the menu. Declaration public View LastFocused { get; } Property Value Type Description View | Improve this Doc View Source Menus Gets or sets the array of MenuBarItems for the menu. Only set this after the MenuBar is visible. Declaration public MenuBarItem[] Menus { get; set; } Property Value Type Description MenuBarItem[] The menu array. | Improve this Doc View Source MenusBorderStyle The default LineStyle for Menus's border. The default is Single. Declaration public LineStyle MenusBorderStyle { get; set; } Property Value Type Description LineStyle | Improve this Doc View Source ShortcutDelimiter Sets or gets the shortcut delimiter separator. The default is \"+\". Declaration public static Rune ShortcutDelimiter { get; set; } Property Value Type Description Rune | Improve this Doc View Source UseKeysUpDownAsKeysLeftRight Used for change the navigation key style. Declaration public bool UseKeysUpDownAsKeysLeftRight { get; set; } Property Value Type Description bool | Improve this Doc View Source UseSubMenusSingleFrame Gets or sets if the sub-menus must be displayed in a single or multiple frames. By default any sub-sub-menus (sub-menus of the main MenuItems) are displayed in a cascading manner, where each sub-sub-menu pops out of the sub-menu frame (either to the right or left, depending on where the sub-menu is relative to the edge of the screen). By setting UseSubMenusSingleFrame to true, this behavior can be changed such that all sub-sub-menus are drawn within a single frame below the MenuBar. Declaration public bool UseSubMenusSingleFrame { get; set; } Property Value Type Description bool | Improve this Doc View Source Visible Gets or sets a value indicating whether this Responder and all its child controls are displayed. Declaration public override bool Visible { get; set; } Property Value Type Description bool Overrides View.Visible Methods | Improve this Doc View Source CloseMenu(bool) Closes the Menu programmatically if open and not canceled (as though F9 were pressed). Declaration public bool CloseMenu(bool ignoreUseSubMenusSingleFrame = false) Parameters Type Name Description bool ignoreUseSubMenusSingleFrame Returns Type Description bool | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnInvokeKeyBindings(KeyEventArgs) Low-level API called when a key is pressed to invoke any key bindings set on the view. This is called after OnKeyPressed(KeyEventArgs). Fires the InvokingKeyBindings event. Declaration public override bool OnInvokeKeyBindings(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnInvokeKeyBindings(KeyEventArgs) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnKeyUp(KeyEventArgs) Method invoked when a key is released. This method will be called after OnKeyPressed(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public override bool OnKeyUp(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. Overrides View.OnKeyUp(KeyEventArgs) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnMenuAllClosed() Virtual method that will invoke the MenuAllClosed. Declaration public virtual void OnMenuAllClosed() | Improve this Doc View Source OnMenuClosing(MenuBarItem, bool, bool) Virtual method that will invoke the MenuClosing. Declaration public virtual MenuClosingEventArgs OnMenuClosing(MenuBarItem currentMenu, bool reopen, bool isSubMenu) Parameters Type Name Description MenuBarItem currentMenu The current menu to be closed. bool reopen Whether the current menu will be reopen. bool isSubMenu Whether is a sub-menu or not. Returns Type Description MenuClosingEventArgs | Improve this Doc View Source OnMenuOpened() Virtual method that will invoke the MenuOpened event if it's defined. Declaration public virtual void OnMenuOpened() | Improve this Doc View Source OnMenuOpening(MenuBarItem) Virtual method that will invoke the MenuOpening event if it's defined. Declaration public virtual MenuOpeningEventArgs OnMenuOpening(MenuBarItem currentMenu) Parameters Type Name Description MenuBarItem currentMenu The current menu to be replaced. Returns Type Description MenuOpeningEventArgs Returns the MenuOpeningEventArgs | Improve this Doc View Source OpenMenu() Opens the Menu programatically, as though the F9 key were pressed. Declaration public void OpenMenu() | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() Events | Improve this Doc View Source MenuAllClosed Raised when all the menu is closed. Declaration public event EventHandler MenuAllClosed Event Type Type Description EventHandler | Improve this Doc View Source MenuClosing Raised when a menu is closing passing MenuClosingEventArgs. Declaration public event EventHandler<MenuClosingEventArgs> MenuClosing Event Type Type Description EventHandler<MenuClosingEventArgs> | Improve this Doc View Source MenuOpened Raised when a menu is opened. Declaration public event EventHandler<MenuOpenedEventArgs> MenuOpened Event Type Type Description EventHandler<MenuOpenedEventArgs> | Improve this Doc View Source MenuOpening Raised as a menu is opening. Declaration public event EventHandler<MenuOpeningEventArgs> MenuOpening Event Type Type Description EventHandler<MenuOpeningEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuBarItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuBarItem.html",
    "title": "Class MenuBarItem",
    "keywords": "Class MenuBarItem MenuBarItem is a menu item on an app's MenuBar. MenuBarItems do not support Shortcut. Inheritance object MenuItem MenuBarItem Inherited Members MenuItem.Data MenuItem.HotKey MenuItem.Shortcut MenuItem.ShortcutTag MenuItem.Title MenuItem.Help MenuItem.Action MenuItem.CanExecute MenuItem.IsEnabled() MenuItem.Checked MenuItem.AllowNullChecked MenuItem.CheckType MenuItem.Parent MenuItem.GetMenuItem() MenuItem.GetMenuBarItem() MenuItem.ToggleChecked() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuBarItem : MenuItem Constructors | Improve this Doc View Source MenuBarItem() Initializes a new MenuBarItem. Declaration public MenuBarItem() | Improve this Doc View Source MenuBarItem(string, List<MenuItem[]>, MenuItem) Initializes a new MenuBarItem with separate list of items. Declaration public MenuBarItem(string title, List<MenuItem[]> children, MenuItem parent = null) Parameters Type Name Description string title Title for the menu item. List<MenuItem[]> children The list of items in the current menu. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(string, string, Action, Func<bool>, MenuItem) Initializes a new MenuBarItem as a MenuItem. Declaration public MenuBarItem(string title, string help, Action action, Func<bool> canExecute = null, MenuItem parent = null) Parameters Type Name Description string title Title for the menu item. string help Help text to display. Will be displayed next to the Title surrounded by parentheses. Action action Action to invoke when the menu item is activated. Func<bool> canExecute Function to determine if the action can currently be executed. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(string, MenuItem[], MenuItem) Initializes a new MenuBarItem. Declaration public MenuBarItem(string title, MenuItem[] children, MenuItem parent = null) Parameters Type Name Description string title Title for the menu item. MenuItem[] children The items in the current menu. MenuItem parent The parent MenuItem of this if exist, otherwise is null. | Improve this Doc View Source MenuBarItem(MenuItem[]) Initializes a new MenuBarItem. Declaration public MenuBarItem(MenuItem[] children) Parameters Type Name Description MenuItem[] children The items in the current menu. Properties | Improve this Doc View Source Children Gets or sets an array of MenuItem objects that are the children of this MenuBarItem Declaration public MenuItem[] Children { get; set; } Property Value Type Description MenuItem[] The children. Methods | Improve this Doc View Source GetChildrenIndex(MenuItem) Get the index of the MenuItem parameter. Declaration public int GetChildrenIndex(MenuItem children) Parameters Type Name Description MenuItem children Returns Type Description int Returns a value bigger than -1 if the MenuItem is a child of this. | Improve this Doc View Source IsSubMenuOf(MenuItem) Check if the MenuItem parameter is a child of this. Declaration public bool IsSubMenuOf(MenuItem menuItem) Parameters Type Name Description MenuItem menuItem Returns Type Description bool Returns true if it is a child of this. false otherwise. | Improve this Doc View Source SubMenu(MenuItem) Check if the children parameter is a MenuBarItem. Declaration public MenuBarItem SubMenu(MenuItem children) Parameters Type Name Description MenuItem children Returns Type Description MenuBarItem Returns a MenuBarItem or null otherwise."
  },
  "api/Terminal.Gui/Terminal.Gui.MenuClosingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuClosingEventArgs.html",
    "title": "Class MenuClosingEventArgs",
    "keywords": "Class MenuClosingEventArgs An EventArgs which allows passing a cancelable menu closing event. Inheritance object EventArgs MenuClosingEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuClosingEventArgs : EventArgs Constructors | Improve this Doc View Source MenuClosingEventArgs(MenuBarItem, bool, bool) Initializes a new instance of MenuClosingEventArgs. Declaration public MenuClosingEventArgs(MenuBarItem currentMenu, bool reopen, bool isSubMenu) Parameters Type Name Description MenuBarItem currentMenu The current MenuBarItem parent. bool reopen Whether the current menu will reopen. bool isSubMenu Indicates whether it is a sub-menu. Properties | Improve this Doc View Source Cancel Flag that allows the cancellation of the event. If set to true in the event handler, the event will be canceled. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source CurrentMenu The current MenuBarItem parent. Declaration public MenuBarItem CurrentMenu { get; } Property Value Type Description MenuBarItem | Improve this Doc View Source IsSubMenu Indicates whether the current menu is a sub-menu. Declaration public bool IsSubMenu { get; } Property Value Type Description bool | Improve this Doc View Source Reopen Indicates whether the current menu will reopen. Declaration public bool Reopen { get; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuItem.html",
    "title": "Class MenuItem",
    "keywords": "Class MenuItem A MenuItem has title, an associated help text, and an action to execute on activation. MenuItems can also have a checked indicator (see Checked). Inheritance object MenuItem MenuBarItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuItem Constructors | Improve this Doc View Source MenuItem(string, string, Action, Func<bool>, MenuItem, Key) Initializes a new instance of MenuItem. Declaration public MenuItem(string title, string help, Action action, Func<bool> canExecute = null, MenuItem parent = null, Key shortcut = Key.Null) Parameters Type Name Description string title Title for the menu item. string help Help text to display. Action action Action to invoke when the menu item is activated. Func<bool> canExecute Function to determine if the action can currently be executed. MenuItem parent The Parent of this menu item. Key shortcut The Shortcut keystroke combination. | Improve this Doc View Source MenuItem(Key) Initializes a new instance of MenuItem Declaration public MenuItem(Key shortcut = Key.Null) Parameters Type Name Description Key shortcut Properties | Improve this Doc View Source Action Gets or sets the action to be invoked when the menu item is triggered. Declaration public Action Action { get; set; } Property Value Type Description Action Method to invoke. | Improve this Doc View Source AllowNullChecked Used only if CheckType is of Checked type. If true allows Checked to be null, true or false. If false only allows Checked to be true or false. Declaration public bool AllowNullChecked { get; set; } Property Value Type Description bool | Improve this Doc View Source CanExecute Gets or sets the action to be invoked to determine if the menu can be triggered. If CanExecute returns true the menu item will be enabled. Otherwise, it will be disabled. Declaration public Func<bool> CanExecute { get; set; } Property Value Type Description Func<bool> Function to determine if the action is can be executed or not. | Improve this Doc View Source Checked Sets or gets whether the MenuItem shows a check indicator or not. See MenuItemCheckStyle. Declaration public bool? Checked { get; set; } Property Value Type Description bool? | Improve this Doc View Source CheckType Sets or gets the MenuItemCheckStyle of a menu item where Checked is set to true. Declaration public MenuItemCheckStyle CheckType { get; set; } Property Value Type Description MenuItemCheckStyle | Improve this Doc View Source Data Gets or sets arbitrary data for the menu item. Declaration public object Data { get; set; } Property Value Type Description object | Improve this Doc View Source Help Gets or sets the help text for the menu item. The help text is drawn to the right of the Title. Declaration public string Help { get; set; } Property Value Type Description string The help text. | Improve this Doc View Source HotKey The HotKey is used to activate a MenuItem with the keyboard. HotKeys are defined by prefixing the Title of a MenuItem with an underscore ('_'). Pressing Alt-Hotkey for a MenuBarItem (menu items on the menu bar) works even if the menu is not active). Once a menu has focus and is active, pressing just the HotKey will activate the MenuItem. For example for a MenuBar with a \"_File\" MenuBarItem that contains a \"_New\" MenuItem, Alt-F will open the File menu. Pressing the N key will then activate the New MenuItem. See also Shortcut which enable global key-bindings to menu items. Declaration public Rune HotKey { get; set; } Property Value Type Description Rune | Improve this Doc View Source Parent Gets the parent for this MenuItem. Declaration public MenuItem Parent { get; set; } Property Value Type Description MenuItem The parent. | Improve this Doc View Source Shortcut Shortcut defines a key binding to the MenuItem that will invoke the MenuItem's action globally for the View that is the parent of the MenuBar or ContextMenu this MenuItem. The Key will be drawn on the MenuItem to the right of the Title and Help text. See ShortcutTag. Declaration public Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source ShortcutTag Gets the text describing the keystroke combination defined by Shortcut. Declaration public string ShortcutTag { get; } Property Value Type Description string | Improve this Doc View Source Title Gets or sets the title of the menu item . Declaration public string Title { get; set; } Property Value Type Description string The title. Methods | Improve this Doc View Source GetMenuBarItem() Merely a debugging aid to see the interaction with main. Declaration public bool GetMenuBarItem() Returns Type Description bool | Improve this Doc View Source GetMenuItem() Merely a debugging aid to see the interaction with main. Declaration public MenuItem GetMenuItem() Returns Type Description MenuItem | Improve this Doc View Source IsEnabled() Returns true if the menu item is enabled. This method is a wrapper around CanExecute. Declaration public bool IsEnabled() Returns Type Description bool | Improve this Doc View Source ToggleChecked() Toggle the Checked between three states if AllowNullChecked is true or between two states if AllowNullChecked is false. Declaration public void ToggleChecked()"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuItemCheckStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuItemCheckStyle.html",
    "title": "Enum MenuItemCheckStyle",
    "keywords": "Enum MenuItemCheckStyle Specifies how a MenuItem shows selection state. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [Flags] public enum MenuItemCheckStyle Fields Name Description Checked The menu item will indicate checked/un-checked state (see Checked). NoCheck The menu item will be shown normally, with no check indicator. The default. Radio The menu item is part of a menu radio group (see Checked) and will indicate selected state."
  },
  "api/Terminal.Gui/Terminal.Gui.MenuOpenedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuOpenedEventArgs.html",
    "title": "Class MenuOpenedEventArgs",
    "keywords": "Class MenuOpenedEventArgs Defines arguments for the MenuOpened event Inheritance object EventArgs MenuOpenedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuOpenedEventArgs : EventArgs Constructors | Improve this Doc View Source MenuOpenedEventArgs(MenuBarItem, MenuItem) Creates a new instance of the MenuOpenedEventArgs class Declaration public MenuOpenedEventArgs(MenuBarItem parent, MenuItem menuItem) Parameters Type Name Description MenuBarItem parent MenuItem menuItem Properties | Improve this Doc View Source MenuItem Gets the MenuItem being opened. Declaration public MenuItem MenuItem { get; } Property Value Type Description MenuItem | Improve this Doc View Source Parent The parent of MenuItem. Will be null if menu opening is the root. Declaration public MenuBarItem Parent { get; } Property Value Type Description MenuBarItem"
  },
  "api/Terminal.Gui/Terminal.Gui.MenuOpeningEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MenuOpeningEventArgs.html",
    "title": "Class MenuOpeningEventArgs",
    "keywords": "Class MenuOpeningEventArgs An EventArgs which allows passing a cancelable menu opening event or replacing with a new MenuBarItem. Inheritance object EventArgs MenuOpeningEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MenuOpeningEventArgs : EventArgs Constructors | Improve this Doc View Source MenuOpeningEventArgs(MenuBarItem) Initializes a new instance of MenuOpeningEventArgs. Declaration public MenuOpeningEventArgs(MenuBarItem currentMenu) Parameters Type Name Description MenuBarItem currentMenu The current MenuBarItem parent. Properties | Improve this Doc View Source Cancel Flag that allows the cancellation of the event. If set to true in the event handler, the event will be canceled. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source CurrentMenu The current MenuBarItem parent. Declaration public MenuBarItem CurrentMenu { get; } Property Value Type Description MenuBarItem | Improve this Doc View Source NewMenuBarItem The new MenuBarItem to be replaced. Declaration public MenuBarItem NewMenuBarItem { get; set; } Property Value Type Description MenuBarItem"
  },
  "api/Terminal.Gui/Terminal.Gui.MessageBox.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MessageBox.html",
    "title": "Class MessageBox",
    "keywords": "Class MessageBox MessageBox displays a modal message to the user, with a title, a message and a series of options that the user can choose from. Inheritance object MessageBox Examples var n = MessageBox.Query (\"Quit Demo\", \"Are you sure you want to quit this demo?\", \"Yes\", \"No\"); if (n == 0) quit = true; else quit = false; Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class MessageBox Properties | Improve this Doc View Source Clicked The index of the selected button, or -1 if the user pressed ESC to close the dialog. This is useful for web based console where by default there is no SynchronizationContext or TaskScheduler. Declaration public static int Clicked { get; } Property Value Type Description int | Improve this Doc View Source DefaultBorderStyle Defines the default border styling for Dialog. Can be configured via ConfigurationManager. Declaration public static LineStyle DefaultBorderStyle { get; set; } Property Value Type Description LineStyle Methods | Improve this Doc View Source ErrorQuery(int, int, string, string, int, bool, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, string title, string message, int defaultButton = 0, bool wrapMessagge = true, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. bool wrapMessagge If wrap the message or not. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(int, int, string, string, int, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, string title, string message, int defaultButton = 0, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(int, int, string, string, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(int width, int height, string title, string message, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(string, string, int, bool, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(string title, string message, int defaultButton = 0, bool wrapMessagge = true, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. bool wrapMessagge If wrap the message or not. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(string, string, int, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(string title, string message, int defaultButton = 0, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source ErrorQuery(string, string, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int ErrorQuery(string title, string message, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(int, int, string, string, int, bool, params string[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, string title, string message, int defaultButton = 0, bool wrapMessagge = true, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. bool wrapMessagge If wrap the message or not. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(int, int, string, string, int, params string[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, string title, string message, int defaultButton = 0, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(int, int, string, string, params string[]) Presents a normal MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(int width, int height, string title, string message, params string[] buttons) Parameters Type Name Description int width Width for the window. int height Height for the window. string title Title for the query. string message Message to display, might contain multiple lines. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(string, string, int, bool, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(string title, string message, int defaultButton = 0, bool wrapMessage = true, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. bool wrapMessage If wrap the message or not. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(string, string, int, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(string title, string message, int defaultButton = 0, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. int defaultButton Index of the default button. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog. | Improve this Doc View Source Query(string, string, params string[]) Presents an error MessageBox with the specified title and message and a list of buttons to show to the user. Declaration public static int Query(string title, string message, params string[] buttons) Parameters Type Name Description string title Title for the query. string message Message to display, might contain multiple lines. string[] buttons Array of buttons to add. Returns Type Description int The index of the selected button, or -1 if the user pressed ESC to close the dialog."
  },
  "api/Terminal.Gui/Terminal.Gui.MouseEvent.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseEvent.html",
    "title": "Class MouseEvent",
    "keywords": "Class MouseEvent Low-level construct that conveys the details of mouse events, such as coordinates and button state, from ConsoleDrivers up to Application and Views. Inheritance object MouseEvent Remarks The Application class includes the MouseEvent Action which takes a MouseEvent argument. Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MouseEvent Properties | Improve this Doc View Source Flags Flags indicating the kind of mouse event that is being posted. Declaration public MouseFlags Flags { get; set; } Property Value Type Description MouseFlags | Improve this Doc View Source Handled Indicates if the current mouse event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description bool | Improve this Doc View Source OfX The offset X (column) location for the mouse event. Declaration public int OfX { get; set; } Property Value Type Description int | Improve this Doc View Source OfY The offset Y (column) location for the mouse event. Declaration public int OfY { get; set; } Property Value Type Description int | Improve this Doc View Source View The current view at the location for the mouse event. Declaration public View View { get; set; } Property Value Type Description View | Improve this Doc View Source X The X (column) location for the mouse event. Declaration public int X { get; set; } Property Value Type Description int | Improve this Doc View Source Y The Y (column) location for the mouse event. Declaration public int Y { get; set; } Property Value Type Description int Methods | Improve this Doc View Source ToString() Returns a string that represents the current MouseEvent. Declaration public override string ToString() Returns Type Description string A string that represents the current MouseEvent. Overrides object.ToString()"
  },
  "api/Terminal.Gui/Terminal.Gui.MouseEventEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseEventEventArgs.html",
    "title": "Class MouseEventEventArgs",
    "keywords": "Class MouseEventEventArgs Specifies the event arguments for MouseEvent. This is a higher-level construct than the wrapped MouseEvent class and is used for the events defined on View and subclasses of View (e.g. MouseEnter and MouseClick). Inheritance object EventArgs MouseEventEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MouseEventEventArgs : EventArgs Constructors | Improve this Doc View Source MouseEventEventArgs(MouseEvent) Constructs. Declaration public MouseEventEventArgs(MouseEvent me) Parameters Type Name Description MouseEvent me The mouse event. Properties | Improve this Doc View Source Handled Indicates if the current mouse event has already been processed and the driver should stop notifying any other event subscriber. Its important to set this value to true specially when updating any View's layout from inside the subscriber method. Declaration public bool Handled { get; set; } Property Value Type Description bool | Improve this Doc View Source MouseEvent The MouseEvent for the event. Declaration public MouseEvent MouseEvent { get; set; } Property Value Type Description MouseEvent"
  },
  "api/Terminal.Gui/Terminal.Gui.MouseFlags.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseFlags.html",
    "title": "Enum MouseFlags",
    "keywords": "Enum MouseFlags Mouse flags reported in MouseEvent. Remarks They just happen to map to the ncurses ones. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [Flags] public enum MouseFlags Fields Name Description AllEvents Mask that captures all the events. Button1Clicked The first mouse button was clicked (press+release). Button1DoubleClicked The first mouse button was double-clicked. Button1Pressed The first mouse button was pressed. Button1Released The first mouse button was released. Button1TripleClicked The first mouse button was triple-clicked. Button2Clicked The second mouse button was clicked (press+release). Button2DoubleClicked The second mouse button was double-clicked. Button2Pressed The second mouse button was pressed. Button2Released The second mouse button was released. Button2TripleClicked The second mouse button was triple-clicked. Button3Clicked The third mouse button was clicked (press+release). Button3DoubleClicked The third mouse button was double-clicked. Button3Pressed The third mouse button was pressed. Button3Released The third mouse button was released. Button3TripleClicked The third mouse button was triple-clicked. Button4Clicked The fourth button was clicked (press+release). Button4DoubleClicked The fourth button was double-clicked. Button4Pressed The fourth mouse button was pressed. Button4Released The fourth mouse button was released. Button4TripleClicked The fourth button was triple-clicked. ButtonAlt Flag: the alt key was pressed when the mouse button took place. ButtonCtrl Flag: the ctrl key was pressed when the mouse button took place. ButtonShift Flag: the shift key was pressed when the mouse button took place. ReportMousePosition The mouse position is being reported in this event. WheeledDown Vertical button wheeled down. WheeledLeft Vertical button wheeled up while pressing ButtonShift. WheeledRight Vertical button wheeled down while pressing ButtonShift. WheeledUp Vertical button wheeled up."
  },
  "api/Terminal.Gui/Terminal.Gui.MouseFlagsChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MouseFlagsChangedEventArgs.html",
    "title": "Class MouseFlagsChangedEventArgs",
    "keywords": "Class MouseFlagsChangedEventArgs Args for events that describe a change in MouseFlags Inheritance object EventArgs MouseFlagsChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MouseFlagsChangedEventArgs : EventArgs Constructors | Improve this Doc View Source MouseFlagsChangedEventArgs(MouseFlags, MouseFlags) Creates a new instance of the MouseFlagsChangedEventArgs class. Declaration public MouseFlagsChangedEventArgs(MouseFlags oldValue, MouseFlags newValue) Parameters Type Name Description MouseFlags oldValue MouseFlags newValue Properties | Improve this Doc View Source NewValue The new value Declaration public MouseFlags NewValue { get; } Property Value Type Description MouseFlags | Improve this Doc View Source OldValue The old value before event Declaration public MouseFlags OldValue { get; } Property Value Type Description MouseFlags"
  },
  "api/Terminal.Gui/Terminal.Gui.MultiBarSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.MultiBarSeries.html",
    "title": "Class MultiBarSeries",
    "keywords": "Class MultiBarSeries Collection of BarSeries in which bars are clustered by category Inheritance object MultiBarSeries Implements ISeries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class MultiBarSeries : ISeries Constructors | Improve this Doc View Source MultiBarSeries(int, float, float, Attribute[]?) Creates a new series of clustered bars. Declaration public MultiBarSeries(int numberOfBarsPerCategory, float barsEvery, float spacing, Attribute[]? colors = null) Parameters Type Name Description int numberOfBarsPerCategory Each category has this many bars float barsEvery How far appart to put each category (in graph space) float spacing How much spacing between bars in a category (should be less than barsEvery/numberOfBarsPerCategory) Attribute[] colors Array of colors that define bar color in each category. Length must match numberOfBarsPerCategory Properties | Improve this Doc View Source Spacing The number of units of graph space between bars. Should be less than BarEvery Declaration public float Spacing { get; } Property Value Type Description float | Improve this Doc View Source SubSeries Sub collections. Each series contains the bars for a different category. Thus SubSeries[0].Bars[0] is the first bar on the axis and SubSeries[1].Bars[0] is the second etc Declaration public IReadOnlyCollection<BarSeries> SubSeries { get; } Property Value Type Description IReadOnlyCollection<BarSeries> Methods | Improve this Doc View Source AddBars(string, Rune, params float[]) Adds a new cluster of bars Declaration public void AddBars(string label, Rune fill, params float[] values) Parameters Type Name Description string label Rune fill float[] values Values for each bar in category, must match the number of bars per category | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws all SubSeries Declaration public void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds RectangleF graphBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.ObjectActivatedEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ObjectActivatedEventArgs-1.html",
    "title": "Class ObjectActivatedEventArgs<T>",
    "keywords": "Class ObjectActivatedEventArgs<T> Event args for the ObjectActivated event Inheritance object ObjectActivatedEventArgs<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ObjectActivatedEventArgs<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source ObjectActivatedEventArgs(TreeView<T>, T) Creates a new instance documenting activation of the activated object Declaration public ObjectActivatedEventArgs(TreeView<T> tree, T activated) Parameters Type Name Description TreeView<T> tree Tree in which the activation is happening T activated What object is being activated Properties | Improve this Doc View Source ActivatedObject The object that was selected at the time of activation Declaration public T ActivatedObject { get; } Property Value Type Description T | Improve this Doc View Source Tree The tree in which the activation occurred Declaration public TreeView<T> Tree { get; } Property Value Type Description TreeView<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.OpenDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.OpenDialog.html",
    "title": "Class OpenDialog",
    "keywords": "Class OpenDialog The OpenDialogprovides an interactive dialog box for users to select files or directories. Inheritance object Responder View Toplevel Window Dialog FileDialog OpenDialog Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The open dialog can be used to select files for opening, it can be configured to allow multiple items to be selected (based on the AllowsMultipleSelection) variable and you can control whether this should allow files or directories to be selected. To use, create an instance of OpenDialog, and pass it to Run(Func<Exception, bool>). This will run the dialog modally, and when this returns, the list of files will be available on the FilePaths property. To select more than one file, users can use the spacebar, or control-t. Inherited Members FileDialog.Style FileDialog.MaxSearchResults FileDialog.MustExist FileDialog.CurrentFilter FileDialog.FilesSelected FileDialog.FileOperationsHandler FileDialog.Dispose(bool) FileDialog.OpenMode FileDialog.Path FileDialog.SearchMatcher FileDialog.AllowsMultipleSelection FileDialog.AllowedTypes FileDialog.Canceled FileDialog.MultiSelected FileDialog.OnDrawContent(Rect) FileDialog.OnLoaded() FileDialog.GetDefaultTitle() FileDialog.IsCompatibleWithAllowedExtensions(IFileInfo) Dialog.DefaultButtonAlignment Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.OnKeyPressed(KeyEventArgs) Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class OpenDialog : FileDialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source OpenDialog() Initializes a new OpenDialog. Declaration public OpenDialog() | Improve this Doc View Source OpenDialog(string, List<IAllowedType>, OpenMode) Initializes a new OpenDialog. Declaration public OpenDialog(string title, List<IAllowedType> allowedTypes = null, OpenMode openMode = OpenMode.File) Parameters Type Name Description string title The title. List<IAllowedType> allowedTypes The allowed types. OpenMode openMode The open mode. Properties | Improve this Doc View Source FilePaths Returns the selected files, or an empty list if nothing has been selected Declaration public IReadOnlyList<string> FilePaths { get; } Property Value Type Description IReadOnlyList<string> The file paths. Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.OpenMode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.OpenMode.html",
    "title": "Enum OpenMode",
    "keywords": "Enum OpenMode Determine which System.IO type to open. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum OpenMode Fields Name Description Directory Opens only directory or directories. File Opens only file or files. Mixed Opens files and directories."
  },
  "api/Terminal.Gui/Terminal.Gui.Orientation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Orientation.html",
    "title": "Enum Orientation",
    "keywords": "Enum Orientation Direction of an element (horizontal or vertical) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum Orientation Fields Name Description Horizontal Left to right Vertical Bottom to top"
  },
  "api/Terminal.Gui/Terminal.Gui.OrientationEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.OrientationEventArgs.html",
    "title": "Class OrientationEventArgs",
    "keywords": "Class OrientationEventArgs EventArgs for Orientation events. Inheritance object EventArgs OrientationEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class OrientationEventArgs : EventArgs Constructors | Improve this Doc View Source OrientationEventArgs(Orientation) Constructs a new instance. Declaration public OrientationEventArgs(Orientation orientation) Parameters Type Name Description Orientation orientation the new orientation Properties | Improve this Doc View Source Cancel If set to true, the orientation change operation will be canceled, if applicable. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Orientation The new orientation. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation"
  },
  "api/Terminal.Gui/Terminal.Gui.PathAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PathAnnotation.html",
    "title": "Class PathAnnotation",
    "keywords": "Class PathAnnotation Sequence of lines to connect points e.g. of a ScatterSeries Inheritance object PathAnnotation Implements IAnnotation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class PathAnnotation : IAnnotation Properties | Improve this Doc View Source BeforeSeries True to add line before plotting series. Defaults to false Declaration public bool BeforeSeries { get; set; } Property Value Type Description bool | Improve this Doc View Source LineColor Color for the line that connects points Declaration public Attribute? LineColor { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source LineRune The symbol that gets drawn along the line, defaults to '.' Declaration public Rune LineRune { get; set; } Property Value Type Description Rune | Improve this Doc View Source Points Points that should be connected. Lines will be drawn between points in the order they appear in the list Declaration public List<PointF> Points { get; set; } Property Value Type Description List<PointF> Methods | Improve this Doc View Source Render(GraphView) Draws lines connecting each of the Points Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.Point.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Point.html",
    "title": "Struct Point",
    "keywords": "Struct Point Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane. Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct Point Constructors | Improve this Doc View Source Point(int, int) Point Constructor Declaration public Point(int x, int y) Parameters Type Name Description int x int y | Improve this Doc View Source Point(Size) Point Constructor Declaration public Point(Size sz) Parameters Type Name Description Size sz Fields | Improve this Doc View Source Empty Empty Shared Field Declaration public static readonly Point Empty Field Value Type Description Point | Improve this Doc View Source X Gets or sets the x-coordinate of this Point. Declaration [JsonInclude] public int X Field Value Type Description int | Improve this Doc View Source Y Gets or sets the y-coordinate of this Point. Declaration [JsonInclude] public int Y Field Value Type Description int Properties | Improve this Doc View Source IsEmpty IsEmpty Property Declaration [JsonIgnore] public bool IsEmpty { get; } Property Value Type Description bool Methods | Improve this Doc View Source Add(Point, Size) Adds the specified Size to the specified Point. Declaration public static Point Add(Point pt, Size sz) Parameters Type Name Description Point pt The Point to add. Size sz The Size to add. Returns Type Description Point The Point that is the result of the addition operation. | Improve this Doc View Source Equals(object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Offset(int, int) Offset Method Declaration public void Offset(int dx, int dy) Parameters Type Name Description int dx int dy | Improve this Doc View Source Offset(Point) Translates this Point by the specified Point. Declaration public void Offset(Point p) Parameters Type Name Description Point p The Point used offset this Point. | Improve this Doc View Source Subtract(Point, Size) Returns the result of subtracting specified Size from the specified Point. Declaration public static Point Subtract(Point pt, Size sz) Parameters Type Name Description Point pt The Point to be subtracted from. Size sz The Size to subtract from the Point. Returns Type Description Point The Point that is the result of the subtraction operation. | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators | Improve this Doc View Source operator +(Point, Size) Addition Operator Declaration public static Point operator +(Point pt, Size sz) Parameters Type Name Description Point pt Size sz Returns Type Description Point | Improve this Doc View Source operator ==(Point, Point) Equality Operator Declaration public static bool operator ==(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description bool | Improve this Doc View Source explicit operator Size(Point) Point to Size Conversion Declaration public static explicit operator Size(Point p) Parameters Type Name Description Point p Returns Type Description Size | Improve this Doc View Source operator !=(Point, Point) Inequality Operator Declaration public static bool operator !=(Point left, Point right) Parameters Type Name Description Point left Point right Returns Type Description bool | Improve this Doc View Source operator -(Point, Size) Subtraction Operator Declaration public static Point operator -(Point pt, Size sz) Parameters Type Name Description Point pt Size sz Returns Type Description Point"
  },
  "api/Terminal.Gui/Terminal.Gui.PointEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PointEventArgs.html",
    "title": "Class PointEventArgs",
    "keywords": "Class PointEventArgs Event args for events which relate to a single Point Inheritance object EventArgs PointEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class PointEventArgs : EventArgs Constructors | Improve this Doc View Source PointEventArgs(Point) Creates a new instance of the PointEventArgs class Declaration public PointEventArgs(Point p) Parameters Type Name Description Point p Properties | Improve this Doc View Source Point The point the event happened at Declaration public Point Point { get; } Property Value Type Description Point"
  },
  "api/Terminal.Gui/Terminal.Gui.PointF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PointF.html",
    "title": "Struct PointF",
    "keywords": "Struct PointF Represents an ordered pair of x and y coordinates that define a point in a two-dimensional plane. Implements IEquatable<PointF> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct PointF : IEquatable<PointF> Constructors | Improve this Doc View Source PointF(float, float) Initializes a new instance of the PointF class with the specified coordinates. Declaration public PointF(float x, float y) Parameters Type Name Description float x float y Fields | Improve this Doc View Source Empty Creates a new instance of the PointF class with member data left uninitialized. Declaration public static readonly PointF Empty Field Value Type Description PointF Properties | Improve this Doc View Source IsEmpty Gets a value indicating whether this PointF is empty. Declaration [Browsable(false)] public bool IsEmpty { get; } Property Value Type Description bool | Improve this Doc View Source X Gets the x-coordinate of this PointF. Declaration public float X { get; set; } Property Value Type Description float | Improve this Doc View Source Y Gets the y-coordinate of this PointF. Declaration public float Y { get; set; } Property Value Type Description float Methods | Improve this Doc View Source Add(PointF, Size) Translates a PointF by a given Size . Declaration public static PointF Add(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Add(PointF, SizeF) Translates a PointF by a given SizeF . Declaration public static PointF Add(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source Equals(object) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source Equals(PointF) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public bool Equals(PointF other) Parameters Type Name Description PointF other Returns Type Description bool | Improve this Doc View Source GetHashCode() Generates a hashcode from the X and Y components Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Subtract(PointF, Size) Translates a PointF by the negative of a given Size . Declaration public static PointF Subtract(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source Subtract(PointF, SizeF) Translates a PointF by the negative of a given SizeF . Declaration public static PointF Subtract(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source ToString() Returns a string including the X and Y values Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators | Improve this Doc View Source operator +(PointF, Size) Translates a PointF by a given Size . Declaration public static PointF operator +(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source operator +(PointF, SizeF) Translates a PointF by a given SizeF . Declaration public static PointF operator +(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF | Improve this Doc View Source operator ==(PointF, PointF) Compares two PointF objects. The result specifies whether the values of the X and Y properties of the two PointF objects are equal. Declaration public static bool operator ==(PointF left, PointF right) Parameters Type Name Description PointF left PointF right Returns Type Description bool | Improve this Doc View Source operator !=(PointF, PointF) Compares two PointF objects. The result specifies whether the values of the X or Y properties of the two PointF objects are unequal. Declaration public static bool operator !=(PointF left, PointF right) Parameters Type Name Description PointF left PointF right Returns Type Description bool | Improve this Doc View Source operator -(PointF, Size) Translates a PointF by the negative of a given Size . Declaration public static PointF operator -(PointF pt, Size sz) Parameters Type Name Description PointF pt Size sz Returns Type Description PointF | Improve this Doc View Source operator -(PointF, SizeF) Translates a PointF by the negative of a given SizeF . Declaration public static PointF operator -(PointF pt, SizeF sz) Parameters Type Name Description PointF pt SizeF sz Returns Type Description PointF Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.PopupAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.PopupAutocomplete.html",
    "title": "Class PopupAutocomplete",
    "keywords": "Class PopupAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. Inheritance object AutocompleteBase PopupAutocomplete TextFieldAutocomplete TextViewAutocomplete Implements IAutocomplete Inherited Members AutocompleteBase.PopupInsideContainer AutocompleteBase.SuggestionGenerator AutocompleteBase.MaxWidth AutocompleteBase.MaxHeight AutocompleteBase.Visible AutocompleteBase.Suggestions AutocompleteBase.SelectedIdx AutocompleteBase.SelectionKey AutocompleteBase.CloseKey AutocompleteBase.Reopen AutocompleteBase.Context AutocompleteBase.ClearSuggestions() AutocompleteBase.GenerateSuggestions(AutocompleteContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class PopupAutocomplete : AutocompleteBase, IAutocomplete Constructors | Improve this Doc View Source PopupAutocomplete() Creates a new instance of the PopupAutocomplete class. Declaration public PopupAutocomplete() Properties | Improve this Doc View Source ColorScheme The colors to use to render the overlay. Accessing this property before the Application has been initialized will cause an error Declaration public override ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme Overrides AutocompleteBase.ColorScheme | Improve this Doc View Source HostControl The host control to handle. Declaration public override View HostControl { get; set; } Property Value Type Description View Overrides AutocompleteBase.HostControl | Improve this Doc View Source ScrollOffset When more suggestions are available than can be rendered the user can scroll down the dropdown list. This indicates how far down they have gone Declaration public virtual int ScrollOffset { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Close() Closes the Autocomplete context menu if it is showing and ClearSuggestions() Declaration protected void Close() | Improve this Doc View Source DeleteTextBackwards() Deletes the text backwards before insert the selected text in the HostControl. Declaration protected abstract void DeleteTextBackwards() | Improve this Doc View Source EnsureSelectedIdxIsValid() Updates SelectedIdx to be a valid index within Suggestions Declaration public override void EnsureSelectedIdxIsValid() Overrides AutocompleteBase.EnsureSelectedIdxIsValid() | Improve this Doc View Source InsertSelection(Suggestion) Called when the user confirms a selection at the current cursor location in the HostControl. The accepted string is the full autocomplete word to be inserted. Typically a host will have to remove some characters such that the accepted string completes the word instead of simply being appended. Declaration protected virtual bool InsertSelection(Suggestion accepted) Parameters Type Name Description Suggestion accepted Returns Type Description bool True if the insertion was possible otherwise false | Improve this Doc View Source InsertText(string) Insert the selected text in the HostControl. Declaration protected abstract void InsertText(string accepted) Parameters Type Name Description string accepted | Improve this Doc View Source MouseEvent(MouseEvent, bool) Handle mouse events before HostControl e.g. to make mouse events like report/click apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public override bool MouseEvent(MouseEvent me, bool fromHost = false) Parameters Type Name Description MouseEvent me The mouse event. bool fromHost If was called from the popup or from the host. Returns Type Description bool trueif the mouse can be handled falseotherwise. Overrides AutocompleteBase.MouseEvent(MouseEvent, bool) | Improve this Doc View Source MoveDown() Moves the selection in the Autocomplete context menu down one Declaration protected void MoveDown() | Improve this Doc View Source MoveUp() Moves the selection in the Autocomplete context menu up one Declaration protected void MoveUp() | Improve this Doc View Source ProcessKey(KeyEventArgs) Handle key events before HostControl e.g. to make key events like up/down apply to the autocomplete control instead of changing the cursor position in the underlying text view. Declaration public override bool ProcessKey(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a The key event. Returns Type Description bool trueif the key can be handled falseotherwise. Overrides AutocompleteBase.ProcessKey(KeyEventArgs) | Improve this Doc View Source RenderOverlay(Point) Renders the autocomplete dialog inside or outside the given HostControl at the given point. Declaration public override void RenderOverlay(Point renderAt) Parameters Type Name Description Point renderAt Overrides AutocompleteBase.RenderOverlay(Point) | Improve this Doc View Source RenderSelectedIdxByMouse(MouseEvent) Render the current selection in the Autocomplete context menu by the mouse reporting. Declaration protected void RenderSelectedIdxByMouse(MouseEvent me) Parameters Type Name Description MouseEvent me | Improve this Doc View Source ReopenSuggestions() Reopen the popup after it has been closed. Declaration protected bool ReopenSuggestions() Returns Type Description bool | Improve this Doc View Source Select() Completes the autocomplete selection process. Called when user hits the SelectionKey. Declaration protected bool Select() Returns Type Description bool | Improve this Doc View Source SetCursorPosition(int) Set the cursor position in the HostControl. Declaration protected abstract void SetCursorPosition(int column) Parameters Type Name Description int column Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.Pos.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Pos.html",
    "title": "Class Pos",
    "keywords": "Class Pos Describes the position of a View which can be an absolute value, a percentage, centered, or relative to the ending dimension. Integer values are implicitly convertible to an absolute Pos. These objects are created using the static methods Percent, AnchorEnd, and Center. The Pos objects can be combined with the addition and subtraction operators. Inheritance object Pos Remarks Use the Pos objects on the X or Y properties of a view to control the position. These can be used to set the absolute position, when merely assigning an integer value (via the implicit integer to Pos conversion), and they can be combined to produce more useful layouts, like: Pos.Center - 3, which would shift the position of the View 3 characters to the left after centering for example. It is possible to reference coordinates of another view by using the methods Left(View), Right(View), Bottom(View), Top(View). The X(View) and Y(View) are aliases to Left(View) and Top(View) respectively. Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Pos Methods | Improve this Doc View Source AnchorEnd(int) Creates a Pos object that is anchored to the end (right side or bottom) of the dimension, useful to flush the layout from the right or bottom. Declaration public static Pos AnchorEnd(int margin = 0) Parameters Type Name Description int margin Optional margin to place to the right or below. Returns Type Description Pos The Pos object anchored to the end (the bottom or the right side). | Improve this Doc View Source At(int) Creates an Absolute Pos from the specified integer value. Declaration public static Pos At(int n) Parameters Type Name Description int n The value to convert to the Pos. Returns Type Description Pos The Absolute Pos. | Improve this Doc View Source Bottom(View) Returns a Pos object tracks the Bottom (Y+Height) coordinate of the specified View Declaration public static Pos Bottom(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Center() Returns a Pos object that can be used to center the View Declaration public static Pos Center() Returns Type Description Pos The center Pos. | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object other) Parameters Type Name Description object other The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source Function(Func<int>) Creates a \"PosFunc\" from the specified function. Declaration public static Pos Function(Func<int> function) Parameters Type Name Description Func<int> function The function to be executed. Returns Type Description Pos The Pos returned from the function. | Improve this Doc View Source GetHashCode() Serves as the default hash function. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current object. Overrides object.GetHashCode() | Improve this Doc View Source Left(View) Returns a Pos object tracks the Left (X) position of the specified View. Declaration public static Pos Left(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Percent(float) Creates a percentage Pos object Declaration public static Pos Percent(float n) Parameters Type Name Description float n A value between 0 and 100 representing the percentage. Returns Type Description Pos The percent Pos object. | Improve this Doc View Source Right(View) Returns a Pos object tracks the Right (X+Width) coordinate of the specified View. Declaration public static Pos Right(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Top(View) Returns a Pos object tracks the Top (Y) position of the specified View. Declaration public static Pos Top(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source X(View) Returns a Pos object tracks the Left (X) position of the specified View. Declaration public static Pos X(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. | Improve this Doc View Source Y(View) Returns a Pos object tracks the Top (Y) position of the specified View. Declaration public static Pos Y(View view) Parameters Type Name Description View view The View that will be tracked. Returns Type Description Pos The Pos that depends on the other view. Operators | Improve this Doc View Source operator +(Pos, Pos) Adds a Pos to a Pos, yielding a new Pos. Declaration public static Pos operator +(Pos left, Pos right) Parameters Type Name Description Pos left The first Pos to add. Pos right The second Pos to add. Returns Type Description Pos The Pos that is the sum of the values of left and right. | Improve this Doc View Source implicit operator Pos(int) Creates an Absolute Pos from the specified integer value. Declaration public static implicit operator Pos(int n) Parameters Type Name Description int n The value to convert to the Pos . Returns Type Description Pos The Absolute Pos. | Improve this Doc View Source operator -(Pos, Pos) Subtracts a Pos from a Pos, yielding a new Pos. Declaration public static Pos operator -(Pos left, Pos right) Parameters Type Name Description Pos left The Pos to subtract from (the minuend). Pos right The Pos to subtract (the subtrahend). Returns Type Description Pos The Pos that is the left minus right."
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBar.html",
    "title": "Class ProgressBar",
    "keywords": "Class ProgressBar A Progress Bar view that can indicate progress of an activity visually. Inheritance object Responder View ProgressBar Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks ProgressBar can operate in two modes, percentage mode, or activity mode. The progress bar starts in percentage mode and setting the Fraction property will reflect on the UI the progress made so far. Activity mode is used when the application has no way of knowing how much time is left, and is started when the Pulse() method is called. Call Pulse() repeatedly as progress is made. Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ProgressBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ProgressBar() Initializes a new instance of the ProgressBar class, starts in percentage mode and uses relative layout. Declaration public ProgressBar() Properties | Improve this Doc View Source BidirectionalMarquee Specifies if the MarqueeBlocks or the MarqueeContinuous styles is unidirectional or bidirectional. Declaration public bool BidirectionalMarquee { get; set; } Property Value Type Description bool | Improve this Doc View Source Fraction Gets or sets the ProgressBar fraction to display, must be a value between 0 and 1. Declaration public float Fraction { get; set; } Property Value Type Description float The fraction representing the progress. | Improve this Doc View Source ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. Declaration public ProgressBarFormat ProgressBarFormat { get; set; } Property Value Type Description ProgressBarFormat | Improve this Doc View Source ProgressBarStyle Gets/Sets the progress bar style based on the ProgressBarStyle Declaration public ProgressBarStyle ProgressBarStyle { get; set; } Property Value Type Description ProgressBarStyle | Improve this Doc View Source SegmentCharacter Segment indicator for meter views. Declaration public Rune SegmentCharacter { get; set; } Property Value Type Description Rune | Improve this Doc View Source Text Gets or sets the text displayed on the progress bar. If set to an empty string and ProgressBarFormat is SimplePlusPercentage the percentage will be displayed. If ProgressBarStyle is a marquee style, the text will be displayed. Declaration public override string Text { get; set; } Property Value Type Description string Overrides View.Text Methods | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source Pulse() Notifies the ProgressBar that some progress has taken place. Declaration public void Pulse() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBarFormat.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBarFormat.html",
    "title": "Enum ProgressBarFormat",
    "keywords": "Enum ProgressBarFormat Specifies the format that a ProgressBar uses to indicate the visual presentation. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum ProgressBarFormat Fields Name Description Simple A simple visual presentation showing only the progress bar. SimplePlusPercentage A simple visual presentation showing the progress bar overlaid with the percentage."
  },
  "api/Terminal.Gui/Terminal.Gui.ProgressBarStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ProgressBarStyle.html",
    "title": "Enum ProgressBarStyle",
    "keywords": "Enum ProgressBarStyle Specifies the style that a ProgressBar uses to indicate the progress of an operation. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum ProgressBarStyle Fields Name Description Blocks Indicates progress by increasing the number of segmented blocks in a ProgressBar. Continuous Indicates progress by increasing the size of a smooth, continuous bar in a ProgressBar. MarqueeBlocks Indicates progress by continuously scrolling a block across a ProgressBar in a marquee fashion. MarqueeContinuous Indicates progress by continuously scrolling a block across a ProgressBar in a marquee fashion."
  },
  "api/Terminal.Gui/Terminal.Gui.RadioGroup.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RadioGroup.html",
    "title": "Class RadioGroup",
    "keywords": "Class RadioGroup Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time. Inheritance object Responder View RadioGroup Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RadioGroup : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source RadioGroup() Initializes a new instance of the RadioGroup class using Computed layout. Declaration public RadioGroup() | Improve this Doc View Source RadioGroup(int, int, string[], int) Initializes a new instance of the RadioGroup class using Absolute layout. The View frame is computed from the provided radio labels. Declaration public RadioGroup(int x, int y, string[] radioLabels, int selected = 0) Parameters Type Name Description int x The x coordinate. int y The y coordinate. string[] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. int selected The item to be selected, the value is clamped to the number of items. | Improve this Doc View Source RadioGroup(string[], int) Initializes a new instance of the RadioGroup class using Computed layout. Declaration public RadioGroup(string[] radioLabels, int selected = 0) Parameters Type Name Description string[] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. int selected The index of the item to be selected, the value is clamped to the number of items. | Improve this Doc View Source RadioGroup(Rect, string[], int) Initializes a new instance of the RadioGroup class using Absolute layout. Declaration public RadioGroup(Rect rect, string[] radioLabels, int selected = 0) Parameters Type Name Description Rect rect Boundaries for the radio group. string[] radioLabels The radio labels; an array of strings that can contain hotkeys using an underscore before the letter. int selected The index of item to be selected, the value is clamped to the number of items. Properties | Improve this Doc View Source DisplayMode Gets or sets the DisplayModeLayout for this RadioGroup. Declaration public DisplayModeLayout DisplayMode { get; set; } Property Value Type Description DisplayModeLayout | Improve this Doc View Source HorizontalSpace Gets or sets the horizontal space for this RadioGroup if the DisplayMode is Horizontal Declaration public int HorizontalSpace { get; set; } Property Value Type Description int | Improve this Doc View Source RadioLabels The radio labels to display Declaration public string[] RadioLabels { get; set; } Property Value Type Description string[] The radio labels. | Improve this Doc View Source SelectedItem The currently selected item from the list of radio labels Declaration public int SelectedItem { get; set; } Property Value Type Description int The selected. Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnInvokeKeyBindings(KeyEventArgs) Low-level API called when a key is pressed to invoke any key bindings set on the view. This is called after OnKeyPressed(KeyEventArgs). Fires the InvokingKeyBindings event. Declaration public override bool OnInvokeKeyBindings(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnInvokeKeyBindings(KeyEventArgs) | Improve this Doc View Source OnSelectedItemChanged(int, int) Called whenever the current selected item changes. Invokes the SelectedItemChanged event. Declaration public virtual void OnSelectedItemChanged(int selectedItem, int previousSelectedItem) Parameters Type Name Description int selectedItem int previousSelectedItem | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source Refresh() Allow to invoke the SelectedItemChanged after their creation. Declaration public void Refresh() Events | Improve this Doc View Source SelectedItemChanged Invoked when the selected radio label has changed. Declaration public event EventHandler<SelectedItemChangedArgs> SelectedItemChanged Event Type Type Description EventHandler<SelectedItemChangedArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Rect.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Rect.html",
    "title": "Struct Rect",
    "keywords": "Struct Rect Stores a set of four integers that represent the location and size of a rectangle Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct Rect Constructors | Improve this Doc View Source Rect(int, int, int, int) Rectangle Constructor Declaration public Rect(int x, int y, int width, int height) Parameters Type Name Description int x int y int width int height | Improve this Doc View Source Rect(Point, Size) Rectangle Constructor Declaration public Rect(Point location, Size size) Parameters Type Name Description Point location Size size Fields | Improve this Doc View Source Empty Empty Shared Field Declaration public static readonly Rect Empty Field Value Type Description Rect | Improve this Doc View Source X Gets or sets the x-coordinate of the upper-left corner of this Rectangle structure. Declaration public int X Field Value Type Description int | Improve this Doc View Source Y Gets or sets the y-coordinate of the upper-left corner of this Rectangle structure. Declaration public int Y Field Value Type Description int Properties | Improve this Doc View Source Bottom Bottom Property Declaration public int Bottom { get; } Property Value Type Description int | Improve this Doc View Source Height Gets or sets the height of this Rectangle structure. Declaration public int Height { get; set; } Property Value Type Description int | Improve this Doc View Source IsEmpty IsEmpty Property Declaration public bool IsEmpty { get; } Property Value Type Description bool | Improve this Doc View Source Left Left Property Declaration public int Left { get; } Property Value Type Description int | Improve this Doc View Source Location Location Property Declaration public Point Location { get; set; } Property Value Type Description Point | Improve this Doc View Source Right Right Property Declaration public int Right { get; } Property Value Type Description int | Improve this Doc View Source Size Size Property Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source Top Top Property Declaration public int Top { get; } Property Value Type Description int | Improve this Doc View Source Width Gets or sets the width of this Rect structure. Declaration public int Width { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Contains(int, int) Contains Method Declaration public bool Contains(int x, int y) Parameters Type Name Description int x int y Returns Type Description bool | Improve this Doc View Source Contains(Point) Contains Method Declaration public bool Contains(Point pt) Parameters Type Name Description Point pt Returns Type Description bool | Improve this Doc View Source Contains(Rect) Contains Method Declaration public bool Contains(Rect rect) Parameters Type Name Description Rect rect Returns Type Description bool | Improve this Doc View Source Equals(object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source FromLTRB(int, int, int, int) FromLTRB Shared Method Declaration public static Rect FromLTRB(int left, int top, int right, int bottom) Parameters Type Name Description int left int top int right int bottom Returns Type Description Rect | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Inflate(int, int) Inflates an existing Rect by the specified coordinate values. Declaration public void Inflate(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source Inflate(Rect, int, int) Produces a new Rect by inflating an existing Rect by the specified coordinate values. Declaration public static Rect Inflate(Rect rect, int x, int y) Parameters Type Name Description Rect rect int x int y Returns Type Description Rect | Improve this Doc View Source Inflate(Size) Inflates an existing Rect by the specified Sizwe. Declaration public void Inflate(Size size) Parameters Type Name Description Size size | Improve this Doc View Source Intersect(Rect, Rect) Intersect Shared Method Declaration public static Rect Intersect(Rect a, Rect b) Parameters Type Name Description Rect a Rect b Returns Type Description Rect | Improve this Doc View Source Intersect(Rect) Intersect Method Declaration public void Intersect(Rect rect) Parameters Type Name Description Rect rect | Improve this Doc View Source IntersectsWith(Rect) IntersectsWith Method Declaration public bool IntersectsWith(Rect rect) Parameters Type Name Description Rect rect Returns Type Description bool | Improve this Doc View Source Offset(int, int) Offset Method Declaration public void Offset(int x, int y) Parameters Type Name Description int x int y | Improve this Doc View Source Offset(Point) Offset Method Declaration public void Offset(Point pos) Parameters Type Name Description Point pos | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() | Improve this Doc View Source Union(Rect, Rect) Produces the uninion of two rectangles. Declaration public static Rect Union(Rect a, Rect b) Parameters Type Name Description Rect a Rect b Returns Type Description Rect Operators | Improve this Doc View Source operator ==(Rect, Rect) Equality Operator Declaration public static bool operator ==(Rect left, Rect right) Parameters Type Name Description Rect left Rect right Returns Type Description bool | Improve this Doc View Source operator !=(Rect, Rect) Inequality Operator Declaration public static bool operator !=(Rect left, Rect right) Parameters Type Name Description Rect left Rect right Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.RectangleF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RectangleF.html",
    "title": "Struct RectangleF",
    "keywords": "Struct RectangleF Stores the location and size of a rectangular region. Implements IEquatable<RectangleF> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct RectangleF : IEquatable<RectangleF> Constructors | Improve this Doc View Source RectangleF(float, float, float, float) Initializes a new instance of the RectangleF class with the specified location and size. Declaration public RectangleF(float x, float y, float width, float height) Parameters Type Name Description float x float y float width float height | Improve this Doc View Source RectangleF(PointF, SizeF) Initializes a new instance of the RectangleF class with the specified location and size. Declaration public RectangleF(PointF location, SizeF size) Parameters Type Name Description PointF location SizeF size Fields | Improve this Doc View Source Empty Initializes a new instance of the RectangleF class. Declaration public static readonly RectangleF Empty Field Value Type Description RectangleF Properties | Improve this Doc View Source Bottom Gets the y-coordinate of the lower-right corner of the rectangular region defined by this RectangleF. Declaration [Browsable(false)] public float Bottom { get; } Property Value Type Description float | Improve this Doc View Source Height Gets or sets the height of the rectangular region defined by this RectangleF. Declaration public float Height { get; set; } Property Value Type Description float | Improve this Doc View Source IsEmpty Tests whether this RectangleF has a Width or a Height of 0. Declaration [Browsable(false)] public bool IsEmpty { get; } Property Value Type Description bool | Improve this Doc View Source Left Gets the x-coordinate of the upper-left corner of the rectangular region defined by this RectangleF . Declaration [Browsable(false)] public float Left { get; } Property Value Type Description float | Improve this Doc View Source Location Gets or sets the coordinates of the upper-left corner of the rectangular region represented by this RectangleF. Declaration [Browsable(false)] public PointF Location { get; set; } Property Value Type Description PointF | Improve this Doc View Source Right Gets the x-coordinate of the lower-right corner of the rectangular region defined by this RectangleF. Declaration [Browsable(false)] public float Right { get; } Property Value Type Description float | Improve this Doc View Source Size Gets or sets the size of this RectangleF. Declaration [Browsable(false)] public SizeF Size { get; set; } Property Value Type Description SizeF | Improve this Doc View Source Top Gets the y-coordinate of the upper-left corner of the rectangular region defined by this RectangleF. Declaration [Browsable(false)] public float Top { get; } Property Value Type Description float | Improve this Doc View Source Width Gets or sets the width of the rectangular region defined by this RectangleF. Declaration public float Width { get; set; } Property Value Type Description float | Improve this Doc View Source X Gets or sets the x-coordinate of the upper-left corner of the rectangular region defined by this RectangleF. Declaration public float X { get; set; } Property Value Type Description float | Improve this Doc View Source Y Gets or sets the y-coordinate of the upper-left corner of the rectangular region defined by this RectangleF. Declaration public float Y { get; set; } Property Value Type Description float Methods | Improve this Doc View Source Contains(float, float) Determines if the specified point is contained within the rectangular region defined by this Rect . Declaration public bool Contains(float x, float y) Parameters Type Name Description float x float y Returns Type Description bool | Improve this Doc View Source Contains(PointF) Determines if the specified point is contained within the rectangular region defined by this Rect . Declaration public bool Contains(PointF pt) Parameters Type Name Description PointF pt Returns Type Description bool | Improve this Doc View Source Contains(RectangleF) Determines if the rectangular region represented by rect is entirely contained within the rectangular region represented by this Rect . Declaration public bool Contains(RectangleF rect) Parameters Type Name Description RectangleF rect Returns Type Description bool | Improve this Doc View Source Equals(object) Tests whether obj is a RectangleF with the same location and size of this RectangleF. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source Equals(RectangleF) Returns true if two RectangleF objects have equal location and size. Declaration public bool Equals(RectangleF other) Parameters Type Name Description RectangleF other Returns Type Description bool | Improve this Doc View Source FromLTRB(float, float, float, float) Creates a new RectangleF with the specified location and size. Declaration public static RectangleF FromLTRB(float left, float top, float right, float bottom) Parameters Type Name Description float left float top float right float bottom Returns Type Description RectangleF | Improve this Doc View Source GetHashCode() Gets the hash code for this RectangleF. Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Inflate(float, float) Inflates this Rect by the specified amount. Declaration public void Inflate(float x, float y) Parameters Type Name Description float x float y | Improve this Doc View Source Inflate(RectangleF, float, float) Creates a Rect that is inflated by the specified amount. Declaration public static RectangleF Inflate(RectangleF rect, float x, float y) Parameters Type Name Description RectangleF rect float x float y Returns Type Description RectangleF | Improve this Doc View Source Inflate(SizeF) Inflates this Rect by the specified amount. Declaration public void Inflate(SizeF size) Parameters Type Name Description SizeF size | Improve this Doc View Source Intersect(RectangleF, RectangleF) Creates a rectangle that represents the intersection between a and b. If there is no intersection, an empty rectangle is returned. Declaration public static RectangleF Intersect(RectangleF a, RectangleF b) Parameters Type Name Description RectangleF a RectangleF b Returns Type Description RectangleF | Improve this Doc View Source Intersect(RectangleF) Creates a Rectangle that represents the intersection between this Rectangle and rect. Declaration public void Intersect(RectangleF rect) Parameters Type Name Description RectangleF rect | Improve this Doc View Source IntersectsWith(RectangleF) Determines if this rectangle intersects with rect. Declaration public bool IntersectsWith(RectangleF rect) Parameters Type Name Description RectangleF rect Returns Type Description bool | Improve this Doc View Source Offset(float, float) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(float x, float y) Parameters Type Name Description float x float y | Improve this Doc View Source Offset(PointF) Adjusts the location of this rectangle by the specified amount. Declaration public void Offset(PointF pos) Parameters Type Name Description PointF pos | Improve this Doc View Source ToString() Converts the Location and Size of this RectangleF to a human-readable string. Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() | Improve this Doc View Source Union(RectangleF, RectangleF) Creates a rectangle that represents the union between a and b. Declaration public static RectangleF Union(RectangleF a, RectangleF b) Parameters Type Name Description RectangleF a RectangleF b Returns Type Description RectangleF Operators | Improve this Doc View Source operator ==(RectangleF, RectangleF) Tests whether two RectangleF objects have equal location and size. Declaration public static bool operator ==(RectangleF left, RectangleF right) Parameters Type Name Description RectangleF left RectangleF right Returns Type Description bool | Improve this Doc View Source implicit operator RectangleF(Rect) Converts the specified Rect to a RectangleF. Declaration public static implicit operator RectangleF(Rect r) Parameters Type Name Description Rect r Returns Type Description RectangleF | Improve this Doc View Source operator !=(RectangleF, RectangleF) Tests whether two RectangleF objects differ in location or size. Declaration public static bool operator !=(RectangleF left, RectangleF right) Parameters Type Name Description RectangleF left RectangleF right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Responder.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Responder.html",
    "title": "Class Responder",
    "keywords": "Class Responder Responder base class implemented by objects that want to participate on keyboard and mouse input. Inheritance object Responder View Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Responder : IDisposable Properties | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Responder can focus. Declaration public virtual bool CanFocus { get; set; } Property Value Type Description bool true if can focus; otherwise, false. | Improve this Doc View Source Enabled Gets or sets a value indicating whether this Responder can respond to user interaction. Declaration public virtual bool Enabled { get; set; } Property Value Type Description bool | Improve this Doc View Source HasFocus Gets or sets a value indicating whether this Responder has focus. Declaration public virtual bool HasFocus { get; } Property Value Type Description bool true if has focus; otherwise, false. | Improve this Doc View Source Visible Gets or sets a value indicating whether this Responder and all its child controls are displayed. Declaration public virtual bool Visible { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resource. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public virtual bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnCanFocusChanged() Method invoked when the CanFocus property from a view is changed. Declaration public virtual void OnCanFocusChanged() | Improve this Doc View Source OnEnabledChanged() Method invoked when the Enabled property from a view is changed. Declaration public virtual void OnEnabledChanged() | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public virtual bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public virtual bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnMouseEnter(MouseEvent) Called when the mouse first enters the view; the view will now receives mouse events until the mouse leaves the view. At which time, OnMouseLeave(MouseEvent) will be called. Declaration public virtual bool OnMouseEnter(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnMouseLeave(MouseEvent) Called when the mouse has moved outside of the view; the view will no longer receive mouse events (until the mouse moves within the view again and OnMouseEnter(MouseEvent) is called). Declaration public virtual bool OnMouseLeave(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnVisibleChanged() Method invoked when the Visible property from a view is changed. Declaration public virtual void OnVisibleChanged() Implements IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.RowColorGetterArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RowColorGetterArgs.html",
    "title": "Class RowColorGetterArgs",
    "keywords": "Class RowColorGetterArgs Arguments for RowColorGetterDelegate. Describes a row of data in a ITableSource for which ColorScheme is sought. Inheritance object RowColorGetterArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RowColorGetterArgs Properties | Improve this Doc View Source RowIndex The index of the row in Table for which color is needed Declaration public int RowIndex { get; } Property Value Type Description int | Improve this Doc View Source Table The data table hosted by the TableView control. Declaration public ITableSource Table { get; } Property Value Type Description ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.RowColorGetterDelegate.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RowColorGetterDelegate.html",
    "title": "Delegate RowColorGetterDelegate",
    "keywords": "Delegate RowColorGetterDelegate Delegate for providing color for a whole row of a TableView Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public delegate ColorScheme RowColorGetterDelegate(RowColorGetterArgs args) Parameters Type Name Description RowColorGetterArgs args Returns Type Description ColorScheme"
  },
  "api/Terminal.Gui/Terminal.Gui.Ruler.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Ruler.html",
    "title": "Class Ruler",
    "keywords": "Class Ruler Draws a ruler on the screen. Inheritance object Ruler Remarks Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Ruler Properties | Improve this Doc View Source Attribute Gets or sets the foreground and background color to use. Declaration public Attribute Attribute { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Length Gets or sets the length of the ruler. The default is 0. Declaration public int Length { get; set; } Property Value Type Description int | Improve this Doc View Source Orientation Gets or sets whether the ruler is drawn horizontally or vertically. The default is horizontally. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation Methods | Improve this Doc View Source Draw(Point, int) Draws the Ruler. Declaration public void Draw(Point location, int start = 0) Parameters Type Name Description Point location The location to start drawing the ruler, in screen-relative coordinates. int start The start value of the ruler."
  },
  "api/Terminal.Gui/Terminal.Gui.RuneCell.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RuneCell.html",
    "title": "Class RuneCell",
    "keywords": "Class RuneCell Represents a single row/column within the TextView. Includes the glyph and the foreground/background colors. Inheritance object RuneCell Implements IEquatable<RuneCell> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RuneCell : IEquatable<RuneCell> Properties | Improve this Doc View Source ColorScheme The ColorScheme color sets to draw the glyph with. Declaration [JsonConverter(typeof(ColorSchemeJsonConverter))] public ColorScheme? ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Rune The glyph to draw. Declaration [JsonConverter(typeof(RuneJsonConverter))] public Rune Rune { get; set; } Property Value Type Description Rune Methods | Improve this Doc View Source Equals(RuneCell?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(RuneCell? other) Parameters Type Name Description RuneCell other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.RuneCellEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RuneCellEventArgs.html",
    "title": "Class RuneCellEventArgs",
    "keywords": "Class RuneCellEventArgs Args for events that relate to a specific RuneCell. Inheritance object RuneCellEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RuneCellEventArgs Constructors | Improve this Doc View Source RuneCellEventArgs(List<RuneCell>, int, (int Row, int Col)) Creates a new instance of the RuneCellEventArgs class. Declaration public RuneCellEventArgs(List<RuneCell> line, int col, (int Row, int Col) unwrappedPosition) Parameters Type Name Description List<RuneCell> line The line. int col The col index. (int Row, int Col) unwrappedPosition The unwrapped row and col index. Properties | Improve this Doc View Source Col The index of the RuneCell in the line. Declaration public int Col { get; } Property Value Type Description int | Improve this Doc View Source Line The list of runes the RuneCell is part of. Declaration public List<RuneCell> Line { get; } Property Value Type Description List<RuneCell> | Improve this Doc View Source UnwrappedPosition The unwrapped row and column index into the text containing the RuneCell. Unwrapped means the text without word wrapping or other visual formatting having been applied. Declaration public (int Row, int Col) UnwrappedPosition { get; } Property Value Type Description (int Row, int Col)"
  },
  "api/Terminal.Gui/Terminal.Gui.RuneExtensions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RuneExtensions.html",
    "title": "Class RuneExtensions",
    "keywords": "Class RuneExtensions Extends Rune to support TUI text manipulation. Inheritance object RuneExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class RuneExtensions Fields | Improve this Doc View Source MaxUnicodeCodePoint Maximum Unicode code point. Declaration public static int MaxUnicodeCodePoint Field Value Type Description int Methods | Improve this Doc View Source CanBeEncodedAsRune(byte[]) Reports if the provided array of bytes can be encoded as UTF-8. Declaration public static bool CanBeEncodedAsRune(byte[] buffer) Parameters Type Name Description byte[] buffer The byte array to probe. Returns Type Description bool true if is valid; otherwise, false. | Improve this Doc View Source DecodeSurrogatePair(Rune, out char[]) Attempts to decode the rune as a surrogate pair to UTF-16. Declaration public static bool DecodeSurrogatePair(this Rune rune, out char[] chars) Parameters Type Name Description Rune rune The rune to decode. char[] chars The chars if the rune is a surrogate pair. Null otherwise. Returns Type Description bool true if the rune is a valid surrogate pair; false otherwise. | Improve this Doc View Source Encode(Rune, byte[], int, int) Writes into the destination buffer starting at offset the UTF8 encoded version of the rune. Declaration public static int Encode(this Rune rune, byte[] dest, int start = 0, int count = -1) Parameters Type Name Description Rune rune The rune to encode. byte[] dest The destination buffer. int start Starting offset to look into. int count Number of bytes valid in the buffer, or -1 to make it the length of the buffer. Returns Type Description int he number of bytes written into the destination buffer. | Improve this Doc View Source EncodeSurrogatePair(char, char, out Rune) Attempts to encode (as UTF-16) a surrogate pair. Declaration public static bool EncodeSurrogatePair(char highSurrogate, char lowSurrogate, out Rune result) Parameters Type Name Description char highSurrogate The high surrogate code point. char lowSurrogate The low surrogate code point. Rune result The encoded rune. Returns Type Description bool true if the encoding succeeded; false otherwise. | Improve this Doc View Source GetColumns(Rune) Gets the number of columns the rune occupies in the terminal. Declaration public static int GetColumns(this Rune rune) Parameters Type Name Description Rune rune The rune to measure. Returns Type Description int The number of columns required to fit the rune, 0 if the argument is the null character, or -1 if the value is not printable, otherwise the number of columns that the rune occupies. | Improve this Doc View Source GetEncodingLength(Rune, Encoding) Get number of bytes required to encode the rune, based on the provided encoding. Declaration public static int GetEncodingLength(this Rune rune, Encoding encoding = null) Parameters Type Name Description Rune rune The rune to probe. Encoding encoding The encoding used; the default is UTF8. Returns Type Description int The number of bytes required. | Improve this Doc View Source IsCombiningMark(Rune) Returns true if the rune is a combining character. Declaration public static bool IsCombiningMark(this Rune rune) Parameters Type Name Description Rune rune Returns Type Description bool | Improve this Doc View Source IsSurrogatePair(Rune) Reports whether a rune is a surrogate code point. Declaration public static bool IsSurrogatePair(this Rune rune) Parameters Type Name Description Rune rune The rune to probe. Returns Type Description bool true if the rune is a surrogate code point; false otherwise. | Improve this Doc View Source MakePrintable(Rune) Ensures the rune is not a control character and can be displayed by translating characters below 0x20 to equivalent, printable, Unicode chars. Declaration public static Rune MakePrintable(this Rune rune) Parameters Type Name Description Rune rune Returns Type Description Rune"
  },
  "api/Terminal.Gui/Terminal.Gui.RunState.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RunState.html",
    "title": "Class RunState",
    "keywords": "Class RunState The execution state for a Toplevel view. Inheritance object RunState Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RunState : IDisposable Constructors | Improve this Doc View Source RunState(Toplevel) Initializes a new RunState class. Declaration public RunState(Toplevel view) Parameters Type Name Description Toplevel view Properties | Improve this Doc View Source Toplevel The Toplevel belonging to this RunState. Declaration public Toplevel Toplevel { get; } Property Value Type Description Toplevel Methods | Improve this Doc View Source Dispose() Releases all resource used by the RunState object. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Releases all resource used by the RunState object. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing If set to true we are disposing and should dispose held objects. Implements IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.RunStateEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.RunStateEventArgs.html",
    "title": "Class RunStateEventArgs",
    "keywords": "Class RunStateEventArgs Event arguments for events about RunState Inheritance object EventArgs RunStateEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class RunStateEventArgs : EventArgs Constructors | Improve this Doc View Source RunStateEventArgs(RunState) Creates a new instance of the RunStateEventArgs class Declaration public RunStateEventArgs(RunState state) Parameters Type Name Description RunState state Properties | Improve this Doc View Source State The state being reported on by the event Declaration public RunState State { get; } Property Value Type Description RunState"
  },
  "api/Terminal.Gui/Terminal.Gui.SaveDialog.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SaveDialog.html",
    "title": "Class SaveDialog",
    "keywords": "Class SaveDialog The SaveDialog provides an interactive dialog box for users to pick a file to save. Inheritance object Responder View Toplevel Window Dialog FileDialog SaveDialog Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks To use, create an instance of SaveDialog, and pass it to Run(Func<Exception, bool>). This will run the dialog modally, and when this returns, the FileNameproperty will contain the selected file name or null if the user canceled. Inherited Members FileDialog.Style FileDialog.MaxSearchResults FileDialog.MustExist FileDialog.CurrentFilter FileDialog.FilesSelected FileDialog.FileOperationsHandler FileDialog.Dispose(bool) FileDialog.OpenMode FileDialog.Path FileDialog.SearchMatcher FileDialog.AllowsMultipleSelection FileDialog.AllowedTypes FileDialog.Canceled FileDialog.MultiSelected FileDialog.OnDrawContent(Rect) FileDialog.OnLoaded() FileDialog.IsCompatibleWithAllowedExtensions(IFileInfo) Dialog.DefaultButtonAlignment Dialog.AddButton(Button) Dialog.ButtonAlignment Dialog.OnKeyPressed(KeyEventArgs) Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SaveDialog : FileDialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source SaveDialog() Initializes a new SaveDialog. Declaration public SaveDialog() | Improve this Doc View Source SaveDialog(string, List<IAllowedType>) Initializes a new SaveDialog. Declaration public SaveDialog(string title, List<IAllowedType> allowedTypes = null) Parameters Type Name Description string title The title. List<IAllowedType> allowedTypes The allowed types. Properties | Improve this Doc View Source FileName Gets the name of the file the user selected for saving, or null if the user canceled the SaveDialog. Declaration public string FileName { get; } Property Value Type Description string The name of the file. Methods | Improve this Doc View Source GetDefaultTitle() Gets the default title for the SaveDialog. Declaration protected override string GetDefaultTitle() Returns Type Description string Overrides FileDialog.GetDefaultTitle() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ScatterSeries.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ScatterSeries.html",
    "title": "Class ScatterSeries",
    "keywords": "Class ScatterSeries Series composed of any number of discrete data points Inheritance object ScatterSeries Implements ISeries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ScatterSeries : ISeries Properties | Improve this Doc View Source Fill The color and character that will be rendered in the console when there are point(s) in the corresponding graph space. Defaults to uncolored 'dot' Declaration public GraphCellToRender Fill { get; set; } Property Value Type Description GraphCellToRender | Improve this Doc View Source Points Collection of each discrete point in the series Declaration public List<PointF> Points { get; set; } Property Value Type Description List<PointF> Methods | Improve this Doc View Source DrawSeries(GraphView, Rect, RectangleF) Draws all points directly onto the graph Declaration public void DrawSeries(GraphView graph, Rect drawBounds, RectangleF graphBounds) Parameters Type Name Description GraphView graph Rect drawBounds RectangleF graphBounds Implements ISeries"
  },
  "api/Terminal.Gui/Terminal.Gui.Scope-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Scope-1.html",
    "title": "Class Scope<T>",
    "keywords": "Class Scope<T> Defines a configuration settings scope. Classes that inherit from this abstract class can be used to define scopes for configuration settings. Each scope is a JSON object that contains a set of configuration settings. Inheritance object Dictionary<string, ConfigProperty> Scope<T> AppScope SettingsScope ThemeScope Implements IDictionary<string, ConfigProperty> ICollection<KeyValuePair<string, ConfigProperty>> IReadOnlyDictionary<string, ConfigProperty> IReadOnlyCollection<KeyValuePair<string, ConfigProperty>> IEnumerable<KeyValuePair<string, ConfigProperty>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, ConfigProperty>.Add(string, ConfigProperty) Dictionary<string, ConfigProperty>.Clear() Dictionary<string, ConfigProperty>.ContainsKey(string) Dictionary<string, ConfigProperty>.ContainsValue(ConfigProperty) Dictionary<string, ConfigProperty>.EnsureCapacity(int) Dictionary<string, ConfigProperty>.GetEnumerator() Dictionary<string, ConfigProperty>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, ConfigProperty>.OnDeserialization(object) Dictionary<string, ConfigProperty>.Remove(string) Dictionary<string, ConfigProperty>.Remove(string, out ConfigProperty) Dictionary<string, ConfigProperty>.TrimExcess() Dictionary<string, ConfigProperty>.TrimExcess(int) Dictionary<string, ConfigProperty>.TryAdd(string, ConfigProperty) Dictionary<string, ConfigProperty>.TryGetValue(string, out ConfigProperty) Dictionary<string, ConfigProperty>.Comparer Dictionary<string, ConfigProperty>.Count Dictionary<string, ConfigProperty>.this[string] Dictionary<string, ConfigProperty>.Keys Dictionary<string, ConfigProperty>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Scope<T> : Dictionary<string, ConfigProperty>, IDictionary<string, ConfigProperty>, ICollection<KeyValuePair<string, ConfigProperty>>, IReadOnlyDictionary<string, ConfigProperty>, IReadOnlyCollection<KeyValuePair<string, ConfigProperty>>, IEnumerable<KeyValuePair<string, ConfigProperty>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Type Parameters Name Description T Constructors | Improve this Doc View Source Scope() Crates a new instance. Declaration public Scope() Methods | Improve this Doc View Source RetrieveValues() Retrieves the values of the properties of this scope from their corresponding static properties. Declaration public void RetrieveValues() | Improve this Doc View Source Update(Scope<T>) Updates this instance from the specified source scope. Declaration public Scope<T>? Update(Scope<T> source) Parameters Type Name Description Scope<T> source Returns Type Description Scope<T> The updated scope (this). Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable"
  },
  "api/Terminal.Gui/Terminal.Gui.ScrollBarView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ScrollBarView.html",
    "title": "Class ScrollBarView",
    "keywords": "Class ScrollBarView ScrollBarViews are views that display a 1-character scrollbar, either horizontal or vertical Inheritance object Responder View ScrollBarView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The scrollbar is drawn to be a representation of the Size, assuming that the scroll position is set at Position. If the region to display the scrollbar is larger than three characters, arrow indicators are drawn. Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ScrollBarView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ScrollBarView() Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView() | Improve this Doc View Source ScrollBarView(int, int, bool) Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView(int size, int position, bool isVertical) Parameters Type Name Description int size The size that this scrollbar represents. int position The position within this scrollbar. bool isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. | Improve this Doc View Source ScrollBarView(Rect, int, int, bool) Initializes a new instance of the ScrollBarView class using Absolute layout. Declaration public ScrollBarView(Rect rect, int size, int position, bool isVertical) Parameters Type Name Description Rect rect Frame for the scrollbar. int size The size that this scrollbar represents. Sets the Size property. int position The position within this scrollbar. Sets the Position property. bool isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. Sets the IsVertical property. | Improve this Doc View Source ScrollBarView(Rect) Initializes a new instance of the ScrollBarView class using Absolute layout. Declaration public ScrollBarView(Rect rect) Parameters Type Name Description Rect rect Frame for the scrollbar. | Improve this Doc View Source ScrollBarView(View, bool, bool) Initializes a new instance of the ScrollBarView class using Computed layout. Declaration public ScrollBarView(View host, bool isVertical, bool showBothScrollIndicator = true) Parameters Type Name Description View host The view that will host this scrollbar. bool isVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. bool showBothScrollIndicator If set to true (default) will have the other scrollbar, otherwise will have only one. Properties | Improve this Doc View Source AutoHideScrollBars If true the vertical/horizontal scroll bars won't be showed if it's not needed. Declaration public bool AutoHideScrollBars { get; set; } Property Value Type Description bool | Improve this Doc View Source Host Get or sets the view that host this ScrollBarView Declaration public View Host { get; } Property Value Type Description View | Improve this Doc View Source IsVertical If set to true this is a vertical scrollbar, otherwise, the scrollbar is horizontal. Declaration public bool IsVertical { get; set; } Property Value Type Description bool | Improve this Doc View Source KeepContentAlwaysInViewport Get or sets if the view-port is kept always visible in the area of this ScrollBarView Declaration public bool KeepContentAlwaysInViewport { get; set; } Property Value Type Description bool | Improve this Doc View Source OtherScrollBarView Represent a vertical or horizontal ScrollBarView other than this. Declaration public ScrollBarView OtherScrollBarView { get; set; } Property Value Type Description ScrollBarView | Improve this Doc View Source Position The position, relative to Size, to set the scrollbar at. Declaration public int Position { get; set; } Property Value Type Description int The position. | Improve this Doc View Source ShowScrollIndicator Gets or sets the visibility for the vertical or horizontal scroll indicator. Declaration public bool ShowScrollIndicator { get; set; } Property Value Type Description bool true if show vertical or horizontal scroll indicator; otherwise, false. | Improve this Doc View Source Size The size of content the scrollbar represents. Declaration public int Size { get; set; } Property Value Type Description int The size. Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnChangedPosition() Virtual method to invoke the ChangedPosition action event. Declaration public virtual void OnChangedPosition() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source Refresh() Only used for a hosted view that will update and redraw the scrollbars. Declaration public virtual void Refresh() Events | Improve this Doc View Source ChangedPosition This event is raised when the position on the scrollbar has changed. Declaration public event EventHandler ChangedPosition Event Type Type Description EventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ScrollView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ScrollView.html",
    "title": "Class ScrollView",
    "keywords": "Class ScrollView Scrollviews are views that present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. Inheritance object Responder View ScrollView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The subviews that are added to this ScrollView are offset by the ContentOffset property. The view itself is a window into the space represented by the ContentSize. Use the Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ScrollView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ScrollView() Initializes a new instance of the ScrollView class using Computed positioning. Declaration public ScrollView() | Improve this Doc View Source ScrollView(Rect) Initializes a new instance of the ScrollView class using Absolute positioning. Declaration public ScrollView(Rect frame) Parameters Type Name Description Rect frame Properties | Improve this Doc View Source AutoHideScrollBars If true the vertical/horizontal scroll bars won't be showed if it's not needed. Declaration public bool AutoHideScrollBars { get; set; } Property Value Type Description bool | Improve this Doc View Source ContentOffset Represents the top left corner coordinate that is displayed by the scrollview Declaration public Point ContentOffset { get; set; } Property Value Type Description Point The content offset. | Improve this Doc View Source ContentSize Represents the contents of the data shown inside the scrollview Declaration public Size ContentSize { get; set; } Property Value Type Description Size The size of the content. | Improve this Doc View Source KeepContentAlwaysInViewport Get or sets if the view-port is kept always visible in the area of this ScrollView Declaration public bool KeepContentAlwaysInViewport { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowHorizontalScrollIndicator Gets or sets the visibility for the horizontal scroll indicator. Declaration public bool ShowHorizontalScrollIndicator { get; set; } Property Value Type Description bool true if show horizontal scroll indicator; otherwise, false. | Improve this Doc View Source ShowVerticalScrollIndicator Gets or sets the visibility for the vertical scroll indicator. Declaration public bool ShowVerticalScrollIndicator { get; set; } Property Value Type Description bool true if show vertical scroll indicator; otherwise, false. Methods | Improve this Doc View Source Add(View) Adds the view to the scrollview. Declaration public override void Add(View view) Parameters Type Name Description View view The view to add to the scrollview. Overrides View.Add(View) | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source Remove(View) Removes the view from the scrollview. Declaration public override void Remove(View view) Parameters Type Name Description View view The view to remove from the scrollview. Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Removes all widgets from this container. Declaration public override void RemoveAll() Overrides View.RemoveAll() | Improve this Doc View Source ScrollDown(int) Scrolls the view down. Declaration public bool ScrollDown(int lines) Parameters Type Name Description int lines Number of lines to scroll. Returns Type Description bool true, if left was scrolled, false otherwise. | Improve this Doc View Source ScrollLeft(int) Scrolls the view to the left Declaration public bool ScrollLeft(int cols) Parameters Type Name Description int cols Number of columns to scroll by. Returns Type Description bool true, if left was scrolled, false otherwise. | Improve this Doc View Source ScrollRight(int) Scrolls the view to the right. Declaration public bool ScrollRight(int cols) Parameters Type Name Description int cols Number of columns to scroll by. Returns Type Description bool true, if right was scrolled, false otherwise. | Improve this Doc View Source ScrollUp(int) Scrolls the view up. Declaration public bool ScrollUp(int lines) Parameters Type Name Description int lines Number of lines to scroll. Returns Type Description bool true, if left was scrolled, false otherwise. Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.SelectedCellChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SelectedCellChangedEventArgs.html",
    "title": "Class SelectedCellChangedEventArgs",
    "keywords": "Class SelectedCellChangedEventArgs Defines the event arguments for SelectedCellChanged Inheritance object EventArgs SelectedCellChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SelectedCellChangedEventArgs : EventArgs Constructors | Improve this Doc View Source SelectedCellChangedEventArgs(ITableSource, int, int, int, int) Creates a new instance of arguments describing a change in selected cell in a TableView Declaration public SelectedCellChangedEventArgs(ITableSource t, int oldCol, int newCol, int oldRow, int newRow) Parameters Type Name Description ITableSource t int oldCol int newCol int oldRow int newRow Properties | Improve this Doc View Source NewCol The newly selected column index. Declaration public int NewCol { get; } Property Value Type Description int | Improve this Doc View Source NewRow The newly selected row index. Declaration public int NewRow { get; } Property Value Type Description int | Improve this Doc View Source OldCol The previous selected column index. May be invalid e.g. when the selection has been changed as a result of replacing the existing Table with a smaller one Declaration public int OldCol { get; } Property Value Type Description int | Improve this Doc View Source OldRow The previous selected row index. May be invalid e.g. when the selection has been changed as a result of deleting rows from the table Declaration public int OldRow { get; } Property Value Type Description int | Improve this Doc View Source Table The current table to which the new indexes refer. May be null e.g. if selection change is the result of clearing the table from the view Declaration public ITableSource Table { get; } Property Value Type Description ITableSource"
  },
  "api/Terminal.Gui/Terminal.Gui.SelectedItemChangedArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SelectedItemChangedArgs.html",
    "title": "Class SelectedItemChangedArgs",
    "keywords": "Class SelectedItemChangedArgs Event arguments for the SelectedItemChagned event. Inheritance object EventArgs SelectedItemChangedArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SelectedItemChangedArgs : EventArgs Constructors | Improve this Doc View Source SelectedItemChangedArgs(int, int) Initializes a new SelectedItemChangedArgs class. Declaration public SelectedItemChangedArgs(int selectedItem, int previousSelectedItem) Parameters Type Name Description int selectedItem int previousSelectedItem Properties | Improve this Doc View Source PreviousSelectedItem Gets the index of the item that was previously selected. -1 if there was no previous selection. Declaration public int PreviousSelectedItem { get; } Property Value Type Description int | Improve this Doc View Source SelectedItem Gets the index of the item that is now selected. -1 if there is no selection. Declaration public int SelectedItem { get; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.SelectionChangedEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SelectionChangedEventArgs-1.html",
    "title": "Class SelectionChangedEventArgs<T>",
    "keywords": "Class SelectionChangedEventArgs<T> Event arguments describing a change in selected object in a tree view Inheritance object EventArgs SelectionChangedEventArgs<T> Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SelectionChangedEventArgs<T> : EventArgs where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source SelectionChangedEventArgs(TreeView<T>, T, T) Creates a new instance of event args describing a change of selection in tree Declaration public SelectionChangedEventArgs(TreeView<T> tree, T oldValue, T newValue) Parameters Type Name Description TreeView<T> tree T oldValue T newValue Properties | Improve this Doc View Source NewValue The newly selected value in the Tree (can be null) Declaration public T NewValue { get; } Property Value Type Description T | Improve this Doc View Source OldValue The previously selected value (can be null) Declaration public T OldValue { get; } Property Value Type Description T | Improve this Doc View Source Tree The view in which the change occurred Declaration public TreeView<T> Tree { get; } Property Value Type Description TreeView<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.SerializableConfigurationProperty.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SerializableConfigurationProperty.html",
    "title": "Class SerializableConfigurationProperty",
    "keywords": "Class SerializableConfigurationProperty An attribute that can be applied to a property to indicate that it should included in the configuration file. Inheritance object Attribute SerializableConfigurationProperty Examples [SerializableConfigurationProperty(Scope = typeof(Configuration.ThemeManager.ThemeScope)), JsonConverter (typeof (JsonStringEnumConverter))] public static LineStyle DefaultBorderStyle { ... Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false, Inherited = false)] public class SerializableConfigurationProperty : Attribute Properties | Improve this Doc View Source OmitClassName If true, the property will be serialized to the configuration file using only the property name as the key. If false, the property will be serialized to the configuration file using the property name pre-pended with the classname (e.g. Application.UseSystemConsole). Declaration public bool OmitClassName { get; set; } Property Value Type Description bool | Improve this Doc View Source Scope Specifies the scope of the property. Declaration public Type? Scope { get; set; } Property Value Type Description Type"
  },
  "api/Terminal.Gui/Terminal.Gui.SettingsScope.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SettingsScope.html",
    "title": "Class SettingsScope",
    "keywords": "Class SettingsScope The root object of Terminal.Gui configuration settings / JSON schema. Contains only properties attributed with SettingsScope. Inheritance object Dictionary<string, ConfigProperty> Scope<SettingsScope> SettingsScope Implements IDictionary<string, ConfigProperty> ICollection<KeyValuePair<string, ConfigProperty>> IReadOnlyDictionary<string, ConfigProperty> IReadOnlyCollection<KeyValuePair<string, ConfigProperty>> IEnumerable<KeyValuePair<string, ConfigProperty>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Examples { \"$schema\" : \"https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json\", \"Application.UseSystemConsole\" : true, \"Theme\" : \"Default\", \"Themes\": { }, }, Inherited Members Scope<SettingsScope>.Update(Scope<SettingsScope>) Scope<SettingsScope>.RetrieveValues() Dictionary<string, ConfigProperty>.Add(string, ConfigProperty) Dictionary<string, ConfigProperty>.Clear() Dictionary<string, ConfigProperty>.ContainsKey(string) Dictionary<string, ConfigProperty>.ContainsValue(ConfigProperty) Dictionary<string, ConfigProperty>.EnsureCapacity(int) Dictionary<string, ConfigProperty>.GetEnumerator() Dictionary<string, ConfigProperty>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, ConfigProperty>.OnDeserialization(object) Dictionary<string, ConfigProperty>.Remove(string) Dictionary<string, ConfigProperty>.Remove(string, out ConfigProperty) Dictionary<string, ConfigProperty>.TrimExcess() Dictionary<string, ConfigProperty>.TrimExcess(int) Dictionary<string, ConfigProperty>.TryAdd(string, ConfigProperty) Dictionary<string, ConfigProperty>.TryGetValue(string, out ConfigProperty) Dictionary<string, ConfigProperty>.Comparer Dictionary<string, ConfigProperty>.Count Dictionary<string, ConfigProperty>.this[string] Dictionary<string, ConfigProperty>.Keys Dictionary<string, ConfigProperty>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(ScopeJsonConverter<SettingsScope>))] public class SettingsScope : Scope<SettingsScope>, IDictionary<string, ConfigProperty>, ICollection<KeyValuePair<string, ConfigProperty>>, IReadOnlyDictionary<string, ConfigProperty>, IReadOnlyCollection<KeyValuePair<string, ConfigProperty>>, IEnumerable<KeyValuePair<string, ConfigProperty>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Fields | Improve this Doc View Source Sources The list of paths to the configuration files. Declaration public List<string> Sources Field Value Type Description List<string> Properties | Improve this Doc View Source Schema Points to our JSON schema. Declaration [JsonInclude] [JsonPropertyName(\"$schema\")] public string Schema { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Update(Stream, string) Updates the SettingsScope with the settings in a JSON string. Declaration public SettingsScope? Update(Stream stream, string source) Parameters Type Name Description Stream stream Json document to update the settings with. string source The source (filename/resource name) the Json document was read from. Returns Type Description SettingsScope | Improve this Doc View Source Update(string, string) Updates the SettingsScope with the settings in a JSON string. Declaration public SettingsScope? Update(string json, string source) Parameters Type Name Description string json Json document to update the settings with. string source The source (filename/resource name) the Json document was read from. Returns Type Description SettingsScope | Improve this Doc View Source Update(string) Updates the SettingsScope with the settings in a JSON file. Declaration public SettingsScope? Update(string filePath) Parameters Type Name Description string filePath Returns Type Description SettingsScope | Improve this Doc View Source UpdateFromResource(Assembly, string) Updates the SettingsScope with the settings from a Json resource. Declaration public SettingsScope? UpdateFromResource(Assembly assembly, string resourceName) Parameters Type Name Description Assembly assembly string resourceName Returns Type Description SettingsScope Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable"
  },
  "api/Terminal.Gui/Terminal.Gui.ShortcutHelper.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ShortcutHelper.html",
    "title": "Class ShortcutHelper",
    "keywords": "Class ShortcutHelper Represents a helper to manipulate shortcut keys used on views. Inheritance object ShortcutHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ShortcutHelper Properties | Improve this Doc View Source Shortcut This is the global setting that can be used as a global shortcut to invoke the action on the view. Declaration public virtual Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source ShortcutTag The keystroke combination used in the Shortcut as string. Declaration public virtual string ShortcutTag { get; } Property Value Type Description string Methods | Improve this Doc View Source CheckKeysFlagRange(Key, Key, Key) Lookup for a Key on range of keys. Declaration public static bool CheckKeysFlagRange(Key key, Key first, Key last) Parameters Type Name Description Key key The source key. Key first First key in range. Key last Last key in range. Returns Type Description bool | Improve this Doc View Source GetShortcutFromTag(string, Rune) Allows to retrieve a Key from a ShortcutTag Declaration public static Key GetShortcutFromTag(string tag, Rune delimiter = default) Parameters Type Name Description string tag The key as string. Rune delimiter The delimiter string. Returns Type Description Key | Improve this Doc View Source PostShortcutValidation(Key) Used at key up validation. Declaration public static bool PostShortcutValidation(Key key) Parameters Type Name Description Key key The key to validate. Returns Type Description bool true if is valid.falseotherwise. | Improve this Doc View Source PreShortcutValidation(Key) Used at key down or key press validation. Declaration public static bool PreShortcutValidation(Key key) Parameters Type Name Description Key key The key to validate. Returns Type Description bool true if is valid.falseotherwise."
  },
  "api/Terminal.Gui/Terminal.Gui.SingleWordSuggestionGenerator.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SingleWordSuggestionGenerator.html",
    "title": "Class SingleWordSuggestionGenerator",
    "keywords": "Class SingleWordSuggestionGenerator ISuggestionGenerator which suggests from a collection of words those that match the AutocompleteContext. You can update AllSuggestions at any time to change candidates considered for autocomplete. Inheritance object SingleWordSuggestionGenerator Implements ISuggestionGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SingleWordSuggestionGenerator : ISuggestionGenerator Properties | Improve this Doc View Source AllSuggestions The full set of all strings that can be suggested. Declaration public virtual List<string> AllSuggestions { get; set; } Property Value Type Description List<string> Methods | Improve this Doc View Source GenerateSuggestions(AutocompleteContext) Generates autocomplete Suggestion based on a given context Declaration public IEnumerable<Suggestion> GenerateSuggestions(AutocompleteContext context) Parameters Type Name Description AutocompleteContext context Returns Type Description IEnumerable<Suggestion> | Improve this Doc View Source IdxToWord(List<Rune>, int, out int, int) Given a line of characters, returns the word which ends at idx or null. Also returns null if the idx is positioned in the middle of a word. Use this method to determine whether autocomplete should be shown when the cursor is at a given point in a line and to get the word from which suggestions should be generated. Use the columnOffset to indicate if search the word at left (negative), at right (positive) or at the current column (zero) which is the default. Declaration protected virtual string IdxToWord(List<Rune> line, int idx, out int startIdx, int columnOffset = 0) Parameters Type Name Description List<Rune> line int idx int startIdx The start index of the word. int columnOffset Returns Type Description string | Improve this Doc View Source IsWordChar(Rune) Return true if the given symbol should be considered part of a word and can be contained in matches. Base behavior is to use IsLetterOrDigit(char) Declaration public virtual bool IsWordChar(Rune rune) Parameters Type Name Description Rune rune The rune. Returns Type Description bool Implements ISuggestionGenerator"
  },
  "api/Terminal.Gui/Terminal.Gui.Size.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Size.html",
    "title": "Struct Size",
    "keywords": "Struct Size Stores an ordered pair of integers, which specify a Height and Width. Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct Size Constructors | Improve this Doc View Source Size(int, int) Size Constructor Declaration public Size(int width, int height) Parameters Type Name Description int width int height | Improve this Doc View Source Size(Point) Size Constructor Declaration public Size(Point pt) Parameters Type Name Description Point pt Fields | Improve this Doc View Source Empty Gets a Size structure that has a Height and Width value of 0. Declaration public static readonly Size Empty Field Value Type Description Size Properties | Improve this Doc View Source Height Height Property Declaration public int Height { get; set; } Property Value Type Description int | Improve this Doc View Source IsEmpty IsEmpty Property Declaration public bool IsEmpty { get; } Property Value Type Description bool | Improve this Doc View Source Width Width Property Declaration public int Width { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Add(Size, Size) Adds the width and height of one Size structure to the width and height of another Size structure. Declaration public static Size Add(Size sz1, Size sz2) Parameters Type Name Description Size sz1 The first Size structure to add. Size sz2 The second Size structure to add. Returns Type Description Size The add. | Improve this Doc View Source Equals(object) Equals Method Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source GetHashCode() GetHashCode Method Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Subtract(Size, Size) Subtracts the width and height of one Size structure to the width and height of another Size structure. Declaration public static Size Subtract(Size sz1, Size sz2) Parameters Type Name Description Size sz1 The first Size structure to subtract. Size sz2 The second Size structure to subtract. Returns Type Description Size The subtract. | Improve this Doc View Source ToString() ToString Method Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators | Improve this Doc View Source operator +(Size, Size) Addition Operator Declaration public static Size operator +(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description Size | Improve this Doc View Source operator ==(Size, Size) Equality Operator Declaration public static bool operator ==(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description bool | Improve this Doc View Source explicit operator Point(Size) Size to Point Conversion Declaration public static explicit operator Point(Size size) Parameters Type Name Description Size size Returns Type Description Point | Improve this Doc View Source operator !=(Size, Size) Inequality Operator Declaration public static bool operator !=(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description bool | Improve this Doc View Source operator -(Size, Size) Subtraction Operator Declaration public static Size operator -(Size sz1, Size sz2) Parameters Type Name Description Size sz1 Size sz2 Returns Type Description Size"
  },
  "api/Terminal.Gui/Terminal.Gui.SizeChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SizeChangedEventArgs.html",
    "title": "Class SizeChangedEventArgs",
    "keywords": "Class SizeChangedEventArgs Args for events about Size (e.g. Resized) Inheritance object EventArgs SizeChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SizeChangedEventArgs : EventArgs Constructors | Improve this Doc View Source SizeChangedEventArgs(Size) Creates a new instance of the SizeChangedEventArgs class. Declaration public SizeChangedEventArgs(Size size) Parameters Type Name Description Size size Properties | Improve this Doc View Source Cancel Set to true to cause the resize to be cancelled, if appropriate. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Size Gets the size the event describes. This should reflect the new/current size after the event resolved. Declaration public Size Size { get; } Property Value Type Description Size"
  },
  "api/Terminal.Gui/Terminal.Gui.SizeF.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SizeF.html",
    "title": "Struct SizeF",
    "keywords": "Struct SizeF Represents the size of a rectangular region with an ordered pair of width and height. Implements IEquatable<SizeF> Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public struct SizeF : IEquatable<SizeF> Constructors | Improve this Doc View Source SizeF(float, float) Initializes a new instance of the SizeF class from the specified dimensions. Declaration public SizeF(float width, float height) Parameters Type Name Description float width float height | Improve this Doc View Source SizeF(PointF) Initializes a new instance of the SizeF class from the specified PointF. Declaration public SizeF(PointF pt) Parameters Type Name Description PointF pt | Improve this Doc View Source SizeF(SizeF) Initializes a new instance of the SizeF class from the specified existing SizeF. Declaration public SizeF(SizeF size) Parameters Type Name Description SizeF size Fields | Improve this Doc View Source Empty Initializes a new instance of the SizeF class. Declaration public static readonly SizeF Empty Field Value Type Description SizeF Properties | Improve this Doc View Source Height Represents the vertical component of this SizeF. Declaration public float Height { get; set; } Property Value Type Description float | Improve this Doc View Source IsEmpty Tests whether this SizeF has zero width and height. Declaration [Browsable(false)] public bool IsEmpty { get; } Property Value Type Description bool | Improve this Doc View Source Width Represents the horizontal component of this SizeF. Declaration public float Width { get; set; } Property Value Type Description float Methods | Improve this Doc View Source Add(SizeF, SizeF) Performs vector addition of two SizeF objects. Declaration public static SizeF Add(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source Equals(object) Tests to see whether the specified object is a SizeF with the same dimensions as this SizeF. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides ValueType.Equals(object) | Improve this Doc View Source Equals(SizeF) Tests whether two SizeF objects are identical. Declaration public bool Equals(SizeF other) Parameters Type Name Description SizeF other Returns Type Description bool | Improve this Doc View Source GetHashCode() Generates a hashcode from the width and height Declaration public override int GetHashCode() Returns Type Description int Overrides ValueType.GetHashCode() | Improve this Doc View Source Subtract(SizeF, SizeF) Contracts a SizeF by another SizeF. Declaration public static SizeF Subtract(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source ToString() Creates a human-readable string that represents this SizeF. Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString() Operators | Improve this Doc View Source operator +(SizeF, SizeF) Performs vector addition of two SizeF objects. Declaration public static SizeF operator +(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF | Improve this Doc View Source operator /(SizeF, float) Divides SizeF by a float producing SizeF. Declaration public static SizeF operator /(SizeF left, float right) Parameters Type Name Description SizeF left Dividend of type SizeF. float right Divisor of type int. Returns Type Description SizeF Result of type SizeF. | Improve this Doc View Source operator ==(SizeF, SizeF) Tests whether two SizeF objects are identical. Declaration public static bool operator ==(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description bool | Improve this Doc View Source explicit operator PointF(SizeF) Converts the specified SizeF to a PointF. Declaration public static explicit operator PointF(SizeF size) Parameters Type Name Description SizeF size Returns Type Description PointF | Improve this Doc View Source operator !=(SizeF, SizeF) Tests whether two SizeF objects are different. Declaration public static bool operator !=(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description bool | Improve this Doc View Source operator *(float, SizeF) Multiplies SizeF by a float producing SizeF. Declaration public static SizeF operator *(float left, SizeF right) Parameters Type Name Description float left Multiplier of type float. SizeF right Multiplicand of type SizeF. Returns Type Description SizeF Product of type SizeF. | Improve this Doc View Source operator *(SizeF, float) Multiplies SizeF by a float producing SizeF. Declaration public static SizeF operator *(SizeF left, float right) Parameters Type Name Description SizeF left Multiplicand of type SizeF. float right Multiplier of type float. Returns Type Description SizeF Product of type SizeF. | Improve this Doc View Source operator -(SizeF, SizeF) Contracts a SizeF by another SizeF Declaration public static SizeF operator -(SizeF sz1, SizeF sz2) Parameters Type Name Description SizeF sz1 SizeF sz2 Returns Type Description SizeF Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.Slider-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Slider-1.html",
    "title": "Class Slider<T>",
    "keywords": "Class Slider<T> Provides a slider control letting the user navigate from a set of typed options in a linear manner using the keyboard or mouse. Inheritance object Responder View Slider<T> Slider Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Slider<T> : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Type Parameters Name Description T Constructors | Improve this Doc View Source Slider() Initializes a new instance of the Slider class. Declaration public Slider() | Improve this Doc View Source Slider(List<T>, Orientation) Initializes a new instance of the Slider class. Declaration public Slider(List<T> options, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description List<T> options Initial slider options. Orientation orientation Initial slider orientation. Properties | Improve this Doc View Source AllowEmpty Allow no selection. Declaration public bool AllowEmpty { get; set; } Property Value Type Description bool | Improve this Doc View Source AutoSize If true the slider will be sized to fit the available space (the Bounds of the the SuperView). Declaration public override bool AutoSize { get; set; } Property Value Type Description bool Overrides View.AutoSize | Improve this Doc View Source FocusedOption The focused option (has the cursor). Declaration public int FocusedOption { get; set; } Property Value Type Description int | Improve this Doc View Source InnerSpacing Gets or sets the number of rows/columns between Options Declaration public int InnerSpacing { get; set; } Property Value Type Description int | Improve this Doc View Source LegendsOrientation Legends Orientation. Orientation Declaration public Orientation LegendsOrientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source Options Set the slider options. Declaration public List<SliderOption<T>> Options { get; set; } Property Value Type Description List<SliderOption<T>> | Improve this Doc View Source Orientation Slider Orientation. Orientation Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source RangeAllowSingle Allow range start and end be in the same option, as a single option. Declaration public bool RangeAllowSingle { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowLegends Show/Hide the options legends. Declaration public bool ShowLegends { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowSpacing Show/Hide spacing before and after the first and last option. Declaration public bool ShowSpacing { get; set; } Property Value Type Description bool | Improve this Doc View Source Style Slider styles. SliderStyle Declaration public SliderStyle Style { get; set; } Property Value Type Description SliderStyle | Improve this Doc View Source Type Slider Type. SliderType Declaration public SliderType Type { get; set; } Property Value Type Description SliderType Methods | Improve this Doc View Source AdjustBestHeight() Adjust the height of the Slider to the best value. Declaration public void AdjustBestHeight() | Improve this Doc View Source AdjustBestWidth() Adjust the height of the Slider to the best value. (Only works if height is DimAbsolute). Declaration public void AdjustBestWidth() | Improve this Doc View Source GetSetOptions() Get the indexes of the set options. Declaration public List<int> GetSetOptions() Returns Type Description List<int> | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnOptionFocused(int, SliderEventArgs<T>) Overridable function that fires the OptionFocused event. Declaration public virtual bool OnOptionFocused(int newFocusedOption, SliderEventArgs<T> args) Parameters Type Name Description int newFocusedOption SliderEventArgs<T> args Returns Type Description bool true if the focus change was cancelled. | Improve this Doc View Source OnOptionsChanged() Overridable method called when the slider options have changed. Raises the OptionsChanged event. Declaration public virtual void OnOptionsChanged() | Improve this Doc View Source OnOrientationChanged(Orientation) Called when the slider orientation has changed. Invokes the OrientationChanged event. Declaration public virtual bool OnOrientationChanged(Orientation newOrientation) Parameters Type Name Description Orientation newOrientation Returns Type Description bool True of the event was cancelled. | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source SetOption(int) Causes the specified option to be set and be focused. Declaration public bool SetOption(int optionIndex) Parameters Type Name Description int optionIndex Returns Type Description bool | Improve this Doc View Source UnSetOption(int) Causes the specified option to be un-set and be focused. Declaration public bool UnSetOption(int optionIndex) Parameters Type Name Description int optionIndex Returns Type Description bool Events | Improve this Doc View Source OptionFocused Event raised When the option is hovered with the keys or the mouse. Declaration public event EventHandler<SliderEventArgs<T>> OptionFocused Event Type Type Description EventHandler<SliderEventArgs<T>> | Improve this Doc View Source OptionsChanged Event raised when the slider option/s changed. The dictionary contains: key = option index, value = T Declaration public event EventHandler<SliderEventArgs<T>> OptionsChanged Event Type Type Description EventHandler<SliderEventArgs<T>> | Improve this Doc View Source OrientationChanged Fired when the slider orientation has changed. Can be cancelled by setting Cancel to true. Declaration public event EventHandler<OrientationEventArgs> OrientationChanged Event Type Type Description EventHandler<OrientationEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Slider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Slider.html",
    "title": "Class Slider",
    "keywords": "Class Slider Slider control. Inheritance object Responder View Slider<object> Slider Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Slider<object>.FocusedOption Slider<object>.OptionsChanged Slider<object>.OnOptionsChanged() Slider<object>.OptionFocused Slider<object>.OnOptionFocused(int, SliderEventArgs<object>) Slider<object>.AllowEmpty Slider<object>.AutoSize Slider<object>.InnerSpacing Slider<object>.Type Slider<object>.Orientation Slider<object>.OrientationChanged Slider<object>.OnOrientationChanged(Orientation) Slider<object>.LegendsOrientation Slider<object>.Style Slider<object>.Options Slider<object>.RangeAllowSingle Slider<object>.ShowSpacing Slider<object>.ShowLegends Slider<object>.SetOption(int) Slider<object>.UnSetOption(int) Slider<object>.GetSetOptions() Slider<object>.AdjustBestHeight() Slider<object>.AdjustBestWidth() Slider<object>.PositionCursor() Slider<object>.OnDrawContent(Rect) Slider<object>.MouseEvent(MouseEvent) View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Slider : Slider<object>, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Slider() Initializes a new instance of the Slider class. Declaration public Slider() | Improve this Doc View Source Slider(List<object>, Orientation) Initializes a new instance of the Slider class. Declaration public Slider(List<object> options, Orientation orientation = Orientation.Horizontal) Parameters Type Name Description List<object> options Initial slider options. Orientation orientation Initial slider options. Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderAttributes.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderAttributes.html",
    "title": "Class SliderAttributes",
    "keywords": "Class SliderAttributes Slider<T> Legend Style Inheritance object SliderAttributes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SliderAttributes Properties | Improve this Doc View Source EmptyAttribute Attribute for the Legends Container. Declaration public Attribute? EmptyAttribute { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source NormalAttribute Attribute for when the respective Option is NOT Set. Declaration public Attribute? NormalAttribute { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source SetAttribute Attribute for when the respective Option is Set. Declaration public Attribute? SetAttribute { get; set; } Property Value Type Description Attribute?"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderEventArgs-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderEventArgs-1.html",
    "title": "Class SliderEventArgs<T>",
    "keywords": "Class SliderEventArgs<T> EventArgs for Slider<T> events. Inheritance object EventArgs SliderEventArgs<T> Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SliderEventArgs<T> : EventArgs Type Parameters Name Description T Constructors | Improve this Doc View Source SliderEventArgs(Dictionary<int, SliderOption<T>>, int) Initializes a new instance of SliderEventArgs<T> Declaration public SliderEventArgs(Dictionary<int, SliderOption<T>> options, int focused = -1) Parameters Type Name Description Dictionary<int, SliderOption<T>> options The current options. int focused Index of the option that is focused. -1 if no option has the focus. Properties | Improve this Doc View Source Cancel If set to true, the focus operation will be canceled, if applicable. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source Focused Gets or sets the index of the option that is focused. Declaration public int Focused { get; set; } Property Value Type Description int | Improve this Doc View Source Options Gets/sets whether the option is set or not. Declaration public Dictionary<int, SliderOption<T>> Options { get; set; } Property Value Type Description Dictionary<int, SliderOption<T>>"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderOption-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderOption-1.html",
    "title": "Class SliderOption<T>",
    "keywords": "Class SliderOption<T> Represents an option in a Slider<T> . Inheritance object SliderOption<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SliderOption<T> Type Parameters Name Description T Datatype of the option. Properties | Improve this Doc View Source Data Custom data of the option. Declaration public T Data { get; set; } Property Value Type Description T | Improve this Doc View Source Legend Legend of the option. Declaration public string Legend { get; set; } Property Value Type Description string | Improve this Doc View Source LegendAbbr Abbreviation of the Legend. When the InnerSpacing too small to fit Legend. Declaration public Rune LegendAbbr { get; set; } Property Value Type Description Rune Events | Improve this Doc View Source Changed Event fired when the an option has changed. Declaration public event EventHandler<SliderOptionEventArgs> Changed Event Type Type Description EventHandler<SliderOptionEventArgs> | Improve this Doc View Source Set Event Raised when this option is set. Declaration public event EventHandler<SliderOptionEventArgs> Set Event Type Type Description EventHandler<SliderOptionEventArgs> | Improve this Doc View Source UnSet Event Raised when this option is unset. Declaration public event EventHandler<SliderOptionEventArgs> UnSet Event Type Type Description EventHandler<SliderOptionEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderOptionEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderOptionEventArgs.html",
    "title": "Class SliderOptionEventArgs",
    "keywords": "Class SliderOptionEventArgs EventArgs for Slider<T> SliderOption<T> events. Inheritance object EventArgs SliderOptionEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SliderOptionEventArgs : EventArgs Constructors | Improve this Doc View Source SliderOptionEventArgs(bool) Initializes a new instance of SliderOptionEventArgs Declaration public SliderOptionEventArgs(bool isSet) Parameters Type Name Description bool isSet indicates whether the option is set Properties | Improve this Doc View Source IsSet Gets whether the option is set or not. Declaration public bool IsSet { get; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderStyle.html",
    "title": "Class SliderStyle",
    "keywords": "Class SliderStyle Slider<T> Style Inheritance object SliderStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SliderStyle Constructors | Improve this Doc View Source SliderStyle() Constructs a new instance. Declaration public SliderStyle() Properties | Improve this Doc View Source DragChar The glyph and the attribute to indicate mouse dragging. Declaration public Cell DragChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source EmptyChar The glyph and the attribute used for empty spaces on the slider. Declaration public Cell EmptyChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source EndRangeChar The glyph and the attribute used for the end of ranges on the slider. Declaration public Cell EndRangeChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source LegendAttributes Legend attributes Declaration public SliderAttributes LegendAttributes { get; set; } Property Value Type Description SliderAttributes | Improve this Doc View Source OptionChar The glyph and the attribute used for each option (tick) on the slider. Declaration public Cell OptionChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source RangeChar The glyph and the attribute used for filling in ranges on the slider. Declaration public Cell RangeChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source SetChar The glyph and the attribute used for options (ticks) that are set on the slider. Declaration public Cell SetChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source SpaceChar The glyph and the attribute used for spaces between options (ticks) on the slider. Declaration public Cell SpaceChar { get; set; } Property Value Type Description Cell | Improve this Doc View Source StartRangeChar The glyph and the attribute used for the start of ranges on the slider. Declaration public Cell StartRangeChar { get; set; } Property Value Type Description Cell"
  },
  "api/Terminal.Gui/Terminal.Gui.SliderType.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SliderType.html",
    "title": "Enum SliderType",
    "keywords": "Enum SliderType Slider<T> Types Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum SliderType Fields Name Description LeftRange ├▒▒▒▒▒▒▒▒▒█─┼─┼─┼─┼─┼─┼─┤ Multiple ├─┼─█─┼─┼─█─┼─┼─┼─┼─█─┼─┤ Range ├─┼─┼─┼─┼─█▒▒▒▒▒▒▒█─┼─┼─┤ RightRange ├─┼─┼─┼─┼─█▒▒▒▒▒▒▒▒▒▒▒▒▒┤ Single ├─┼─┼─┼─┼─█─┼─┼─┼─┼─┼─┼─┤"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Aesthetic.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Aesthetic.html",
    "title": "Class SpinnerStyle.Aesthetic",
    "keywords": "Class SpinnerStyle.Aesthetic Inheritance object SpinnerStyle SpinnerStyle.Aesthetic Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Aesthetic : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Aesthetic2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Aesthetic2.html",
    "title": "Class SpinnerStyle.Aesthetic2",
    "keywords": "Class SpinnerStyle.Aesthetic2 Inheritance object SpinnerStyle SpinnerStyle.Aesthetic2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Aesthetic2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arc.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arc.html",
    "title": "Class SpinnerStyle.Arc",
    "keywords": "Class SpinnerStyle.Arc Inheritance object SpinnerStyle SpinnerStyle.Arc Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Arc : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow.html",
    "title": "Class SpinnerStyle.Arrow",
    "keywords": "Class SpinnerStyle.Arrow Inheritance object SpinnerStyle SpinnerStyle.Arrow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Arrow : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow2.html",
    "title": "Class SpinnerStyle.Arrow2",
    "keywords": "Class SpinnerStyle.Arrow2 Inheritance object SpinnerStyle SpinnerStyle.Arrow2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Arrow2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow3.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Arrow3.html",
    "title": "Class SpinnerStyle.Arrow3",
    "keywords": "Class SpinnerStyle.Arrow3 Inheritance object SpinnerStyle SpinnerStyle.Arrow3 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Arrow3 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Balloon.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Balloon.html",
    "title": "Class SpinnerStyle.Balloon",
    "keywords": "Class SpinnerStyle.Balloon Inheritance object SpinnerStyle SpinnerStyle.Balloon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Balloon : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Balloon2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Balloon2.html",
    "title": "Class SpinnerStyle.Balloon2",
    "keywords": "Class SpinnerStyle.Balloon2 Inheritance object SpinnerStyle SpinnerStyle.Balloon2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Balloon2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BetaWave.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BetaWave.html",
    "title": "Class SpinnerStyle.BetaWave",
    "keywords": "Class SpinnerStyle.BetaWave Inheritance object SpinnerStyle SpinnerStyle.BetaWave Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BetaWave : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BluePulse.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BluePulse.html",
    "title": "Class SpinnerStyle.BluePulse",
    "keywords": "Class SpinnerStyle.BluePulse Inheritance object SpinnerStyle SpinnerStyle.BluePulse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BluePulse : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Bounce.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Bounce.html",
    "title": "Class SpinnerStyle.Bounce",
    "keywords": "Class SpinnerStyle.Bounce Inheritance object SpinnerStyle SpinnerStyle.Bounce Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Bounce : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BouncingBall.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BouncingBall.html",
    "title": "Class SpinnerStyle.BouncingBall",
    "keywords": "Class SpinnerStyle.BouncingBall Inheritance object SpinnerStyle SpinnerStyle.BouncingBall Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BouncingBall : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BouncingBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BouncingBar.html",
    "title": "Class SpinnerStyle.BouncingBar",
    "keywords": "Class SpinnerStyle.BouncingBar Inheritance object SpinnerStyle SpinnerStyle.BouncingBar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BouncingBar : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BoxBounce.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BoxBounce.html",
    "title": "Class SpinnerStyle.BoxBounce",
    "keywords": "Class SpinnerStyle.BoxBounce Inheritance object SpinnerStyle SpinnerStyle.BoxBounce Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BoxBounce : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BoxBounce2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.BoxBounce2.html",
    "title": "Class SpinnerStyle.BoxBounce2",
    "keywords": "Class SpinnerStyle.BoxBounce2 Inheritance object SpinnerStyle SpinnerStyle.BoxBounce2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.BoxBounce2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Christmas.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Christmas.html",
    "title": "Class SpinnerStyle.Christmas",
    "keywords": "Class SpinnerStyle.Christmas Inheritance object SpinnerStyle SpinnerStyle.Christmas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Christmas : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Circle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Circle.html",
    "title": "Class SpinnerStyle.Circle",
    "keywords": "Class SpinnerStyle.Circle Inheritance object SpinnerStyle SpinnerStyle.Circle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Circle : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.CircleHalves.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.CircleHalves.html",
    "title": "Class SpinnerStyle.CircleHalves",
    "keywords": "Class SpinnerStyle.CircleHalves Inheritance object SpinnerStyle SpinnerStyle.CircleHalves Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.CircleHalves : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.CircleQuarters.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.CircleQuarters.html",
    "title": "Class SpinnerStyle.CircleQuarters",
    "keywords": "Class SpinnerStyle.CircleQuarters Inheritance object SpinnerStyle SpinnerStyle.CircleQuarters Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.CircleQuarters : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Clock.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Clock.html",
    "title": "Class SpinnerStyle.Clock",
    "keywords": "Class SpinnerStyle.Clock Inheritance object SpinnerStyle SpinnerStyle.Clock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Clock : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Custom.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Custom.html",
    "title": "Class SpinnerStyle.Custom",
    "keywords": "Class SpinnerStyle.Custom Inheritance object SpinnerStyle SpinnerStyle.Custom Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Custom : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots.html",
    "title": "Class SpinnerStyle.Dots",
    "keywords": "Class SpinnerStyle.Dots Inheritance object SpinnerStyle SpinnerStyle.Dots Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots10.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots10.html",
    "title": "Class SpinnerStyle.Dots10",
    "keywords": "Class SpinnerStyle.Dots10 Inheritance object SpinnerStyle SpinnerStyle.Dots10 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots10 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots11.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots11.html",
    "title": "Class SpinnerStyle.Dots11",
    "keywords": "Class SpinnerStyle.Dots11 Inheritance object SpinnerStyle SpinnerStyle.Dots11 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots11 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots12.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots12.html",
    "title": "Class SpinnerStyle.Dots12",
    "keywords": "Class SpinnerStyle.Dots12 Inheritance object SpinnerStyle SpinnerStyle.Dots12 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots12 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots2.html",
    "title": "Class SpinnerStyle.Dots2",
    "keywords": "Class SpinnerStyle.Dots2 Inheritance object SpinnerStyle SpinnerStyle.Dots2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots3.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots3.html",
    "title": "Class SpinnerStyle.Dots3",
    "keywords": "Class SpinnerStyle.Dots3 Inheritance object SpinnerStyle SpinnerStyle.Dots3 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots3 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots4.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots4.html",
    "title": "Class SpinnerStyle.Dots4",
    "keywords": "Class SpinnerStyle.Dots4 Inheritance object SpinnerStyle SpinnerStyle.Dots4 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots4 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots5.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots5.html",
    "title": "Class SpinnerStyle.Dots5",
    "keywords": "Class SpinnerStyle.Dots5 Inheritance object SpinnerStyle SpinnerStyle.Dots5 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots5 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots6.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots6.html",
    "title": "Class SpinnerStyle.Dots6",
    "keywords": "Class SpinnerStyle.Dots6 Inheritance object SpinnerStyle SpinnerStyle.Dots6 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots6 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots7.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots7.html",
    "title": "Class SpinnerStyle.Dots7",
    "keywords": "Class SpinnerStyle.Dots7 Inheritance object SpinnerStyle SpinnerStyle.Dots7 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots7 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots8.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots8.html",
    "title": "Class SpinnerStyle.Dots8",
    "keywords": "Class SpinnerStyle.Dots8 Inheritance object SpinnerStyle SpinnerStyle.Dots8 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots8 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots8Bit.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots8Bit.html",
    "title": "Class SpinnerStyle.Dots8Bit",
    "keywords": "Class SpinnerStyle.Dots8Bit Inheritance object SpinnerStyle SpinnerStyle.Dots8Bit Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots8Bit : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots9.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dots9.html",
    "title": "Class SpinnerStyle.Dots9",
    "keywords": "Class SpinnerStyle.Dots9 Inheritance object SpinnerStyle SpinnerStyle.Dots9 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dots9 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dqpb.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Dqpb.html",
    "title": "Class SpinnerStyle.Dqpb",
    "keywords": "Class SpinnerStyle.Dqpb Inheritance object SpinnerStyle SpinnerStyle.Dqpb Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Dqpb : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Earth.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Earth.html",
    "title": "Class SpinnerStyle.Earth",
    "keywords": "Class SpinnerStyle.Earth Inheritance object SpinnerStyle SpinnerStyle.Earth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Earth : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.FingerDance.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.FingerDance.html",
    "title": "Class SpinnerStyle.FingerDance",
    "keywords": "Class SpinnerStyle.FingerDance Inheritance object SpinnerStyle SpinnerStyle.FingerDance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.FingerDance : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.FistBump.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.FistBump.html",
    "title": "Class SpinnerStyle.FistBump",
    "keywords": "Class SpinnerStyle.FistBump Inheritance object SpinnerStyle SpinnerStyle.FistBump Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.FistBump : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Flip.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Flip.html",
    "title": "Class SpinnerStyle.Flip",
    "keywords": "Class SpinnerStyle.Flip Inheritance object SpinnerStyle SpinnerStyle.Flip Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Flip : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Grenade.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Grenade.html",
    "title": "Class SpinnerStyle.Grenade",
    "keywords": "Class SpinnerStyle.Grenade Inheritance object SpinnerStyle SpinnerStyle.Grenade Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Grenade : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.GrowHorizontal.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.GrowHorizontal.html",
    "title": "Class SpinnerStyle.GrowHorizontal",
    "keywords": "Class SpinnerStyle.GrowHorizontal Inheritance object SpinnerStyle SpinnerStyle.GrowHorizontal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.GrowHorizontal : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.GrowVertical.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.GrowVertical.html",
    "title": "Class SpinnerStyle.GrowVertical",
    "keywords": "Class SpinnerStyle.GrowVertical Inheritance object SpinnerStyle SpinnerStyle.GrowVertical Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.GrowVertical : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Hamburger.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Hamburger.html",
    "title": "Class SpinnerStyle.Hamburger",
    "keywords": "Class SpinnerStyle.Hamburger Inheritance object SpinnerStyle SpinnerStyle.Hamburger Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Hamburger : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Hearts.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Hearts.html",
    "title": "Class SpinnerStyle.Hearts",
    "keywords": "Class SpinnerStyle.Hearts Inheritance object SpinnerStyle SpinnerStyle.Hearts Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Hearts : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.html",
    "title": "Class SpinnerStyle",
    "keywords": "Class SpinnerStyle SpinnerStyles used in a SpinnerView. Inheritance object SpinnerStyle SpinnerStyle.Aesthetic SpinnerStyle.Aesthetic2 SpinnerStyle.Arc SpinnerStyle.Arrow SpinnerStyle.Arrow2 SpinnerStyle.Arrow3 SpinnerStyle.Balloon SpinnerStyle.Balloon2 SpinnerStyle.BetaWave SpinnerStyle.BluePulse SpinnerStyle.Bounce SpinnerStyle.BouncingBall SpinnerStyle.BouncingBar SpinnerStyle.BoxBounce SpinnerStyle.BoxBounce2 SpinnerStyle.Christmas SpinnerStyle.Circle SpinnerStyle.CircleHalves SpinnerStyle.CircleQuarters SpinnerStyle.Clock SpinnerStyle.Custom SpinnerStyle.Dots SpinnerStyle.Dots10 SpinnerStyle.Dots11 SpinnerStyle.Dots12 SpinnerStyle.Dots2 SpinnerStyle.Dots3 SpinnerStyle.Dots4 SpinnerStyle.Dots5 SpinnerStyle.Dots6 SpinnerStyle.Dots7 SpinnerStyle.Dots8 SpinnerStyle.Dots8Bit SpinnerStyle.Dots9 SpinnerStyle.Dqpb SpinnerStyle.Earth SpinnerStyle.FingerDance SpinnerStyle.FistBump SpinnerStyle.Flip SpinnerStyle.Grenade SpinnerStyle.GrowHorizontal SpinnerStyle.GrowVertical SpinnerStyle.Hamburger SpinnerStyle.Hearts SpinnerStyle.Layer SpinnerStyle.Line SpinnerStyle.Line2 SpinnerStyle.Material SpinnerStyle.MindBlown SpinnerStyle.Monkey SpinnerStyle.Moon SpinnerStyle.Noise SpinnerStyle.OrangeBluePulse SpinnerStyle.OrangePulse SpinnerStyle.Pipe SpinnerStyle.Points SpinnerStyle.Pong SpinnerStyle.Runner SpinnerStyle.Shark SpinnerStyle.SimpleDots SpinnerStyle.SimpleDotsScrolling SpinnerStyle.Smiley SpinnerStyle.SoccerHeader SpinnerStyle.Speaker SpinnerStyle.SquareCorners SpinnerStyle.Squish SpinnerStyle.Star SpinnerStyle.Star2 SpinnerStyle.TimeTravelClock SpinnerStyle.Toggle SpinnerStyle.Toggle10 SpinnerStyle.Toggle11 SpinnerStyle.Toggle12 SpinnerStyle.Toggle13 SpinnerStyle.Toggle2 SpinnerStyle.Toggle3 SpinnerStyle.Toggle4 SpinnerStyle.Toggle5 SpinnerStyle.Toggle6 SpinnerStyle.Toggle7 SpinnerStyle.Toggle8 SpinnerStyle.Toggle9 SpinnerStyle.Triangle SpinnerStyle.Weather Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public abstract bool HasSpecialCharacters { get; } Property Value Type Description bool | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public abstract string[] Sequence { get; } Property Value Type Description string[] | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public abstract bool SpinBounce { get; } Property Value Type Description bool | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public abstract int SpinDelay { get; } Property Value Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Layer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Layer.html",
    "title": "Class SpinnerStyle.Layer",
    "keywords": "Class SpinnerStyle.Layer Inheritance object SpinnerStyle SpinnerStyle.Layer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Layer : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Line.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Line.html",
    "title": "Class SpinnerStyle.Line",
    "keywords": "Class SpinnerStyle.Line Inheritance object SpinnerStyle SpinnerStyle.Line Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Line : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Line2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Line2.html",
    "title": "Class SpinnerStyle.Line2",
    "keywords": "Class SpinnerStyle.Line2 Inheritance object SpinnerStyle SpinnerStyle.Line2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Line2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Material.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Material.html",
    "title": "Class SpinnerStyle.Material",
    "keywords": "Class SpinnerStyle.Material Inheritance object SpinnerStyle SpinnerStyle.Material Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Material : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.MindBlown.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.MindBlown.html",
    "title": "Class SpinnerStyle.MindBlown",
    "keywords": "Class SpinnerStyle.MindBlown Inheritance object SpinnerStyle SpinnerStyle.MindBlown Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.MindBlown : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Monkey.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Monkey.html",
    "title": "Class SpinnerStyle.Monkey",
    "keywords": "Class SpinnerStyle.Monkey Inheritance object SpinnerStyle SpinnerStyle.Monkey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Monkey : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Moon.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Moon.html",
    "title": "Class SpinnerStyle.Moon",
    "keywords": "Class SpinnerStyle.Moon Inheritance object SpinnerStyle SpinnerStyle.Moon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Moon : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Noise.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Noise.html",
    "title": "Class SpinnerStyle.Noise",
    "keywords": "Class SpinnerStyle.Noise Inheritance object SpinnerStyle SpinnerStyle.Noise Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Noise : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.OrangeBluePulse.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.OrangeBluePulse.html",
    "title": "Class SpinnerStyle.OrangeBluePulse",
    "keywords": "Class SpinnerStyle.OrangeBluePulse Inheritance object SpinnerStyle SpinnerStyle.OrangeBluePulse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.OrangeBluePulse : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.OrangePulse.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.OrangePulse.html",
    "title": "Class SpinnerStyle.OrangePulse",
    "keywords": "Class SpinnerStyle.OrangePulse Inheritance object SpinnerStyle SpinnerStyle.OrangePulse Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.OrangePulse : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Pipe.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Pipe.html",
    "title": "Class SpinnerStyle.Pipe",
    "keywords": "Class SpinnerStyle.Pipe Inheritance object SpinnerStyle SpinnerStyle.Pipe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Pipe : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Points.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Points.html",
    "title": "Class SpinnerStyle.Points",
    "keywords": "Class SpinnerStyle.Points Inheritance object SpinnerStyle SpinnerStyle.Points Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Points : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Pong.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Pong.html",
    "title": "Class SpinnerStyle.Pong",
    "keywords": "Class SpinnerStyle.Pong Inheritance object SpinnerStyle SpinnerStyle.Pong Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Pong : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Runner.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Runner.html",
    "title": "Class SpinnerStyle.Runner",
    "keywords": "Class SpinnerStyle.Runner Inheritance object SpinnerStyle SpinnerStyle.Runner Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Runner : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Shark.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Shark.html",
    "title": "Class SpinnerStyle.Shark",
    "keywords": "Class SpinnerStyle.Shark Inheritance object SpinnerStyle SpinnerStyle.Shark Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Shark : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SimpleDots.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SimpleDots.html",
    "title": "Class SpinnerStyle.SimpleDots",
    "keywords": "Class SpinnerStyle.SimpleDots Inheritance object SpinnerStyle SpinnerStyle.SimpleDots Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.SimpleDots : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SimpleDotsScrolling.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SimpleDotsScrolling.html",
    "title": "Class SpinnerStyle.SimpleDotsScrolling",
    "keywords": "Class SpinnerStyle.SimpleDotsScrolling Inheritance object SpinnerStyle SpinnerStyle.SimpleDotsScrolling Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.SimpleDotsScrolling : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Smiley.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Smiley.html",
    "title": "Class SpinnerStyle.Smiley",
    "keywords": "Class SpinnerStyle.Smiley Inheritance object SpinnerStyle SpinnerStyle.Smiley Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Smiley : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SoccerHeader.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SoccerHeader.html",
    "title": "Class SpinnerStyle.SoccerHeader",
    "keywords": "Class SpinnerStyle.SoccerHeader Inheritance object SpinnerStyle SpinnerStyle.SoccerHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.SoccerHeader : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Speaker.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Speaker.html",
    "title": "Class SpinnerStyle.Speaker",
    "keywords": "Class SpinnerStyle.Speaker Inheritance object SpinnerStyle SpinnerStyle.Speaker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Speaker : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SquareCorners.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.SquareCorners.html",
    "title": "Class SpinnerStyle.SquareCorners",
    "keywords": "Class SpinnerStyle.SquareCorners Inheritance object SpinnerStyle SpinnerStyle.SquareCorners Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.SquareCorners : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Squish.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Squish.html",
    "title": "Class SpinnerStyle.Squish",
    "keywords": "Class SpinnerStyle.Squish Inheritance object SpinnerStyle SpinnerStyle.Squish Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Squish : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Star.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Star.html",
    "title": "Class SpinnerStyle.Star",
    "keywords": "Class SpinnerStyle.Star Inheritance object SpinnerStyle SpinnerStyle.Star Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Star : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Star2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Star2.html",
    "title": "Class SpinnerStyle.Star2",
    "keywords": "Class SpinnerStyle.Star2 Inheritance object SpinnerStyle SpinnerStyle.Star2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Star2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.TimeTravelClock.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.TimeTravelClock.html",
    "title": "Class SpinnerStyle.TimeTravelClock",
    "keywords": "Class SpinnerStyle.TimeTravelClock Inheritance object SpinnerStyle SpinnerStyle.TimeTravelClock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.TimeTravelClock : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle.html",
    "title": "Class SpinnerStyle.Toggle",
    "keywords": "Class SpinnerStyle.Toggle Inheritance object SpinnerStyle SpinnerStyle.Toggle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle10.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle10.html",
    "title": "Class SpinnerStyle.Toggle10",
    "keywords": "Class SpinnerStyle.Toggle10 Inheritance object SpinnerStyle SpinnerStyle.Toggle10 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle10 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle11.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle11.html",
    "title": "Class SpinnerStyle.Toggle11",
    "keywords": "Class SpinnerStyle.Toggle11 Inheritance object SpinnerStyle SpinnerStyle.Toggle11 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle11 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle12.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle12.html",
    "title": "Class SpinnerStyle.Toggle12",
    "keywords": "Class SpinnerStyle.Toggle12 Inheritance object SpinnerStyle SpinnerStyle.Toggle12 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle12 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle13.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle13.html",
    "title": "Class SpinnerStyle.Toggle13",
    "keywords": "Class SpinnerStyle.Toggle13 Inheritance object SpinnerStyle SpinnerStyle.Toggle13 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle13 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle2.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle2.html",
    "title": "Class SpinnerStyle.Toggle2",
    "keywords": "Class SpinnerStyle.Toggle2 Inheritance object SpinnerStyle SpinnerStyle.Toggle2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle2 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle3.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle3.html",
    "title": "Class SpinnerStyle.Toggle3",
    "keywords": "Class SpinnerStyle.Toggle3 Inheritance object SpinnerStyle SpinnerStyle.Toggle3 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle3 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle4.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle4.html",
    "title": "Class SpinnerStyle.Toggle4",
    "keywords": "Class SpinnerStyle.Toggle4 Inheritance object SpinnerStyle SpinnerStyle.Toggle4 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle4 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle5.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle5.html",
    "title": "Class SpinnerStyle.Toggle5",
    "keywords": "Class SpinnerStyle.Toggle5 Inheritance object SpinnerStyle SpinnerStyle.Toggle5 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle5 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle6.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle6.html",
    "title": "Class SpinnerStyle.Toggle6",
    "keywords": "Class SpinnerStyle.Toggle6 Inheritance object SpinnerStyle SpinnerStyle.Toggle6 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle6 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle7.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle7.html",
    "title": "Class SpinnerStyle.Toggle7",
    "keywords": "Class SpinnerStyle.Toggle7 Inheritance object SpinnerStyle SpinnerStyle.Toggle7 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle7 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle8.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle8.html",
    "title": "Class SpinnerStyle.Toggle8",
    "keywords": "Class SpinnerStyle.Toggle8 Inheritance object SpinnerStyle SpinnerStyle.Toggle8 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle8 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle9.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Toggle9.html",
    "title": "Class SpinnerStyle.Toggle9",
    "keywords": "Class SpinnerStyle.Toggle9 Inheritance object SpinnerStyle SpinnerStyle.Toggle9 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Toggle9 : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Triangle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Triangle.html",
    "title": "Class SpinnerStyle.Triangle",
    "keywords": "Class SpinnerStyle.Triangle Inheritance object SpinnerStyle SpinnerStyle.Triangle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Triangle : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Weather.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerStyle.Weather.html",
    "title": "Class SpinnerStyle.Weather",
    "keywords": "Class SpinnerStyle.Weather Inheritance object SpinnerStyle SpinnerStyle.Weather Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerStyle.Weather : SpinnerStyle Properties | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Declaration public override bool HasSpecialCharacters { get; } Property Value Type Description bool Overrides SpinnerStyle.HasSpecialCharacters | Improve this Doc View Source Sequence Gets or sets the frames used to animate the spinner. Declaration public override string[] Sequence { get; } Property Value Type Description string[] Overrides SpinnerStyle.Sequence | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the Sequence rather than going to the end and starting again at the beginning. Declaration public override bool SpinBounce { get; } Property Value Type Description bool Overrides SpinnerStyle.SpinBounce | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the spin. Defaults to the SpinnerStyle's Interval value. Declaration public override int SpinDelay { get; } Property Value Type Description int Overrides SpinnerStyle.SpinDelay"
  },
  "api/Terminal.Gui/Terminal.Gui.SpinnerView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SpinnerView.html",
    "title": "Class SpinnerView",
    "keywords": "Class SpinnerView A View which displays (by default) a spinning line character. Inheritance object Responder View SpinnerView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks By default animation only occurs when you call AdvanceAnimation(). Use AutoSpin to make the automate calls to AdvanceAnimation(). Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SpinnerView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source SpinnerView() Creates a new instance of the SpinnerView class. Declaration public SpinnerView() Properties | Improve this Doc View Source AutoSpin Gets or sets whether spinning should occur automatically or be manually triggered (e.g. from a background task). Declaration public bool AutoSpin { get; set; } Property Value Type Description bool | Improve this Doc View Source HasSpecialCharacters Gets whether the current spinner style contains emoji or other special characters. Does not check Custom sequences. Declaration public bool HasSpecialCharacters { get; } Property Value Type Description bool | Improve this Doc View Source IsAsciiOnly Gets whether the current spinner style contains only ASCII characters. Also checks Custom sequences. Declaration public bool IsAsciiOnly { get; } Property Value Type Description bool | Improve this Doc View Source Sequence Gets or sets the animation frames used to animate the spinner. Declaration public string[] Sequence { get; set; } Property Value Type Description string[] | Improve this Doc View Source SpinBounce Gets or sets whether spinner should go back and forth through the frames rather than going to the end and starting again at the beginning. Declaration public bool SpinBounce { get; set; } Property Value Type Description bool | Improve this Doc View Source SpinDelay Gets or sets the number of milliseconds to wait between characters in the animation. Declaration public int SpinDelay { get; set; } Property Value Type Description int | Improve this Doc View Source SpinReverse Gets or sets whether spinner should go through the frames in reverse order. If SpinBounce is true, this sets the starting order. Declaration public bool SpinReverse { get; set; } Property Value Type Description bool | Improve this Doc View Source Style Gets or sets the Style used to animate the spinner. Declaration public SpinnerStyle Style { get; set; } Property Value Type Description SpinnerStyle Methods | Improve this Doc View Source AdvanceAnimation() Advances the animation frame and notifies main loop that repainting needs to happen. Repeated calls are ignored based on SpinDelay. Declaration public void AdvanceAnimation() | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.SplitterEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SplitterEventArgs.html",
    "title": "Class SplitterEventArgs",
    "keywords": "Class SplitterEventArgs Provides data for TileView events. Inheritance object EventArgs SplitterEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SplitterEventArgs : EventArgs Constructors | Improve this Doc View Source SplitterEventArgs(TileView, int, Pos) Creates a new instance of the SplitterEventArgs class. Declaration public SplitterEventArgs(TileView tileView, int idx, Pos splitterDistance) Parameters Type Name Description TileView tileView TileView in which splitter is being moved. int idx Index of the splitter being moved in SplitterDistances. Pos splitterDistance The new Pos of the splitter line. Properties | Improve this Doc View Source Idx Gets the index of the splitter that is being moved. This can be used to index SplitterDistances Declaration public int Idx { get; } Property Value Type Description int | Improve this Doc View Source SplitterDistance New position of the splitter line (see SplitterDistances). Declaration public Pos SplitterDistance { get; } Property Value Type Description Pos | Improve this Doc View Source TileView Container (sender) of the event. Declaration public TileView TileView { get; } Property Value Type Description TileView"
  },
  "api/Terminal.Gui/Terminal.Gui.SplitterEventHandler.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SplitterEventHandler.html",
    "title": "Delegate SplitterEventHandler",
    "keywords": "Delegate SplitterEventHandler Represents a method that will handle splitter events. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public delegate void SplitterEventHandler(object sender, SplitterEventArgs e) Parameters Type Name Description object sender SplitterEventArgs e"
  },
  "api/Terminal.Gui/Terminal.Gui.StackExtensions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StackExtensions.html",
    "title": "Class StackExtensions",
    "keywords": "Class StackExtensions Extension of Stack<T> helper to work with specific IEqualityComparer<T> Inheritance object StackExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class StackExtensions Methods | Improve this Doc View Source Contains<T>(Stack<T>, T, IEqualityComparer<T>) Check if the stack object contains the value to find. Declaration public static bool Contains<T>(this Stack<T> stack, T valueToFind, IEqualityComparer<T> comparer = null) Parameters Type Name Description Stack<T> stack The stack object. T valueToFind Value to find. IEqualityComparer<T> comparer The comparison object. Returns Type Description bool true If the value was found.false otherwise. Type Parameters Name Description T The stack object type. | Improve this Doc View Source FindDuplicates<T>(Stack<T>, IEqualityComparer<T>) Find all duplicates stack objects values. Declaration public static Stack<T> FindDuplicates<T>(this Stack<T> stack, IEqualityComparer<T> comparer = null) Parameters Type Name Description Stack<T> stack The stack object. IEqualityComparer<T> comparer The comparison object. Returns Type Description Stack<T> The duplicates stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MoveNext<T>(Stack<T>) Move the first stack object value to the end. Declaration public static void MoveNext<T>(this Stack<T> stack) Parameters Type Name Description Stack<T> stack The stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MovePrevious<T>(Stack<T>) Move the last stack object value to the top. Declaration public static void MovePrevious<T>(this Stack<T> stack) Parameters Type Name Description Stack<T> stack The stack object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source MoveTo<T>(Stack<T>, T, int, IEqualityComparer<T>) Move the stack object value to the index. Declaration public static void MoveTo<T>(this Stack<T> stack, T valueToMove, int index = 0, IEqualityComparer<T> comparer = null) Parameters Type Name Description Stack<T> stack The stack object. T valueToMove Value to move. int index The index where to move. IEqualityComparer<T> comparer The comparison object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source Replace<T>(Stack<T>, T, T, IEqualityComparer<T>) Replaces an stack object values that match with the value to replace. Declaration public static void Replace<T>(this Stack<T> stack, T valueToReplace, T valueToReplaceWith, IEqualityComparer<T> comparer = null) Parameters Type Name Description Stack<T> stack The stack object. T valueToReplace Value to replace. T valueToReplaceWith Value to replace with to what matches the value to replace. IEqualityComparer<T> comparer The comparison object. Type Parameters Name Description T The stack object type. | Improve this Doc View Source Swap<T>(Stack<T>, T, T, IEqualityComparer<T>) Swap two stack objects values that matches with the both values. Declaration public static void Swap<T>(this Stack<T> stack, T valueToSwapFrom, T valueToSwapTo, IEqualityComparer<T> comparer = null) Parameters Type Name Description Stack<T> stack The stack object. T valueToSwapFrom Value to swap from. T valueToSwapTo Value to swap to. IEqualityComparer<T> comparer The comparison object. Type Parameters Name Description T The stack object type."
  },
  "api/Terminal.Gui/Terminal.Gui.StatusBar.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StatusBar.html",
    "title": "Class StatusBar",
    "keywords": "Class StatusBar A status bar is a View that snaps to the bottom of a Toplevel displaying set of StatusItems. The StatusBar should be context sensitive. This means, if the main menu and an open text editor are visible, the items probably shown will be ~F1~ Help ~F2~ Save ~F3~ Load. While a dialog to ask a file to load is executed, the remaining commands will probably be ~F1~ Help. So for each context must be a new instance of a status bar. Inheritance object Responder View StatusBar Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class StatusBar : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source StatusBar() Initializes a new instance of the StatusBar class. Declaration public StatusBar() | Improve this Doc View Source StatusBar(StatusItem[]) Initializes a new instance of the StatusBar class with the specified set of StatusItems. The StatusBar will be drawn on the lowest line of the terminal or SuperView (if not null). Declaration public StatusBar(StatusItem[] items) Parameters Type Name Description StatusItem[] items A list of status bar items. Properties | Improve this Doc View Source Items The items that compose the StatusBar Declaration public StatusItem[] Items { get; set; } Property Value Type Description StatusItem[] | Improve this Doc View Source ShortcutDelimiter Gets or sets shortcut delimiter separator. The default is \"-\". Declaration public static Rune ShortcutDelimiter { get; set; } Property Value Type Description Rune Methods | Improve this Doc View Source AddItemAt(int, StatusItem) Inserts a StatusItem in the specified index of Items. Declaration public void AddItemAt(int index, StatusItem item) Parameters Type Name Description int index The zero-based index at which item should be inserted. StatusItem item The item to insert. | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnInvokeKeyBindings(KeyEventArgs) Low-level API called when a key is pressed to invoke any key bindings set on the view. This is called after OnKeyPressed(KeyEventArgs). Fires the InvokingKeyBindings event. Declaration public override bool OnInvokeKeyBindings(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnInvokeKeyBindings(KeyEventArgs) | Improve this Doc View Source RemoveItem(int) Removes a StatusItem at specified index of Items. Declaration public StatusItem RemoveItem(int index) Parameters Type Name Description int index The zero-based index of the item to remove. Returns Type Description StatusItem The StatusItem removed. Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.StatusItem.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StatusItem.html",
    "title": "Class StatusItem",
    "keywords": "Class StatusItem StatusItem objects are contained by StatusBar Views. Each StatusItem has a title, a shortcut (hotkey), and an Command that will be invoked when the Shortcut is pressed. The Shortcut will be a global hotkey for the application in the current context of the screen. The color of the Title will be changed after each ~. A Title set to `~F1~ Help` will render as *F1* using HotNormal and *Help* as HotNormal. Inheritance object StatusItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class StatusItem Constructors | Improve this Doc View Source StatusItem(Key, string, Action, Func<bool>) Initializes a new StatusItem. Declaration public StatusItem(Key shortcut, string title, Action action, Func<bool> canExecute = null) Parameters Type Name Description Key shortcut Shortcut to activate the StatusItem. string title Title for the StatusItem. Action action Action to invoke when the StatusItem is activated. Func<bool> canExecute Function to determine if the action can currently be executed. Properties | Improve this Doc View Source Action Gets or sets the action to be invoked when the statusbar item is triggered Declaration public Action Action { get; set; } Property Value Type Description Action Action to invoke. | Improve this Doc View Source CanExecute Gets or sets the action to be invoked to determine if the StatusItem can be triggered. If CanExecute returns true the status item will be enabled. Otherwise, it will be disabled. Declaration public Func<bool> CanExecute { get; set; } Property Value Type Description Func<bool> Function to determine if the action is can be executed or not. | Improve this Doc View Source Data Gets or sets arbitrary data for the status item. Declaration public object Data { get; set; } Property Value Type Description object | Improve this Doc View Source Shortcut Gets the global shortcut to invoke the action on the menu. Declaration public Key Shortcut { get; set; } Property Value Type Description Key | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description string The title. Methods | Improve this Doc View Source IsEnabled() Returns true if the status item is enabled. This method is a wrapper around CanExecute. Declaration public bool IsEnabled() Returns Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.StepChangeEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StepChangeEventArgs.html",
    "title": "Class StepChangeEventArgs",
    "keywords": "Class StepChangeEventArgs EventArgs for WizardStep events. Inheritance object EventArgs StepChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class StepChangeEventArgs : EventArgs Constructors | Improve this Doc View Source StepChangeEventArgs(WizardStep, WizardStep) Initializes a new instance of StepChangeEventArgs Declaration public StepChangeEventArgs(WizardStep oldStep, WizardStep newStep) Parameters Type Name Description WizardStep oldStep The current WizardStep. WizardStep newStep The new WizardStep. Properties | Improve this Doc View Source Cancel Event handlers can set to true before returning to cancel the step transition. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source NewStep The WizardStep the Wizard is changing to or has changed to. Declaration public WizardStep NewStep { get; } Property Value Type Description WizardStep | Improve this Doc View Source OldStep The current (or previous) WizardStep. Declaration public WizardStep OldStep { get; } Property Value Type Description WizardStep"
  },
  "api/Terminal.Gui/Terminal.Gui.StraightLine.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StraightLine.html",
    "title": "Class StraightLine",
    "keywords": "Class StraightLine A line between two points on a horizontal or vertical Orientation and a given style/color. Inheritance object StraightLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class StraightLine Constructors | Improve this Doc View Source StraightLine(Point, int, Orientation, LineStyle, Attribute?) Creates a new instance of the StraightLine class. Declaration public StraightLine(Point start, int length, Orientation orientation, LineStyle style, Attribute? attribute = null) Parameters Type Name Description Point start int length Orientation orientation LineStyle style Attribute? attribute Properties | Improve this Doc View Source Attribute Gets or sets the color of the line. Declaration public Attribute? Attribute { get; set; } Property Value Type Description Attribute? | Improve this Doc View Source Length Gets or sets the length of the line. Declaration public int Length { get; set; } Property Value Type Description int | Improve this Doc View Source Orientation Gets or sets the orientation (horizontal or vertical) of the line. Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source Start Gets or sets where the line begins. Declaration public Point Start { get; set; } Property Value Type Description Point | Improve this Doc View Source Style Gets or sets the line style of the line (e.g. dotted, double). Declaration public LineStyle Style { get; set; } Property Value Type Description LineStyle Methods | Improve this Doc View Source ToString() Formats the Line as a string in (Start.X,Start.Y,Length,Orientation) notation. Declaration public override string ToString() Returns Type Description string Overrides object.ToString()"
  },
  "api/Terminal.Gui/Terminal.Gui.StraightLineExtensions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StraightLineExtensions.html",
    "title": "Class StraightLineExtensions",
    "keywords": "Class StraightLineExtensions Extension methods for StraightLine (including collections). Inheritance object StraightLineExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class StraightLineExtensions Methods | Improve this Doc View Source Exclude(IEnumerable<StraightLine>, Point, int, Orientation) Splits or removes all lines in the collection such that none cover the given exclusion area. Declaration public static IEnumerable<StraightLine> Exclude(this IEnumerable<StraightLine> collection, Point start, int length, Orientation orientation) Parameters Type Name Description IEnumerable<StraightLine> collection Lines to adjust Point start First point to remove from collection int length The number of sequential points to exclude Orientation orientation Orientation of the exclusion line Returns Type Description IEnumerable<StraightLine>"
  },
  "api/Terminal.Gui/Terminal.Gui.StringExtensions.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.StringExtensions.html",
    "title": "Class StringExtensions",
    "keywords": "Class StringExtensions Extensions to string to support TUI text manipulation. Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source DecodeLastRune(string, int) Unpacks the last UTF-8 encoding in the string. Declaration public static (Rune rune, int size) DecodeLastRune(this string str, int end = -1) Parameters Type Name Description string str The string to decode. int end Index in string to stop at; if -1, use the buffer length. Returns Type Description (Rune Rune, int Size) | Improve this Doc View Source DecodeRune(string, int, int) Unpacks the first UTF-8 encoding in the string and returns the rune and its width in bytes. Declaration public static (Rune Rune, int Size) DecodeRune(this string str, int start = 0, int count = -1) Parameters Type Name Description string str The string to decode. int start Starting offset. int count Number of bytes in the buffer, or -1 to make it the length of the buffer. Returns Type Description (Rune Rune, int Size) | Improve this Doc View Source GetColumns(string) Gets the number of columns the string occupies in the terminal. Declaration public static int GetColumns(this string str) Parameters Type Name Description string str The string to measure. Returns Type Description int | Improve this Doc View Source GetRuneCount(string) Gets the number of runes in the string. Declaration public static int GetRuneCount(this string str) Parameters Type Name Description string str The string to count. Returns Type Description int | Improve this Doc View Source Repeat(string, int) Repeats the string n times. Declaration public static string? Repeat(this string str, int n) Parameters Type Name Description string str The text to repeat. int n Number of times to repeat the text. Returns Type Description string The text repeated if n is greater than zero, otherwise null. | Improve this Doc View Source ToRuneList(string) Converts the string into a List<T>. Declaration public static List<Rune> ToRuneList(this string str) Parameters Type Name Description string str The string to convert. Returns Type Description List<Rune> | Improve this Doc View Source ToRunes(string) Converts the string into a Rune array. Declaration public static Rune[] ToRunes(this string str) Parameters Type Name Description string str The string to convert. Returns Type Description Rune[] | Improve this Doc View Source ToString(IEnumerable<byte>, Encoding?) Converts a byte generic collection into a string in the provided encoding (default is UTF8) Declaration public static string ToString(IEnumerable<byte> bytes, Encoding? encoding = null) Parameters Type Name Description IEnumerable<byte> bytes The enumerable byte to convert. Encoding encoding The encoding to be used. Returns Type Description string | Improve this Doc View Source ToString(IEnumerable<Rune>) Converts a Rune generic collection into a string. Declaration public static string ToString(IEnumerable<Rune> runes) Parameters Type Name Description IEnumerable<Rune> runes The enumerable rune to convert. Returns Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.Suggestion.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Suggestion.html",
    "title": "Class Suggestion",
    "keywords": "Class Suggestion A replacement suggestion made by IAutocomplete Inheritance object Suggestion Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Suggestion Constructors | Improve this Doc View Source Suggestion(int, string, string) Creates a new instance of the Suggestion class. Declaration public Suggestion(int remove, string replacement, string title = null) Parameters Type Name Description int remove string replacement string title User visible title for the suggestion or null if the same as replacement. Properties | Improve this Doc View Source Remove The number of characters to remove at the current cursor position before adding the Replacement Declaration public int Remove { get; } Property Value Type Description int | Improve this Doc View Source Replacement The replacement text that will be added Declaration public string Replacement { get; } Property Value Type Description string | Improve this Doc View Source Title The user visible description for the Replacement. Typically this would be the same as Replacement but may vary in advanced use cases (e.g. Title= \"ctor\", Replacement = \"MyClass()\\n{\\n}\") Declaration public string Title { get; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.SuperViewChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.SuperViewChangedEventArgs.html",
    "title": "Class SuperViewChangedEventArgs",
    "keywords": "Class SuperViewChangedEventArgs Args for events where the SuperView of a View is changed (e.g. Removed / Added events). Inheritance object EventArgs SuperViewChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class SuperViewChangedEventArgs : EventArgs Constructors | Improve this Doc View Source SuperViewChangedEventArgs(View, View) Creates a new instance of the SuperViewChangedEventArgs class. Declaration public SuperViewChangedEventArgs(View parent, View child) Parameters Type Name Description View parent View child Properties | Improve this Doc View Source Child The view that is having it's SuperView changed Declaration public View Child { get; } Property Value Type Description View | Improve this Doc View Source Parent The parent. For Removed this is the old parent (new parent now being null). For Added it is the new parent to whom view now belongs. Declaration public View Parent { get; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.Tab.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Tab.html",
    "title": "Class Tab",
    "keywords": "Class Tab A single tab in a TabView Inheritance object Tab Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Tab Constructors | Improve this Doc View Source Tab() Creates a new unamed tab with no controls inside Declaration public Tab() | Improve this Doc View Source Tab(string, View) Creates a new tab with the given text hosting a view Declaration public Tab(string text, View view) Parameters Type Name Description string text View view Properties | Improve this Doc View Source Text The text to display in a TabView Declaration public string Text { get; set; } Property Value Type Description string | Improve this Doc View Source View The control to display when the tab is selected Declaration public View View { get; set; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.TabChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabChangedEventArgs.html",
    "title": "Class TabChangedEventArgs",
    "keywords": "Class TabChangedEventArgs Describes a change in SelectedTab Inheritance object EventArgs TabChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TabChangedEventArgs : EventArgs Constructors | Improve this Doc View Source TabChangedEventArgs(Tab, Tab) Documents a tab change Declaration public TabChangedEventArgs(Tab oldTab, Tab newTab) Parameters Type Name Description Tab oldTab Tab newTab Properties | Improve this Doc View Source NewTab The currently selected tab. May be null Declaration public Tab NewTab { get; } Property Value Type Description Tab | Improve this Doc View Source OldTab The previously selected tab. May be null Declaration public Tab OldTab { get; } Property Value Type Description Tab"
  },
  "api/Terminal.Gui/Terminal.Gui.TableCollectionNavigator.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableCollectionNavigator.html",
    "title": "Class TableCollectionNavigator",
    "keywords": "Class TableCollectionNavigator Collection navigator for cycling selections in a TableView. Inheritance object CollectionNavigatorBase TableCollectionNavigator Inherited Members CollectionNavigatorBase.TypingDelay CollectionNavigatorBase.Comparer CollectionNavigatorBase.SearchStringChanged CollectionNavigatorBase.SearchString CollectionNavigatorBase.OnSearchStringChanged(KeystrokeNavigatorEventArgs) CollectionNavigatorBase.GetNextMatchingItem(int, char) CollectionNavigatorBase.IsCompatibleKey(KeyEventArgs) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TableCollectionNavigator : CollectionNavigatorBase Constructors | Improve this Doc View Source TableCollectionNavigator(TableView) Creates a new instance for navigating the data in the wrapped tableView. Declaration public TableCollectionNavigator(TableView tableView) Parameters Type Name Description TableView tableView Methods | Improve this Doc View Source ElementAt(int) Returns the collection being navigated element at idx. Declaration protected override object ElementAt(int idx) Parameters Type Name Description int idx Returns Type Description object Overrides CollectionNavigatorBase.ElementAt(int) | Improve this Doc View Source GetCollectionLength() Return the number of elements in the collection Declaration protected override int GetCollectionLength() Returns Type Description int Overrides CollectionNavigatorBase.GetCollectionLength()"
  },
  "api/Terminal.Gui/Terminal.Gui.TableSelection.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableSelection.html",
    "title": "Class TableSelection",
    "keywords": "Class TableSelection Describes a selected region of the table Inheritance object TableSelection Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TableSelection Constructors | Improve this Doc View Source TableSelection(Point, Rect) Creates a new selected area starting at the origin corner and covering the provided rectangular area Declaration public TableSelection(Point origin, Rect rect) Parameters Type Name Description Point origin Rect rect Properties | Improve this Doc View Source IsToggled True if the selection was made through ToggleChecked and therefore should persist even through keyboard navigation. Declaration public bool IsToggled { get; set; } Property Value Type Description bool | Improve this Doc View Source Origin Corner of the Rect where selection began Declaration public Point Origin { get; set; } Property Value Type Description Point | Improve this Doc View Source Rect Area selected Declaration public Rect Rect { get; set; } Property Value Type Description Rect"
  },
  "api/Terminal.Gui/Terminal.Gui.TableStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableStyle.html",
    "title": "Class TableStyle",
    "keywords": "Class TableStyle Defines rendering options that affect how the table is displayed. See TableView Deep Dive for more information. Inheritance object TableStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TableStyle Properties | Improve this Doc View Source AlwaysShowHeaders When scrolling down always lock the column headers in place as the first row of the table Declaration public bool AlwaysShowHeaders { get; set; } Property Value Type Description bool | Improve this Doc View Source AlwaysUseNormalColorForVerticalCellLines Gets or sets a flag indicating whether to force Normal use when rendering vertical cell lines (even when FullRowSelect is on). Declaration public bool AlwaysUseNormalColorForVerticalCellLines { get; set; } Property Value Type Description bool | Improve this Doc View Source ColumnStyles Collection of columns for which you want special rendering (e.g. custom column lengths, text alignment etc) Declaration public Dictionary<int, ColumnStyle> ColumnStyles { get; set; } Property Value Type Description Dictionary<int, ColumnStyle> | Improve this Doc View Source ExpandLastColumn Determines rendering when the last column in the table is visible but it's content or MaxWidth is less than the remaining space in the control. True (the default) will expand the column to fill the remaining bounds of the control. False will draw a column ending line and leave a blank column that cannot be selected in the remaining space. Declaration public bool ExpandLastColumn { get; set; } Property Value Type Description bool | Improve this Doc View Source InvertSelectedCellFirstCharacter True to invert the colors of the first symbol of the selected cell in the TableView. This gives the appearance of a cursor for when the ConsoleDriver doesn't otherwise show this Declaration public bool InvertSelectedCellFirstCharacter { get; set; } Property Value Type Description bool | Improve this Doc View Source RowColorGetter Delegate for coloring specific rows in a different color. For cell color ColorGetter Declaration public RowColorGetterDelegate RowColorGetter { get; set; } Property Value Type Description RowColorGetterDelegate | Improve this Doc View Source ShowHeaders Gets or sets a flag indicating whether to render headers of a TableView. Defaults to true. Declaration public bool ShowHeaders { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowHorizontalBottomline Gets or sets a flag indicating whether there should be a horizontal line after all the data in the table. Defaults to false. Declaration public bool ShowHorizontalBottomline { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowHorizontalHeaderOverline True to render a solid line above the headers Declaration public bool ShowHorizontalHeaderOverline { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowHorizontalHeaderUnderline True to render a solid line under the headers Declaration public bool ShowHorizontalHeaderUnderline { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowHorizontalScrollIndicators True to render a arrows on the right/left of the table when there are more column(s) that can be scrolled to. Requires ShowHorizontalHeaderUnderline to be true. Defaults to true Declaration public bool ShowHorizontalScrollIndicators { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowVerticalCellLines True to render a solid line vertical line between cells Declaration public bool ShowVerticalCellLines { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowVerticalHeaderLines True to render a solid line vertical line between headers Declaration public bool ShowVerticalHeaderLines { get; set; } Property Value Type Description bool | Improve this Doc View Source SmoothHorizontalScrolling Determines how ColumnOffset is updated when scrolling right off the end of the currently visible area. If true then when scrolling right the scroll offset is increased the minimum required to show the new column. This may be slow if you have an incredibly large number of columns in your table and/or slow RepresentationGetter implementations If false then scroll offset is set to the currently selected column (i.e. PageRight). Declaration public bool SmoothHorizontalScrolling { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source GetColumnStyleIfAny(int) Returns the entry from ColumnStyles for the given col or null if no custom styling is defined for it Declaration public ColumnStyle GetColumnStyleIfAny(int col) Parameters Type Name Description int col Returns Type Description ColumnStyle | Improve this Doc View Source GetOrCreateColumnStyle(int) Returns an existing ColumnStyle for the given col or creates a new one with default options Declaration public ColumnStyle GetOrCreateColumnStyle(int col) Parameters Type Name Description int col Returns Type Description ColumnStyle"
  },
  "api/Terminal.Gui/Terminal.Gui.TableView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TableView.html",
    "title": "Class TableView",
    "keywords": "Class TableView View for tabular data based on a ITableSource. See TableView Deep Dive for more information. Inheritance object Responder View TableView Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TableView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TableView() Initializes a TableView class using Computed layout. Set the Table property to begin editing Declaration public TableView() | Improve this Doc View Source TableView(ITableSource) Initializes a TableView class using Computed layout. Declaration public TableView(ITableSource table) Parameters Type Name Description ITableSource table The table to display in the control Fields | Improve this Doc View Source DefaultMaxCellWidth The default maximum cell width for MaxCellWidth and MaxWidth Declaration public const int DefaultMaxCellWidth = 100 Field Value Type Description int | Improve this Doc View Source DefaultMinAcceptableWidth The default minimum cell width for MinAcceptableWidth Declaration public const int DefaultMinAcceptableWidth = 100 Field Value Type Description int Properties | Improve this Doc View Source CellActivationKey The key which when pressed should trigger CellActivated event. Defaults to Enter. Declaration public Key CellActivationKey { get; set; } Property Value Type Description Key | Improve this Doc View Source CollectionNavigator Navigator for cycling the selected item in the table by typing. Set to null to disable this feature. Declaration public CollectionNavigatorBase CollectionNavigator { get; set; } Property Value Type Description CollectionNavigatorBase | Improve this Doc View Source ColumnOffset Horizontal scroll offset. The index of the first column in Table to display when when rendering the view. Declaration public int ColumnOffset { get; set; } Property Value Type Description int | Improve this Doc View Source FullRowSelect True to select the entire row at once. False to select individual cells. Defaults to false Declaration public bool FullRowSelect { get; set; } Property Value Type Description bool | Improve this Doc View Source MaxCellWidth The maximum number of characters to render in any given column. This prevents one long column from pushing out all the others Declaration public int MaxCellWidth { get; set; } Property Value Type Description int | Improve this Doc View Source MinCellWidth The minimum number of characters to render in any given column. Declaration public int MinCellWidth { get; set; } Property Value Type Description int | Improve this Doc View Source MultiSelect True to allow regions to be selected Declaration public bool MultiSelect { get; set; } Property Value Type Description bool | Improve this Doc View Source MultiSelectedRegions When MultiSelect is enabled this property contain all rectangles of selected cells. Rectangles describe column/rows selected in Table (not screen coordinates) Declaration public Stack<TableSelection> MultiSelectedRegions { get; } Property Value Type Description Stack<TableSelection> | Improve this Doc View Source NullSymbol The text representation that should be rendered for cells with the value Value Declaration public string NullSymbol { get; set; } Property Value Type Description string | Improve this Doc View Source RowOffset Vertical scroll offset. The index of the first row in Table to display in the first non header line of the control when rendering the view. Declaration public int RowOffset { get; set; } Property Value Type Description int | Improve this Doc View Source SelectedColumn The index of Columns in Table that the user has currently selected Declaration public int SelectedColumn { get; set; } Property Value Type Description int | Improve this Doc View Source SelectedRow The index of Rows in Table that the user has currently selected Declaration public int SelectedRow { get; set; } Property Value Type Description int | Improve this Doc View Source SeparatorSymbol The symbol to add after each cell value and header value to visually seperate values (if not using vertical gridlines) Declaration public char SeparatorSymbol { get; set; } Property Value Type Description char | Improve this Doc View Source Style Contains options for changing how the table is rendered Declaration public TableStyle Style { get; set; } Property Value Type Description TableStyle | Improve this Doc View Source Table The data table to render in the view. Setting this property automatically updates and redraws the control. Declaration public ITableSource Table { get; set; } Property Value Type Description ITableSource Methods | Improve this Doc View Source CellToScreen(int, int) Returns the screen position (relative to the control client area) that the given cell is rendered or null if it is outside the current scroll area or no table is loaded Declaration public Point? CellToScreen(int tableColumn, int tableRow) Parameters Type Name Description int tableColumn The index of the Table column you are looking for int tableRow The index of the row in Table that you are looking for Returns Type Description Point? | Improve this Doc View Source ChangeSelectionByOffset(int, int, bool) Moves the SelectedRow and SelectedColumn by the provided offsets. Optionally starting a box selection (see MultiSelect) Declaration public void ChangeSelectionByOffset(int offsetX, int offsetY, bool extendExistingSelection) Parameters Type Name Description int offsetX Offset in number of columns int offsetY Offset in number of rows bool extendExistingSelection True to create a multi cell selection or adjust an existing one | Improve this Doc View Source ChangeSelectionToEndOfRow(bool) Moves or extends the selection to the last cell in the current row Declaration public void ChangeSelectionToEndOfRow(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToEndOfTable(bool) Moves or extends the selection to the final cell in the table (nX,nY). If FullRowSelect is enabled then selection instead moves to (SelectedColumn,nY) i.e. no horizontal scrolling. Declaration public void ChangeSelectionToEndOfTable(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToStartOfRow(bool) Moves or extends the selection to the first cell in the current row Declaration public void ChangeSelectionToStartOfRow(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source ChangeSelectionToStartOfTable(bool) Moves or extends the selection to the first cell in the table (0,0). If FullRowSelect is enabled then selection instead moves to (SelectedColumn,0) i.e. no horizontal scrolling. Declaration public void ChangeSelectionToStartOfTable(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source EnsureSelectedCellIsVisible() Updates scroll offsets to ensure that the selected cell is visible. Has no effect if Table has not been set. Declaration public void EnsureSelectedCellIsVisible() | Improve this Doc View Source EnsureValidScrollOffsets() Updates ColumnOffset and RowOffset where they are outside the bounds of the table (by adjusting them to the nearest existing cell). Has no effect if Table has not been set. Declaration public void EnsureValidScrollOffsets() | Improve this Doc View Source EnsureValidSelection() Updates SelectedColumn, SelectedRow and MultiSelectedRegions where they are outside the bounds of the table (by adjusting them to the nearest existing cell). Has no effect if Table has not been set. Declaration public void EnsureValidSelection() | Improve this Doc View Source GetAllSelectedCells() Returns all cells in any MultiSelectedRegions (if MultiSelect is enabled) and the selected cell Declaration public IEnumerable<Point> GetAllSelectedCells() Returns Type Description IEnumerable<Point> | Improve this Doc View Source IsSelected(int, int) Returns true if the given cell is selected either because it is the active cell or part of a multi cell selection (e.g. FullRowSelect). Returns false if Visible is false. Declaration public bool IsSelected(int col, int row) Parameters Type Name Description int col int row Returns Type Description bool | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnCellActivated(CellActivatedEventArgs) Invokes the CellActivated event Declaration protected virtual void OnCellActivated(CellActivatedEventArgs args) Parameters Type Name Description CellActivatedEventArgs args | Improve this Doc View Source OnCellToggled(CellToggledEventArgs) Invokes the CellToggled event Declaration protected virtual void OnCellToggled(CellToggledEventArgs args) Parameters Type Name Description CellToggledEventArgs args | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnSelectedCellChanged(SelectedCellChangedEventArgs) Invokes the SelectedCellChanged event Declaration protected virtual void OnSelectedCellChanged(SelectedCellChangedEventArgs args) Parameters Type Name Description SelectedCellChangedEventArgs args | Improve this Doc View Source PageDown(bool) Moves the selection down by one page Declaration public void PageDown(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source PageUp(bool) Moves the selection up by one page Declaration public void PageUp(bool extend) Parameters Type Name Description bool extend true to extend the current selection (if any) instead of replacing | Improve this Doc View Source PositionCursor() Positions the cursor in the area of the screen in which the start of the active cell is rendered. Calls base implementation if active cell is not visible due to scrolling or table is loaded etc Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source RenderCell(Attribute, string, bool) Override to provide custom multi colouring to cells. Use Driver to with AddStr(string). The driver will already be in the correct place when rendering and you must render the full render or the view will not look right. For simpler provision of color use ColorGetter For changing the content that is rendered use RepresentationGetter Declaration protected virtual void RenderCell(Attribute cellColor, string render, bool isPrimaryCell) Parameters Type Name Description Attribute cellColor string render bool isPrimaryCell | Improve this Doc View Source ScreenToCell(int, int, out int?, out int?) . Returns the column and row of Table that corresponds to a given point on the screen (relative to the control client area). Returns null if the point is in the header, no table is loaded or outside the control bounds. Declaration public Point? ScreenToCell(int clientX, int clientY, out int? headerIfAny, out int? offsetX) Parameters Type Name Description int clientX X offset from the top left of the control. int clientY Y offset from the top left of the control. int? headerIfAny If the click is in a header this is the column clicked. int? offsetX The horizontal offset of the click within the returned cell. Returns Type Description Point? | Improve this Doc View Source ScreenToCell(int, int, out int?) . Returns the column and row of Table that corresponds to a given point on the screen (relative to the control client area). Returns null if the point is in the header, no table is loaded or outside the control bounds. Declaration public Point? ScreenToCell(int clientX, int clientY, out int? headerIfAny) Parameters Type Name Description int clientX X offset from the top left of the control. int clientY Y offset from the top left of the control. int? headerIfAny If the click is in a header this is the column clicked. Returns Type Description Point? | Improve this Doc View Source ScreenToCell(int, int) . Returns the column and row of Table that corresponds to a given point on the screen (relative to the control client area). Returns null if the point is in the header, no table is loaded or outside the control bounds. Declaration public Point? ScreenToCell(int clientX, int clientY) Parameters Type Name Description int clientX X offset from the top left of the control. int clientY Y offset from the top left of the control. Returns Type Description Point? Cell clicked or null. | Improve this Doc View Source SelectAll() When MultiSelect is on, creates selection over all cells in the table (replacing any old selection regions) Declaration public void SelectAll() | Improve this Doc View Source SetSelection(int, int, bool) Moves the SelectedRow and SelectedColumn to the given col/row in Table. Optionally starting a box selection (see MultiSelect) Declaration public void SetSelection(int col, int row, bool extendExistingSelection) Parameters Type Name Description int col int row bool extendExistingSelection True to create a multi cell selection or adjust an existing one | Improve this Doc View Source Update() Updates the view to reflect changes to Table and to (ColumnOffset / RowOffset) etc Declaration public void Update() Events | Improve this Doc View Source CellActivated This event is raised when a cell is activated e.g. by double clicking or pressing CellActivationKey Declaration public event EventHandler<CellActivatedEventArgs> CellActivated Event Type Type Description EventHandler<CellActivatedEventArgs> | Improve this Doc View Source CellToggled This event is raised when a cell is toggled (see ToggleChecked Declaration public event EventHandler<CellToggledEventArgs> CellToggled Event Type Type Description EventHandler<CellToggledEventArgs> | Improve this Doc View Source SelectedCellChanged This event is raised when the selected cell in the table changes. Declaration public event EventHandler<SelectedCellChangedEventArgs> SelectedCellChanged Event Type Type Description EventHandler<SelectedCellChangedEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TabMouseEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabMouseEventArgs.html",
    "title": "Class TabMouseEventArgs",
    "keywords": "Class TabMouseEventArgs Describes a mouse event over a specific Tab in a TabView. Inheritance object EventArgs TabMouseEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TabMouseEventArgs : EventArgs Constructors | Improve this Doc View Source TabMouseEventArgs(Tab, MouseEvent) Creates a new instance of the TabMouseEventArgs class. Declaration public TabMouseEventArgs(Tab tab, MouseEvent mouseEvent) Parameters Type Name Description Tab tab Tab that the mouse was over when the event occurred. MouseEvent mouseEvent The mouse activity being reported Properties | Improve this Doc View Source MouseEvent Gets the actual mouse event. Use Handled to cancel this event and perform custom behavior (e.g. show a context menu). Declaration public MouseEvent MouseEvent { get; } Property Value Type Description MouseEvent | Improve this Doc View Source Tab Gets the Tab (if any) that the mouse was over when the MouseEvent occurred. Declaration public Tab Tab { get; } Property Value Type Description Tab"
  },
  "api/Terminal.Gui/Terminal.Gui.TabStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabStyle.html",
    "title": "Class TabStyle",
    "keywords": "Class TabStyle Describes render stylistic selections of a TabView Inheritance object TabStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TabStyle Properties | Improve this Doc View Source ShowBorder True to show a solid box around the edge of the control. Defaults to true. Declaration public bool ShowBorder { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowTopLine True to show the top lip of tabs. False to directly begin with tab text during rendering. When true header line occupies 3 rows, when false only 2. Defaults to true. When TabsOnBottom is enabled this instead applies to the bottommost line of the control Declaration public bool ShowTopLine { get; set; } Property Value Type Description bool | Improve this Doc View Source TabsOnBottom True to render tabs at the bottom of the view instead of the top Declaration public bool TabsOnBottom { get; set; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.TabView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TabView.html",
    "title": "Class TabView",
    "keywords": "Class TabView Control that hosts multiple sub views, presenting a single one at once Inheritance object Responder View TabView Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TabView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TabView() Initializes a TabView class using Computed layout. Declaration public TabView() Fields | Improve this Doc View Source DefaultMaxTabTextWidth The default MaxTabTextWidth to set on new TabView controls Declaration public const uint DefaultMaxTabTextWidth = 30 Field Value Type Description uint Properties | Improve this Doc View Source MaxTabTextWidth The maximum number of characters to render in a Tab header. This prevents one long tab from pushing out all the others. Declaration public uint MaxTabTextWidth { get; set; } Property Value Type Description uint | Improve this Doc View Source SelectedTab The currently selected member of Tabs chosen by the user Declaration public Tab SelectedTab { get; set; } Property Value Type Description Tab | Improve this Doc View Source Style Render choices for how to display tabs. After making changes, call ApplyStyleChanges() Declaration public TabStyle Style { get; set; } Property Value Type Description TabStyle | Improve this Doc View Source Tabs All tabs currently hosted by the control Declaration public IReadOnlyCollection<Tab> Tabs { get; } Property Value Type Description IReadOnlyCollection<Tab> | Improve this Doc View Source TabScrollOffset When there are too many tabs to render, this indicates the first tab to render on the screen. Declaration public int TabScrollOffset { get; set; } Property Value Type Description int Methods | Improve this Doc View Source AddTab(Tab, bool) Adds the given tab to Tabs Declaration public void AddTab(Tab tab, bool andSelect) Parameters Type Name Description Tab tab bool andSelect True to make the newly added Tab the SelectedTab | Improve this Doc View Source ApplyStyleChanges() Updates the control to use the latest state settings in Style. This can change the size of the client area of the tab (for rendering the selected tab's content). This method includes a call to SetNeedsDisplay() Declaration public void ApplyStyleChanges() | Improve this Doc View Source Dispose(bool) Disposes the control and all Tabs Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) | Improve this Doc View Source EnsureSelectedTabIsVisible() Updates TabScrollOffset to ensure that SelectedTab is visible Declaration public void EnsureSelectedTabIsVisible() | Improve this Doc View Source EnsureValidScrollOffsets() Updates TabScrollOffset to be a valid index of Tabs Declaration public void EnsureValidScrollOffsets() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnSelectedTabChanged(Tab, Tab) Raises the SelectedTabChanged event Declaration protected virtual void OnSelectedTabChanged(Tab oldTab, Tab newTab) Parameters Type Name Description Tab oldTab Tab newTab | Improve this Doc View Source RemoveTab(Tab) Removes the given tab from Tabs. Caller is responsible for disposing the tab's hosted View if appropriate. Declaration public void RemoveTab(Tab tab) Parameters Type Name Description Tab tab | Improve this Doc View Source SwitchTabBy(int) Changes the SelectedTab by the given amount. Positive for right, negative for left. If no tab is currently selected then the first tab will become selected Declaration public void SwitchTabBy(int amount) Parameters Type Name Description int amount Events | Improve this Doc View Source SelectedTabChanged Event for when SelectedTab changes Declaration public event EventHandler<TabChangedEventArgs> SelectedTabChanged Event Type Type Description EventHandler<TabChangedEventArgs> | Improve this Doc View Source TabClicked Event fired when a Tab is clicked. Can be used to cancel navigation, show context menu (e.g. on right click) etc. Declaration public event EventHandler<TabMouseEventArgs> TabClicked Event Type Type Description EventHandler<TabMouseEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextAlignment.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextAlignment.html",
    "title": "Enum TextAlignment",
    "keywords": "Enum TextAlignment Text alignment enumeration, controls how text is displayed. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum TextAlignment Fields Name Description Centered The text will be centered horizontally. Justified The text will be justified (spaces will be added to existing spaces such that the text fills the container horizontally). Left The text will be left-aligned. Right The text will be right-aligned."
  },
  "api/Terminal.Gui/Terminal.Gui.TextAnnotation.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextAnnotation.html",
    "title": "Class TextAnnotation",
    "keywords": "Class TextAnnotation Displays text at a given position (in screen space or graph space) Inheritance object TextAnnotation Implements IAnnotation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextAnnotation : IAnnotation Properties | Improve this Doc View Source BeforeSeries True to add text before plotting series. Defaults to false Declaration public bool BeforeSeries { get; set; } Property Value Type Description bool | Improve this Doc View Source GraphPosition The location in graph space to draw the Text. This annotation will only show if the point is in the current viewable area of the graph presented in the GraphView Declaration public PointF GraphPosition { get; set; } Property Value Type Description PointF | Improve this Doc View Source ScreenPosition The location on screen to draw the Text regardless of scroll/zoom settings. This overrides GraphPosition if specified. Declaration public Point? ScreenPosition { get; set; } Property Value Type Description Point? | Improve this Doc View Source Text Text to display on the graph Declaration public string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source DrawText(GraphView, int, int) Draws the Text at the given coordinates with truncation to avoid spilling over of the graph Declaration protected void DrawText(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph int x Screen x position to start drawing string int y Screen y position to start drawing string | Improve this Doc View Source Render(GraphView) Draws the annotation Declaration public void Render(GraphView graph) Parameters Type Name Description GraphView graph Implements IAnnotation"
  },
  "api/Terminal.Gui/Terminal.Gui.TextChangedEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextChangedEventArgs.html",
    "title": "Class TextChangedEventArgs",
    "keywords": "Class TextChangedEventArgs Event args for the TextChanged event Inheritance object EventArgs TextChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextChangedEventArgs : EventArgs Constructors | Improve this Doc View Source TextChangedEventArgs(string) Creates a new instance of the TextChangedEventArgs class Declaration public TextChangedEventArgs(string oldValue) Parameters Type Name Description string oldValue Properties | Improve this Doc View Source OldValue The old value before the text changed Declaration public string OldValue { get; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.TextChangingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextChangingEventArgs.html",
    "title": "Class TextChangingEventArgs",
    "keywords": "Class TextChangingEventArgs An EventArgs which allows passing a cancelable new text value event. Inheritance object EventArgs TextChangingEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextChangingEventArgs : EventArgs Constructors | Improve this Doc View Source TextChangingEventArgs(string) Initializes a new instance of TextChangingEventArgs Declaration public TextChangingEventArgs(string newText) Parameters Type Name Description string newText The new Text to be replaced. Properties | Improve this Doc View Source Cancel Flag which allows to cancel the new text value. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source NewText The new text to be replaced. Declaration public string NewText { get; set; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.TextDirection.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextDirection.html",
    "title": "Enum TextDirection",
    "keywords": "Enum TextDirection Text direction enumeration, controls how text is displayed. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum TextDirection Fields Name Description BottomTop_LeftRight This is a vertical direction. O DL LL RE OH W BottomTop_RightLeft This is a vertical direction. D OL LR LO EW H LeftRight_BottomTop This is a horizontal direction. WORLDHELLO LeftRight_TopBottom Normal horizontal direction. HELLOWORLD RightLeft_BottomTop This is a horizontal direction. DLROWOLLEH RightLeft_TopBottom This is a horizontal direction. RTL OLLEHDLROW TopBottom_LeftRight Normal vertical direction. H WE OL RL LO D TopBottom_RightLeft This is a vertical direction. W HO ER LL LD O"
  },
  "api/Terminal.Gui/Terminal.Gui.TextField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextField.html",
    "title": "Class TextField",
    "keywords": "Class TextField Single-line text entry View Inheritance object Responder View TextField DateField TimeField Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The TextField View provides editing functionality and mouse support. Inherited Members View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextField : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextField() Initializes a new instance of the TextField class using Computed positioning. Declaration public TextField() | Improve this Doc View Source TextField(int, int, int, string) Initializes a new instance of the TextField class using Absolute positioning. Declaration public TextField(int x, int y, int w, string text) Parameters Type Name Description int x The x coordinate. int y The y coordinate. int w The width. string text Initial text contents. | Improve this Doc View Source TextField(string) Initializes a new instance of the TextField class using Computed positioning. Declaration public TextField(string text) Parameters Type Name Description string text Initial text contents. Properties | Improve this Doc View Source Autocomplete Provides autocomplete context menu based on suggestions at the current cursor position. Configure ISuggestionGenerator to enable this feature. Declaration public IAutocomplete Autocomplete { get; set; } Property Value Type Description IAutocomplete | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Responder can focus. Declaration public override bool CanFocus { get; set; } Property Value Type Description bool true if can focus; otherwise, false. Overrides View.CanFocus | Improve this Doc View Source Caption Gets or sets the text to render in control when no value has been entered yet and the View does not yet have input focus. Declaration public string Caption { get; set; } Property Value Type Description string | Improve this Doc View Source CaptionColor Gets or sets the foreground Color to use when rendering Caption. Declaration public Color CaptionColor { get; set; } Property Value Type Description Color | Improve this Doc View Source ContextMenu Get the ContextMenu for this view. Declaration public ContextMenu ContextMenu { get; } Property Value Type Description ContextMenu | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public virtual int CursorPosition { get; set; } Property Value Type Description int | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source Frame Gets or sets the frame for the view. The frame is relative to the SuperView's Bounds. Declaration public override Rect Frame { get; set; } Property Value Type Description Rect The frame. Overrides View.Frame | Improve this Doc View Source HasHistoryChanges Indicates whatever the text has history changes or not. true if the text has history changes false otherwise. Declaration public bool HasHistoryChanges { get; } Property Value Type Description bool | Improve this Doc View Source IsDirty Indicates whatever the text was changed or not. true if the text was changed false otherwise. Declaration public bool IsDirty { get; } Property Value Type Description bool | Improve this Doc View Source ReadOnly If set to true its not allow any changes in the text. Declaration public bool ReadOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source ScrollOffset Gets the left offset position. Declaration public int ScrollOffset { get; } Property Value Type Description int | Improve this Doc View Source Secret Sets the secret property. This makes the text entry suitable for entering passwords. Declaration public bool Secret { get; set; } Property Value Type Description bool | Improve this Doc View Source SelectedLength Length of the selected text. Declaration public int SelectedLength { get; } Property Value Type Description int | Improve this Doc View Source SelectedStart Start position of the selected text. Declaration public int SelectedStart { get; set; } Property Value Type Description int | Improve this Doc View Source SelectedText The selected text. Declaration public string SelectedText { get; } Property Value Type Description string | Improve this Doc View Source Text Sets or gets the text held by the view. Declaration public string Text { get; set; } Property Value Type Description string | Improve this Doc View Source Used Tracks whether the text field should be considered \"used\", that is, that the user has moved in the entry, so new input should be appended at the cursor position, rather than clearing the entry Declaration public bool Used { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source ClearAllSelection() Clear the selected text. Declaration public void ClearAllSelection() | Improve this Doc View Source ClearHistoryChanges() Allows clearing the HistoryText.HistoryTextItem items updating the original text. Declaration public void ClearHistoryChanges() | Improve this Doc View Source Copy() Copy the selected text to the clipboard. Declaration public virtual void Copy() | Improve this Doc View Source Cut() Cut the selected text to the clipboard. Declaration public virtual void Cut() | Improve this Doc View Source DeleteAll() Deletes all text. Declaration public void DeleteAll() | Improve this Doc View Source DeleteCharLeft(bool) Deletes the left character. Declaration public virtual void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description bool useOldCursorPos | Improve this Doc View Source DeleteCharRight() Deletes the right character. Declaration public virtual void DeleteCharRight() | Improve this Doc View Source GetNormalColor() Determines the current ColorScheme based on the Enabled value. Declaration public override Attribute GetNormalColor() Returns Type Description Attribute Normal if Enabled is true or Disabled if Enabled is false. If it's overridden can return other values. Overrides View.GetNormalColor() | Improve this Doc View Source InsertText(string, bool) Inserts the given toAdd text at the current cursor position exactly as if the user had just typed it Declaration public void InsertText(string toAdd, bool useOldCursorPos = true) Parameters Type Name Description string toAdd Text to add bool useOldCursorPos Use the previous cursor position. | Improve this Doc View Source KillWordBackwards() Deletes word backwards. Declaration public virtual void KillWordBackwards() | Improve this Doc View Source KillWordForwards() Deletes word forwards. Declaration public virtual void KillWordForwards() | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveEnd() Moves cursor to the end of the typed text. Declaration public void MoveEnd() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Processes key presses for the TextField. The TextField control responds to the following keys: Keys Function Delete, Backspace Deletes the character before cursor. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnTextChanging(string) Virtual method that invoke the TextChanging event if it's defined. Declaration public virtual TextChangingEventArgs OnTextChanging(string newText) Parameters Type Name Description string newText The new text to be replaced. Returns Type Description TextChangingEventArgs Returns the TextChangingEventArgs | Improve this Doc View Source Paste() Paste the selected text from the clipboard. Declaration public virtual void Paste() | Improve this Doc View Source PositionCursor() Sets the cursor position. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source Redo() Redoes the latest changes. Declaration public void Redo() | Improve this Doc View Source SelectAll() Selects all text. Declaration public void SelectAll() | Improve this Doc View Source Undo() Undoes the latest changes. Declaration public void Undo() Events | Improve this Doc View Source TextChanged Changed event, raised when the text has changed. This event is raised when the Text changes. The passed EventArgs is a string containing the old value. Declaration public event EventHandler<TextChangedEventArgs> TextChanged Event Type Type Description EventHandler<TextChangedEventArgs> | Improve this Doc View Source TextChanging Changing event, raised before the Text changes and can be canceled or changing the new text. Declaration public event EventHandler<TextChangingEventArgs> TextChanging Event Type Type Description EventHandler<TextChangingEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextFieldAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextFieldAutocomplete.html",
    "title": "Class TextFieldAutocomplete",
    "keywords": "Class TextFieldAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextField. Inheritance object AutocompleteBase PopupAutocomplete TextFieldAutocomplete Implements IAutocomplete Inherited Members PopupAutocomplete.HostControl PopupAutocomplete.ScrollOffset PopupAutocomplete.ColorScheme PopupAutocomplete.RenderOverlay(Point) PopupAutocomplete.EnsureSelectedIdxIsValid() PopupAutocomplete.ProcessKey(KeyEventArgs) PopupAutocomplete.MouseEvent(MouseEvent, bool) PopupAutocomplete.RenderSelectedIdxByMouse(MouseEvent) PopupAutocomplete.Select() PopupAutocomplete.InsertSelection(Suggestion) PopupAutocomplete.Close() PopupAutocomplete.MoveUp() PopupAutocomplete.MoveDown() PopupAutocomplete.ReopenSuggestions() AutocompleteBase.PopupInsideContainer AutocompleteBase.SuggestionGenerator AutocompleteBase.MaxWidth AutocompleteBase.MaxHeight AutocompleteBase.Visible AutocompleteBase.Suggestions AutocompleteBase.SelectedIdx AutocompleteBase.SelectionKey AutocompleteBase.CloseKey AutocompleteBase.Reopen AutocompleteBase.Context AutocompleteBase.ClearSuggestions() AutocompleteBase.GenerateSuggestions(AutocompleteContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextFieldAutocomplete : PopupAutocomplete, IAutocomplete Methods | Improve this Doc View Source DeleteTextBackwards() Deletes the text backwards before insert the selected text in the HostControl. Declaration protected override void DeleteTextBackwards() Overrides PopupAutocomplete.DeleteTextBackwards() | Improve this Doc View Source InsertText(string) Insert the selected text in the HostControl. Declaration protected override void InsertText(string accepted) Parameters Type Name Description string accepted Overrides PopupAutocomplete.InsertText(string) | Improve this Doc View Source SetCursorPosition(int) Set the cursor position in the HostControl. Declaration protected override void SetCursorPosition(int column) Parameters Type Name Description int column Overrides PopupAutocomplete.SetCursorPosition(int) Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.TextFormatter.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextFormatter.html",
    "title": "Class TextFormatter",
    "keywords": "Class TextFormatter Provides text formatting. Supports HotKeys, horizontal alignment, vertical alignment, multiple lines, and word-based line wrap. Inheritance object TextFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextFormatter Properties | Improve this Doc View Source Alignment Controls the horizontal text-alignment property. Declaration public TextAlignment Alignment { get; set; } Property Value Type Description TextAlignment The text alignment. | Improve this Doc View Source AutoSize Used by Text to resize the view's Bounds with the Size. Setting AutoSize to true only work if the Width and Height are null or Absolute values and doesn't work with Computed layout, to avoid breaking the Pos and Dim settings. Declaration public bool AutoSize { get; set; } Property Value Type Description bool | Improve this Doc View Source CursorPosition Gets the cursor position from HotKey. If the HotKey is defined, the cursor will be positioned over it. Declaration public int CursorPosition { get; } Property Value Type Description int | Improve this Doc View Source Direction Controls the text-direction property. Declaration public TextDirection Direction { get; set; } Property Value Type Description TextDirection The text vertical alignment. | Improve this Doc View Source HotKey Gets or sets the hot key. Must be be an upper case letter or digit. Fires the HotKeyChanged event. Declaration public Key HotKey { get; } Property Value Type Description Key | Improve this Doc View Source HotKeyPos The position in the text of the hot key. The hot key will be rendered using the hot color. Declaration public int HotKeyPos { get; } Property Value Type Description int | Improve this Doc View Source HotKeySpecifier The specifier character for the hot key (e.g. '_'). Set to '\\xffff' to disable hot key support for this View instance. The default is '\\xffff'. Declaration public Rune HotKeySpecifier { get; set; } Property Value Type Description Rune | Improve this Doc View Source Lines Gets the formatted lines. Declaration public List<string> Lines { get; } Property Value Type Description List<string> | Improve this Doc View Source MultiLine Gets or sets a value indicating whether multi line is allowed. Declaration public bool MultiLine { get; set; } Property Value Type Description bool | Improve this Doc View Source NeedsFormat Gets or sets whether the TextFormatter needs to format the text when Draw(Rect, Attribute, Attribute, Rect, bool, ConsoleDriver) is called. If it is false when Draw is called, the Draw call will be faster. Declaration public bool NeedsFormat { get; set; } Property Value Type Description bool | Improve this Doc View Source PreserveTrailingSpaces Gets or sets whether trailing spaces at the end of word-wrapped lines are preserved or not when WordWrap is enabled. If true trailing spaces at the end of wrapped lines will be removed when Text is formatted for display. The default is false. Declaration public bool PreserveTrailingSpaces { get; set; } Property Value Type Description bool | Improve this Doc View Source Size Gets or sets the size of the area the text will be constrained to when formatted. Declaration public Size Size { get; set; } Property Value Type Description Size | Improve this Doc View Source TabWidth Gets or sets the number of columns used for a tab. Declaration public int TabWidth { get; set; } Property Value Type Description int | Improve this Doc View Source Text The text to be displayed. This string is never modified. Declaration public virtual string Text { get; set; } Property Value Type Description string | Improve this Doc View Source VerticalAlignment Controls the vertical text-alignment property. Declaration public VerticalTextAlignment VerticalAlignment { get; set; } Property Value Type Description VerticalTextAlignment The text vertical alignment. | Improve this Doc View Source WordWrap Allows word wrap the to fit the available container width. Declaration public bool WordWrap { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source CalcRect(int, int, string, TextDirection, int) Calculates the rectangle required to hold text, assuming no word wrapping or justification. Declaration public static Rect CalcRect(int x, int y, string text, TextDirection direction = TextDirection.LeftRight_TopBottom, int tabWidth = 0) Parameters Type Name Description int x The x location of the rectangle int y The y location of the rectangle string text The text to measure TextDirection direction The text direction. int tabWidth The number of columns used for a tab. Returns Type Description Rect | Improve this Doc View Source ClipAndJustify(string, int, bool, TextDirection, int) Justifies text within a specified width. Declaration public static string ClipAndJustify(string text, int width, bool justify, TextDirection textDirection = TextDirection.LeftRight_TopBottom, int tabWidth = 0) Parameters Type Name Description string text The text to justify. int width The number of columns to clip the text to. Text longer than width will be clipped. bool justify Justify. TextDirection textDirection The text direction. int tabWidth The number of columns used for a tab. Returns Type Description string Justified and clipped text. | Improve this Doc View Source ClipAndJustify(string, int, TextAlignment, TextDirection, int) Justifies text within a specified width. Declaration public static string ClipAndJustify(string text, int width, TextAlignment talign, TextDirection textDirection = TextDirection.LeftRight_TopBottom, int tabWidth = 0) Parameters Type Name Description string text The text to justify. int width The number of columns to clip the text to. Text longer than width will be clipped. TextAlignment talign Alignment. TextDirection textDirection The text direction. int tabWidth The number of columns used for a tab. Returns Type Description string Justified and clipped text. | Improve this Doc View Source ClipOrPad(string, int) Adds trailing whitespace or truncates text so that it fits exactly width console units. Note that some unicode characters take 2+ columns Declaration public static string ClipOrPad(string text, int width) Parameters Type Name Description string text int width Returns Type Description string | Improve this Doc View Source Draw(Rect, Attribute, Attribute, Rect, bool, ConsoleDriver) Draws the text held by TextFormatter to ConsoleDriver using the colors specified. Declaration public void Draw(Rect bounds, Attribute normalColor, Attribute hotColor, Rect containerBounds = default, bool fillRemaining = true, ConsoleDriver driver = null) Parameters Type Name Description Rect bounds Specifies the screen-relative location and maximum size for drawing the text. Attribute normalColor The color to use for all text except the hotkey Attribute hotColor The color to use to draw the hotkey Rect containerBounds Specifies the screen-relative location and maximum container size. bool fillRemaining Determines if the bounds width will be used (default) or only the text width will be used. ConsoleDriver driver The console driver currently used by the application. | Improve this Doc View Source FindHotKey(string, Rune, bool, out int, out Key) Finds the hot key and its location in text. Declaration public static bool FindHotKey(string text, Rune hotKeySpecifier, bool firstUpperCase, out int hotPos, out Key hotKey) Parameters Type Name Description string text The text to look in. Rune hotKeySpecifier The hot key specifier (e.g. '_') to look for. bool firstUpperCase If true the legacy behavior of identifying the first upper case character as the hot key will be enabled. Regardless of the value of this parameter, hotKeySpecifier takes precedence. int hotPos Outputs the Rune index into text. Key hotKey Outputs the hotKey. Returns Type Description bool true if a hot key was found; false otherwise. | Improve this Doc View Source Format() Causes the TextFormatter to reformat the text. Declaration public string Format() Returns Type Description string The formatted text. | Improve this Doc View Source Format(string, int, bool, bool, bool, int, TextDirection, bool) Reformats text into lines, applying text alignment and optionally wrapping text to new lines on word boundaries. Declaration public static List<string> Format(string text, int width, bool justify, bool wordWrap, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom, bool multiLine = false) Parameters Type Name Description string text int width The number of columns to constrain the text to for word wrapping and clipping. bool justify Specifies whether the text should be justified. bool wordWrap If true, the text will be wrapped to new lines no longer than width. If false, forces text to fit a single line. Line breaks are converted to spaces. The text will be clipped to width. bool preserveTrailingSpaces If true trailing spaces at the end of wrapped lines will be preserved. If false, trailing spaces at the end of wrapped lines will be trimmed. int tabWidth The number of columns used for a tab. TextDirection textDirection The text direction. bool multiLine If true new lines are allowed. Returns Type Description List<string> A list of word wrapped lines. | Improve this Doc View Source Format(string, int, TextAlignment, bool, bool, int, TextDirection, bool) Reformats text into lines, applying text alignment and optionally wrapping text to new lines on word boundaries. Declaration public static List<string> Format(string text, int width, TextAlignment talign, bool wordWrap, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom, bool multiLine = false) Parameters Type Name Description string text int width The number of columns to constrain the text to for word wrapping and clipping. TextAlignment talign Specifies how the text will be aligned horizontally. bool wordWrap If true, the text will be wrapped to new lines no longer than width. If false, forces text to fit a single line. Line breaks are converted to spaces. The text will be clipped to width. bool preserveTrailingSpaces If true trailing spaces at the end of wrapped lines will be preserved. If false, trailing spaces at the end of wrapped lines will be trimmed. int tabWidth The number of columns used for a tab. TextDirection textDirection The text direction. bool multiLine If true new lines are allowed. Returns Type Description List<string> A list of word wrapped lines. | Improve this Doc View Source GetFormattedSize() Gets the size required to hold the formatted text, given the constraints placed by Size. Declaration public Size GetFormattedSize() Returns Type Description Size | Improve this Doc View Source GetLengthThatFits(List<Rune>, int, int) Gets the number of the Runes in a list of Runes that will fit in columns. Declaration public static int GetLengthThatFits(List<Rune> runes, int columns, int tabWidth = 0) Parameters Type Name Description List<Rune> runes The list of runes. int columns The width. int tabWidth The number of columns used for a tab. Returns Type Description int The index of the last Rune in runes that fit in columns. | Improve this Doc View Source GetLengthThatFits(string, int, int) Gets the number of the Runes in a string that will fit in columns. Declaration public static int GetLengthThatFits(string text, int columns, int tabWidth = 0) Parameters Type Name Description string text The text. int columns The width. int tabWidth The number of columns used for a tab. Returns Type Description int The index of the text that fit the width. | Improve this Doc View Source GetMaxColsForWidth(List<string>, int, int) Gets the index position from the list based on the width. Declaration public static int GetMaxColsForWidth(List<string> lines, int width, int tabWidth = 0) Parameters Type Name Description List<string> lines The lines. int width The width. int tabWidth The number of columns used for a tab. Returns Type Description int The index of the list that fit the width. | Improve this Doc View Source GetSumMaxCharWidth(List<string>, int, int, int) Gets the maximum characters width from the list based on the startIndex and the length. Declaration public static int GetSumMaxCharWidth(List<string> lines, int startIndex = -1, int length = -1, int tabWidth = 0) Parameters Type Name Description List<string> lines The lines. int startIndex The start index. int length The length. int tabWidth The number of columns used for a tab. Returns Type Description int The maximum characters width. | Improve this Doc View Source GetSumMaxCharWidth(string, int, int, int) Gets the maximum characters width from the text based on the startIndex and the length. Declaration public static int GetSumMaxCharWidth(string text, int startIndex = -1, int length = -1, int tabWidth = 0) Parameters Type Name Description string text The text. int startIndex The start index. int length The length. int tabWidth The number of columns used for a tab. Returns Type Description int The maximum characters width. | Improve this Doc View Source IsHorizontalDirection(TextDirection) Check if it is a horizontal direction Declaration public static bool IsHorizontalDirection(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description bool | Improve this Doc View Source IsLeftToRight(TextDirection) Check if it is Left to Right direction Declaration public static bool IsLeftToRight(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description bool | Improve this Doc View Source IsTopToBottom(TextDirection) Check if it is Top to Bottom direction Declaration public static bool IsTopToBottom(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description bool | Improve this Doc View Source IsVerticalDirection(TextDirection) Check if it is a vertical direction Declaration public static bool IsVerticalDirection(TextDirection textDirection) Parameters Type Name Description TextDirection textDirection Returns Type Description bool | Improve this Doc View Source Justify(string, int, char, TextDirection, int) Justifies the text to fill the width provided. Space will be added between words (demarked by spaces and tabs) to make the text just fit width. Spaces will not be added to the ends. Declaration public static string Justify(string text, int width, char spaceChar = ' ', TextDirection textDirection = TextDirection.LeftRight_TopBottom, int tabWidth = 0) Parameters Type Name Description string text int width char spaceChar Character to replace whitespace and pad with. For debugging purposes. TextDirection textDirection The text direction. int tabWidth The number of columns used for a tab. Returns Type Description string The justified text. | Improve this Doc View Source MaxLines(string, int) Computes the number of lines needed to render the specified text given the width. Declaration public static int MaxLines(string text, int width) Parameters Type Name Description string text Text, may contain newlines. int width The minimum width for the text. Returns Type Description int Number of lines. | Improve this Doc View Source MaxWidth(string, int, int) Computes the maximum width needed to render the text (single line or multiple lines, word wrapped) given a number of columns to constrain the text to. Declaration public static int MaxWidth(string text, int maxColumns, int tabWidth = 0) Parameters Type Name Description string text Text, may contain newlines. int maxColumns The number of columns to constrain the text to for formatting. int tabWidth The number of columns used for a tab. Returns Type Description int Width of the longest line after formatting the text constrained by maxColumns. | Improve this Doc View Source MaxWidthLine(string, int) Returns the width of the widest line in the text, accounting for wide-glyphs (uses GetColumns(string)). text if it contains newlines. Declaration public static int MaxWidthLine(string text, int tabWidth = 0) Parameters Type Name Description string text Text, may contain newlines. int tabWidth The number of columns used for a tab. Returns Type Description int The length of the longest line. | Improve this Doc View Source RemoveHotKeySpecifier(string, int, Rune) Removes the hot key specifier from text. Declaration public static string RemoveHotKeySpecifier(string text, int hotPos, Rune hotKeySpecifier) Parameters Type Name Description string text The text to manipulate. int hotPos Returns the position of the hot-key in the text. -1 if not found. Rune hotKeySpecifier The hot-key specifier (e.g. '_') to look for. Returns Type Description string The input text with the hot key specifier ('_') removed. | Improve this Doc View Source ReplaceHotKeyWithTag(string, int) Replaces the Rune at the index specified by the hotPos parameter with a tag identifying it as the hot key. Declaration public string ReplaceHotKeyWithTag(string text, int hotPos) Parameters Type Name Description string text The text to tag the hot key in. int hotPos The Rune index of the hot key in text. Returns Type Description string The text with the hot key tagged. | Improve this Doc View Source SplitNewLine(string) Splits all newlines in the text into a list and supports both CRLF and LF, preserving the ending newline. Declaration public static List<string> SplitNewLine(string text) Parameters Type Name Description string text The text. Returns Type Description List<string> A list of text without the newline characters. | Improve this Doc View Source WordWrapText(string, int, bool, int, TextDirection) Formats the provided text to fit within the width provided using word wrapping. Declaration public static List<string> WordWrapText(string text, int width, bool preserveTrailingSpaces = false, int tabWidth = 0, TextDirection textDirection = TextDirection.LeftRight_TopBottom) Parameters Type Name Description string text The text to word wrap int width The number of columns to constrain the text to bool preserveTrailingSpaces If true trailing spaces at the end of wrapped lines will be preserved. If false, trailing spaces at the end of wrapped lines will be trimmed. int tabWidth The number of columns used for a tab. TextDirection textDirection The text direction. Returns Type Description List<string> A list of word wrapped lines. Events | Improve this Doc View Source HotKeyChanged Event invoked when the HotKey is changed. Declaration public event EventHandler<KeyChangedEventArgs> HotKeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateField.html",
    "title": "Class TextValidateField",
    "keywords": "Class TextValidateField Text field that validates input through a ITextValidateProvider Inheritance object Responder View TextValidateField Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextValidateField : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextValidateField() Initializes a new instance of the TextValidateField class using Computed positioning. Declaration public TextValidateField() | Improve this Doc View Source TextValidateField(ITextValidateProvider) Initializes a new instance of the TextValidateField class using Computed positioning. Declaration public TextValidateField(ITextValidateProvider provider) Parameters Type Name Description ITextValidateProvider provider Properties | Improve this Doc View Source IsValid This property returns true if the input is valid. Declaration public virtual bool IsValid { get; } Property Value Type Description bool | Improve this Doc View Source Provider Provider Declaration public ITextValidateProvider Provider { get; set; } Property Value Type Description ITextValidateProvider | Improve this Doc View Source Text Text Declaration public string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.html",
    "title": "Namespace Terminal.Gui.TextValidateProviders",
    "keywords": "Namespace Terminal.Gui.TextValidateProviders Classes NetMaskedTextProvider .Net MaskedTextProvider Provider for TextValidateField. Wrapper around MaskedTextProvider Masking elements TextRegexProvider Regex Provider for TextValidateField. Interfaces ITextValidateProvider TextValidateField Providers Interface. All TextValidateField are created with a ITextValidateProvider."
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.ITextValidateProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.ITextValidateProvider.html",
    "title": "Interface ITextValidateProvider",
    "keywords": "Interface ITextValidateProvider TextValidateField Providers Interface. All TextValidateField are created with a ITextValidateProvider. Namespace: Terminal.Gui.TextValidateProviders Assembly: Terminal.Gui.dll Syntax public interface ITextValidateProvider Properties | Improve this Doc View Source DisplayText Gets the formatted string for display. Declaration string DisplayText { get; } Property Value Type Description string | Improve this Doc View Source Fixed Set that this provider uses a fixed width. e.g. Masked ones are fixed. Declaration bool Fixed { get; } Property Value Type Description bool | Improve this Doc View Source IsValid True if the input is valid, otherwise false. Declaration bool IsValid { get; } Property Value Type Description bool | Improve this Doc View Source Text Set the input text and get the current value. Declaration string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Cursor(int) Set Cursor position to pos. Declaration int Cursor(int pos) Parameters Type Name Description int pos Returns Type Description int Return first valid position. | Improve this Doc View Source CursorEnd() Find the last valid character position. Declaration int CursorEnd() Returns Type Description int New cursor position. | Improve this Doc View Source CursorLeft(int) First valid position before pos. Declaration int CursorLeft(int pos) Parameters Type Name Description int pos Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorRight(int) First valid position after pos. Declaration int CursorRight(int pos) Parameters Type Name Description int pos Current position. Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorStart() Find the first valid character position. Declaration int CursorStart() Returns Type Description int New cursor position. | Improve this Doc View Source Delete(int) Deletes the current character in pos. Declaration bool Delete(int pos) Parameters Type Name Description int pos Returns Type Description bool true if the character was successfully removed, otherwise false. | Improve this Doc View Source InsertAt(char, int) Insert character ch in position pos. Declaration bool InsertAt(char ch, int pos) Parameters Type Name Description char ch int pos Returns Type Description bool true if the character was successfully inserted, otherwise false."
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.NetMaskedTextProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.NetMaskedTextProvider.html",
    "title": "Class NetMaskedTextProvider",
    "keywords": "Class NetMaskedTextProvider .Net MaskedTextProvider Provider for TextValidateField. Wrapper around MaskedTextProvider Masking elements Inheritance object NetMaskedTextProvider Implements ITextValidateProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui.TextValidateProviders Assembly: Terminal.Gui.dll Syntax public class NetMaskedTextProvider : ITextValidateProvider Constructors | Improve this Doc View Source NetMaskedTextProvider(string) Empty Constructor Declaration public NetMaskedTextProvider(string mask) Parameters Type Name Description string mask Properties | Improve this Doc View Source DisplayText Gets the formatted string for display. Declaration public string DisplayText { get; } Property Value Type Description string | Improve this Doc View Source Fixed Set that this provider uses a fixed width. e.g. Masked ones are fixed. Declaration public bool Fixed { get; } Property Value Type Description bool | Improve this Doc View Source IsValid True if the input is valid, otherwise false. Declaration public bool IsValid { get; } Property Value Type Description bool | Improve this Doc View Source Mask Mask property Declaration public string Mask { get; set; } Property Value Type Description string | Improve this Doc View Source Text Set the input text and get the current value. Declaration public string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Cursor(int) Set Cursor position to pos. Declaration public int Cursor(int pos) Parameters Type Name Description int pos Returns Type Description int Return first valid position. | Improve this Doc View Source CursorEnd() Find the last valid character position. Declaration public int CursorEnd() Returns Type Description int New cursor position. | Improve this Doc View Source CursorLeft(int) First valid position before pos. Declaration public int CursorLeft(int pos) Parameters Type Name Description int pos Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorRight(int) First valid position after pos. Declaration public int CursorRight(int pos) Parameters Type Name Description int pos Current position. Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorStart() Find the first valid character position. Declaration public int CursorStart() Returns Type Description int New cursor position. | Improve this Doc View Source Delete(int) Deletes the current character in pos. Declaration public bool Delete(int pos) Parameters Type Name Description int pos Returns Type Description bool true if the character was successfully removed, otherwise false. | Improve this Doc View Source InsertAt(char, int) Insert character ch in position pos. Declaration public bool InsertAt(char ch, int pos) Parameters Type Name Description char ch int pos Returns Type Description bool true if the character was successfully inserted, otherwise false. Implements ITextValidateProvider"
  },
  "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.TextRegexProvider.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextValidateProviders.TextRegexProvider.html",
    "title": "Class TextRegexProvider",
    "keywords": "Class TextRegexProvider Regex Provider for TextValidateField. Inheritance object TextRegexProvider Implements ITextValidateProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui.TextValidateProviders Assembly: Terminal.Gui.dll Syntax public class TextRegexProvider : ITextValidateProvider Constructors | Improve this Doc View Source TextRegexProvider(string) Empty Constructor. Declaration public TextRegexProvider(string pattern) Parameters Type Name Description string pattern Properties | Improve this Doc View Source DisplayText Gets the formatted string for display. Declaration public string DisplayText { get; } Property Value Type Description string | Improve this Doc View Source Fixed Set that this provider uses a fixed width. e.g. Masked ones are fixed. Declaration public bool Fixed { get; } Property Value Type Description bool | Improve this Doc View Source IsValid True if the input is valid, otherwise false. Declaration public bool IsValid { get; } Property Value Type Description bool | Improve this Doc View Source Pattern Regex pattern property. Declaration public string Pattern { get; set; } Property Value Type Description string | Improve this Doc View Source Text Set the input text and get the current value. Declaration public string Text { get; set; } Property Value Type Description string | Improve this Doc View Source ValidateOnInput When true, validates with the regex pattern on each input, preventing the input if it's not valid. Declaration public bool ValidateOnInput { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source Cursor(int) Set Cursor position to pos. Declaration public int Cursor(int pos) Parameters Type Name Description int pos Returns Type Description int Return first valid position. | Improve this Doc View Source CursorEnd() Find the last valid character position. Declaration public int CursorEnd() Returns Type Description int New cursor position. | Improve this Doc View Source CursorLeft(int) First valid position before pos. Declaration public int CursorLeft(int pos) Parameters Type Name Description int pos Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorRight(int) First valid position after pos. Declaration public int CursorRight(int pos) Parameters Type Name Description int pos Current position. Returns Type Description int New cursor position if any, otherwise returns pos | Improve this Doc View Source CursorStart() Find the first valid character position. Declaration public int CursorStart() Returns Type Description int New cursor position. | Improve this Doc View Source Delete(int) Deletes the current character in pos. Declaration public bool Delete(int pos) Parameters Type Name Description int pos Returns Type Description bool true if the character was successfully removed, otherwise false. | Improve this Doc View Source InsertAt(char, int) Insert character ch in position pos. Declaration public bool InsertAt(char ch, int pos) Parameters Type Name Description char ch int pos Returns Type Description bool true if the character was successfully inserted, otherwise false. Implements ITextValidateProvider"
  },
  "api/Terminal.Gui/Terminal.Gui.TextView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextView.html",
    "title": "Class TextView",
    "keywords": "Class TextView Multi-line text editing View. Inheritance object Responder View TextView Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks TextView provides a multi-line text editor. Users interact with it with the standard Windows, Mac, and Linux (Emacs) commands. Shortcut Action performed Left cursor, Control-b Moves the editing point left. Right cursor, Control-f Moves the editing point right. Alt-b Moves one word back. Alt-f Moves one word forward. Up cursor, Control-p Moves the editing point one line up. Down cursor, Control-n Moves the editing point one line down Home key, Control-a Moves the cursor to the beginning of the line. End key, Control-e Moves the cursor to the end of the line. Control-Home Scrolls to the first line and moves the cursor there. Control-End Scrolls to the last line and moves the cursor there. Delete, Control-d Deletes the character in front of the cursor. Backspace Deletes the character behind the cursor. Control-k Deletes the text until the end of the line and replaces the kill buffer with the deleted text. You can paste this text in a different place by using Control-y. Control-y Pastes the content of the kill ring into the current position. Alt-d Deletes the word above the cursor and adds it to the kill ring. You can paste the contents of the kill ring with Control-y. Control-q Quotes the next input character, to prevent the normal processing of key handling to take place. Inherited Members View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TextView() Initializes a TextView on the specified area, with dimensions controlled with the X, Y, Width and Height properties. Declaration public TextView() | Improve this Doc View Source TextView(Rect) Initializes a TextView on the specified area, with absolute position and size. Declaration public TextView(Rect frame) Parameters Type Name Description Rect frame Properties | Improve this Doc View Source AllowsReturn Gets or sets a value indicating whether pressing ENTER in a TextView creates a new line of text in the view or activates the default button for the Toplevel. Declaration public bool AllowsReturn { get; set; } Property Value Type Description bool | Improve this Doc View Source AllowsTab Gets or sets whether the TextView inserts a tab character into the text or ignores tab input. If set to `false` and the user presses the tab key (or shift-tab) the focus will move to the next view (or previous with shift-tab). The default is `true`; if the user presses the tab key, a tab character will be inserted into the text. Declaration public bool AllowsTab { get; set; } Property Value Type Description bool | Improve this Doc View Source Autocomplete Provides autocomplete context menu based on suggestions at the current cursor position. Configure SuggestionGenerator to enable this feature Declaration public IAutocomplete Autocomplete { get; protected set; } Property Value Type Description IAutocomplete | Improve this Doc View Source BottomOffset The bottom offset needed to use a horizontal scrollbar or for another reason. This is only needed with the keyboard navigation. Declaration public int BottomOffset { get; set; } Property Value Type Description int | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Responder can focus. Declaration public override bool CanFocus { get; set; } Property Value Type Description bool true if can focus; otherwise, false. Overrides View.CanFocus | Improve this Doc View Source ContextMenu Get the ContextMenu for this view. Declaration public ContextMenu? ContextMenu { get; } Property Value Type Description ContextMenu | Improve this Doc View Source CurrentColumn Gets the cursor column. Declaration public int CurrentColumn { get; } Property Value Type Description int The cursor column. | Improve this Doc View Source CurrentRow Gets the current cursor row. Declaration public int CurrentRow { get; } Property Value Type Description int | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public Point CursorPosition { get; set; } Property Value Type Description Point | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the field is focused Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source Frame Gets or sets the frame for the view. The frame is relative to the SuperView's Bounds. Declaration public override Rect Frame { get; set; } Property Value Type Description Rect The frame. Overrides View.Frame | Improve this Doc View Source HasHistoryChanges Indicates whatever the text has history changes or not. true if the text has history changes false otherwise. Declaration public bool HasHistoryChanges { get; } Property Value Type Description bool | Improve this Doc View Source InheritsPreviousColorScheme If true and the current ColorScheme is null will inherit from the previous, otherwise if false (default) do nothing. If the text is load with Load(List<RuneCell>) this property is automatically sets to true. Declaration public bool InheritsPreviousColorScheme { get; set; } Property Value Type Description bool | Improve this Doc View Source IsDirty Indicates whatever the text was changed or not. true if the text was changed false otherwise. Declaration public bool IsDirty { get; set; } Property Value Type Description bool | Improve this Doc View Source LeftColumn Gets or sets the left column. Declaration public int LeftColumn { get; set; } Property Value Type Description int | Improve this Doc View Source Lines Gets the number of lines. Declaration public int Lines { get; } Property Value Type Description int | Improve this Doc View Source Maxlength Gets the maximum visible length line. Declaration public int Maxlength { get; } Property Value Type Description int | Improve this Doc View Source Multiline Gets or sets a value indicating whether this TextView is a multiline text view. Declaration public bool Multiline { get; set; } Property Value Type Description bool | Improve this Doc View Source ReadOnly Gets or sets whether the TextView is in read-only mode or not Declaration public bool ReadOnly { get; set; } Property Value Type Description bool Boolean value(Default false) | Improve this Doc View Source RightOffset The right offset needed to use a vertical scrollbar or for another reason. This is only needed with the keyboard navigation. Declaration public int RightOffset { get; set; } Property Value Type Description int | Improve this Doc View Source SelectedLength Length of the selected text. Declaration public int SelectedLength { get; } Property Value Type Description int | Improve this Doc View Source SelectedText The selected text. Declaration public string SelectedText { get; } Property Value Type Description string | Improve this Doc View Source Selecting Get or sets the selecting. Declaration public bool Selecting { get; set; } Property Value Type Description bool | Improve this Doc View Source SelectionStartColumn Start column position of the selected text. Declaration public int SelectionStartColumn { get; set; } Property Value Type Description int | Improve this Doc View Source SelectionStartRow Start row position of the selected text. Declaration public int SelectionStartRow { get; set; } Property Value Type Description int | Improve this Doc View Source TabWidth Gets or sets a value indicating the number of whitespace when pressing the TAB key. Declaration public int TabWidth { get; set; } Property Value Type Description int | Improve this Doc View Source Text Sets or gets the text in the TextView. Declaration public override string Text { get; set; } Property Value Type Description string Overrides View.Text | Improve this Doc View Source TopRow Gets or sets the top row. Declaration public int TopRow { get; set; } Property Value Type Description int | Improve this Doc View Source Used Tracks whether the text view should be considered \"used\", that is, that the user has moved in the entry, so new input should be appended at the cursor position, rather than clearing the entry Declaration public bool Used { get; set; } Property Value Type Description bool | Improve this Doc View Source WordWrap Allows word wrap the to fit the available container width. Declaration public bool WordWrap { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source ClearHistoryChanges() Allows clearing the HistoryText.HistoryTextItem items updating the original text. Declaration public void ClearHistoryChanges() | Improve this Doc View Source CloseFile() Closes the contents of the stream into the TextView. Declaration public bool CloseFile() Returns Type Description bool true, if stream was closed, false otherwise. | Improve this Doc View Source Copy() Copy the selected text to the clipboard contents. Declaration public void Copy() | Improve this Doc View Source Cut() Cut the selected text to the clipboard contents. Declaration public void Cut() | Improve this Doc View Source DeleteAll() Deletes all text. Declaration public void DeleteAll() | Improve this Doc View Source DeleteCharLeft() Deletes all the selected or a single character at left from the position of the cursor. Declaration public void DeleteCharLeft() | Improve this Doc View Source DeleteCharRight() Deletes all the selected or a single character at right from the position of the cursor. Declaration public void DeleteCharRight() | Improve this Doc View Source FindNextText(string, out bool, bool, bool, string?, bool) Find the next text based on the match case with the option to replace it. Declaration public bool FindNextText(string textToFind, out bool gaveFullTurn, bool matchCase = false, bool matchWholeWord = false, string? textToReplace = null, bool replace = false) Parameters Type Name Description string textToFind The text to find. bool gaveFullTurn trueIf all the text was forward searched.falseotherwise. bool matchCase The match case setting. bool matchWholeWord The match whole word setting. string textToReplace The text to replace. bool replace trueIf is replacing.falseotherwise. Returns Type Description bool trueIf the text was found.falseotherwise. | Improve this Doc View Source FindPreviousText(string, out bool, bool, bool, string?, bool) Find the previous text based on the match case with the option to replace it. Declaration public bool FindPreviousText(string textToFind, out bool gaveFullTurn, bool matchCase = false, bool matchWholeWord = false, string? textToReplace = null, bool replace = false) Parameters Type Name Description string textToFind The text to find. bool gaveFullTurn trueIf all the text was backward searched.falseotherwise. bool matchCase The match case setting. bool matchWholeWord The match whole word setting. string textToReplace The text to replace. bool replace trueIf the text was found.falseotherwise. Returns Type Description bool trueIf the text was found.falseotherwise. | Improve this Doc View Source FindTextChanged() Reset the flag to stop continuous find. Declaration public void FindTextChanged() | Improve this Doc View Source GetAllLines() Gets all lines of characters. Declaration public List<List<RuneCell>> GetAllLines() Returns Type Description List<List<RuneCell>> | Improve this Doc View Source GetCurrentLine() Returns the characters on the current line (where the cursor is positioned). Use CurrentColumn to determine the position of the cursor within that line Declaration public List<RuneCell> GetCurrentLine() Returns Type Description List<RuneCell> | Improve this Doc View Source GetLine(int) Returns the characters on the line. Declaration public List<RuneCell> GetLine(int line) Parameters Type Name Description int line The intended line. Returns Type Description List<RuneCell> | Improve this Doc View Source GetNormalColor() Determines the current ColorScheme based on the Enabled value. Declaration public override Attribute GetNormalColor() Returns Type Description Attribute Normal if Enabled is true or Disabled if Enabled is false. If it's overridden can return other values. Overrides View.GetNormalColor() | Improve this Doc View Source InsertText(string) Inserts the given toAdd text at the current cursor position exactly as if the user had just typed it Declaration public void InsertText(string toAdd) Parameters Type Name Description string toAdd Text to add | Improve this Doc View Source Load(List<List<RuneCell>>) Loads the contents of the list of RuneCell list into the TextView. Declaration public void Load(List<List<RuneCell>> cellsList) Parameters Type Name Description List<List<RuneCell>> cellsList List of rune cells list to load the contents from. | Improve this Doc View Source Load(List<RuneCell>) Loads the contents of the RuneCell list into the TextView. Declaration public void Load(List<RuneCell> cells) Parameters Type Name Description List<RuneCell> cells Rune cells list to load the contents from. | Improve this Doc View Source Load(Stream) Loads the contents of the stream into the TextView. Declaration public void Load(Stream stream) Parameters Type Name Description Stream stream Stream to load the contents from. | Improve this Doc View Source Load(string) Loads the contents of the file into the TextView. Declaration public bool Load(string path) Parameters Type Name Description string path Path to the file to load. Returns Type Description bool true, if file was loaded, false otherwise. | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MoveEnd() Will scroll the TextView to the last line and position the cursor there. Declaration public void MoveEnd() | Improve this Doc View Source MoveHome() Will scroll the TextView to the first line and position the cursor there. Declaration public void MoveHome() | Improve this Doc View Source OnContentsChanged() Called when the contents of the TextView change. E.g. when the user types text or deletes text. Raises the ContentsChanged event. Declaration public virtual void OnContentsChanged() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnDrawNormalColor(List<RuneCell>, int, int) Sets the Driver to an appropriate color for rendering the given idxCol of the current line. Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Normal. Declaration protected virtual void OnDrawNormalColor(List<RuneCell> line, int idxCol, int idxRow) Parameters Type Name Description List<RuneCell> line The line. int idxCol The col index. int idxRow The row index. | Improve this Doc View Source OnDrawReadOnlyColor(List<RuneCell>, int, int) Sets the Driver to an appropriate color for rendering the given idxCol of the current line. Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Focus. Declaration protected virtual void OnDrawReadOnlyColor(List<RuneCell> line, int idxCol, int idxRow) Parameters Type Name Description List<RuneCell> line The line. int idxCol The col index. int idxRow The row index. | Improve this Doc View Source OnDrawSelectionColor(List<RuneCell>, int, int) Sets the Driver to an appropriate color for rendering the given idxCol of the current line. Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to Focus. Declaration protected virtual void OnDrawSelectionColor(List<RuneCell> line, int idxCol, int idxRow) Parameters Type Name Description List<RuneCell> line The line. int idxCol The col index. int idxRow The row index. | Improve this Doc View Source OnDrawUsedColor(List<RuneCell>, int, int) Sets the Driver to an appropriate color for rendering the given idxCol of the current line. Override to provide custom coloring by calling SetAttribute(Attribute) Defaults to HotFocus. Declaration protected virtual void OnDrawUsedColor(List<RuneCell> line, int idxCol, int idxRow) Parameters Type Name Description List<RuneCell> line The line. int idxCol The col index. int idxRow The row index. | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnKeyUp(KeyEventArgs) Method invoked when a key is released. This method will be called after OnKeyPressed(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public override bool OnKeyUp(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. Overrides View.OnKeyUp(KeyEventArgs) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnUnwrappedCursorPosition(int?, int?) Invoke the UnwrappedCursorPosition event with the unwrapped CursorPosition. Declaration public virtual void OnUnwrappedCursorPosition(int? cRow = null, int? cCol = null) Parameters Type Name Description int? cRow int? cCol | Improve this Doc View Source Paste() Paste the clipboard contents into the current selected position. Declaration public void Paste() | Improve this Doc View Source PositionCursor() Positions the cursor on the current row and column Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source Redo() Redoes the latest changes. Declaration public void Redo() | Improve this Doc View Source ReplaceAllText(string, bool, bool, string?) Replaces all the text based on the match case. Declaration public bool ReplaceAllText(string textToFind, bool matchCase = false, bool matchWholeWord = false, string? textToReplace = null) Parameters Type Name Description string textToFind The text to find. bool matchCase The match case setting. bool matchWholeWord The match whole word setting. string textToReplace The text to replace. Returns Type Description bool trueIf the text was found.falseotherwise. | Improve this Doc View Source ScrollTo(int, bool) Will scroll the TextView to display the specified row at the top if isRow is true or will scroll the TextView to display the specified column at the left if isRow is false. Declaration public void ScrollTo(int idx, bool isRow = true) Parameters Type Name Description int idx Row that should be displayed at the top or Column that should be displayed at the left, if the value is negative it will be reset to zero bool isRow If true (default) the idx is a row, column otherwise. | Improve this Doc View Source SelectAll() Select all text. Declaration public void SelectAll() | Improve this Doc View Source SetNormalColor() Sets the driver to the default color for the control where no text is being rendered. Defaults to Normal. Declaration protected virtual void SetNormalColor() | Improve this Doc View Source Undo() Undoes the latest changes. Declaration public void Undo() Events | Improve this Doc View Source ContentsChanged Raised when the contents of the TextView are changed. Declaration public event EventHandler<ContentsChangedEventArgs>? ContentsChanged Event Type Type Description EventHandler<ContentsChangedEventArgs> | Improve this Doc View Source DrawNormalColor Invoked when the normal color is drawn. Declaration public event EventHandler<RuneCellEventArgs>? DrawNormalColor Event Type Type Description EventHandler<RuneCellEventArgs> | Improve this Doc View Source DrawReadOnlyColor Invoked when the ready only color is drawn. Declaration public event EventHandler<RuneCellEventArgs>? DrawReadOnlyColor Event Type Type Description EventHandler<RuneCellEventArgs> | Improve this Doc View Source DrawSelectionColor Invoked when the selection color is drawn. Declaration public event EventHandler<RuneCellEventArgs>? DrawSelectionColor Event Type Type Description EventHandler<RuneCellEventArgs> | Improve this Doc View Source DrawUsedColor Invoked when the used color is drawn. The Used Color is used to indicate if the InsertChar was pressed and enabled. Declaration public event EventHandler<RuneCellEventArgs>? DrawUsedColor Event Type Type Description EventHandler<RuneCellEventArgs> | Improve this Doc View Source TextChanged Raised when the Text property of the TextView changes. Declaration public event EventHandler? TextChanged Event Type Type Description EventHandler | Improve this Doc View Source UnwrappedCursorPosition Invoked with the unwrapped CursorPosition. Declaration public event EventHandler<PointEventArgs>? UnwrappedCursorPosition Event Type Type Description EventHandler<PointEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TextViewAutocomplete.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TextViewAutocomplete.html",
    "title": "Class TextViewAutocomplete",
    "keywords": "Class TextViewAutocomplete Renders an overlay on another view at a given point that allows selecting from a range of 'autocomplete' options. An implementation on a TextView. Inheritance object AutocompleteBase PopupAutocomplete TextViewAutocomplete Implements IAutocomplete Inherited Members PopupAutocomplete.HostControl PopupAutocomplete.ScrollOffset PopupAutocomplete.ColorScheme PopupAutocomplete.RenderOverlay(Point) PopupAutocomplete.EnsureSelectedIdxIsValid() PopupAutocomplete.ProcessKey(KeyEventArgs) PopupAutocomplete.MouseEvent(MouseEvent, bool) PopupAutocomplete.RenderSelectedIdxByMouse(MouseEvent) PopupAutocomplete.Select() PopupAutocomplete.InsertSelection(Suggestion) PopupAutocomplete.Close() PopupAutocomplete.MoveUp() PopupAutocomplete.MoveDown() PopupAutocomplete.ReopenSuggestions() AutocompleteBase.PopupInsideContainer AutocompleteBase.SuggestionGenerator AutocompleteBase.MaxWidth AutocompleteBase.MaxHeight AutocompleteBase.Visible AutocompleteBase.Suggestions AutocompleteBase.SelectedIdx AutocompleteBase.SelectionKey AutocompleteBase.CloseKey AutocompleteBase.Reopen AutocompleteBase.Context AutocompleteBase.ClearSuggestions() AutocompleteBase.GenerateSuggestions(AutocompleteContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TextViewAutocomplete : PopupAutocomplete, IAutocomplete Methods | Improve this Doc View Source DeleteTextBackwards() Deletes the text backwards before insert the selected text in the HostControl. Declaration protected override void DeleteTextBackwards() Overrides PopupAutocomplete.DeleteTextBackwards() | Improve this Doc View Source InsertText(string) Insert the selected text in the HostControl. Declaration protected override void InsertText(string accepted) Parameters Type Name Description string accepted Overrides PopupAutocomplete.InsertText(string) | Improve this Doc View Source SetCursorPosition(int) Set the cursor position in the HostControl. Declaration protected override void SetCursorPosition(int column) Parameters Type Name Description int column Overrides PopupAutocomplete.SetCursorPosition(int) Implements IAutocomplete"
  },
  "api/Terminal.Gui/Terminal.Gui.ThemeManager.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ThemeManager.html",
    "title": "Class ThemeManager",
    "keywords": "Class ThemeManager Contains a dictionary of the Themes for a Terminal.Gui application. Inheritance object ThemeManager Implements IDictionary<string, ThemeScope> ICollection<KeyValuePair<string, ThemeScope>> IEnumerable<KeyValuePair<string, ThemeScope>> IEnumerable Remarks A Theme is a collection of settings that are named. The default theme is named \"Default\". The Theme property is used to detemrine the currently active theme. Examples \"Themes\": [ { \"Default\": { \"ColorSchemes\": [ { \"TopLevel\": { \"Normal\": { \"Foreground\": \"BrightGreen\", \"Background\": \"Black\" }, \"Focus\": { \"Foreground\": \"White\", \"Background\": \"Cyan\" }, \"HotNormal\": { \"Foreground\": \"Yellow\", \"Background\": \"Black\" }, \"HotFocus\": { \"Foreground\": \"Blue\", \"Background\": \"Cyan\" }, \"Disabled\": { \"Foreground\": \"DarkGray\", \"Background\": \"Black\" } } } Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ThemeManager : IDictionary<string, ThemeScope>, ICollection<KeyValuePair<string, ThemeScope>>, IEnumerable<KeyValuePair<string, ThemeScope>>, IEnumerable Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description int | Improve this Doc View Source Instance Class is a singleton... Declaration public static ThemeManager Instance { get; } Property Value Type Description ThemeManager | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool | Improve this Doc View Source this[string] Declaration public ThemeScope this[string key] { get; set; } Parameters Type Name Description string key Property Value Type Description ThemeScope | Improve this Doc View Source Keys Declaration public ICollection<string> Keys { get; } Property Value Type Description ICollection<string> | Improve this Doc View Source Theme Gets or sets the currently selected theme. The value is persisted to the \"Theme\" property. Declaration [JsonIgnore] public string Theme { get; set; } Property Value Type Description string | Improve this Doc View Source Themes Holds the ThemeScope definitions. Declaration [JsonInclude] [JsonConverter(typeof(DictionaryJsonConverter<ThemeScope>))] public static Dictionary<string, ThemeScope>? Themes { get; set; } Property Value Type Description Dictionary<string, ThemeScope> | Improve this Doc View Source Values Declaration public ICollection<ThemeScope> Values { get; } Property Value Type Description ICollection<ThemeScope> Methods | Improve this Doc View Source Add(KeyValuePair<string, ThemeScope>) Declaration public void Add(KeyValuePair<string, ThemeScope> item) Parameters Type Name Description KeyValuePair<string, ThemeScope> item | Improve this Doc View Source Add(string, ThemeScope) Declaration public void Add(string key, ThemeScope value) Parameters Type Name Description string key ThemeScope value | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(KeyValuePair<string, ThemeScope>) Declaration public bool Contains(KeyValuePair<string, ThemeScope> item) Parameters Type Name Description KeyValuePair<string, ThemeScope> item Returns Type Description bool | Improve this Doc View Source ContainsKey(string) Declaration public bool ContainsKey(string key) Parameters Type Name Description string key Returns Type Description bool | Improve this Doc View Source CopyTo(KeyValuePair<string, ThemeScope>[], int) Declaration public void CopyTo(KeyValuePair<string, ThemeScope>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<string, ThemeScope>[] array int arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<string, ThemeScope>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<string, ThemeScope>> | Improve this Doc View Source Remove(KeyValuePair<string, ThemeScope>) Declaration public bool Remove(KeyValuePair<string, ThemeScope> item) Parameters Type Name Description KeyValuePair<string, ThemeScope> item Returns Type Description bool | Improve this Doc View Source Remove(string) Declaration public bool Remove(string key) Parameters Type Name Description string key Returns Type Description bool | Improve this Doc View Source TryGetValue(string, out ThemeScope) Declaration public bool TryGetValue(string key, out ThemeScope value) Parameters Type Name Description string key ThemeScope value Returns Type Description bool Events | Improve this Doc View Source ThemeChanged Event fired he selected theme has changed. application. Declaration public event EventHandler<ThemeManagerEventArgs>? ThemeChanged Event Type Type Description EventHandler<ThemeManagerEventArgs> Implements IDictionary<TKey, TValue> ICollection<T> IEnumerable<T> IEnumerable"
  },
  "api/Terminal.Gui/Terminal.Gui.ThemeManagerEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ThemeManagerEventArgs.html",
    "title": "Class ThemeManagerEventArgs",
    "keywords": "Class ThemeManagerEventArgs Event arguments for the ThemeManager events. Inheritance object EventArgs ThemeManagerEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ThemeManagerEventArgs : EventArgs Constructors | Improve this Doc View Source ThemeManagerEventArgs(string) Initializes a new instance of ThemeManagerEventArgs Declaration public ThemeManagerEventArgs(string newTheme) Parameters Type Name Description string newTheme Properties | Improve this Doc View Source NewTheme The name of the new active theme.. Declaration public string NewTheme { get; set; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.ThemeScope.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ThemeScope.html",
    "title": "Class ThemeScope",
    "keywords": "Class ThemeScope The root object for a Theme. A Theme is a set of settings that are applied to the running Application as a group. Inheritance object Dictionary<string, ConfigProperty> Scope<ThemeScope> ThemeScope Implements IDictionary<string, ConfigProperty> ICollection<KeyValuePair<string, ConfigProperty>> IReadOnlyDictionary<string, ConfigProperty> IReadOnlyCollection<KeyValuePair<string, ConfigProperty>> IEnumerable<KeyValuePair<string, ConfigProperty>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Remarks Examples \"Default\": { \"ColorSchemes\": [ { \"TopLevel\": { \"Normal\": { \"Foreground\": \"BrightGreen\", \"Background\": \"Black\" }, \"Focus\": { \"Foreground\": \"White\", \"Background\": \"Cyan\" }, \"HotNormal\": { \"Foreground\": \"Yellow\", \"Background\": \"Black\" }, \"HotFocus\": { \"Foreground\": \"Blue\", \"Background\": \"Cyan\" }, \"Disabled\": { \"Foreground\": \"DarkGray\", \"Background\": \"Black\" } } Inherited Members Scope<ThemeScope>.Update(Scope<ThemeScope>) Scope<ThemeScope>.RetrieveValues() Dictionary<string, ConfigProperty>.Add(string, ConfigProperty) Dictionary<string, ConfigProperty>.Clear() Dictionary<string, ConfigProperty>.ContainsKey(string) Dictionary<string, ConfigProperty>.ContainsValue(ConfigProperty) Dictionary<string, ConfigProperty>.EnsureCapacity(int) Dictionary<string, ConfigProperty>.GetEnumerator() Dictionary<string, ConfigProperty>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, ConfigProperty>.OnDeserialization(object) Dictionary<string, ConfigProperty>.Remove(string) Dictionary<string, ConfigProperty>.Remove(string, out ConfigProperty) Dictionary<string, ConfigProperty>.TrimExcess() Dictionary<string, ConfigProperty>.TrimExcess(int) Dictionary<string, ConfigProperty>.TryAdd(string, ConfigProperty) Dictionary<string, ConfigProperty>.TryGetValue(string, out ConfigProperty) Dictionary<string, ConfigProperty>.Comparer Dictionary<string, ConfigProperty>.Count Dictionary<string, ConfigProperty>.this[string] Dictionary<string, ConfigProperty>.Keys Dictionary<string, ConfigProperty>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax [JsonConverter(typeof(ScopeJsonConverter<ThemeScope>))] public class ThemeScope : Scope<ThemeScope>, IDictionary<string, ConfigProperty>, ICollection<KeyValuePair<string, ConfigProperty>>, IReadOnlyDictionary<string, ConfigProperty>, IReadOnlyCollection<KeyValuePair<string, ConfigProperty>>, IEnumerable<KeyValuePair<string, ConfigProperty>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable"
  },
  "api/Terminal.Gui/Terminal.Gui.Thickness.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Thickness.html",
    "title": "Class Thickness",
    "keywords": "Class Thickness Describes the thickness of a frame around a rectangle. Four int values describe the Left, Top, Right, and Bottom sides of the rectangle, respectively. Inheritance object Thickness Implements IEquatable<Thickness> Remarks Use the helper API (GetInside(Rect) to get the rectangle describing the insides of the frame, with the thickness widths subtracted. Use the helper API (Draw(Rect, string) to draw the frame with the specified thickness. Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Thickness : IEquatable<Thickness> Constructors | Improve this Doc View Source Thickness() Initializes a new instance of the Thickness class with all widths set to 0. Declaration public Thickness() | Improve this Doc View Source Thickness(int, int, int, int) Initializes a new instance of the Thickness class that has specific widths applied to each side of the rectangle. Declaration public Thickness(int left, int top, int right, int bottom) Parameters Type Name Description int left int top int right int bottom | Improve this Doc View Source Thickness(int) Initializes a new instance of the Thickness class with a uniform width to each side. Declaration public Thickness(int width) Parameters Type Name Description int width Fields | Improve this Doc View Source Bottom Gets or sets the width of the lower side of the rectangle. Declaration [JsonInclude] public int Bottom Field Value Type Description int | Improve this Doc View Source Left Gets or sets the width of the left side of the rectangle. Declaration [JsonInclude] public int Left Field Value Type Description int | Improve this Doc View Source Right Gets or sets the width of the right side of the rectangle. Declaration [JsonInclude] public int Right Field Value Type Description int | Improve this Doc View Source Top Gets or sets the width of the upper side of the rectangle. Declaration [JsonInclude] public int Top Field Value Type Description int Properties | Improve this Doc View Source Empty Gets an empty thickness. Declaration public static Thickness Empty { get; } Property Value Type Description Thickness | Improve this Doc View Source Horizontal Gets the total width of the left and right sides of the rectangle. Sets the width of the left and rigth sides of the rectangle to half the specified value. Declaration public int Horizontal { get; set; } Property Value Type Description int | Improve this Doc View Source Vertical Gets the total height of the top and bottom sides of the rectangle. Sets the height of the top and bottom sides of the rectangle to half the specified value. Declaration public int Vertical { get; set; } Property Value Type Description int Methods | Improve this Doc View Source Contains(Rect, int, int) Gets whether the specified coordinates lie within the thickness (inside the bounding rectangle but outside of the rectangle described by GetInside(Rect). Declaration public bool Contains(Rect outside, int x, int y) Parameters Type Name Description Rect outside Describes the location and size of the rectangle that contains the thickness. int x int y Returns Type Description bool true if the specified coordinate is within the thickness; false otherwise. | Improve this Doc View Source Draw(Rect, string) Draws the Thickness rectangle with an optional diagnostics label. Declaration public Rect Draw(Rect rect, string label = null) Parameters Type Name Description Rect rect The location and size of the rectangle that bounds the thickness rectangle, in screen coordinates. string label The diagnostics label to draw on the bottom of the Bottom. Returns Type Description Rect The inner rectangle remaining to be drawn. | Improve this Doc View Source Equals(object) Determines whether the specified object is equal to the current object. Declaration public override bool Equals(object obj) Parameters Type Name Description object obj The object to compare with the current object. Returns Type Description bool true if the specified object is equal to the current object; otherwise, false. Overrides object.Equals(object) | Improve this Doc View Source Equals(Thickness) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Thickness other) Parameters Type Name Description Thickness other Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Improve this Doc View Source GetInside(Rect) Returns a rectangle describing the location and size of the inside area of rect with the thickness widths subtracted. The height and width of the returned rectangle will never be less than 0. Declaration public Rect GetInside(Rect rect) Parameters Type Name Description Rect rect The source rectangle Returns Type Description Rect | Improve this Doc View Source ToString() Returns the thickness widths of the Thickness formatted as a string. Declaration public override string ToString() Returns Type Description string The thickness widths as a string. Overrides object.ToString() Operators | Improve this Doc View Source operator ==(Thickness, Thickness) Declaration public static bool operator ==(Thickness left, Thickness right) Parameters Type Name Description Thickness left Thickness right Returns Type Description bool | Improve this Doc View Source operator !=(Thickness, Thickness) Declaration public static bool operator !=(Thickness left, Thickness right) Parameters Type Name Description Thickness left Thickness right Returns Type Description bool Implements IEquatable<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ThicknessEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ThicknessEventArgs.html",
    "title": "Class ThicknessEventArgs",
    "keywords": "Class ThicknessEventArgs Event arguments for the Thickness events. Inheritance object EventArgs ThicknessEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ThicknessEventArgs : EventArgs Constructors | Improve this Doc View Source ThicknessEventArgs() Initializes a new instance of ThicknessEventArgs Declaration public ThicknessEventArgs() Properties | Improve this Doc View Source PreviousThickness The previous Thickness. Declaration public Thickness PreviousThickness { get; set; } Property Value Type Description Thickness | Improve this Doc View Source Thickness The new Thickness. Declaration public Thickness Thickness { get; set; } Property Value Type Description Thickness"
  },
  "api/Terminal.Gui/Terminal.Gui.Tile.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Tile.html",
    "title": "Class Tile",
    "keywords": "Class Tile A single ContentView presented in a TileView. To create new instances use RebuildForTileCount(int) or InsertTile(int). Inheritance object Tile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Tile Constructors | Improve this Doc View Source Tile() Creates a new instance of the Tile class. Declaration public Tile() Properties | Improve this Doc View Source ContentView The ContentView that is contained in this TileView. Add new child views to this member for multiple ContentViews within the Tile. Declaration public View ContentView { get; } Property Value Type Description View | Improve this Doc View Source MinSize Gets or Sets the minimum size you to allow when splitter resizing along parent Orientation direction. Declaration public int MinSize { get; set; } Property Value Type Description int | Improve this Doc View Source Title The text that should be displayed above the ContentView. This will appear over the splitter line or border (above the view client area). Declaration public string Title { get; set; } Property Value Type Description string Methods | Improve this Doc View Source OnTitleChanged(string, string) Called when the Title has been changed. Invokes the TitleChanged event. Declaration public virtual void OnTitleChanged(string oldTitle, string newTitle) Parameters Type Name Description string oldTitle The Title that is/has been replaced. string newTitle The new Title to be replaced. | Improve this Doc View Source OnTitleChanging(string, string) Called before the Title changes. Invokes the TitleChanging event, which can be cancelled. Declaration public virtual bool OnTitleChanging(string oldTitle, string newTitle) Parameters Type Name Description string oldTitle The Title that is/has been replaced. string newTitle The new Title to be replaced. Returns Type Description bool true if an event handler cancelled the Title change. Events | Improve this Doc View Source TitleChanged Event fired after the Title has been changed. Declaration public event EventHandler<TitleEventArgs> TitleChanged Event Type Type Description EventHandler<TitleEventArgs> | Improve this Doc View Source TitleChanging Event fired when the Title is changing. Set Cancel to true to cancel the Title change. Declaration public event EventHandler<TitleEventArgs> TitleChanging Event Type Type Description EventHandler<TitleEventArgs>"
  },
  "api/Terminal.Gui/Terminal.Gui.TileView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TileView.html",
    "title": "Class TileView",
    "keywords": "Class TileView A View consisting of a moveable bar that divides the display area into resizeable Tiles. Inheritance object Responder View TileView Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TileView : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TileView() Creates a new instance of the TileView class with 2 tiles (i.e. left and right). Declaration public TileView() | Improve this Doc View Source TileView(int) Creates a new instance of the TileView class with tiles number of tiles. Declaration public TileView(int tiles) Parameters Type Name Description int tiles Properties | Improve this Doc View Source LineStyle The line style to use when drawing the splitter lines. Declaration public LineStyle LineStyle { get; set; } Property Value Type Description LineStyle | Improve this Doc View Source Orientation Orientation of the dividing line (Horizontal or Vertical). Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation | Improve this Doc View Source SplitterDistances The splitter locations. Note that there will be N-1 splitters where N is the number of Tiles. Declaration public IReadOnlyCollection<Pos> SplitterDistances { get; } Property Value Type Description IReadOnlyCollection<Pos> | Improve this Doc View Source Tiles The sub sections hosted by the view Declaration public IReadOnlyCollection<Tile> Tiles { get; } Property Value Type Description IReadOnlyCollection<Tile> | Improve this Doc View Source ToggleResizable The keyboard key that the user can press to toggle resizing of splitter lines. Mouse drag splitting is always enabled. Declaration public Key ToggleResizable { get; set; } Property Value Type Description Key Methods | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) | Improve this Doc View Source GetParentTileView() Returns the immediate parent TileView of this. Note that in case of deep nesting this might not be the root TileView. Returns null if this instance is not a nested child (created with TrySplitTile(int, int, out TileView)) Declaration public TileView GetParentTileView() Returns Type Description TileView | Improve this Doc View Source IndexOf(View, bool) Returns the index of the first Tile in Tiles which contains toFind. Declaration public int IndexOf(View toFind, bool recursive = false) Parameters Type Name Description View toFind bool recursive Returns Type Description int | Improve this Doc View Source InsertTile(int) Adds a new Tile to the collection at idx. This will also add another splitter line Declaration public Tile InsertTile(int idx) Parameters Type Name Description int idx Returns Type Description Tile | Improve this Doc View Source IsRootTileView() true if TileView is nested within a parent TileView e.g. via the TrySplitTile(int, int, out TileView). false if it is a root level TileView. Declaration public bool IsRootTileView() Returns Type Description bool | Improve this Doc View Source LayoutSubviews() Invoked when a view starts executing or when the dimensions of the view have changed, for example in response to the container view or terminal resizing. Declaration public override void LayoutSubviews() Overrides View.LayoutSubviews() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnDrawFrames() Overridden so no Frames get drawn (BUGBUG: v2 fix this hack) Declaration public override bool OnDrawFrames() Returns Type Description bool Overrides View.OnDrawFrames() | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnSplitterMoved(int) Raises the SplitterMoved event Declaration protected virtual void OnSplitterMoved(int idx) Parameters Type Name Description int idx | Improve this Doc View Source RebuildForTileCount(int) Scraps all Tiles and creates count new tiles in orientation Orientation Declaration public void RebuildForTileCount(int count) Parameters Type Name Description int count | Improve this Doc View Source RemoveTile(int) Removes a Tiles at the provided idx from the view. Returns the removed tile or null if already empty. Declaration public Tile RemoveTile(int idx) Parameters Type Name Description int idx Returns Type Description Tile | Improve this Doc View Source SetSplitterPos(int, Pos) Attempts to update the SplitterDistances of line at idx to the new value. Returns false if the new position is not allowed because of MinSize, location of other splitters etc. Only absolute values (e.g. 10) and percent values (i.e. Percent(float)) are supported for this property. Declaration public bool SetSplitterPos(int idx, Pos value) Parameters Type Name Description int idx Pos value Returns Type Description bool | Improve this Doc View Source TrySplitTile(int, int, out TileView) Converts of Tiles element idx from a regular View to a new nested TileView the specified numberOfPanels. Returns false if the element already contains a nested view. Declaration public bool TrySplitTile(int idx, int numberOfPanels, out TileView result) Parameters Type Name Description int idx The element of Tiles that is to be subdivided. int numberOfPanels The number of panels that the Tile should be split into TileView result The new nested TileView. Returns Type Description bool true if a View was converted to a new nested TileView. false if it was already a nested TileView Events | Improve this Doc View Source SplitterMoved Invoked when any of the SplitterDistances is changed. Declaration public event SplitterEventHandler SplitterMoved Event Type Type Description SplitterEventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.TimeField.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TimeField.html",
    "title": "Class TimeField",
    "keywords": "Class TimeField Time editing View Inheritance object Responder View TextField TimeField Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The TimeField View provides time editing functionality with mouse support. Inherited Members TextField.Caption TextField.CaptionColor TextField.Used TextField.ReadOnly TextField.TextChanging TextField.TextChanged TextField.OnEnter(View) TextField.OnLeave(View) TextField.Autocomplete TextField.Frame TextField.Text TextField.Secret TextField.ScrollOffset TextField.IsDirty TextField.HasHistoryChanges TextField.ContextMenu TextField.PositionCursor() TextField.OnDrawContent(Rect) TextField.GetNormalColor() TextField.CanFocus TextField.KillWordBackwards() TextField.KillWordForwards() TextField.Redo() TextField.Undo() TextField.MoveEnd() TextField.SelectAll() TextField.DeleteAll() TextField.SelectedStart TextField.SelectedLength TextField.SelectedText TextField.ClearAllSelection() TextField.Copy() TextField.Cut() TextField.Paste() TextField.OnTextChanging(string) TextField.DesiredCursorVisibility TextField.InsertText(string, bool) TextField.ClearHistoryChanges() View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TimeField : TextField, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source TimeField() Initializes a new instance of TimeField using Computed positioning. Declaration public TimeField() | Improve this Doc View Source TimeField(int, int, TimeSpan, bool) Initializes a new instance of TimeField using Absolute positioning. Declaration public TimeField(int x, int y, TimeSpan time, bool isShort = false) Parameters Type Name Description int x The x coordinate. int y The y coordinate. TimeSpan time Initial time. bool isShort If true, the seconds are hidden. Sets the IsShortFormat property. | Improve this Doc View Source TimeField(TimeSpan) Initializes a new instance of TimeField using Computed positioning. Declaration public TimeField(TimeSpan time) Parameters Type Name Description TimeSpan time Initial time Properties | Improve this Doc View Source CursorPosition Sets or gets the current cursor position. Declaration public override int CursorPosition { get; set; } Property Value Type Description int Overrides TextField.CursorPosition | Improve this Doc View Source IsShortFormat Get or sets whether TimeField uses the short or long time format. Declaration public bool IsShortFormat { get; set; } Property Value Type Description bool | Improve this Doc View Source Time Gets or sets the time of the TimeField. Declaration public TimeSpan Time { get; set; } Property Value Type Description TimeSpan Methods | Improve this Doc View Source DeleteCharLeft(bool) Deletes the left character. Declaration public override void DeleteCharLeft(bool useOldCursorPos = true) Parameters Type Name Description bool useOldCursorPos Overrides TextField.DeleteCharLeft(bool) | Improve this Doc View Source DeleteCharRight() Deletes the right character. Declaration public override void DeleteCharRight() Overrides TextField.DeleteCharRight() | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent ev) Parameters Type Name Description MouseEvent ev Returns Type Description bool true, if the event was handled, false otherwise. Overrides TextField.MouseEvent(MouseEvent) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Processes key presses for the TextField. The TextField control responds to the following keys: Keys Function Delete, Backspace Deletes the character before cursor. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool Overrides TextField.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnTimeChanged(DateTimeEventArgs<TimeSpan>) Event firing method that invokes the TimeChanged event. Declaration public virtual void OnTimeChanged(DateTimeEventArgs<TimeSpan> args) Parameters Type Name Description DateTimeEventArgs<TimeSpan> args The event arguments Events | Improve this Doc View Source TimeChanged TimeChanged event, raised when the Date has changed. Declaration public event EventHandler<DateTimeEventArgs<TimeSpan>> TimeChanged Event Type Type Description EventHandler<DateTimeEventArgs<TimeSpan>> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Timeout.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Timeout.html",
    "title": "Class Timeout",
    "keywords": "Class Timeout Provides data for timers running manipulation. Inheritance object Timeout Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public sealed class Timeout Fields | Improve this Doc View Source Callback The function that will be invoked. Declaration public Func<bool> Callback Field Value Type Description Func<bool> | Improve this Doc View Source Span Time to wait before invoke the callback. Declaration public TimeSpan Span Field Value Type Description TimeSpan"
  },
  "api/Terminal.Gui/Terminal.Gui.TitleEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TitleEventArgs.html",
    "title": "Class TitleEventArgs",
    "keywords": "Class TitleEventArgs Event arguments for Title change events. Inheritance object EventArgs TitleEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TitleEventArgs : EventArgs Constructors | Improve this Doc View Source TitleEventArgs(string, string) Initializes a new instance of TitleEventArgs Declaration public TitleEventArgs(string oldTitle, string newTitle) Parameters Type Name Description string oldTitle The Title that is/has been replaced. string newTitle The new Title to be replaced. Properties | Improve this Doc View Source Cancel Flag which allows canceling the Title change. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source NewTitle The new Window Title. Declaration public string NewTitle { get; set; } Property Value Type Description string | Improve this Doc View Source OldTitle The old Window Title. Declaration public string OldTitle { get; set; } Property Value Type Description string"
  },
  "api/Terminal.Gui/Terminal.Gui.ToggleEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToggleEventArgs.html",
    "title": "Class ToggleEventArgs",
    "keywords": "Class ToggleEventArgs EventArgs for the Toggled event Inheritance object EventArgs ToggleEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ToggleEventArgs : EventArgs Constructors | Improve this Doc View Source ToggleEventArgs(bool?, bool?) Creates a new instance of the ToggleEventArgs class. Declaration public ToggleEventArgs(bool? oldValue, bool? newValue) Parameters Type Name Description bool? oldValue bool? newValue Properties | Improve this Doc View Source NewValue The new checked state Declaration public bool? NewValue { get; } Property Value Type Description bool? | Improve this Doc View Source OldValue The previous checked state Declaration public bool? OldValue { get; } Property Value Type Description bool?"
  },
  "api/Terminal.Gui/Terminal.Gui.Toplevel.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Toplevel.html",
    "title": "Class Toplevel",
    "keywords": "Class Toplevel Toplevel views can be modally executed. They are used for both an application's main view (filling the entire screeN and for pop-up views such as Dialog, MessageBox, and Wizard. Inheritance object Responder View Toplevel Window Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks Toplevels can be modally executing views, started by calling Run(Toplevel, Func<Exception, bool>). They return control to the caller when RequestStop(Toplevel) has been called (which sets the Running property to false). A Toplevel is created when an application initializes Terminal.Gui by calling Init(ConsoleDriver). The application Toplevel can be accessed via Top. Additional Toplevels can be created and run (e.g. Dialogs. To run a Toplevel, create the Toplevel and call Run(Toplevel, Func<Exception, bool>). Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Toplevel : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Toplevel() Initializes a new instance of the Toplevel class with Computed layout, defaulting to full screen. Declaration public Toplevel() | Improve this Doc View Source Toplevel(Rect) Initializes a new instance of the Toplevel class with the specified Absolute layout. Declaration public Toplevel(Rect frame) Parameters Type Name Description Rect frame A Superview-relative rectangle specifying the location and size for the new Toplevel Properties | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Toplevel can focus. Declaration public override bool CanFocus { get; } Property Value Type Description bool true if can focus; otherwise, false. Overrides View.CanFocus | Improve this Doc View Source IsLoaded true if was already loaded by the Begin(Toplevel) false, otherwise. Declaration public bool IsLoaded { get; } Property Value Type Description bool | Improve this Doc View Source IsOverlapped Gets or sets if this Toplevel is in overlapped mode within a Toplevel container. Declaration public bool IsOverlapped { get; } Property Value Type Description bool | Improve this Doc View Source IsOverlappedContainer Gets or sets if this Toplevel is a container for overlapped children. Declaration public bool IsOverlappedContainer { get; set; } Property Value Type Description bool | Improve this Doc View Source MenuBar Gets or sets the menu for this Toplevel. Declaration public virtual MenuBar MenuBar { get; set; } Property Value Type Description MenuBar | Improve this Doc View Source Modal Determines whether the Toplevel is modal or not. If set to false (the default): OnKeyPressed(KeyEventArgs) events will propagate keys upwards. The Toplevel will act as an embedded view (not a modal/pop-up). If set to true: OnKeyPressed(KeyEventArgs) events will NOT propagate keys upwards. The Toplevel will and look like a modal (pop-up) (e.g. see Dialog. Declaration public bool Modal { get; set; } Property Value Type Description bool | Improve this Doc View Source Running Gets or sets whether the MainLoop for this Toplevel is running or not. Declaration public bool Running { get; set; } Property Value Type Description bool | Improve this Doc View Source StatusBar Gets or sets the status bar for this Toplevel. Declaration public virtual StatusBar StatusBar { get; set; } Property Value Type Description StatusBar Methods | Improve this Doc View Source Add(View) Adds a subview (child) to this view. Declaration public override void Add(View view) Parameters Type Name Description View view Overrides View.Add(View) | Improve this Doc View Source Create() Convenience factory method that creates a new Toplevel with the current terminal dimensions. Declaration public static Toplevel Create() Returns Type Description Toplevel The created Toplevel. | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Contains the details about the mouse event. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Virtual method to invoke the AlternateBackwardKeyChanged event. Declaration public virtual void OnAlternateBackwardKeyChanged(KeyChangedEventArgs e) Parameters Type Name Description KeyChangedEventArgs e | Improve this Doc View Source OnAlternateForwardKeyChanged(KeyChangedEventArgs) Virtual method to invoke the AlternateForwardKeyChanged event. Declaration public virtual void OnAlternateForwardKeyChanged(KeyChangedEventArgs e) Parameters Type Name Description KeyChangedEventArgs e | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyDown(KeyEventArgs) Invoked when a key is depressed. Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public override bool OnKeyDown(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. Overrides View.OnKeyDown(KeyEventArgs) | Improve this Doc View Source OnKeyUp(KeyEventArgs) Method invoked when a key is released. This method will be called after OnKeyPressed(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public override bool OnKeyUp(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. Overrides View.OnKeyUp(KeyEventArgs) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnLoaded() Called from Begin(Toplevel) before the Toplevel redraws for the first time. Declaration public virtual void OnLoaded() | Improve this Doc View Source OnQuitKeyChanged(KeyChangedEventArgs) Virtual method to invoke the QuitKeyChanged event. Declaration public virtual void OnQuitKeyChanged(KeyChangedEventArgs e) Parameters Type Name Description KeyChangedEventArgs e | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source PositionToplevel(Toplevel) Adjusts the location and size of top within this Toplevel. Virtual method enabling implementation of specific positions for inherited Toplevel views. Declaration public virtual void PositionToplevel(Toplevel top) Parameters Type Name Description Toplevel top The Toplevel to adjust. | Improve this Doc View Source Remove(View) Removes a subview added via Add(View) or Add(params View[]) from this View. Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Removes all subviews (children) added via Add(View) or Add(params View[]) from this View. Declaration public override void RemoveAll() Overrides View.RemoveAll() | Improve this Doc View Source RequestStop() Stops and closes this Toplevel. If this Toplevel is the top-most Toplevel, RequestStop(Toplevel) will be called, causing the application to exit. Declaration public virtual void RequestStop() | Improve this Doc View Source RequestStop(Toplevel) Stops and closes the Toplevel specified by top. If top is the top-most Toplevel, RequestStop(Toplevel) will be called, causing the application to exit. Declaration public virtual void RequestStop(Toplevel top) Parameters Type Name Description Toplevel top The Toplevel to request stop. Events | Improve this Doc View Source Activate Invoked when the Toplevel RunState becomes the Current Toplevel. Declaration public event EventHandler<ToplevelEventArgs> Activate Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source AllChildClosed Invoked when the last child of the Toplevel RunState is closed from by End(RunState). Declaration public event EventHandler AllChildClosed Event Type Type Description EventHandler | Improve this Doc View Source AlternateBackwardKeyChanged Invoked when the AlternateBackwardKey is changed. Declaration public event EventHandler<KeyChangedEventArgs> AlternateBackwardKeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs> | Improve this Doc View Source AlternateForwardKeyChanged Invoked when the AlternateForwardKey is changed. Declaration public event EventHandler<KeyChangedEventArgs> AlternateForwardKeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs> | Improve this Doc View Source ChildClosed Invoked when a child of the Toplevel RunState is closed by End(RunState). Declaration public event EventHandler<ToplevelEventArgs> ChildClosed Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source ChildLoaded Invoked when a child Toplevel's RunState has been loaded. Declaration public event EventHandler<ToplevelEventArgs> ChildLoaded Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source ChildUnloaded Invoked when a cjhild Toplevel's RunState has been unloaded. Declaration public event EventHandler<ToplevelEventArgs> ChildUnloaded Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source Closed Invoked when the Toplevel's RunState is closed by End(RunState). Declaration public event EventHandler<ToplevelEventArgs> Closed Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source Closing Invoked when the Toplevel's RunState is being closed by RequestStop(Toplevel). Declaration public event EventHandler<ToplevelClosingEventArgs> Closing Event Type Type Description EventHandler<ToplevelClosingEventArgs> | Improve this Doc View Source Deactivate Invoked when the ToplevelRunState ceases to be the Current Toplevel. Declaration public event EventHandler<ToplevelEventArgs> Deactivate Event Type Type Description EventHandler<ToplevelEventArgs> | Improve this Doc View Source Loaded Invoked when the Toplevel RunState has begun to be loaded. A Loaded event handler is a good place to finalize initialization before calling RunLoop(RunState). Declaration public event EventHandler Loaded Event Type Type Description EventHandler | Improve this Doc View Source QuitKeyChanged Invoked when the QuitKey is changed. Declaration public event EventHandler<KeyChangedEventArgs> QuitKeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs> | Improve this Doc View Source Ready Invoked when the Toplevel MainLoop has started it's first iteration. Subscribe to this event to perform tasks when the Toplevel has been laid out and focus has been set. changes. A Ready event handler is a good place to finalize initialization after calling Run(Func<Exception, bool>) on this Toplevel. Declaration public event EventHandler Ready Event Type Type Description EventHandler | Improve this Doc View Source SizeChanging Invoked when the terminal has been resized. The new Size of the terminal is provided. Declaration public event EventHandler<SizeChangedEventArgs> SizeChanging Event Type Type Description EventHandler<SizeChangedEventArgs> | Improve this Doc View Source Unloaded Invoked when the Toplevel RunState has been unloaded. A Unloaded event handler is a good place to dispose objects after calling End(RunState). Declaration public event EventHandler Unloaded Event Type Type Description EventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelClosingEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelClosingEventArgs.html",
    "title": "Class ToplevelClosingEventArgs",
    "keywords": "Class ToplevelClosingEventArgs EventArgs implementation for the Closing event. Inheritance object EventArgs ToplevelClosingEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ToplevelClosingEventArgs : EventArgs Constructors | Improve this Doc View Source ToplevelClosingEventArgs(Toplevel) Initializes the event arguments with the requesting Toplevel. Declaration public ToplevelClosingEventArgs(Toplevel requestingTop) Parameters Type Name Description Toplevel requestingTop The RequestingTop. Properties | Improve this Doc View Source Cancel Provides an event cancellation option. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Improve this Doc View Source RequestingTop The Toplevel requesting stop. Declaration public View RequestingTop { get; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelComparer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelComparer.html",
    "title": "Class ToplevelComparer",
    "keywords": "Class ToplevelComparer Implements the IComparer<T> to sort the Toplevel from the OverlappedChildren if needed. Inheritance object ToplevelComparer Implements IComparer<Toplevel> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public sealed class ToplevelComparer : IComparer<Toplevel> Methods | Improve this Doc View Source Compare(Toplevel, Toplevel) Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other. Declaration public int Compare(Toplevel x, Toplevel y) Parameters Type Name Description Toplevel x The first object to compare. Toplevel y The second object to compare. Returns Type Description int A signed integer that indicates the relative values of x and y, as shown in the following table.Value Meaning Less than zero x is less than y.Zero x equals y.Greater than zero x is greater than y. Implements IComparer<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelEqualityComparer.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelEqualityComparer.html",
    "title": "Class ToplevelEqualityComparer",
    "keywords": "Class ToplevelEqualityComparer Implements the IEqualityComparer<T> for comparing two Toplevels used by StackExtensions. Inheritance object ToplevelEqualityComparer Implements IEqualityComparer<Toplevel> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ToplevelEqualityComparer : IEqualityComparer<Toplevel> Methods | Improve this Doc View Source Equals(Toplevel, Toplevel) Determines whether the specified objects are equal. Declaration public bool Equals(Toplevel x, Toplevel y) Parameters Type Name Description Toplevel x The first object of type Toplevel to compare. Toplevel y The second object of type Toplevel to compare. Returns Type Description bool true if the specified objects are equal; otherwise, false. | Improve this Doc View Source GetHashCode(Toplevel) Returns a hash code for the specified object. Declaration public int GetHashCode(Toplevel obj) Parameters Type Name Description Toplevel obj The Toplevel for which a hash code is to be returned. Returns Type Description int A hash code for the specified object. Exceptions Type Condition ArgumentNullException The type of obj is a reference type and obj is null. Implements IEqualityComparer<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.ToplevelEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ToplevelEventArgs.html",
    "title": "Class ToplevelEventArgs",
    "keywords": "Class ToplevelEventArgs Args for events that relate to a specific Toplevel. Inheritance object EventArgs ToplevelEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ToplevelEventArgs : EventArgs Constructors | Improve this Doc View Source ToplevelEventArgs(Toplevel) Creates a new instance of the ToplevelClosingEventArgs class. Declaration public ToplevelEventArgs(Toplevel toplevel) Parameters Type Name Description Toplevel toplevel Properties | Improve this Doc View Source Toplevel Gets the Toplevel that the event is about. Declaration public Toplevel Toplevel { get; } Property Value Type Description Toplevel"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeBuilder-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeBuilder-1.html",
    "title": "Class TreeBuilder<T>",
    "keywords": "Class TreeBuilder<T> Abstract implementation of ITreeBuilder<T>. Inheritance object TreeBuilder<T> DelegateTreeBuilder<T> TreeNodeBuilder Implements ITreeBuilder<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public abstract class TreeBuilder<T> : ITreeBuilder<T> Type Parameters Name Description T Constructors | Improve this Doc View Source TreeBuilder(bool) Constructs base and initializes SupportsCanExpand Declaration public TreeBuilder(bool supportsCanExpand) Parameters Type Name Description bool supportsCanExpand Pass true if you intend to implement CanExpand(T) otherwise false Properties | Improve this Doc View Source SupportsCanExpand Returns true if CanExpand(T) is implemented by this class Declaration public bool SupportsCanExpand { get; protected set; } Property Value Type Description bool Methods | Improve this Doc View Source CanExpand(T) Override this method to return a rapid answer as to whether GetChildren(T) returns results. If you are implementing this method ensure you passed true in base constructor or set SupportsCanExpand Declaration public virtual bool CanExpand(T toExpand) Parameters Type Name Description T toExpand Returns Type Description bool | Improve this Doc View Source GetChildren(T) Returns all children of a given forObject which should be added to the tree as new branches underneath it Declaration public abstract IEnumerable<T> GetChildren(T forObject) Parameters Type Name Description T forObject Returns Type Description IEnumerable<T> Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeNode.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeNode.html",
    "title": "Class TreeNode",
    "keywords": "Class TreeNode Simple class for representing nodes, use with regular (non generic) TreeView. Inheritance object TreeNode Implements ITreeNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeNode : ITreeNode Constructors | Improve this Doc View Source TreeNode() Initialises a new instance with no Text Declaration public TreeNode() | Improve this Doc View Source TreeNode(string) Initialises a new instance and sets starting Text Declaration public TreeNode(string text) Parameters Type Name Description string text Properties | Improve this Doc View Source Children Children of the current node Declaration public virtual IList<ITreeNode> Children { get; set; } Property Value Type Description IList<ITreeNode> | Improve this Doc View Source Tag Optionally allows you to store some custom data/class here. Declaration public object Tag { get; set; } Property Value Type Description object | Improve this Doc View Source Text Text to display in tree node for current entry Declaration public virtual string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source ToString() returns Text Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements ITreeNode"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeNodeBuilder.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeNodeBuilder.html",
    "title": "Class TreeNodeBuilder",
    "keywords": "Class TreeNodeBuilder ITreeBuilder<T> implementation for ITreeNode objects Inheritance object TreeBuilder<ITreeNode> TreeNodeBuilder Implements ITreeBuilder<ITreeNode> Inherited Members TreeBuilder<ITreeNode>.SupportsCanExpand TreeBuilder<ITreeNode>.CanExpand(ITreeNode) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeNodeBuilder : TreeBuilder<ITreeNode>, ITreeBuilder<ITreeNode> Constructors | Improve this Doc View Source TreeNodeBuilder() Initialises a new instance of builder for any model objects of Type ITreeNode Declaration public TreeNodeBuilder() Methods | Improve this Doc View Source GetChildren(ITreeNode) Returns Children from model Declaration public override IEnumerable<ITreeNode> GetChildren(ITreeNode model) Parameters Type Name Description ITreeNode model Returns Type Description IEnumerable<ITreeNode> Overrides TreeBuilder<ITreeNode>.GetChildren(ITreeNode) Implements ITreeBuilder<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeStyle.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeStyle.html",
    "title": "Class TreeStyle",
    "keywords": "Class TreeStyle Defines rendering options that affect how the tree is displayed. Inheritance object TreeStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeStyle Properties | Improve this Doc View Source CollapseableSymbol Symbol to use for branch nodes that can be collapsed (are currently expanded). Defaults to '-'. Set to null to hide. Declaration public Rune? CollapseableSymbol { get; set; } Property Value Type Description Rune? | Improve this Doc View Source ColorExpandSymbol Set to true to highlight expand/collapse symbols in hot key color. Declaration public bool ColorExpandSymbol { get; set; } Property Value Type Description bool | Improve this Doc View Source ExpandableSymbol Symbol to use for branch nodes that can be expanded to indicate this to the user. Defaults to '+'. Set to null to hide. Declaration public Rune? ExpandableSymbol { get; set; } Property Value Type Description Rune? | Improve this Doc View Source HighlightModelTextOnly Set to true to cause the selected item to be rendered with only the Model text to be highlighted. If false (the default), the entire row will be highlighted. Declaration public bool HighlightModelTextOnly { get; set; } Property Value Type Description bool | Improve this Doc View Source InvertExpandSymbolColors Invert console colours used to render the expand symbol. Declaration public bool InvertExpandSymbolColors { get; set; } Property Value Type Description bool | Improve this Doc View Source LeaveLastRow true to leave the last row of the control free for overwritting (e.g. by a scrollbar) When true scrolling will be triggered on the second last row of the control rather than. the last. Declaration public bool LeaveLastRow { get; set; } Property Value Type Description bool | Improve this Doc View Source ShowBranchLines true to render vertical lines under expanded nodes to show which node belongs to which parent. false to use only whitespace. Declaration public bool ShowBranchLines { get; set; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeTableSource-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeTableSource-1.html",
    "title": "Class TreeTableSource<T>",
    "keywords": "Class TreeTableSource<T> An ITableSource with expandable rows. Inheritance object TreeTableSource<T> Implements IEnumerableTableSource<T> ITableSource IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeTableSource<T> : IEnumerableTableSource<T>, ITableSource, IDisposable where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source TreeTableSource(TableView, string, TreeView<T>, Dictionary<string, Func<T, object>>) Creates a new instance of TreeTableSource<T> presenting the given tree. This source should only be used with table. Declaration public TreeTableSource(TableView table, string firstColumnName, TreeView<T> tree, Dictionary<string, Func<T, object>> subsequentColumns) Parameters Type Name Description TableView table The table this source will provide data for. string firstColumnName Column name to use for the first column of the table (where the tree branches/leaves will be rendered. TreeView<T> tree The tree data to render. This should be a new view and not used elsewhere (e.g. via Add(View)). Dictionary<string, Func<T, object>> subsequentColumns Getter methods for each additional property you want to present in the table. For example: new () { { \"Colname1\", (t)=>t.SomeField}, { \"Colname2\", (t)=>t.SomeOtherField} } Properties | Improve this Doc View Source ColumnNames Gets the label for each column. Declaration public string[] ColumnNames { get; } Property Value Type Description string[] | Improve this Doc View Source Columns Gets the number of columns in the table. Declaration public int Columns { get; } Property Value Type Description int | Improve this Doc View Source this[int, int] Returns the data at the given indexes of the table (row, column). Declaration public object this[int row, int col] { get; } Parameters Type Name Description int row int col Property Value Type Description object | Improve this Doc View Source Rows Gets the number of rows in the table. Declaration public int Rows { get; } Property Value Type Description int Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetAllObjects() Return all objects in the table. Declaration public IEnumerable<T> GetAllObjects() Returns Type Description IEnumerable<T> | Improve this Doc View Source GetObjectOnRow(int) Return the object on the given row. Declaration public T GetObjectOnRow(int row) Parameters Type Name Description int row Returns Type Description T | Improve this Doc View Source RowToObject(int) Returns the tree model object rendering on the given row of the table. Declaration public T RowToObject(int row) Parameters Type Name Description int row Row in table. Returns Type Description T Implements IEnumerableTableSource<T> ITableSource IDisposable"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeView-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeView-1.html",
    "title": "Class TreeView<T>",
    "keywords": "Class TreeView<T> Hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder<T>. See TreeView Deep Dive for more information. Inheritance object Responder View TreeView<T> TreeView Implements IDisposable ISupportInitializeNotification ISupportInitialize ITreeView Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeView<T> : View, IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source TreeView() Creates a new tree view with absolute positioning. Use AddObjects(IEnumerable<T>) to set set root objects for the tree. Children will not be rendered until you set TreeBuilder. Declaration public TreeView() | Improve this Doc View Source TreeView(ITreeBuilder<T>) Initialises TreeBuilder.Creates a new tree view with absolute positioning. Use AddObjects(IEnumerable<T>) to set set root objects for the tree. Declaration public TreeView(ITreeBuilder<T> builder) Parameters Type Name Description ITreeBuilder<T> builder Fields | Improve this Doc View Source Filter Interface for filtering which lines of the tree are displayed e.g. to provide text searching. Defaults to null (no filtering). Declaration public ITreeViewFilter<T> Filter Field Value Type Description ITreeViewFilter<T> | Improve this Doc View Source NoBuilderError Error message to display when the control is not properly initialized at draw time (nodes added but no tree builder set). Declaration public static string NoBuilderError Field Value Type Description string Properties | Improve this Doc View Source AllowLetterBasedNavigation True makes a letter key press navigate to the next visible branch that begins with that letter/digit. Declaration public bool AllowLetterBasedNavigation { get; set; } Property Value Type Description bool | Improve this Doc View Source AspectGetter Returns the string representation of model objects hosted in the tree. Default implementation is to call ToString(). Declaration public AspectGetterDelegate<T> AspectGetter { get; set; } Property Value Type Description AspectGetterDelegate<T> | Improve this Doc View Source ColorGetter Delegate for multi colored tree views. Return the ColorScheme to use for each passed object or null to use the default. Declaration public Func<T, ColorScheme> ColorGetter { get; set; } Property Value Type Description Func<T, ColorScheme> | Improve this Doc View Source ContentHeight The current number of rows in the tree (ignoring the controls bounds). Declaration public int ContentHeight { get; } Property Value Type Description int | Improve this Doc View Source DesiredCursorVisibility Get / Set the wished cursor when the tree is focused. Only applies when MultiSelect is true. Defaults to Invisible. Declaration public CursorVisibility DesiredCursorVisibility { get; set; } Property Value Type Description CursorVisibility | Improve this Doc View Source KeystrokeNavigator Gets the CollectionNavigator that searches the Objects collection as the user types. Declaration public CollectionNavigator KeystrokeNavigator { get; } Property Value Type Description CollectionNavigator | Improve this Doc View Source MaxDepth Maximum number of nodes that can be expanded in any given branch. Declaration public int MaxDepth { get; set; } Property Value Type Description int | Improve this Doc View Source MultiSelect True to allow multiple objects to be selected at once. Declaration public bool MultiSelect { get; set; } Property Value Type Description bool | Improve this Doc View Source ObjectActivationButton Mouse event to trigger ObjectActivated. Defaults to double click (Button1DoubleClicked). Set to null to disable this feature. Declaration public MouseFlags? ObjectActivationButton { get; set; } Property Value Type Description MouseFlags? | Improve this Doc View Source ObjectActivationKey Key which when pressed triggers ObjectActivated. Defaults to Enter. Declaration public Key ObjectActivationKey { get; set; } Property Value Type Description Key | Improve this Doc View Source Objects The root objects in the tree, note that this collection is of root objects only. Declaration public IEnumerable<T> Objects { get; } Property Value Type Description IEnumerable<T> | Improve this Doc View Source ScrollOffsetHorizontal The amount of tree view that has been scrolled to the right (horizontally). Declaration public int ScrollOffsetHorizontal { get; set; } Property Value Type Description int | Improve this Doc View Source ScrollOffsetVertical The amount of tree view that has been scrolled off the top of the screen (by the user scrolling down). Declaration public int ScrollOffsetVertical { get; set; } Property Value Type Description int | Improve this Doc View Source SelectedObject The currently selected object in the tree. When MultiSelect is true this is the object at which the cursor is at. Declaration public T SelectedObject { get; set; } Property Value Type Description T | Improve this Doc View Source Style Contains options for changing how the tree is rendered. Declaration public TreeStyle Style { get; set; } Property Value Type Description TreeStyle | Improve this Doc View Source TreeBuilder Determines how sub branches of the tree are dynamically built at runtime as the user expands root nodes. Declaration public ITreeBuilder<T> TreeBuilder { get; set; } Property Value Type Description ITreeBuilder<T> Methods | Improve this Doc View Source ActivateSelectedObjectIfAny() Triggers the ObjectActivated event with the SelectedObject. This method also ensures that the selected object is visible. Declaration public void ActivateSelectedObjectIfAny() | Improve this Doc View Source AddObject(T) Adds a new root level object unless it is already a root of the tree. Declaration public void AddObject(T o) Parameters Type Name Description T o | Improve this Doc View Source AddObjects(IEnumerable<T>) Adds many new root level objects. Objects that are already root objects are ignored. Declaration public void AddObjects(IEnumerable<T> collection) Parameters Type Name Description IEnumerable<T> collection Objects to add as new root level objects. | Improve this Doc View Source AdjustSelection(int, bool) The number of screen lines to move the currently selected object by. Supports negative values. offset. Each branch occupies 1 line on screen. Declaration public void AdjustSelection(int offset, bool expandSelection = false) Parameters Type Name Description int offset Positive to move the selection down the screen, negative to move it up bool expandSelection True to expand the selection (assuming MultiSelect is enabled). False to replace. | Improve this Doc View Source AdjustSelectionToBranchEnd() Moves the selection to the last child in the currently selected level. Declaration public void AdjustSelectionToBranchEnd() | Improve this Doc View Source AdjustSelectionToBranchStart() Moves the selection to the first child in the currently selected level. Declaration public void AdjustSelectionToBranchStart() | Improve this Doc View Source AdjustSelectionToNextItemBeginningWith(char, StringComparison) Moves the SelectedObject to the next item that begins with character. This method will loop back to the start of the tree if reaching the end without finding a match. Declaration public void AdjustSelectionToNextItemBeginningWith(char character, StringComparison caseSensitivity = StringComparison.CurrentCultureIgnoreCase) Parameters Type Name Description char character The first character of the next item you want selected. StringComparison caseSensitivity Case sensitivity of the search. | Improve this Doc View Source CanExpand(T) Returns true if the given object o is exposed in the tree and can be expanded otherwise false. Declaration public bool CanExpand(T o) Parameters Type Name Description T o Returns Type Description bool | Improve this Doc View Source ClearObjects() Removes all objects from the tree and clears SelectedObject. Declaration public void ClearObjects() | Improve this Doc View Source Collapse() Collapses the SelectedObject Declaration public void Collapse() | Improve this Doc View Source Collapse(T) Collapses the supplied object if it is currently expanded . Declaration public void Collapse(T toCollapse) Parameters Type Name Description T toCollapse The object to collapse. | Improve this Doc View Source CollapseAll() Collapses all root nodes in the tree. Declaration public void CollapseAll() | Improve this Doc View Source CollapseAll(T) Collapses the supplied object if it is currently expanded. Also collapses all children branches (this will only become apparent when/if the user expands it again). Declaration public void CollapseAll(T toCollapse) Parameters Type Name Description T toCollapse The object to collapse. | Improve this Doc View Source CollapseImpl(T, bool) Implementation of Collapse(T) and CollapseAll(T). Performs operation and updates selection if disapeared. Declaration protected void CollapseImpl(T toCollapse, bool all) Parameters Type Name Description T toCollapse bool all | Improve this Doc View Source CursorLeft(bool) Determines systems behaviour when the left arrow key is pressed. Default behaviour is to collapse the current tree node if possible otherwise changes selection to current branches parent. Declaration protected virtual void CursorLeft(bool ctrl) Parameters Type Name Description bool ctrl | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides View.Dispose(bool) | Improve this Doc View Source EnsureVisible(T) Adjusts the ScrollOffsetVertical to ensure the given model is visible. Has no effect if already visible. Declaration public void EnsureVisible(T model) Parameters Type Name Description T model | Improve this Doc View Source Expand() Expands the currently SelectedObject. Declaration public void Expand() | Improve this Doc View Source Expand(T) Expands the supplied object if it is contained in the tree (either as a root object or as an exposed branch object). Declaration public void Expand(T toExpand) Parameters Type Name Description T toExpand The object to expand. | Improve this Doc View Source ExpandAll() Fully expands all nodes in the tree, if the tree is very big and built dynamically this may take a while (e.g. for file system). Declaration public void ExpandAll() | Improve this Doc View Source ExpandAll(T) Expands the supplied object and all child objects. Declaration public void ExpandAll(T toExpand) Parameters Type Name Description T toExpand The object to expand. | Improve this Doc View Source GetAllSelectedObjects() Returns SelectedObject (if not null) and all multi selected objects if MultiSelect is true Declaration public IEnumerable<T> GetAllSelectedObjects() Returns Type Description IEnumerable<T> | Improve this Doc View Source GetChildren(T) Returns the currently expanded children of the passed object. Returns an empty collection if the branch is not exposed or not expanded. Declaration public IEnumerable<T> GetChildren(T o) Parameters Type Name Description T o An object in the tree. Returns Type Description IEnumerable<T> | Improve this Doc View Source GetContentWidth(bool) Returns the maximum width line in the tree including prefix and expansion symbols. Declaration public int GetContentWidth(bool visible) Parameters Type Name Description bool visible True to consider only rows currently visible (based on window bounds and ScrollOffsetVertical. False to calculate the width of every exposed branch in the tree. Returns Type Description int | Improve this Doc View Source GetObjectOnRow(int) Returns the object in the tree list that is currently visible. at the provided row. Returns null if no object is at that location. If you have screen coordinates then use ScreenToFrame(int, int) to translate these into the client area of the TreeView<T>. Declaration public T GetObjectOnRow(int row) Parameters Type Name Description int row The row of the Bounds of the TreeView<T>. Returns Type Description T The object currently displayed on this row or null. | Improve this Doc View Source GetObjectRow(T) Returns the Y coordinate within the Bounds of the tree at which toFind would be displayed or null if it is not currently exposed (e.g. its parent is collapsed). Note that the returned value can be negative if the TreeView is scrolled down and the toFind object is off the top of the view. Declaration public int? GetObjectRow(T toFind) Parameters Type Name Description T toFind Returns Type Description int? | Improve this Doc View Source GetParent(T) Returns the parent object of o in the tree. Returns null if the object is not exposed in the tree. Declaration public T GetParent(T o) Parameters Type Name Description T o An object in the tree. Returns Type Description T | Improve this Doc View Source GetScrollOffsetOf(T) Returns the index of the object o if it is currently exposed (it's parent(s) have been expanded). This can be used with ScrollOffsetVertical and SetNeedsDisplay() to scroll to a specific object. Declaration public int GetScrollOffsetOf(T o) Parameters Type Name Description T o An object that appears in your tree and is currently exposed. Returns Type Description int The index the object was found at or -1 if it is not currently revealed or not in the tree at all. | Improve this Doc View Source GoTo(T) Changes the SelectedObject to toSelect and scrolls to ensure it is visible. Has no effect if toSelect is not exposed in the tree (e.g. its parents are collapsed). Declaration public void GoTo(T toSelect) Parameters Type Name Description T toSelect | Improve this Doc View Source GoToEnd() Changes the SelectedObject to the last object in the tree and scrolls so that it is visible. Declaration public void GoToEnd() | Improve this Doc View Source GoToFirst() Changes the SelectedObject to the first root object and resets the ScrollOffsetVertical to 0. Declaration public void GoToFirst() | Improve this Doc View Source InvalidateLineMap() Clears any cached results of the tree state. Declaration public void InvalidateLineMap() | Improve this Doc View Source IsExpanded(T) Returns true if the given object o is exposed in the tree and expanded otherwise false. Declaration public bool IsExpanded(T o) Parameters Type Name Description T o Returns Type Description bool | Improve this Doc View Source IsSelected(T) Returns true if the model is either the SelectedObject or part of a MultiSelect. Declaration public bool IsSelected(T model) Parameters Type Name Description T model Returns Type Description bool | Improve this Doc View Source MouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool MouseEvent(MouseEvent me) Parameters Type Name Description MouseEvent me Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.MouseEvent(MouseEvent) | Improve this Doc View Source MovePageDown(bool) Moves the selection down by the height of the control (1 page). Declaration public void MovePageDown(bool expandSelection = false) Parameters Type Name Description bool expandSelection True if the navigation should add the covered nodes to the selected current selection. Exceptions Type Condition NotImplementedException | Improve this Doc View Source MovePageUp(bool) Moves the selection up by the height of the control (1 page). Declaration public void MovePageUp(bool expandSelection = false) Parameters Type Name Description bool expandSelection True if the navigation should add the covered nodes to the selected current selection. Exceptions Type Condition NotImplementedException | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public override void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View Overrides View.OnDrawContent(Rect) | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnEnter(View) | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public override bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. Overrides View.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnObjectActivated(ObjectActivatedEventArgs<T>) Raises the ObjectActivated event. Declaration protected virtual void OnObjectActivated(ObjectActivatedEventArgs<T> e) Parameters Type Name Description ObjectActivatedEventArgs<T> e | Improve this Doc View Source OnSelectionChanged(SelectionChangedEventArgs<T>) Raises the SelectionChanged event. Declaration protected virtual void OnSelectionChanged(SelectionChangedEventArgs<T> e) Parameters Type Name Description SelectionChangedEventArgs<T> e | Improve this Doc View Source PositionCursor() Positions the cursor at the start of the selected objects line (if visible). Declaration public override void PositionCursor() Overrides View.PositionCursor() | Improve this Doc View Source RebuildTree() Rebuilds the tree structure for all exposed objects starting with the root objects. Call this method when you know there are changes to the tree but don't know which objects have changed (otherwise use RefreshObject(T, bool)). Declaration public void RebuildTree() | Improve this Doc View Source RefreshObject(T, bool) Refreshes the state of the object o in the tree. This will recompute children, string representation etc. Declaration public void RefreshObject(T o, bool startAtTop = false) Parameters Type Name Description T o bool startAtTop True to also refresh all ancestors of the objects branch (starting with the root). False to refresh only the passed node. | Improve this Doc View Source Remove(T) Removes the given root object from the tree Declaration public void Remove(T o) Parameters Type Name Description T o | Improve this Doc View Source ScrollDown() Scrolls the view area down a single line without changing the current selection. Declaration public void ScrollDown() | Improve this Doc View Source ScrollUp() Scrolls the view area up a single line without changing the current selection. Declaration public void ScrollUp() | Improve this Doc View Source SelectAll() Selects all objects in the tree when MultiSelect is enabled otherwise does nothing. Declaration public void SelectAll() Events | Improve this Doc View Source DrawLine Called once for each visible row during rendering. Can be used to make last minute changes to color or text rendered Declaration public event EventHandler<DrawTreeViewLineEventArgs<T>> DrawLine Event Type Type Description EventHandler<DrawTreeViewLineEventArgs<T>> | Improve this Doc View Source ObjectActivated This event is raised when an object is activated e.g. by double clicking or pressing ObjectActivationKey. Declaration public event EventHandler<ObjectActivatedEventArgs<T>> ObjectActivated Event Type Type Description EventHandler<ObjectActivatedEventArgs<T>> | Improve this Doc View Source SelectionChanged Called when the SelectedObject changes. Declaration public event EventHandler<SelectionChangedEventArgs<T>> SelectionChanged Event Type Type Description EventHandler<SelectionChangedEventArgs<T>> Implements IDisposable ISupportInitializeNotification ISupportInitialize ITreeView"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeView.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeView.html",
    "title": "Class TreeView",
    "keywords": "Class TreeView Convenience implementation of generic TreeView<T> for any tree were all nodes implement ITreeNode. See TreeView Deep Dive for more information. Inheritance object Responder View TreeView<ITreeNode> TreeView Implements IDisposable ISupportInitializeNotification ISupportInitialize ITreeView Inherited Members TreeView<ITreeNode>.TreeBuilder TreeView<ITreeNode>.Style TreeView<ITreeNode>.MultiSelect TreeView<ITreeNode>.MaxDepth TreeView<ITreeNode>.AllowLetterBasedNavigation TreeView<ITreeNode>.SelectedObject TreeView<ITreeNode>.ObjectActivated TreeView<ITreeNode>.ObjectActivationKey TreeView<ITreeNode>.ObjectActivationButton TreeView<ITreeNode>.ColorGetter TreeView<ITreeNode>.NoBuilderError TreeView<ITreeNode>.SelectionChanged TreeView<ITreeNode>.DrawLine TreeView<ITreeNode>.Objects TreeView<ITreeNode>.ScrollOffsetVertical TreeView<ITreeNode>.ScrollOffsetHorizontal TreeView<ITreeNode>.ContentHeight TreeView<ITreeNode>.AspectGetter TreeView<ITreeNode>.Filter TreeView<ITreeNode>.DesiredCursorVisibility TreeView<ITreeNode>.OnEnter(View) TreeView<ITreeNode>.AddObject(ITreeNode) TreeView<ITreeNode>.ClearObjects() TreeView<ITreeNode>.Remove(ITreeNode) TreeView<ITreeNode>.AddObjects(IEnumerable<ITreeNode>) TreeView<ITreeNode>.RefreshObject(ITreeNode, bool) TreeView<ITreeNode>.RebuildTree() TreeView<ITreeNode>.GetChildren(ITreeNode) TreeView<ITreeNode>.GetParent(ITreeNode) TreeView<ITreeNode>.OnDrawContent(Rect) TreeView<ITreeNode>.GetScrollOffsetOf(ITreeNode) TreeView<ITreeNode>.GetContentWidth(bool) TreeView<ITreeNode>.KeystrokeNavigator TreeView<ITreeNode>.OnKeyPressed(KeyEventArgs) TreeView<ITreeNode>.ActivateSelectedObjectIfAny() TreeView<ITreeNode>.GetObjectRow(ITreeNode) TreeView<ITreeNode>.AdjustSelectionToNextItemBeginningWith(char, StringComparison) TreeView<ITreeNode>.MovePageUp(bool) TreeView<ITreeNode>.MovePageDown(bool) TreeView<ITreeNode>.ScrollDown() TreeView<ITreeNode>.ScrollUp() TreeView<ITreeNode>.OnObjectActivated(ObjectActivatedEventArgs<ITreeNode>) TreeView<ITreeNode>.GetObjectOnRow(int) TreeView<ITreeNode>.MouseEvent(MouseEvent) TreeView<ITreeNode>.PositionCursor() TreeView<ITreeNode>.CursorLeft(bool) TreeView<ITreeNode>.GoToFirst() TreeView<ITreeNode>.GoToEnd() TreeView<ITreeNode>.GoTo(ITreeNode) TreeView<ITreeNode>.AdjustSelection(int, bool) TreeView<ITreeNode>.AdjustSelectionToBranchStart() TreeView<ITreeNode>.AdjustSelectionToBranchEnd() TreeView<ITreeNode>.EnsureVisible(ITreeNode) TreeView<ITreeNode>.Expand() TreeView<ITreeNode>.Expand(ITreeNode) TreeView<ITreeNode>.ExpandAll(ITreeNode) TreeView<ITreeNode>.ExpandAll() TreeView<ITreeNode>.CanExpand(ITreeNode) TreeView<ITreeNode>.IsExpanded(ITreeNode) TreeView<ITreeNode>.Collapse() TreeView<ITreeNode>.Collapse(ITreeNode) TreeView<ITreeNode>.CollapseAll(ITreeNode) TreeView<ITreeNode>.CollapseAll() TreeView<ITreeNode>.CollapseImpl(ITreeNode, bool) TreeView<ITreeNode>.InvalidateLineMap() TreeView<ITreeNode>.IsSelected(ITreeNode) TreeView<ITreeNode>.GetAllSelectedObjects() TreeView<ITreeNode>.SelectAll() TreeView<ITreeNode>.OnSelectionChanged(SelectionChangedEventArgs<ITreeNode>) TreeView<ITreeNode>.Dispose(bool) View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeView : TreeView<ITreeNode>, IDisposable, ISupportInitializeNotification, ISupportInitialize, ITreeView Constructors | Improve this Doc View Source TreeView() Creates a new instance of the tree control with absolute positioning and initialises TreeBuilder<T> with default ITreeNode based builder. Declaration public TreeView() Implements IDisposable ISupportInitializeNotification ISupportInitialize ITreeView"
  },
  "api/Terminal.Gui/Terminal.Gui.TreeViewTextFilter-1.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.TreeViewTextFilter-1.html",
    "title": "Class TreeViewTextFilter<T>",
    "keywords": "Class TreeViewTextFilter<T> ITreeViewFilter<T> implementation which searches the AspectGetter of the model for the given Text. Inheritance object TreeViewTextFilter<T> Implements ITreeViewFilter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class TreeViewTextFilter<T> : ITreeViewFilter<T> where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source TreeViewTextFilter(TreeView<T>) Creates a new instance of the filter for use with forTree. Set Text to begin filtering. Declaration public TreeViewTextFilter(TreeView<T> forTree) Parameters Type Name Description TreeView<T> forTree Exceptions Type Condition ArgumentNullException Properties | Improve this Doc View Source Comparer The case sensitivity of the search match. Defaults to OrdinalIgnoreCase. Declaration public StringComparison Comparer { get; set; } Property Value Type Description StringComparison | Improve this Doc View Source Text The text that will be searched for in the TreeView<T> Declaration public string Text { get; set; } Property Value Type Description string Methods | Improve this Doc View Source IsMatch(T) Returns T if there is no Text or the text matches the AspectGetter of the model. Declaration public bool IsMatch(T model) Parameters Type Name Description T model Returns Type Description bool Implements ITreeViewFilter<T>"
  },
  "api/Terminal.Gui/Terminal.Gui.VerticalAxis.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.VerticalAxis.html",
    "title": "Class VerticalAxis",
    "keywords": "Class VerticalAxis The vertical (i.e. Y axis) of a GraphView Inheritance object Axis VerticalAxis Inherited Members Axis.Orientation Axis.Increment Axis.ShowLabelsEvery Axis.Visible Axis.LabelGetter Axis.Text Axis.Minimum Axis.Reset() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class VerticalAxis : Axis Constructors | Improve this Doc View Source VerticalAxis() Creates a new Vertical axis Declaration public VerticalAxis() Methods | Improve this Doc View Source DrawAxisLabel(GraphView, int, string) Draws the given text on the axis at y screenPosition. For the screen x position use GetAxisXPosition(GraphView) Declaration public override void DrawAxisLabel(GraphView graph, int screenPosition, string text) Parameters Type Name Description GraphView graph Graph being drawn onto int screenPosition Number of rows from the top of the screen (i.e. down the axis) before rendering string text Text to render to the left of the axis tick. Ensure to set MarginLeft or ScrollOffset sufficient that it is visible Overrides Axis.DrawAxisLabel(GraphView, int, string) | Improve this Doc View Source DrawAxisLabels(GraphView) Draws axis Increment markers and labels Declaration public override void DrawAxisLabels(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLabels(GraphView) | Improve this Doc View Source DrawAxisLine(GraphView, int, int) Draws a vertical axis line at the given x, y screen coordinates Declaration protected override void DrawAxisLine(GraphView graph, int x, int y) Parameters Type Name Description GraphView graph int x int y Overrides Axis.DrawAxisLine(GraphView, int, int) | Improve this Doc View Source DrawAxisLine(GraphView) Draws the vertical axis line Declaration public override void DrawAxisLine(GraphView graph) Parameters Type Name Description GraphView graph Overrides Axis.DrawAxisLine(GraphView) | Improve this Doc View Source GetAxisXPosition(GraphView) Returns the X screen position of the origin (typically 0,0) of graph space. Return value is bounded by the screen i.e. the axis is always rendered even if the origin is offscreen. Declaration public int GetAxisXPosition(GraphView graph) Parameters Type Name Description GraphView graph Returns Type Description int"
  },
  "api/Terminal.Gui/Terminal.Gui.VerticalTextAlignment.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.VerticalTextAlignment.html",
    "title": "Enum VerticalTextAlignment",
    "keywords": "Enum VerticalTextAlignment Vertical text alignment enumeration, controls how text is displayed. Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public enum VerticalTextAlignment Fields Name Description Bottom The text will be bottom-aligned. Justified The text will be justified (spaces will be added to existing spaces such that the text fills the container vertically). Middle The text will centered vertically. Top The text will be top-aligned."
  },
  "api/Terminal.Gui/Terminal.Gui.View.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.View.html",
    "title": "Class View",
    "keywords": "Class View View is the base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views, called SubViews. Inheritance object Responder View Button CheckBox ColorPicker ComboBox Frame FrameView GraphView HexView Label Line LineView ListView MenuBar ProgressBar RadioGroup ScrollBarView ScrollView Slider<T> SpinnerView StatusBar TableView TabView TextField TextValidateField TextView TileView Toplevel TreeView<T> Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The View defines the base functionality for user interface elements in Terminal.Gui. Views can contain one or more subviews, can respond to user input and render themselves on the screen. SubView - A View that is contained in another view and will be rendered as part of the containing view's ContentArea. SubViews are added to another view via the Add(View)` method. A View may only be a SubView of a single View. SuperView - The View that is a container for SubViews. Focus is a concept that is used to describe which Responder is currently receiving user input. Only views that are Enabled, Visible, and CanFocus will receive focus. Views that are focusable should implement the PositionCursor() to make sure that the cursor is placed in a location that makes sense. Unix terminals do not have a way of hiding the cursor, so it can be distracting to have the cursor left at the last focused view. So views should make sure that they place the cursor in a visually sensible place. The View defines the base functionality for user interface elements in Terminal.Gui. Views can contain one or more subviews, can respond to user input and render themselves on the screen. Views supports two layout styles: Absolute or Computed. The choice as to which layout style is used by the View is determined when the View is initialized. To create a View using Absolute layout, call a constructor that takes a Rect parameter to specify the absolute position and size (the View.Frame). To create a View using Computed layout use a constructor that does not take a Rect parameter and set the X, Y, Width and Height properties on the view. Both approaches use coordinates that are relative to the container they are being added to. To switch between Absolute and Computed layout, use the LayoutStyle property. Computed layout is more flexible and supports dynamic console apps where controls adjust layout as the terminal resizes or other Views change size or position. The X, Y, Width and Height properties are Dim and Pos objects that dynamically update the position of a view. The X and Y properties are of type Pos and you can use either absolute positions, percentages or anchor points. The Width and Height properties are of type Dim and can use absolute position, percentages and anchors. These are useful as they will take care of repositioning views when view's frames are resized or if the terminal size changes. Absolute layout requires specifying coordinates and sizes of Views explicitly, and the View will typically stay in a fixed position and size. To change the position and size use the Frame property. Subviews (child views) can be added to a View by calling the Add(View) method. The container of a View can be accessed with the SuperView property. To flag a region of the View's Bounds to be redrawn call SetNeedsDisplay(Rect). To flag the entire view for redraw call SetNeedsDisplay(). The LayoutSubviews() method is invoked when the size or layout of a view has changed. The default processing system will keep the size and dimensions for views that use the Absolute, and will recompute the frames for the vies that use Computed. Views have a ColorScheme property that defines the default colors that subviews should use for rendering. This ensures that the views fit in the context where they are being used, and allows for themes to be plugged in. For example, the default colors for windows and Toplevels uses a blue background, while it uses a white background for dialog boxes and a red background for errors. Subclasses should not rely on ColorScheme being set at construction time. If a ColorScheme is not set on a view, the view will inherit the value from its SuperView and the value might only be valid once a view has been added to a SuperView. By using ColorScheme applications will work both in color as well as black and white displays. Views can also opt-in to more sophisticated initialization by implementing overrides to BeginInit() and EndInit() which will be called when the view is added to a SuperView. If first-run-only initialization is preferred, overrides to ISupportInitializeNotification can be implemented, in which case the ISupportInitialize methods will only be called if IsInitialized is false. This allows proper View inheritance hierarchies to override base class layout code optimally by doing so only on first run, instead of on every run. Inherited Members Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class View : Responder, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source View() Initializes a new instance of View using Computed layout. Declaration public View() | Improve this Doc View Source View(int, int, string) Initializes a new instance of View using Absolute layout. Declaration public View(int x, int y, string text) Parameters Type Name Description int x column to locate the View. int y row to locate the View. string text text to initialize the Text property with. | Improve this Doc View Source View(string, TextDirection) Initializes a new instance of View using Computed layout. Declaration public View(string text, TextDirection direction = TextDirection.LeftRight_TopBottom) Parameters Type Name Description string text text to initialize the Text property with. TextDirection direction The text direction. | Improve this Doc View Source View(Rect, string) Initializes a new instance of View using Absolute layout. Declaration public View(Rect rect, string text) Parameters Type Name Description Rect rect Location. string text text to initialize the Text property with. | Improve this Doc View Source View(Rect) Initializes a new instance of a Absolute View class with the absolute dimensions specified in the frame parameter. Declaration public View(Rect frame) Parameters Type Name Description Rect frame The region covered by this view. Properties | Improve this Doc View Source AutoSize Gets or sets a flag that determines whether the View will be automatically resized to fit the Text within Bounds The default is false. Set to true to turn on AutoSize. If true then Width and Height will be used if Text can fit; if Text won't fit the view will be resized as needed. In addition, if ForceValidatePosDim is true the new values of Width and Height must be of the same types of the existing one to avoid breaking the Dim settings. Declaration public virtual bool AutoSize { get; set; } Property Value Type Description bool | Improve this Doc View Source Border The frame (specified as a Thickness) inside of the view that offsets the Bounds from the Margin. The Border provides the space for a visual border (drawn using line-drawing glyphs) and the Title. The Border expands inward; in other words if `Border.Thickness.Top == 2` the border and title will take up the first row and the second row will be filled with spaces. Declaration public Frame Border { get; } Property Value Type Description Frame | Improve this Doc View Source BorderStyle Gets or sets whether the view has a one row/col thick border. Declaration public LineStyle BorderStyle { get; set; } Property Value Type Description LineStyle | Improve this Doc View Source Bounds The view's content area. SubViews are positioned relative to Bounds. Drawing is clipped to Bounds (Draw() clips drawing to Bounds.Size). Mouse events are reported relative to Bounds. Declaration public virtual Rect Bounds { get; set; } Property Value Type Description Rect The view's content area. | Improve this Doc View Source CanFocus Gets or sets a value indicating whether this Responder can focus. Declaration public override bool CanFocus { get; set; } Property Value Type Description bool true if can focus; otherwise, false. Overrides Responder.CanFocus | Improve this Doc View Source ClearOnVisibleFalse Gets or sets whether a view is cleared if the Visible property is false. Declaration public bool ClearOnVisibleFalse { get; set; } Property Value Type Description bool | Improve this Doc View Source ColorScheme The color scheme for this view, if it is not defined, it returns the SuperView's color scheme. Declaration public virtual ColorScheme ColorScheme { get; set; } Property Value Type Description ColorScheme | Improve this Doc View Source Data Gets or sets arbitrary data for the view. Declaration public object Data { get; set; } Property Value Type Description object | Improve this Doc View Source Driver Points to the current driver in use by the view, it is a convenience property for simplifying the development of new views. Declaration public static ConsoleDriver Driver { get; } Property Value Type Description ConsoleDriver | Improve this Doc View Source Enabled Gets or sets a value indicating whether this Responder can respond to user interaction. Declaration public override bool Enabled { get; set; } Property Value Type Description bool Overrides Responder.Enabled | Improve this Doc View Source Focused Returns the currently focused view inside this view, or null if nothing is focused. Declaration public View Focused { get; } Property Value Type Description View The focused. | Improve this Doc View Source ForceValidatePosDim Forces validation with Computed layout to avoid breaking the Pos and Dim settings. Declaration public bool ForceValidatePosDim { get; set; } Property Value Type Description bool | Improve this Doc View Source Frame Gets or sets the frame for the view. The frame is relative to the SuperView's Bounds. Declaration public virtual Rect Frame { get; set; } Property Value Type Description Rect The frame. | Improve this Doc View Source HasFocus Gets or sets a value indicating whether this Responder has focus. Declaration public override bool HasFocus { get; } Property Value Type Description bool true if has focus; otherwise, false. Overrides Responder.HasFocus | Improve this Doc View Source Height Gets or sets the height of the view. Only used the LayoutStyle is Computed. Declaration public Dim Height { get; set; } Property Value Type Description Dim The height. | Improve this Doc View Source HotKey Gets or sets the hot key defined for this view. Pressing the hot key on the keyboard while this view has focus will cause the MouseClick event to fire. See for an overview of Terminal.Gui keyboard APIs. HotKey - A keyboard chord composed of the Alt key and another character that selects a visible UI item. For example, in a Dialog, a Button with the text of \"_Text\" can be selected with Alt-T. Or, in a Menu with \"_File _Edit\", Alt-F will select (show) the File menu. If the \"_File\" menu has a sub-menu of \"_New\" Alt-N will ONLY select the \"_New\" sub-menu if the \"_File\" menu is already opened. This API is a helper API for configuring a key binding for the hot key. It uses the HotKey to determine the hot key from Title by looking for the first character prefixed with HotKeySpecifier. If the hot key is changed, the HotKeyChanged event is fired. Declaration public virtual Key HotKey { get; set; } Property Value Type Description Key | Improve this Doc View Source HotKeySpecifier Gets or sets the specifier character for the hot key (e.g. '_'). Set to '\\xffff' to disable hot key support for this View instance. The default is '\\xffff'. Declaration public virtual Rune HotKeySpecifier { get; set; } Property Value Type Description Rune | Improve this Doc View Source Id Gets or sets an identifier for the view; Declaration public string Id { get; set; } Property Value Type Description string The identifier. | Improve this Doc View Source IsAdded Indicates whether the view was added to SuperView. Declaration public bool IsAdded { get; } Property Value Type Description bool | Improve this Doc View Source IsCurrentTop Returns a value indicating if this View is currently on Top (Active) Declaration public bool IsCurrentTop { get; } Property Value Type Description bool | Improve this Doc View Source IsInitialized Get or sets if the View has been initialized (via BeginInit() and EndInit()). Declaration public virtual bool IsInitialized { get; set; } Property Value Type Description bool | Improve this Doc View Source LayoutStyle Controls how the View's Frame is computed during LayoutSubviews(). If the style is set to Absolute, LayoutSubviews does not change the Frame. If the style is Computed the Frame is updated using the X, Y, Width, and Height properties. Declaration public LayoutStyle LayoutStyle { get; set; } Property Value Type Description LayoutStyle The layout style. | Improve this Doc View Source LineCanvas The canvas that any line drawing that is to be shared by subviews of this view should add lines to. Declaration public LineCanvas LineCanvas { get; } Property Value Type Description LineCanvas | Improve this Doc View Source Margin The frame (specified as a Thickness) that separates a View from other SubViews of the same SuperView. The margin offsets the Bounds from the Frame. Declaration public Frame Margin { get; } Property Value Type Description Frame | Improve this Doc View Source MostFocused Returns the most focused view in the chain of subviews (the leaf view that has the focus). Declaration public View MostFocused { get; } Property Value Type Description View The most focused View. | Improve this Doc View Source NeedsDisplay Gets or sets whether the view needs to be redrawn. Declaration public bool NeedsDisplay { get; set; } Property Value Type Description bool | Improve this Doc View Source Padding The frame (specified as a Thickness) inside of the view that offsets the Bounds from the Border. Declaration public Frame Padding { get; } Property Value Type Description Frame | Improve this Doc View Source PreserveTrailingSpaces Gets or sets whether trailing spaces at the end of word-wrapped lines are preserved or not when WordWrap is enabled. If true trailing spaces at the end of wrapped lines will be removed when Text is formatted for display. The default is false. Declaration public virtual bool PreserveTrailingSpaces { get; set; } Property Value Type Description bool | Improve this Doc View Source SubViewNeedsDisplay Gets whether any Subviews need to be redrawn. Declaration public bool SubViewNeedsDisplay { get; } Property Value Type Description bool | Improve this Doc View Source Subviews This returns a list of the subviews contained by this view. Declaration public IList<View> Subviews { get; } Property Value Type Description IList<View> The subviews. | Improve this Doc View Source SuperView Returns the container for this view, or null if this view has not been added to a container. Declaration public virtual View SuperView { get; set; } Property Value Type Description View The super view. | Improve this Doc View Source SuperViewRendersLineCanvas Gets or sets whether this View will use it's SuperView's LineCanvas for rendering any border lines. If true the rendering of any borders drawn by this Frame will be done by it's parent's SuperView. If false (the default) this View's OnDrawFrames() method will be called to render the borders. Declaration public virtual bool SuperViewRendersLineCanvas { get; set; } Property Value Type Description bool | Improve this Doc View Source TabIndex Indicates the index of the current View from the TabIndexes list. See also: TabStop. Declaration public int TabIndex { get; set; } Property Value Type Description int | Improve this Doc View Source TabIndexes Gets a list of the subviews that are TabStops. Declaration public IList<View> TabIndexes { get; } Property Value Type Description IList<View> The tabIndexes. | Improve this Doc View Source TabStop Gets or sets whether the view is a stop-point for keyboard navigation of focus. Will be true only if the CanFocus is also true. Set to false to prevent the view from being a stop-point for keyboard navigation. The default keyboard navigation keys are Tab and BackTab. These can be changed by modifying the key bindings (see AddKeyBinding(Key, params Command[])) of the SuperView. Declaration public bool TabStop { get; set; } Property Value Type Description bool | Improve this Doc View Source Text The text displayed by the View. Declaration public virtual string Text { get; set; } Property Value Type Description string | Improve this Doc View Source TextAlignment Gets or sets how the View's Text is aligned horizontally when drawn. Changing this property will redisplay the View. Declaration public virtual TextAlignment TextAlignment { get; set; } Property Value Type Description TextAlignment The text alignment. | Improve this Doc View Source TextDirection Gets or sets the direction of the View's Text. Changing this property will redisplay the View. Declaration public virtual TextDirection TextDirection { get; set; } Property Value Type Description TextDirection The text alignment. | Improve this Doc View Source TextFormatter Gets or sets the TextFormatter used to format Text. Declaration public TextFormatter TextFormatter { get; set; } Property Value Type Description TextFormatter | Improve this Doc View Source Title The title to be displayed for this View. The title will be displayed if Border.Top is greater than 0. Declaration public string Title { get; set; } Property Value Type Description string The title. | Improve this Doc View Source VerticalTextAlignment Gets or sets how the View's Text is aligned vertically when drawn. Changing this property will redisplay the View. Declaration public virtual VerticalTextAlignment VerticalTextAlignment { get; set; } Property Value Type Description VerticalTextAlignment The text alignment. | Improve this Doc View Source Visible Gets or sets a value indicating whether this Responder and all its child controls are displayed. Declaration public override bool Visible { get; set; } Property Value Type Description bool Overrides Responder.Visible | Improve this Doc View Source WantContinuousButtonPressed Gets or sets a value indicating whether this View want continuous button pressed event. Declaration public virtual bool WantContinuousButtonPressed { get; set; } Property Value Type Description bool | Improve this Doc View Source WantMousePositionReports Gets or sets a value indicating whether this View wants mouse position reports. Declaration public virtual bool WantMousePositionReports { get; set; } Property Value Type Description bool true if want mouse position reports; otherwise, false. | Improve this Doc View Source Width Gets or sets the width of the view. Only used the LayoutStyle is Computed. Declaration public Dim Width { get; set; } Property Value Type Description Dim The width. | Improve this Doc View Source X Gets or sets the X position for the view (the column). Only used if the LayoutStyle is Computed. Declaration public Pos X { get; set; } Property Value Type Description Pos The X Position. | Improve this Doc View Source Y Gets or sets the Y position for the view (the row). Only used if the LayoutStyle is Computed. Declaration public Pos Y { get; set; } Property Value Type Description Pos The y position (line). Methods | Improve this Doc View Source Add(View) Adds a subview (child) to this view. Declaration public virtual void Add(View view) Parameters Type Name Description View view | Improve this Doc View Source Add(params View[]) Adds the specified views (children) to the view. Declaration public void Add(params View[] views) Parameters Type Name Description View[] views Array of one or more views (can be optional parameter). | Improve this Doc View Source AddCommand(Command, Func<bool?>) States that the given View supports a given command and what f to perform to make that command happen If the command already has an implementation the f will replace the old one Declaration protected void AddCommand(Command command, Func<bool?> f) Parameters Type Name Description Command command The command. Func<bool?> f The function. | Improve this Doc View Source AddKeyBinding(Key, params Command[]) Adds a new key combination that will trigger the given command (if supported by the View - see GetSupportedCommands()) If the key is already bound to a different Command it will be rebound to this one Commands are only ever applied to the current View(i.e. this feature cannot be used to switch focus to another view and perform multiple commands there) Declaration public void AddKeyBinding(Key key, params Command[] command) Parameters Type Name Description Key key Command[] command The command(s) to run on the View when key is pressed. When specifying multiple commands, all commands will be applied in sequence. The bound key strike will be consumed if any took effect. | Improve this Doc View Source AddRune(int, int, Rune) Displays the specified character in the specified column and row of the View. Declaration public void AddRune(int col, int row, Rune ch) Parameters Type Name Description int col Column (view-relative). int row Row (view-relative). Rune ch Ch. | Improve this Doc View Source BeginInit() Signals the View that initialization is starting. See ISupportInitialize. Declaration public virtual void BeginInit() | Improve this Doc View Source BoundsToScreen(int, int, out int, out int, bool) Converts a Bounds-relative coordinate to a screen-relative coordinate. The output is optionally clamped to the screen dimensions. Declaration public virtual void BoundsToScreen(int x, int y, out int rx, out int ry, bool clamped = true) Parameters Type Name Description int x Bounds-relative column. int y Bounds-relative row. int rx Absolute column; screen-relative. int ry Absolute row; screen-relative. bool clamped If true, rx and ry will be clamped to the screen dimensions (will never be negative and will always be less than Cols and Rows, respectively. | Improve this Doc View Source BoundsToScreen(Rect) Converts a Bounds-relative region to a screen-relative region. Declaration public Rect BoundsToScreen(Rect region) Parameters Type Name Description Rect region Returns Type Description Rect | Improve this Doc View Source BringSubviewForward(View) Moves the subview backwards in the hierarchy, only one step Declaration public void BringSubviewForward(View subview) Parameters Type Name Description View subview The subview to send backwards | Improve this Doc View Source BringSubviewToFront(View) Brings the specified subview to the front so it is drawn on top of any other views. Declaration public void BringSubviewToFront(View subview) Parameters Type Name Description View subview The subview to send to the front | Improve this Doc View Source Clear() Clears the Bounds with the normal background color. Declaration public void Clear() | Improve this Doc View Source Clear(Rect) Clears the specified screen-relative rectangle with the normal background. Declaration public void Clear(Rect regionScreen) Parameters Type Name Description Rect regionScreen The screen-relative rectangle to clear. | Improve this Doc View Source ClearKeyBinding(params Command[]) Removes all key bindings that trigger the given command. Views can have multiple different keys bound to the same command and this method will clear all of them. Declaration public void ClearKeyBinding(params Command[] command) Parameters Type Name Description Command[] command | Improve this Doc View Source ClearKeyBinding(Key) Clears the existing keybinding (if any) for the given key. Declaration public void ClearKeyBinding(Key key) Parameters Type Name Description Key key | Improve this Doc View Source ClearKeyBindings() Removes all bound keys from the View and resets the default bindings. Declaration public void ClearKeyBindings() | Improve this Doc View Source ClearLayoutNeeded() Indicates that the view does not need to be laid out. Declaration protected void ClearLayoutNeeded() | Improve this Doc View Source ClearNeedsDisplay() Clears NeedsDisplay and SubViewNeedsDisplay. Declaration protected void ClearNeedsDisplay() | Improve this Doc View Source ClipToBounds() Expands the ConsoleDriver's clip region to include Bounds. Declaration public Rect ClipToBounds() Returns Type Description Rect The current screen-relative clip region, which can be then re-applied by setting Clip. | Improve this Doc View Source ContainsKeyBinding(Key) Checks if the key binding already exists. Declaration public bool ContainsKeyBinding(Key key) Parameters Type Name Description Key key The key to check. Returns Type Description bool true If the key already exist, false otherwise. | Improve this Doc View Source Dispose(bool) Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Responder.Dispose(bool) | Improve this Doc View Source Draw() Draws the view. Causes the following virtual methods to be called (along with their related events): OnDrawContent(Rect), OnDrawContentComplete(Rect). Declaration public void Draw() | Improve this Doc View Source DrawHotString(string, bool, ColorScheme) Utility function to draw strings that contains a hotkey using a ColorScheme and the \"focused\" state. Declaration public void DrawHotString(string text, bool focused, ColorScheme scheme) Parameters Type Name Description string text String to display, the underscore before a letter flags the next letter as the hotkey. bool focused If set to true this uses the focused colors from the color scheme, otherwise the regular ones. ColorScheme scheme The color scheme to use. | Improve this Doc View Source DrawHotString(string, Attribute, Attribute) Utility function to draw strings that contain a hotkey. Declaration public void DrawHotString(string text, Attribute hotColor, Attribute normalColor) Parameters Type Name Description string text String to display, the hotkey specifier before a letter flags the next letter as the hotkey. Attribute hotColor Hot color. Attribute normalColor Normal color. | Improve this Doc View Source EndInit() Signals the View that initialization is ending. See ISupportInitialize. Declaration public void EndInit() | Improve this Doc View Source EnsureFocus() Finds the first view in the hierarchy that wants to get the focus if nothing is currently focused, otherwise, does nothing. Declaration public void EnsureFocus() | Improve this Doc View Source FindDeepestView(View, int, int, out int, out int) Finds which view that belong to the start superview at the provided location. Declaration public static View FindDeepestView(View start, int x, int y, out int resx, out int resy) Parameters Type Name Description View start The superview where to look for. int x The column location in the superview. int y The row location in the superview. int resx The found view screen relative column location. int resy The found view screen relative row location. Returns Type Description View The view that was found at the and coordinates. null if no view was found. | Improve this Doc View Source FocusFirst() Focuses the first focusable subview if one exists. Declaration public void FocusFirst() | Improve this Doc View Source FocusLast() Focuses the last focusable subview if one exists. Declaration public void FocusLast() | Improve this Doc View Source FocusNext() Focuses the next view. Declaration public bool FocusNext() Returns Type Description bool true if next was focused, false otherwise. | Improve this Doc View Source FocusPrev() Focuses the previous view. Declaration public bool FocusPrev() Returns Type Description bool true if previous was focused, false otherwise. | Improve this Doc View Source FrameToScreen() Gets the Frame with a screen-relative location. Declaration public virtual Rect FrameToScreen() Returns Type Description Rect The location and size of the view in screen-relative coordinates. | Improve this Doc View Source GetAutoSize() Gets the Frame dimensions required to fit Text within Bounds using the text View.Direction specified by the TextFormatter property and accounting for any HotKeySpecifier characters. Declaration public Size GetAutoSize() Returns Type Description Size The Size of the view required to fit the text. | Improve this Doc View Source GetBoundsOffset() Helper to get the X and Y offset of the Bounds from the Frame. This is the sum of the Left and Top properties of Margin, Border and Padding. Declaration public Point GetBoundsOffset() Returns Type Description Point | Improve this Doc View Source GetFocusColor() Determines the current ColorScheme based on the Enabled value. Declaration public virtual Attribute GetFocusColor() Returns Type Description Attribute Focus if Enabled is true or Disabled if Enabled is false. If it's overridden can return other values. | Improve this Doc View Source GetFramesThickness() Helper to get the total thickness of the Margin, Border, and Padding. Declaration public Thickness GetFramesThickness() Returns Type Description Thickness A thickness that describes the sum of the Frames' thicknesses. | Improve this Doc View Source GetHotKeySpecifierLength(bool) Gets the width or height of the HotKeySpecifier characters in the Text property. Declaration public int GetHotKeySpecifierLength(bool isWidth = true) Parameters Type Name Description bool isWidth If true (the default) the width required for the hotkey specifier is returned. Otherwise the height is returned. Returns Type Description int The number of characters required for the HotKeySpecifier. If the text direction specified by TextDirection does not match the isWidth parameter, 0 is returned. | Improve this Doc View Source GetHotNormalColor() Determines the current ColorScheme based on the Enabled value. Declaration public virtual Attribute GetHotNormalColor() Returns Type Description Attribute HotNormal if Enabled is true or Disabled if Enabled is false. If it's overridden can return other values. | Improve this Doc View Source GetKeyBindings(Key) Gets the array of Commands bound to key if it exists. Declaration public Command[] GetKeyBindings(Key key) Parameters Type Name Description Key key Returns Type Description Command[] The array of Commands if key is bound. An empty Command array if not. | Improve this Doc View Source GetKeyFromCommand(params Command[]) Gets the key used by a command. Declaration public Key GetKeyFromCommand(params Command[] command) Parameters Type Name Description Command[] command The command to search. Returns Type Description Key The Key used by a Command | Improve this Doc View Source GetNormalColor() Determines the current ColorScheme based on the Enabled value. Declaration public virtual Attribute GetNormalColor() Returns Type Description Attribute Normal if Enabled is true or Disabled if Enabled is false. If it's overridden can return other values. | Improve this Doc View Source GetSizeNeededForTextWithoutHotKey() Gets the dimensions required for Text ignoring a HotKeySpecifier. Declaration public Size GetSizeNeededForTextWithoutHotKey() Returns Type Description Size | Improve this Doc View Source GetSupportedCommands() Returns all commands that are supported by this View. Declaration public IEnumerable<Command> GetSupportedCommands() Returns Type Description IEnumerable<Command> | Improve this Doc View Source GetTextFormatterSizeNeededForTextAndHotKey() Gets the dimensions required for Text accounting for a HotKeySpecifier . Declaration public Size GetTextFormatterSizeNeededForTextAndHotKey() Returns Type Description Size | Improve this Doc View Source GetTopSuperView(View, View) Get the top superview of a given View. Declaration public View GetTopSuperView(View view = null, View superview = null) Parameters Type Name Description View view View superview Returns Type Description View The superview view. | Improve this Doc View Source InvokeCommand(Command) Invokes the specified command. Declaration public bool? InvokeCommand(Command command) Parameters Type Name Description Command command Returns Type Description bool? null if no command was found. true if the command was invoked and it handled the command. false if the command was invoked and it did not handle the command. | Improve this Doc View Source InvokeKeyBindings(KeyEventArgs) Invokes any binding that is registered on this View and matches the keyEvent Declaration protected bool? InvokeKeyBindings(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent The key event passed. Returns Type Description bool? null if no command was bound the keyEvent. true if commands were invoked and at least one handled the command. false if commands were invoked and at none handled the command. | Improve this Doc View Source LayoutSubviews() Invoked when a view starts executing or when the dimensions of the view have changed, for example in response to the container view or terminal resizing. Declaration public virtual void LayoutSubviews() | Improve this Doc View Source Move(int, int) This moves the cursor to the specified column and row in the view. Declaration public void Move(int col, int row) Parameters Type Name Description int col The column to move to, in view-relative coordinates. int row the row to move to, in view-relative coordinates. | Improve this Doc View Source OnAdded(SuperViewChangedEventArgs) Method invoked when a subview is being added to this view. Declaration public virtual void OnAdded(SuperViewChangedEventArgs e) Parameters Type Name Description SuperViewChangedEventArgs e Event where View is the subview being added. | Improve this Doc View Source OnCanFocusChanged() Method invoked when the CanFocus property from a view is changed. Declaration public override void OnCanFocusChanged() Overrides Responder.OnCanFocusChanged() | Improve this Doc View Source OnDrawContent(Rect) Enables overrides to draw infinitely scrolled content and/or a background behind added controls. Declaration public virtual void OnDrawContent(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View | Improve this Doc View Source OnDrawContentComplete(Rect) Enables overrides after completed drawing infinitely scrolled content and/or a background behind removed controls. Declaration public virtual void OnDrawContentComplete(Rect contentArea) Parameters Type Name Description Rect contentArea The view-relative rectangle describing the currently visible viewport into the View | Improve this Doc View Source OnDrawFrames() Prepares LineCanvas. If SuperViewRendersLineCanvas is true, only the LineCanvas of this view's subviews will be rendered. If SuperViewRendersLineCanvas is false (the default), this method will cause the LineCanvas be prepared to be rendered. Declaration public virtual bool OnDrawFrames() Returns Type Description bool | Improve this Doc View Source OnEnabledChanged() Method invoked when the Enabled property from a view is changed. Declaration public override void OnEnabledChanged() Overrides Responder.OnEnabledChanged() | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.OnEnter(View) | Improve this Doc View Source OnInvokeKeyBindings(KeyEventArgs) Low-level API called when a key is pressed to invoke any key bindings set on the view. This is called after OnKeyPressed(KeyEventArgs). Fires the InvokingKeyBindings event. Declaration public virtual bool OnInvokeKeyBindings(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. | Improve this Doc View Source OnKeyDown(KeyEventArgs) Invoked when a key is depressed. Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public virtual bool OnKeyDown(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Low-level API called when a key is pressed. This is called before OnInvokeKeyBindings(KeyEventArgs). For processing HotKeys and commands, use Command and AddKeyBinding(Key, params Command[])instead. Fires the KeyPressed event. Called after OnKeyDown(KeyEventArgs) and before OnKeyUp(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public virtual bool OnKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key press was not handled. true if the keypress was handled and no other view should see it. | Improve this Doc View Source OnKeyUp(KeyEventArgs) Method invoked when a key is released. This method will be called after OnKeyPressed(KeyEventArgs). Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Overrides must call into the base and return true if the base returns true. Declaration public virtual bool OnKeyUp(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Contains the details about the key that produced the event. Returns Type Description bool false if the key stroke was not handled. true if no other view should see it. | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.OnLeave(View) | Improve this Doc View Source OnMouseClick(MouseEventEventArgs) Invokes the MouseClick event. Declaration protected bool OnMouseClick(MouseEventEventArgs args) Parameters Type Name Description MouseEventEventArgs args Returns Type Description bool | Improve this Doc View Source OnMouseEnter(MouseEvent) Called when the mouse first enters the view; the view will now receives mouse events until the mouse leaves the view. At which time, OnMouseLeave(MouseEvent) will be called. Declaration public override bool OnMouseEnter(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.OnMouseEnter(MouseEvent) | Improve this Doc View Source OnMouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public virtual bool OnMouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. | Improve this Doc View Source OnMouseLeave(MouseEvent) Called when the mouse has moved outside of the view; the view will no longer receive mouse events (until the mouse moves within the view again and OnMouseEnter(MouseEvent) is called). Declaration public override bool OnMouseLeave(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. Overrides Responder.OnMouseLeave(MouseEvent) | Improve this Doc View Source OnRemoved(SuperViewChangedEventArgs) Method invoked when a subview is being removed from this view. Declaration public virtual void OnRemoved(SuperViewChangedEventArgs e) Parameters Type Name Description SuperViewChangedEventArgs e Event args describing the subview being removed. | Improve this Doc View Source OnRenderLineCanvas() Renders LineCanvas. If SuperViewRendersLineCanvas is true, only the LineCanvas of this view's subviews will be rendered. If SuperViewRendersLineCanvas is false (the default), this method will cause the LineCanvas to be rendered. Declaration public virtual bool OnRenderLineCanvas() Returns Type Description bool | Improve this Doc View Source OnResizeNeeded() Called whenever the view needs to be resized. Sets Frame and triggers a LayoutSubviews() call. Declaration protected virtual void OnResizeNeeded() | Improve this Doc View Source OnTitleChanged(string, string) Called when the Title has been changed. Invokes the TitleChanged event. Declaration public virtual void OnTitleChanged(string oldTitle, string newTitle) Parameters Type Name Description string oldTitle The Title that is/has been replaced. string newTitle The new Title to be replaced. | Improve this Doc View Source OnTitleChanging(string, string) Called before the Title changes. Invokes the TitleChanging event, which can be cancelled. Declaration public virtual bool OnTitleChanging(string oldTitle, string newTitle) Parameters Type Name Description string oldTitle The Title that is/has been replaced. string newTitle The new Title to be replaced. Returns Type Description bool `true` if an event handler canceled the Title change. | Improve this Doc View Source OnVisibleChanged() Method invoked when the Visible property from a view is changed. Declaration public override void OnVisibleChanged() Overrides Responder.OnVisibleChanged() | Improve this Doc View Source PositionCursor() Positions the cursor in the right position based on the currently focused view in the chain. Declaration public virtual void PositionCursor() | Improve this Doc View Source ProcessKeyPressed(KeyEventArgs) If the view is enabled, processes a key pressed event and returns true if the event was handled. Calls OnKeyPressed(KeyEventArgs) and OnInvokeKeyBindings(KeyEventArgs). Declaration public bool ProcessKeyPressed(KeyEventArgs keyEvent) Parameters Type Name Description KeyEventArgs keyEvent Returns Type Description bool true if the event was handled. | Improve this Doc View Source Remove(View) Removes a subview added via Add(View) or Add(params View[]) from this View. Declaration public virtual void Remove(View view) Parameters Type Name Description View view | Improve this Doc View Source RemoveAll() Removes all subviews (children) added via Add(View) or Add(params View[]) from this View. Declaration public virtual void RemoveAll() | Improve this Doc View Source ReplaceKeyBinding(Key, Key) Replaces a key combination already bound to Command. Declaration protected void ReplaceKeyBinding(Key fromKey, Key toKey) Parameters Type Name Description Key fromKey The key to be replaced. Key toKey The new key to be used. | Improve this Doc View Source ScreenToBounds(int, int) Converts a screen-relative coordinate to a bounds-relative coordinate. Declaration public Point ScreenToBounds(int x, int y) Parameters Type Name Description int x Screen-relative column. int y Screen-relative row. Returns Type Description Point The coordinate relative to this view's Bounds. | Improve this Doc View Source ScreenToFrame(int, int) Converts a screen-relative coordinate to a Frame-relative coordinate. Frame-relative means relative to the View's SuperView's Bounds. Declaration public Point ScreenToFrame(int x, int y) Parameters Type Name Description int x Screen-relative column. int y Screen-relative row. Returns Type Description Point The coordinate relative to the SuperView's Bounds. | Improve this Doc View Source SendSubviewBackwards(View) Moves the subview backwards in the hierarchy, only one step Declaration public void SendSubviewBackwards(View subview) Parameters Type Name Description View subview The subview to send backwards | Improve this Doc View Source SendSubviewToBack(View) Sends the specified subview to the front so it is the first view drawn Declaration public void SendSubviewToBack(View subview) Parameters Type Name Description View subview The subview to send to the front | Improve this Doc View Source SetFocus() Causes the specified view and the entire parent hierarchy to have the focused order updated. Declaration public void SetFocus() | Improve this Doc View Source SetNeedsDisplay() Sets the area of this view needing to be redrawn to Bounds. Declaration public void SetNeedsDisplay() | Improve this Doc View Source SetNeedsDisplay(Rect) Expands the area of this view needing to be redrawn to include region. Declaration public void SetNeedsDisplay(Rect region) Parameters Type Name Description Rect region The view-relative region that needs to be redrawn. | Improve this Doc View Source SetSubViewNeedsDisplay() Indicates that any Subviews (in the Subviews list) need to be repainted. Declaration public void SetSubViewNeedsDisplay() | Improve this Doc View Source ToString() Pretty prints the View Declaration public override string ToString() Returns Type Description string Overrides object.ToString() | Improve this Doc View Source UpdateTextFormatterText() Can be overridden if the Text has different format than the default. Declaration protected virtual void UpdateTextFormatterText() Events | Improve this Doc View Source Added Event fired when this view is added to another. Declaration public event EventHandler<SuperViewChangedEventArgs> Added Event Type Type Description EventHandler<SuperViewChangedEventArgs> | Improve this Doc View Source CanFocusChanged Event fired when the CanFocus value is being changed. Declaration public event EventHandler CanFocusChanged Event Type Type Description EventHandler | Improve this Doc View Source DrawContent Event invoked when the content area of the View is to be drawn. Declaration public event EventHandler<DrawEventArgs> DrawContent Event Type Type Description EventHandler<DrawEventArgs> | Improve this Doc View Source DrawContentComplete Event invoked when the content area of the View is completed drawing. Declaration public event EventHandler<DrawEventArgs> DrawContentComplete Event Type Type Description EventHandler<DrawEventArgs> | Improve this Doc View Source EnabledChanged Event fired when the Enabled value is being changed. Declaration public event EventHandler EnabledChanged Event Type Type Description EventHandler | Improve this Doc View Source Enter Event fired when the view gets focus. Declaration public event EventHandler<FocusEventArgs> Enter Event Type Type Description EventHandler<FocusEventArgs> | Improve this Doc View Source HotKeyChanged Invoked when the HotKey is changed. Declaration public event EventHandler<KeyChangedEventArgs> HotKeyChanged Event Type Type Description EventHandler<KeyChangedEventArgs> | Improve this Doc View Source Initialized Event called only once when the View is being initialized for the first time. Allows configurations and assignments to be performed before the View being shown. This derived from ISupportInitializeNotification to allow notify all the views that are being initialized. Declaration public event EventHandler Initialized Event Type Type Description EventHandler | Improve this Doc View Source InvokingKeyBindings Invoked when a key is pressed that may be mapped to a key binding. Set Handled to true to stop the key from being processed by other views. Declaration public event EventHandler<KeyEventArgs> InvokingKeyBindings Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyDown Invoked when a key is depressed. Set Handled to true to stop the key from being processed by other views. Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public event EventHandler<KeyEventArgs> KeyDown Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyPressed Invoked when a key is pressed. Set Handled to true to stop the key from being processed by other views. Invoked after KeyDown and before KeyUp. Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public event EventHandler<KeyEventArgs> KeyPressed Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source KeyUp Invoked when a key is released. Set Handled to true to stop the key from being processed by other views. Not all terminals support key distinct down/up notifications, Applications should avoid depending on distinct KeyDown and KeyUp events and instead should use KeyPressed. Declaration public event EventHandler<KeyEventArgs> KeyUp Event Type Type Description EventHandler<KeyEventArgs> | Improve this Doc View Source LayoutComplete Fired after the View's LayoutSubviews() method has completed. Declaration public event EventHandler<LayoutEventArgs> LayoutComplete Event Type Type Description EventHandler<LayoutEventArgs> | Improve this Doc View Source LayoutStarted Fired after the View's LayoutSubviews() method has completed. Declaration public event EventHandler<LayoutEventArgs> LayoutStarted Event Type Type Description EventHandler<LayoutEventArgs> | Improve this Doc View Source Leave Event fired when the view looses focus. Declaration public event EventHandler<FocusEventArgs> Leave Event Type Type Description EventHandler<FocusEventArgs> | Improve this Doc View Source MouseClick Event fired when a mouse event is generated. Declaration public event EventHandler<MouseEventEventArgs> MouseClick Event Type Type Description EventHandler<MouseEventEventArgs> | Improve this Doc View Source MouseEnter Event fired when the view receives the mouse event for the first time. Declaration public event EventHandler<MouseEventEventArgs> MouseEnter Event Type Type Description EventHandler<MouseEventEventArgs> | Improve this Doc View Source MouseLeave Event fired when the view receives a mouse event for the last time. Declaration public event EventHandler<MouseEventEventArgs> MouseLeave Event Type Type Description EventHandler<MouseEventEventArgs> | Improve this Doc View Source Removed Event fired when this view is removed from another. Declaration public event EventHandler<SuperViewChangedEventArgs> Removed Event Type Type Description EventHandler<SuperViewChangedEventArgs> | Improve this Doc View Source TitleChanged Event fired after the Title has been changed. Declaration public event EventHandler<TitleEventArgs> TitleChanged Event Type Type Description EventHandler<TitleEventArgs> | Improve this Doc View Source TitleChanging Event fired when the Title is changing. Set Cancel to `true` to cancel the Title change. Declaration public event EventHandler<TitleEventArgs> TitleChanging Event Type Type Description EventHandler<TitleEventArgs> | Improve this Doc View Source VisibleChanged Event fired when the Visible value is being changed. Declaration public event EventHandler VisibleChanged Event Type Type Description EventHandler Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.ViewEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.ViewEventArgs.html",
    "title": "Class ViewEventArgs",
    "keywords": "Class ViewEventArgs Args for events that relate to specific View Inheritance object EventArgs ViewEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class ViewEventArgs : EventArgs Constructors | Improve this Doc View Source ViewEventArgs(View) Creates a new instance of the View class. Declaration public ViewEventArgs(View view) Parameters Type Name Description View view Properties | Improve this Doc View Source View The view that the event is about. Declaration public View View { get; } Property Value Type Description View"
  },
  "api/Terminal.Gui/Terminal.Gui.Window.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Window.html",
    "title": "Class Window",
    "keywords": "Class Window A Toplevel View with BorderStyle set to Single. Inheritance object Responder View Toplevel Window Dialog Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks This is a helper class to simplify creating a Toplevel with a border. Inherited Members Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Window : Toplevel, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Window() Initializes a new instance of the Window class using Computed positioning. Declaration public Window() | Improve this Doc View Source Window(Rect) Initializes a new instance of the Window class using Computed positioning. Declaration public Window(Rect frame) Parameters Type Name Description Rect frame Properties | Improve this Doc View Source DefaultBorderStyle The default LineStyle for Window's border. The default is Single. Declaration [JsonConverter(typeof(JsonStringEnumConverter))] public static LineStyle DefaultBorderStyle { get; set; } Property Value Type Description LineStyle Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.Wizard.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.Wizard.html",
    "title": "Class Wizard",
    "keywords": "Class Wizard Provides navigation and a user interface (UI) to collect related data across multiple steps. Each step (WizardStep) can host arbitrary Views, much like a Dialog. Each step also has a pane for help text. Along the bottom of the Wizard view are customizable buttons enabling the user to navigate forward and backward through the Wizard. Inheritance object Responder View Toplevel Window Dialog Wizard Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks The Wizard can be displayed either as a modal (pop-up) Window (like Dialog) or as an embedded View. By default, Modal is true. In this case launch the Wizard with Application.Run(wizard). See Modal for more details. Examples using Terminal.Gui; using System.Text; Application.Init(); var wizard = new Wizard ($\"Setup Wizard\"); // Add 1st step var firstStep = new WizardStep (\"End User License Agreement\"); wizard.AddStep(firstStep); firstStep.NextButtonText = \"Accept!\"; firstStep.HelpText = \"This is the End User License Agreement.\"; // Add 2nd step var secondStep = new WizardStep (\"Second Step\"); wizard.AddStep(secondStep); secondStep.HelpText = \"This is the help text for the Second Step.\"; var lbl = new Label (\"Name:\") { AutoSize = true }; secondStep.Add(lbl); var name = new TextField () { X = Pos.Right (lbl) + 1, Width = Dim.Fill () - 1 }; secondStep.Add(name); wizard.Finished += (args) => { MessageBox.Query(\"Wizard\", $\"Finished. The Name entered is '{name.Text}'\", \"Ok\"); Application.RequestStop(); }; Application.Top.Add (wizard); Application.Run (); Application.Shutdown (); Inherited Members Dialog.DefaultButtonAlignment Dialog.AddButton(Button) Dialog.ButtonAlignment Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class Wizard : Dialog, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source Wizard() Initializes a new instance of the Wizard class using Computed positioning. Declaration public Wizard() Properties | Improve this Doc View Source BackButton If the CurrentStep is not the first step in the wizard, this button causes the MovingBack event to be fired and the wizard moves to the previous step. Declaration public Button BackButton { get; } Property Value Type Description Button | Improve this Doc View Source CurrentStep Gets or sets the currently active WizardStep. Declaration public WizardStep CurrentStep { get; set; } Property Value Type Description WizardStep | Improve this Doc View Source Modal Determines whether the Wizard is displayed as modal pop-up or not. The default is true. The Wizard will be shown with a frame and title and will behave like any Toplevel window. If set to false the Wizard will have no frame and will behave like any embedded View. To use Wizard as an embedded View Set Modal to false. Add the Wizard to a containing view with Add(View). If a non-Modal Wizard is added to the application after Run(Func<Exception, bool>) has been called the first step must be explicitly set by setting CurrentStep to GetNextStep(): wizard.CurrentStep = wizard.GetNextStep(); Declaration public bool Modal { get; set; } Property Value Type Description bool | Improve this Doc View Source NextFinishButton If the CurrentStep is the last step in the wizard, this button causes the Finished event to be fired and the wizard to close. If the step is not the last step, the MovingNext event will be fired and the wizard will move next step. Declaration public Button NextFinishButton { get; } Property Value Type Description Button Methods | Improve this Doc View Source AddStep(WizardStep) Adds a step to the wizard. The Next and Back buttons navigate through the added steps in the order they were added. Declaration public void AddStep(WizardStep newStep) Parameters Type Name Description WizardStep newStep | Improve this Doc View Source GetFirstStep() Returns the first enabled step in the Wizard Declaration public WizardStep GetFirstStep() Returns Type Description WizardStep The last enabled step | Improve this Doc View Source GetLastStep() Returns the last enabled step in the Wizard Declaration public WizardStep GetLastStep() Returns Type Description WizardStep The last enabled step | Improve this Doc View Source GetNextStep() Returns the next enabled WizardStep after the current step. Takes into account steps which are disabled. If CurrentStep is null returns the first enabled step. Declaration public WizardStep GetNextStep() Returns Type Description WizardStep The next step after the current step, if there is one; otherwise returns null, which indicates either there are no enabled steps or the current step is the last enabled step. | Improve this Doc View Source GetPreviousStep() Returns the first enabled WizardStep before the current step. Takes into account steps which are disabled. If CurrentStep is null returns the last enabled step. Declaration public WizardStep GetPreviousStep() Returns Type Description WizardStep The first step ahead of the current step, if there is one; otherwise returns null, which indicates either there are no enabled steps or the current step is the first enabled step. | Improve this Doc View Source GoBack() Causes the wizad to move to the previous enabled step (or first step if CurrentStep is not set). If there is no previous step, does nothing. Declaration public void GoBack() | Improve this Doc View Source GoNext() Causes the wizad to move to the next enabled step (or last step if CurrentStep is not set). If there is no previous step, does nothing. Declaration public void GoNext() | Improve this Doc View Source GoToStep(WizardStep) Changes to the specified WizardStep. Declaration public bool GoToStep(WizardStep newStep) Parameters Type Name Description WizardStep newStep The step to go to. Returns Type Description bool True if the transition to the step succeeded. False if the step was not found or the operation was cancelled. | Improve this Doc View Source OnKeyPressed(KeyEventArgs) Wizard is derived from Dialog and Dialog causes Esc to call RequestStop(Toplevel), closing the Dialog. Wizard overrides OnKeyPressed(KeyEventArgs) to instead fire the Cancelled event when Wizard is being used as a non-modal (see Modal. See OnKeyPressed(KeyEventArgs) for more. Declaration public override bool OnKeyPressed(KeyEventArgs a) Parameters Type Name Description KeyEventArgs a Returns Type Description bool Overrides Dialog.OnKeyPressed(KeyEventArgs) | Improve this Doc View Source OnStepChanged(WizardStep, WizardStep) Called when the Wizard has completed transition to a new WizardStep. Fires the StepChanged event. Declaration public virtual bool OnStepChanged(WizardStep oldStep, WizardStep newStep) Parameters Type Name Description WizardStep oldStep The step the Wizard changed from WizardStep newStep The step the Wizard has changed to Returns Type Description bool True if the change is to be cancelled. | Improve this Doc View Source OnStepChanging(WizardStep, WizardStep) Called when the Wizard is about to transition to another WizardStep. Fires the StepChanging event. Declaration public virtual bool OnStepChanging(WizardStep oldStep, WizardStep newStep) Parameters Type Name Description WizardStep oldStep The step the Wizard is about to change from WizardStep newStep The step the Wizard is about to change to Returns Type Description bool True if the change is to be cancelled. Events | Improve this Doc View Source Cancelled Raised when the user has cancelled the Wizard by pressin the Esc key. To prevent a modal (Modal is true) Wizard from closing, cancel the event by setting Cancel to true before returning from the event handler. Declaration public event EventHandler<WizardButtonEventArgs> Cancelled Event Type Type Description EventHandler<WizardButtonEventArgs> | Improve this Doc View Source Finished Raised when the Next/Finish button in the Wizard is clicked. The Next/Finish button is always the last button in the array of Buttons passed to the Wizard constructor, if any. This event is only raised if the CurrentStep is the last Step in the Wizard flow (otherwise the Finished event is raised). Declaration public event EventHandler<WizardButtonEventArgs> Finished Event Type Type Description EventHandler<WizardButtonEventArgs> | Improve this Doc View Source MovingBack Raised when the Back button in the Wizard is clicked. The Back button is always the first button in the array of Buttons passed to the Wizard constructor, if any. Declaration public event EventHandler<WizardButtonEventArgs> MovingBack Event Type Type Description EventHandler<WizardButtonEventArgs> | Improve this Doc View Source MovingNext Raised when the Next/Finish button in the Wizard is clicked (or the user presses Enter). The Next/Finish button is always the last button in the array of Buttons passed to the Wizard constructor, if any. This event is only raised if the CurrentStep is the last Step in the Wizard flow (otherwise the Finished event is raised). Declaration public event EventHandler<WizardButtonEventArgs> MovingNext Event Type Type Description EventHandler<WizardButtonEventArgs> | Improve this Doc View Source StepChanged This event is raised after the Wizard has changed the CurrentStep. Declaration public event EventHandler<StepChangeEventArgs> StepChanged Event Type Type Description EventHandler<StepChangeEventArgs> | Improve this Doc View Source StepChanging This event is raised when the current CurrentStep) is about to change. Use Cancel to abort the transition. Declaration public event EventHandler<StepChangeEventArgs> StepChanging Event Type Type Description EventHandler<StepChangeEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Terminal.Gui.WizardButtonEventArgs.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.WizardButtonEventArgs.html",
    "title": "Class WizardButtonEventArgs",
    "keywords": "Class WizardButtonEventArgs EventArgs for WizardStep transition events. Inheritance object EventArgs WizardButtonEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class WizardButtonEventArgs : EventArgs Constructors | Improve this Doc View Source WizardButtonEventArgs() Initializes a new instance of WizardButtonEventArgs Declaration public WizardButtonEventArgs() Properties | Improve this Doc View Source Cancel Set to true to cancel the transition to the next step. Declaration public bool Cancel { get; set; } Property Value Type Description bool"
  },
  "api/Terminal.Gui/Terminal.Gui.WizardStep.html": {
    "href": "api/Terminal.Gui/Terminal.Gui.WizardStep.html",
    "title": "Class WizardStep",
    "keywords": "Class WizardStep Represents a basic step that is displayed in a Wizard. The WizardStep view is divided horizontally in two. On the left is the content view where Views can be added, On the right is the help for the step. Set HelpText to set the help text. If the help text is empty the help pane will not be shown. If there are no Views added to the WizardStep the HelpText (if not empty) will fill the wizard step. Inheritance object Responder View FrameView WizardStep Implements IDisposable ISupportInitializeNotification ISupportInitialize Remarks If Buttons are added, do not set IsDefault to true as this will conflict with the Next button of the Wizard. Subscribe to the VisibleChanged event to be notified when the step is active; see also: StepChanged. To enable or disable a step from being shown to the user, set Enabled. Inherited Members FrameView.DefaultBorderStyle FrameView.OnEnter(View) View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Terminal.Gui Assembly: Terminal.Gui.dll Syntax public class WizardStep : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source WizardStep() Initializes a new instance of the Wizard class using Computed positioning. Declaration public WizardStep() Properties | Improve this Doc View Source BackButtonText Sets or gets the text for the back button. The back button will only be visible on steps after the first step. Declaration public string BackButtonText { get; set; } Property Value Type Description string | Improve this Doc View Source HelpText Sets or gets help text for the WizardStep.If HelpText is empty the help pane will not be visible and the content will fill the entire WizardStep. Declaration public string HelpText { get; set; } Property Value Type Description string | Improve this Doc View Source NextButtonText Sets or gets the text for the next/finish button. Declaration public string NextButtonText { get; set; } Property Value Type Description string Methods | Improve this Doc View Source Add(View) Add the specified View to the WizardStep. Declaration public override void Add(View view) Parameters Type Name Description View view View to add to this container Overrides View.Add(View) | Improve this Doc View Source Remove(View) Removes a View from WizardStep. Declaration public override void Remove(View view) Parameters Type Name Description View view Overrides View.Remove(View) | Improve this Doc View Source RemoveAll() Removes all Views from the WizardStep. Declaration public override void RemoveAll() Overrides View.RemoveAll() Implements IDisposable ISupportInitializeNotification ISupportInitialize"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.Event.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.Event.html",
    "title": "Enum Curses.Event",
    "keywords": "Enum Curses.Event Namespace: Unix.Terminal Assembly: Terminal.Gui.dll Syntax [Flags] public enum Curses.Event : long Fields Name Description AllEvents Button1Clicked Button1DoubleClicked Button1Pressed Button1Released Button1TripleClicked Button2Clicked Button2DoubleClicked Button2Pressed Button2Released Button2TripleClicked Button3Clicked Button3DoubleClicked Button3Pressed Button3Released Button3TripleClicked Button4Clicked Button4DoubleClicked Button4Pressed Button4Released Button4TripleClicked ButtonAlt ButtonCtrl ButtonShift ButtonWheeledDown ButtonWheeledUp ReportMousePosition"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.html",
    "title": "Class Curses",
    "keywords": "Class Curses Inheritance object Curses Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Unix.Terminal Assembly: Terminal.Gui.dll Syntax public class Curses Fields | Improve this Doc View Source A_BLINK Declaration public const int A_BLINK = 524288 Field Value Type Description int | Improve this Doc View Source A_BOLD Declaration public const int A_BOLD = 2097152 Field Value Type Description int | Improve this Doc View Source A_DIM Declaration public const int A_DIM = 1048576 Field Value Type Description int | Improve this Doc View Source A_INVIS Declaration public const int A_INVIS = 8388608 Field Value Type Description int | Improve this Doc View Source A_NORMAL Declaration public const int A_NORMAL = 0 Field Value Type Description int | Improve this Doc View Source A_PROTECT Declaration public const int A_PROTECT = 16777216 Field Value Type Description int | Improve this Doc View Source A_REVERSE Declaration public const int A_REVERSE = 262144 Field Value Type Description int | Improve this Doc View Source A_STANDOUT Declaration public const int A_STANDOUT = 65536 Field Value Type Description int | Improve this Doc View Source A_UNDERLINE Declaration public const int A_UNDERLINE = 131072 Field Value Type Description int | Improve this Doc View Source ACS_BLOCK Declaration public const int ACS_BLOCK = 4194352 Field Value Type Description int | Improve this Doc View Source ACS_BOARD Declaration public const int ACS_BOARD = 4194408 Field Value Type Description int | Improve this Doc View Source ACS_BTEE Declaration public const int ACS_BTEE = 4194422 Field Value Type Description int | Improve this Doc View Source ACS_BULLET Declaration public const int ACS_BULLET = 4194430 Field Value Type Description int | Improve this Doc View Source ACS_CKBOARD Declaration public const int ACS_CKBOARD = 4194401 Field Value Type Description int | Improve this Doc View Source ACS_DARROW Declaration public const int ACS_DARROW = 4194350 Field Value Type Description int | Improve this Doc View Source ACS_DEGREE Declaration public const int ACS_DEGREE = 4194406 Field Value Type Description int | Improve this Doc View Source ACS_DIAMOND Declaration public const int ACS_DIAMOND = 4194400 Field Value Type Description int | Improve this Doc View Source ACS_HLINE Declaration public const int ACS_HLINE = 4194417 Field Value Type Description int | Improve this Doc View Source ACS_LANTERN Declaration public const int ACS_LANTERN = 4194409 Field Value Type Description int | Improve this Doc View Source ACS_LARROW Declaration public const int ACS_LARROW = 4194348 Field Value Type Description int | Improve this Doc View Source ACS_LLCORNER Declaration public const int ACS_LLCORNER = 4194413 Field Value Type Description int | Improve this Doc View Source ACS_LRCORNER Declaration public const int ACS_LRCORNER = 4194410 Field Value Type Description int | Improve this Doc View Source ACS_LTEE Declaration public const int ACS_LTEE = 4194420 Field Value Type Description int | Improve this Doc View Source ACS_PLMINUS Declaration public const int ACS_PLMINUS = 4194407 Field Value Type Description int | Improve this Doc View Source ACS_PLUS Declaration public const int ACS_PLUS = 4194414 Field Value Type Description int | Improve this Doc View Source ACS_RARROW Declaration public const int ACS_RARROW = 4194347 Field Value Type Description int | Improve this Doc View Source ACS_RTEE Declaration public const int ACS_RTEE = 4194421 Field Value Type Description int | Improve this Doc View Source ACS_S1 Declaration public const int ACS_S1 = 4194415 Field Value Type Description int | Improve this Doc View Source ACS_S9 Declaration public const int ACS_S9 = 4194419 Field Value Type Description int | Improve this Doc View Source ACS_TTEE Declaration public const int ACS_TTEE = 4194423 Field Value Type Description int | Improve this Doc View Source ACS_UARROW Declaration public const int ACS_UARROW = 4194349 Field Value Type Description int | Improve this Doc View Source ACS_ULCORNER Declaration public const int ACS_ULCORNER = 4194412 Field Value Type Description int | Improve this Doc View Source ACS_URCORNER Declaration public const int ACS_URCORNER = 4194411 Field Value Type Description int | Improve this Doc View Source ACS_VLINE Declaration public const int ACS_VLINE = 4194424 Field Value Type Description int | Improve this Doc View Source AltCtrlKeyEnd Declaration public const int AltCtrlKeyEnd = 532 Field Value Type Description int | Improve this Doc View Source AltCtrlKeyHome Declaration public const int AltCtrlKeyHome = 537 Field Value Type Description int | Improve this Doc View Source AltCtrlKeyNPage Declaration public const int AltCtrlKeyNPage = 552 Field Value Type Description int | Improve this Doc View Source AltCtrlKeyPPage Declaration public const int AltCtrlKeyPPage = 557 Field Value Type Description int | Improve this Doc View Source AltKeyDown Declaration public const int AltKeyDown = 523 Field Value Type Description int | Improve this Doc View Source AltKeyEnd Declaration public const int AltKeyEnd = 528 Field Value Type Description int | Improve this Doc View Source AltKeyHome Declaration public const int AltKeyHome = 533 Field Value Type Description int | Improve this Doc View Source AltKeyLeft Declaration public const int AltKeyLeft = 543 Field Value Type Description int | Improve this Doc View Source AltKeyNPage Declaration public const int AltKeyNPage = 548 Field Value Type Description int | Improve this Doc View Source AltKeyPPage Declaration public const int AltKeyPPage = 553 Field Value Type Description int | Improve this Doc View Source AltKeyRight Declaration public const int AltKeyRight = 558 Field Value Type Description int | Improve this Doc View Source AltKeyUp Declaration public const int AltKeyUp = 564 Field Value Type Description int | Improve this Doc View Source COLOR_BLACK Declaration public const int COLOR_BLACK = 0 Field Value Type Description int | Improve this Doc View Source COLOR_BLUE Declaration public const int COLOR_BLUE = 4 Field Value Type Description int | Improve this Doc View Source COLOR_CYAN Declaration public const int COLOR_CYAN = 6 Field Value Type Description int | Improve this Doc View Source COLOR_GRAY Declaration public const int COLOR_GRAY = 8 Field Value Type Description int | Improve this Doc View Source COLOR_GREEN Declaration public const int COLOR_GREEN = 2 Field Value Type Description int | Improve this Doc View Source COLOR_MAGENTA Declaration public const int COLOR_MAGENTA = 5 Field Value Type Description int | Improve this Doc View Source COLOR_RED Declaration public const int COLOR_RED = 1 Field Value Type Description int | Improve this Doc View Source COLOR_WHITE Declaration public const int COLOR_WHITE = 7 Field Value Type Description int | Improve this Doc View Source COLOR_YELLOW Declaration public const int COLOR_YELLOW = 3 Field Value Type Description int | Improve this Doc View Source CtrlKeyDown Declaration public const int CtrlKeyDown = 525 Field Value Type Description int | Improve this Doc View Source CtrlKeyEnd Declaration public const int CtrlKeyEnd = 530 Field Value Type Description int | Improve this Doc View Source CtrlKeyHome Declaration public const int CtrlKeyHome = 535 Field Value Type Description int | Improve this Doc View Source CtrlKeyLeft Declaration public const int CtrlKeyLeft = 545 Field Value Type Description int | Improve this Doc View Source CtrlKeyNPage Declaration public const int CtrlKeyNPage = 550 Field Value Type Description int | Improve this Doc View Source CtrlKeyPPage Declaration public const int CtrlKeyPPage = 555 Field Value Type Description int | Improve this Doc View Source CtrlKeyRight Declaration public const int CtrlKeyRight = 560 Field Value Type Description int | Improve this Doc View Source CtrlKeyUp Declaration public const int CtrlKeyUp = 566 Field Value Type Description int | Improve this Doc View Source DownEnd Declaration public const int DownEnd = 0 Field Value Type Description int | Improve this Doc View Source ERR Declaration public const int ERR = -1 Field Value Type Description int | Improve this Doc View Source Home Declaration public const int Home = 0 Field Value Type Description int | Improve this Doc View Source KEY_CODE_YES Declaration public const int KEY_CODE_YES = 256 Field Value Type Description int | Improve this Doc View Source KeyAlt Declaration public const int KeyAlt = 8192 Field Value Type Description int | Improve this Doc View Source KeyBackspace Declaration public const int KeyBackspace = 263 Field Value Type Description int | Improve this Doc View Source KeyBackTab Declaration public const int KeyBackTab = 353 Field Value Type Description int | Improve this Doc View Source KeyCSI Declaration public const int KeyCSI = 91 Field Value Type Description int | Improve this Doc View Source KeyDeleteChar Declaration public const int KeyDeleteChar = 330 Field Value Type Description int | Improve this Doc View Source KeyDown Declaration public const int KeyDown = 258 Field Value Type Description int | Improve this Doc View Source KeyEnd Declaration public const int KeyEnd = 360 Field Value Type Description int | Improve this Doc View Source KeyF1 Declaration public const int KeyF1 = 265 Field Value Type Description int | Improve this Doc View Source KeyF10 Declaration public const int KeyF10 = 274 Field Value Type Description int | Improve this Doc View Source KeyF11 Declaration public const int KeyF11 = 275 Field Value Type Description int | Improve this Doc View Source KeyF12 Declaration public const int KeyF12 = 276 Field Value Type Description int | Improve this Doc View Source KeyF2 Declaration public const int KeyF2 = 266 Field Value Type Description int | Improve this Doc View Source KeyF3 Declaration public const int KeyF3 = 267 Field Value Type Description int | Improve this Doc View Source KeyF4 Declaration public const int KeyF4 = 268 Field Value Type Description int | Improve this Doc View Source KeyF5 Declaration public const int KeyF5 = 269 Field Value Type Description int | Improve this Doc View Source KeyF6 Declaration public const int KeyF6 = 270 Field Value Type Description int | Improve this Doc View Source KeyF7 Declaration public const int KeyF7 = 271 Field Value Type Description int | Improve this Doc View Source KeyF8 Declaration public const int KeyF8 = 272 Field Value Type Description int | Improve this Doc View Source KeyF9 Declaration public const int KeyF9 = 273 Field Value Type Description int | Improve this Doc View Source KeyHome Declaration public const int KeyHome = 262 Field Value Type Description int | Improve this Doc View Source KeyInsertChar Declaration public const int KeyInsertChar = 331 Field Value Type Description int | Improve this Doc View Source KeyLeft Declaration public const int KeyLeft = 260 Field Value Type Description int | Improve this Doc View Source KeyMouse Declaration public const int KeyMouse = 409 Field Value Type Description int | Improve this Doc View Source KeyNPage Declaration public const int KeyNPage = 338 Field Value Type Description int | Improve this Doc View Source KeyPPage Declaration public const int KeyPPage = 339 Field Value Type Description int | Improve this Doc View Source KeyResize Declaration public const int KeyResize = 410 Field Value Type Description int | Improve this Doc View Source KeyRight Declaration public const int KeyRight = 261 Field Value Type Description int | Improve this Doc View Source KeyTab Declaration public const int KeyTab = 9 Field Value Type Description int | Improve this Doc View Source KeyUp Declaration public const int KeyUp = 259 Field Value Type Description int | Improve this Doc View Source LeftRightUpNPagePPage Declaration public const int LeftRightUpNPagePPage = 0 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyDown Declaration public const int ShiftAltKeyDown = 524 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyEnd Declaration public const int ShiftAltKeyEnd = 529 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyHome Declaration public const int ShiftAltKeyHome = 534 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyLeft Declaration public const int ShiftAltKeyLeft = 544 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyNPage Declaration public const int ShiftAltKeyNPage = 549 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyPPage Declaration public const int ShiftAltKeyPPage = 554 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyRight Declaration public const int ShiftAltKeyRight = 559 Field Value Type Description int | Improve this Doc View Source ShiftAltKeyUp Declaration public const int ShiftAltKeyUp = 565 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyDown Declaration public const int ShiftCtrlKeyDown = 526 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyEnd Declaration public const int ShiftCtrlKeyEnd = 531 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyHome Declaration public const int ShiftCtrlKeyHome = 536 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyLeft Declaration public const int ShiftCtrlKeyLeft = 546 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyNPage Declaration public const int ShiftCtrlKeyNPage = 551 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyPPage Declaration public const int ShiftCtrlKeyPPage = 556 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyRight Declaration public const int ShiftCtrlKeyRight = 561 Field Value Type Description int | Improve this Doc View Source ShiftCtrlKeyUp Declaration public const int ShiftCtrlKeyUp = 567 Field Value Type Description int | Improve this Doc View Source ShiftKeyDown Declaration public const int ShiftKeyDown = 336 Field Value Type Description int | Improve this Doc View Source ShiftKeyEnd Declaration public const int ShiftKeyEnd = 386 Field Value Type Description int | Improve this Doc View Source ShiftKeyHome Declaration public const int ShiftKeyHome = 391 Field Value Type Description int | Improve this Doc View Source ShiftKeyLeft Declaration public const int ShiftKeyLeft = 393 Field Value Type Description int | Improve this Doc View Source ShiftKeyNPage Declaration public const int ShiftKeyNPage = 396 Field Value Type Description int | Improve this Doc View Source ShiftKeyPPage Declaration public const int ShiftKeyPPage = 398 Field Value Type Description int | Improve this Doc View Source ShiftKeyRight Declaration public const int ShiftKeyRight = 402 Field Value Type Description int | Improve this Doc View Source ShiftKeyUp Declaration public const int ShiftKeyUp = 337 Field Value Type Description int | Improve this Doc View Source TIOCGWINSZ Declaration public const int TIOCGWINSZ = 21523 Field Value Type Description int | Improve this Doc View Source TIOCGWINSZ_MAC Declaration public const int TIOCGWINSZ_MAC = 1074295912 Field Value Type Description int Properties | Improve this Doc View Source ColorPairs Declaration public static int ColorPairs { get; } Property Value Type Description int | Improve this Doc View Source Cols Declaration public static int Cols { get; } Property Value Type Description int | Improve this Doc View Source HasColors Declaration public static bool HasColors { get; } Property Value Type Description bool | Improve this Doc View Source LC_ALL Declaration public static int LC_ALL { get; } Property Value Type Description int | Improve this Doc View Source Lines Declaration public static int Lines { get; } Property Value Type Description int Methods | Improve this Doc View Source addch(int) Declaration public static int addch(int ch) Parameters Type Name Description int ch Returns Type Description int | Improve this Doc View Source addstr(string, params object[]) Declaration public static int addstr(string format, params object[] args) Parameters Type Name Description string format object[] args Returns Type Description int | Improve this Doc View Source addwstr(string) Declaration public static int addwstr(string s) Parameters Type Name Description string s Returns Type Description int | Improve this Doc View Source attroff(int) Declaration public static int attroff(int attrs) Parameters Type Name Description int attrs Returns Type Description int | Improve this Doc View Source attron(int) Declaration public static int attron(int attrs) Parameters Type Name Description int attrs Returns Type Description int | Improve this Doc View Source attrset(int) Declaration public static int attrset(int attrs) Parameters Type Name Description int attrs Returns Type Description int | Improve this Doc View Source cbreak() Declaration public static int cbreak() Returns Type Description int | Improve this Doc View Source CheckWinChange() Declaration public static bool CheckWinChange() Returns Type Description bool | Improve this Doc View Source clearok(nint, bool) Declaration public static int clearok(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source COLOR_PAIRS() Declaration public static int COLOR_PAIRS() Returns Type Description int | Improve this Doc View Source ColorPair(int) Declaration public static int ColorPair(int n) Parameters Type Name Description int n Returns Type Description int | Improve this Doc View Source curs_set(int) Declaration public static int curs_set(int visibility) Parameters Type Name Description int visibility Returns Type Description int | Improve this Doc View Source curses_version() Declaration public static string curses_version() Returns Type Description string | Improve this Doc View Source def_prog_mode() Declaration public static int def_prog_mode() Returns Type Description int | Improve this Doc View Source def_shell_mode() Declaration public static int def_shell_mode() Returns Type Description int | Improve this Doc View Source doupdate() Declaration public static int doupdate() Returns Type Description int | Improve this Doc View Source echo() Declaration public static int echo() Returns Type Description int | Improve this Doc View Source echochar(int) Declaration public static int echochar(int ch) Parameters Type Name Description int ch Returns Type Description int | Improve this Doc View Source endwin() Declaration public static int endwin() Returns Type Description int | Improve this Doc View Source flushinp() Declaration public static int flushinp() Returns Type Description int | Improve this Doc View Source get_wch(out int) Declaration public static int get_wch(out int sequence) Parameters Type Name Description int sequence Returns Type Description int | Improve this Doc View Source getch() Declaration public static int getch() Returns Type Description int | Improve this Doc View Source getmouse(out MouseEvent) Declaration public static uint getmouse(out Curses.MouseEvent ev) Parameters Type Name Description Curses.MouseEvent ev Returns Type Description uint | Improve this Doc View Source halfdelay(int) Declaration public static int halfdelay(int t) Parameters Type Name Description int t Returns Type Description int | Improve this Doc View Source has_colors() Declaration public static bool has_colors() Returns Type Description bool | Improve this Doc View Source idcok(nint, bool) Declaration public static void idcok(nint win, bool bf) Parameters Type Name Description nint win bool bf | Improve this Doc View Source idlok(nint, bool) Declaration public static int idlok(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source immedok(nint, bool) Declaration public static void immedok(nint win, bool bf) Parameters Type Name Description nint win bool bf | Improve this Doc View Source init_pair(short, short, short) Declaration public static int init_pair(short pair, short f, short b) Parameters Type Name Description short pair short f short b Returns Type Description int | Improve this Doc View Source InitColorPair(short, short, short) The init_pair routine changes the definition of a color-pair.It takes three arguments: the number of the color-pair to be changed, the fore- ground color number, and the background color number.For portable ap- plications: o The first argument must be a legal color pair value.If default colors are used (see use_default_colors(3x)) the upper limit is ad- justed to allow for extra pairs which use a default color in fore- ground and/or background. o The second and third arguments must be legal color values. If the color-pair was previously initialized, the screen is refreshed and all occurrences of that color-pair are changed to the new defini- tion. As an extension, ncurses allows you to set color pair 0 via the as- sume_default_colors (3x) routine, or to specify the use of default col- ors (color number -1) if you first invoke the use_default_colors (3x) routine. Declaration public static int InitColorPair(short pair, short foreground, short background) Parameters Type Name Description short pair short foreground short background Returns Type Description int | Improve this Doc View Source initscr() Declaration public static Curses.Window initscr() Returns Type Description Curses.Window | Improve this Doc View Source intrflush(nint, bool) Declaration public static int intrflush(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source is_term_resized(int, int) Declaration public static bool is_term_resized(int lines, int columns) Parameters Type Name Description int lines int columns Returns Type Description bool | Improve this Doc View Source IsAlt(int) Declaration public static int IsAlt(int key) Parameters Type Name Description int key Returns Type Description int | Improve this Doc View Source isendwin() Declaration public static bool isendwin() Returns Type Description bool | Improve this Doc View Source keypad(nint, bool) Declaration public static int keypad(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source leaveok(nint, bool) Declaration public static int leaveok(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source meta(nint, bool) Declaration public static int meta(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source mouseinterval(int) Declaration public static int mouseinterval(int interval) Parameters Type Name Description int interval Returns Type Description int | Improve this Doc View Source mousemask(Event, out Event) Declaration public static Curses.Event mousemask(Curses.Event newmask, out Curses.Event oldmask) Parameters Type Name Description Curses.Event newmask Curses.Event oldmask Returns Type Description Curses.Event | Improve this Doc View Source move(int, int) Declaration public static int move(int line, int col) Parameters Type Name Description int line int col Returns Type Description int | Improve this Doc View Source mvaddch(int, int, int) Declaration public static int mvaddch(int y, int x, int ch) Parameters Type Name Description int y int x int ch Returns Type Description int | Improve this Doc View Source mvaddwstr(int, int, string) Declaration public static int mvaddwstr(int y, int x, string s) Parameters Type Name Description int y int x string s Returns Type Description int | Improve this Doc View Source mvgetch(int, int) Declaration public static int mvgetch(int y, int x) Parameters Type Name Description int y int x Returns Type Description int | Improve this Doc View Source nl() Declaration public static int nl() Returns Type Description int | Improve this Doc View Source nocbreak() Declaration public static int nocbreak() Returns Type Description int | Improve this Doc View Source noecho() Declaration public static int noecho() Returns Type Description int | Improve this Doc View Source nonl() Declaration public static int nonl() Returns Type Description int | Improve this Doc View Source noqiflush() Declaration public static void noqiflush() | Improve this Doc View Source noraw() Declaration public static int noraw() Returns Type Description int | Improve this Doc View Source notimeout(nint, bool) Declaration public static int notimeout(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source qiflush() Declaration public static void qiflush() | Improve this Doc View Source raw() Declaration public static int raw() Returns Type Description int | Improve this Doc View Source redrawwin(nint) Declaration public static int redrawwin(nint win) Parameters Type Name Description nint win Returns Type Description int | Improve this Doc View Source refresh() Declaration public static int refresh() Returns Type Description int | Improve this Doc View Source reset_prog_mode() Declaration public static int reset_prog_mode() Returns Type Description int | Improve this Doc View Source reset_shell_mode() Declaration public static int reset_shell_mode() Returns Type Description int | Improve this Doc View Source resetty() Declaration public static int resetty() Returns Type Description int | Improve this Doc View Source resize_term(int, int) Declaration public static int resize_term(int lines, int columns) Parameters Type Name Description int lines int columns Returns Type Description int | Improve this Doc View Source resizeterm(int, int) Declaration public static int resizeterm(int lines, int columns) Parameters Type Name Description int lines int columns Returns Type Description int | Improve this Doc View Source savetty() Declaration public static int savetty() Returns Type Description int | Improve this Doc View Source scrollok(nint, bool) Declaration public static int scrollok(nint win, bool bf) Parameters Type Name Description nint win bool bf Returns Type Description int | Improve this Doc View Source set_escdelay(int) Declaration public static int set_escdelay(int size) Parameters Type Name Description int size Returns Type Description int setlocale(int, string) Declaration public static extern int setlocale(int cate, string locale) Parameters Type Name Description int cate string locale Returns Type Description int | Improve this Doc View Source setscrreg(int, int) Declaration public static int setscrreg(int top, int bot) Parameters Type Name Description int top int bot Returns Type Description int | Improve this Doc View Source start_color() Declaration public static int start_color() Returns Type Description int | Improve this Doc View Source StartColor() Declaration public static int StartColor() Returns Type Description int | Improve this Doc View Source timeout(int) Declaration public static int timeout(int delay) Parameters Type Name Description int delay Returns Type Description int | Improve this Doc View Source typeahead(nint) Declaration public static int typeahead(nint fd) Parameters Type Name Description nint fd Returns Type Description int | Improve this Doc View Source ungetch(int) Declaration public static int ungetch(int ch) Parameters Type Name Description int ch Returns Type Description int | Improve this Doc View Source ungetmouse(ref MouseEvent) Declaration public static uint ungetmouse(ref Curses.MouseEvent ev) Parameters Type Name Description Curses.MouseEvent ev Returns Type Description uint | Improve this Doc View Source use_default_colors() Declaration public static int use_default_colors() Returns Type Description int | Improve this Doc View Source use_env(bool) Declaration public static void use_env(bool f) Parameters Type Name Description bool f | Improve this Doc View Source UseDefaultColors() Declaration public static int UseDefaultColors() Returns Type Description int | Improve this Doc View Source waddch(nint, int) Declaration public static int waddch(nint win, int ch) Parameters Type Name Description nint win int ch Returns Type Description int | Improve this Doc View Source wmove(nint, int, int) Declaration public static int wmove(nint win, int line, int col) Parameters Type Name Description nint win int line int col Returns Type Description int | Improve this Doc View Source wnoutrefresh(nint) Declaration public static int wnoutrefresh(nint win) Parameters Type Name Description nint win Returns Type Description int | Improve this Doc View Source wrefresh(nint) Declaration public static int wrefresh(nint win) Parameters Type Name Description nint win Returns Type Description int | Improve this Doc View Source wsetscrreg(nint, int, int) Declaration public static int wsetscrreg(nint win, int top, int bot) Parameters Type Name Description nint win int top int bot Returns Type Description int | Improve this Doc View Source wtimeout(nint, int) Declaration public static int wtimeout(nint win, int delay) Parameters Type Name Description nint win int delay Returns Type Description int"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.MouseEvent.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.MouseEvent.html",
    "title": "Struct Curses.MouseEvent",
    "keywords": "Struct Curses.MouseEvent Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Unix.Terminal Assembly: Terminal.Gui.dll Syntax public struct Curses.MouseEvent Fields | Improve this Doc View Source ButtonState Declaration public Curses.Event ButtonState Field Value Type Description Curses.Event | Improve this Doc View Source ID Declaration public short ID Field Value Type Description short | Improve this Doc View Source X Declaration public int X Field Value Type Description int | Improve this Doc View Source Y Declaration public int Y Field Value Type Description int | Improve this Doc View Source Z Declaration public int Z Field Value Type Description int"
  },
  "api/Terminal.Gui/Unix.Terminal.Curses.Window.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.Curses.Window.html",
    "title": "Class Curses.Window",
    "keywords": "Class Curses.Window Inheritance object Curses.Window Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Unix.Terminal Assembly: Terminal.Gui.dll Syntax public class Curses.Window Fields | Improve this Doc View Source Handle Declaration public readonly nint Handle Field Value Type Description nint Properties | Improve this Doc View Source Current Declaration public static Curses.Window Current { get; } Property Value Type Description Curses.Window | Improve this Doc View Source Standard Declaration public static Curses.Window Standard { get; } Property Value Type Description Curses.Window Methods | Improve this Doc View Source addch(char) Declaration public int addch(char ch) Parameters Type Name Description char ch Returns Type Description int | Improve this Doc View Source clearok(bool) Declaration public int clearok(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source idcok(bool) Declaration public void idcok(bool bf) Parameters Type Name Description bool bf | Improve this Doc View Source idlok(bool) Declaration public int idlok(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source immedok(bool) Declaration public void immedok(bool bf) Parameters Type Name Description bool bf | Improve this Doc View Source intrflush(bool) Declaration public int intrflush(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source keypad(bool) Declaration public int keypad(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source leaveok(bool) Declaration public int leaveok(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source meta(bool) Declaration public int meta(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source move(int, int) Declaration public int move(int line, int col) Parameters Type Name Description int line int col Returns Type Description int | Improve this Doc View Source notimeout(bool) Declaration public int notimeout(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source redrawwin() Declaration public int redrawwin() Returns Type Description int | Improve this Doc View Source refresh() Declaration public int refresh() Returns Type Description int | Improve this Doc View Source scrollok(bool) Declaration public int scrollok(bool bf) Parameters Type Name Description bool bf Returns Type Description int | Improve this Doc View Source setscrreg(int, int) Declaration public int setscrreg(int top, int bot) Parameters Type Name Description int top int bot Returns Type Description int | Improve this Doc View Source wnoutrefresh() Declaration public int wnoutrefresh() Returns Type Description int | Improve this Doc View Source wrefresh() Declaration public int wrefresh() Returns Type Description int | Improve this Doc View Source wtimeout(int) Declaration public int wtimeout(int delay) Parameters Type Name Description int delay Returns Type Description int"
  },
  "api/Terminal.Gui/Unix.Terminal.html": {
    "href": "api/Terminal.Gui/Unix.Terminal.html",
    "title": "Namespace Unix.Terminal",
    "keywords": "Namespace Unix.Terminal Classes Curses Curses.Window Structs Curses.MouseEvent Enums Curses.Event"
  },
  "api/UICatalog/UICatalog.html": {
    "href": "api/UICatalog/UICatalog.html",
    "title": "Namespace UICatalog",
    "keywords": "Namespace UICatalog Classes NumberToWords Scenario Base class for each demo/scenario. To define a new scenario: Create a new .cs file in the Scenarios directory that derives from Scenario. Annotate the Scenario derived class with a Scenario.ScenarioMetadata attribute specifying the scenario's name and description. Add one or more Scenario.ScenarioCategory attributes to the class specifying which categories the scenario belongs to. If you don't specify a category the scenario will show up in \"_All\". Implement the Setup() override which will be called when a user selects the scenario to run. Optionally, implement the Init() and/or Run() overrides to provide a custom implementation. The UI Catalog program uses reflection to find all scenarios and adds them to the ListViews. Press ENTER to run the selected scenario. Press the default quit key to quit. / Scenario.ScenarioCategory Defines the category names used to catagorize a Scenario Scenario.ScenarioMetadata Defines the metadata (Name and Description) for a Scenario"
  },
  "api/UICatalog/UICatalog.NumberToWords.html": {
    "href": "api/UICatalog/UICatalog.NumberToWords.html",
    "title": "Class NumberToWords",
    "keywords": "Class NumberToWords Inheritance object NumberToWords Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog Assembly: UICatalog.dll Syntax public static class NumberToWords Methods | Improve this Doc View Source Convert(long) Declaration public static string Convert(long i) Parameters Type Name Description long i Returns Type Description string | Improve this Doc View Source ConvertAmount(double) Declaration public static string ConvertAmount(double amount) Parameters Type Name Description double amount Returns Type Description string"
  },
  "api/UICatalog/UICatalog.Scenario.html": {
    "href": "api/UICatalog/UICatalog.Scenario.html",
    "title": "Class Scenario",
    "keywords": "Class Scenario Base class for each demo/scenario. To define a new scenario: Create a new .cs file in the Scenarios directory that derives from Scenario. Annotate the Scenario derived class with a Scenario.ScenarioMetadata attribute specifying the scenario's name and description. Add one or more Scenario.ScenarioCategory attributes to the class specifying which categories the scenario belongs to. If you don't specify a category the scenario will show up in \"_All\". Implement the Setup() override which will be called when a user selects the scenario to run. Optionally, implement the Init() and/or Run() overrides to provide a custom implementation. The UI Catalog program uses reflection to find all scenarios and adds them to the ListViews. Press ENTER to run the selected scenario. Press the default quit key to quit. / Inheritance object Scenario AllViewsTester Animation ASCIICustomButtonTest AutoSizeAndDirectionText BackgroundWorkerCollection BasicColors Buttons CharacterMap ClassExplorer Clipping CollectionNavigatorTester ColorPickers CombiningMarks ComboBoxIteration ComputedLayout ConfigurationEditor ContextMenus CsvEditor Dialogs DynamicMenuBar DynamicStatusBar Editor FileDialogExamples Frames GraphViewExample HexEditor Images InteractiveTree InvertColors Keys LabelsAsLabels LineCanvasExperiment LineDrawing LineViewExample ListColumns ListsAndCombos ListViewWithSelection Localization MessageBoxes Mouse MultiColouredTable MyScenario Notepad ProcessTable Progress ProgressBarStyles RuneWidthGreaterThanOne RunTExample Scrolling SendKeys SingleBackgroundWorker Sliders Snake SpinnerViewStyles SyntaxHighlighting TableEditor TabViewExample Text TextAlignments TextAlignmentsAndDirections TextFormatterDemo TextViewAutocompletePopup Threading TileViewNesting TimeAndDate TreeUseCases TreeViewFileSystem TrueColors UnicodeInMenu ViewExperiments VkeyPacketSimulator WindowsAndFrameViews WizardAsView Wizards Implements IDisposable Examples The example below is provided in the Scenarios directory as a generic sample that can be copied and re-named: using Terminal.Gui; namespace UICatalog { [ScenarioMetadata (Name: \"Generic\", Description: \"Generic sample - A template for creating new Scenarios\")] [ScenarioCategory (\"Controls\")] class MyScenario : Scenario { public override void Setup () { // Put your scenario code here, e.g. Win.Add (new Button (\"Press me!\") { X = Pos.Center (), Y = Pos.Center (), Clicked = () => MessageBox.Query (20, 7, \"Hi\", \"Neat?\", \"Yes\", \"No\") }); } } } Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog Assembly: UICatalog.dll Syntax public class Scenario : IDisposable Fields | Improve this Doc View Source Theme Declaration public string Theme Field Value Type Description string | Improve this Doc View Source TopLevelColorScheme Declaration public string TopLevelColorScheme Field Value Type Description string Properties | Improve this Doc View Source Win The Window for the Scenario. This should be set to Top in most cases. Declaration public Window Win { get; set; } Property Value Type Description Window Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing | Improve this Doc View Source GetCategories() Helper function to get the list of categories a Scenario belongs to (defined in Scenario.ScenarioCategory) Declaration public List<string> GetCategories() Returns Type Description List<string> list of category names | Improve this Doc View Source GetDescription() Helper to get the Scenario Description (defined in Scenario.ScenarioMetadata) Declaration public string GetDescription() Returns Type Description string | Improve this Doc View Source GetName() Helper to get the Scenario Name (defined in Scenario.ScenarioMetadata) Declaration public string GetName() Returns Type Description string | Improve this Doc View Source GetScenarios() Returns a list of all Scenario instanaces defined in the project, sorted by Name. https://stackoverflow.com/questions/5411694/get-all-inherited-classes-of-an-abstract-class Declaration public static List<Scenario> GetScenarios() Returns Type Description List<Scenario> | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public virtual void Init() | Improve this Doc View Source RequestStop() Stops the scenario. Override to change shutdown behavior for the Scenario. Declaration public virtual void RequestStop() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public virtual void Run() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public virtual void Setup() | Improve this Doc View Source ToString() Gets the Scenario Name + Description with the Description padded based on the longest known Scenario name. Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenario.ScenarioCategory.html": {
    "href": "api/UICatalog/UICatalog.Scenario.ScenarioCategory.html",
    "title": "Class Scenario.ScenarioCategory",
    "keywords": "Class Scenario.ScenarioCategory Defines the category names used to catagorize a Scenario Inheritance object Attribute Scenario.ScenarioCategory Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog Assembly: UICatalog.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class Scenario.ScenarioCategory : Attribute Constructors | Improve this Doc View Source ScenarioCategory(string) Declaration public ScenarioCategory(string Name) Parameters Type Name Description string Name Properties | Improve this Doc View Source Name Category Name Declaration public string Name { get; set; } Property Value Type Description string Methods | Improve this Doc View Source GetCategories(Type) Static helper function to get the Scenario Categories given a Type Declaration public static List<string> GetCategories(Type t) Parameters Type Name Description Type t Returns Type Description List<string> list of category names | Improve this Doc View Source GetName(Type) Static helper function to get the Scenario Name given a Type Declaration public static string GetName(Type t) Parameters Type Name Description Type t Returns Type Description string Name of the category Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenario.ScenarioMetadata.html": {
    "href": "api/UICatalog/UICatalog.Scenario.ScenarioMetadata.html",
    "title": "Class Scenario.ScenarioMetadata",
    "keywords": "Class Scenario.ScenarioMetadata Defines the metadata (Name and Description) for a Scenario Inheritance object Attribute Scenario.ScenarioMetadata Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog Assembly: UICatalog.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class Scenario.ScenarioMetadata : Attribute Constructors | Improve this Doc View Source ScenarioMetadata(string, string) Declaration public ScenarioMetadata(string Name, string Description) Parameters Type Name Description string Name string Description Properties | Improve this Doc View Source Description Scenario Description Declaration public string Description { get; set; } Property Value Type Description string | Improve this Doc View Source Name Scenario Name Declaration public string Name { get; set; } Property Value Type Description string Methods | Improve this Doc View Source GetDescription(Type) Static helper function to get the Scenario Description given a Type Declaration public static string GetDescription(Type t) Parameters Type Name Description Type t Returns Type Description string | Improve this Doc View Source GetName(Type) Static helper function to get the Scenario Name given a Type Declaration public static string GetName(Type t) Parameters Type Name Description Type t Returns Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.AllViewsTester.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.AllViewsTester.html",
    "title": "Class AllViewsTester",
    "keywords": "Class AllViewsTester Inheritance object Scenario AllViewsTester Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"All Views Tester\", \"Provides a test UI for all classes derived from View.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Tests\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class AllViewsTester : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Animation.BitmapToBraille.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Animation.BitmapToBraille.html",
    "title": "Class Animation.BitmapToBraille",
    "keywords": "Class Animation.BitmapToBraille Renders an image as unicode Braille. Inheritance object Animation.BitmapToBraille Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class Animation.BitmapToBraille Constructors | Improve this Doc View Source BitmapToBraille(int, int, Func<int, int, bool>) Declaration public BitmapToBraille(int widthPixels, int heightPixels, Func<int, int, bool> pixelIsLit) Parameters Type Name Description int widthPixels int heightPixels Func<int, int, bool> pixelIsLit Fields | Improve this Doc View Source CHAR_HEIGHT Declaration public const int CHAR_HEIGHT = 4 Field Value Type Description int | Improve this Doc View Source CHAR_WIDTH Declaration public const int CHAR_WIDTH = 2 Field Value Type Description int Properties | Improve this Doc View Source HeightPixels Declaration public int HeightPixels { get; } Property Value Type Description int | Improve this Doc View Source PixelIsLit Declaration public Func<int, int, bool> PixelIsLit { get; } Property Value Type Description Func<int, int, bool> | Improve this Doc View Source WidthPixels Declaration public int WidthPixels { get; } Property Value Type Description int Methods | Improve this Doc View Source GenerateImage() Declaration public string GenerateImage() Returns Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Animation.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Animation.html",
    "title": "Class Animation",
    "keywords": "Class Animation Inheritance object Scenario Animation Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Animation\", \"Demonstration of how to render animated images with threading.\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Drawing\")] public class Animation : Scenario, IDisposable Methods | Improve this Doc View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Scenario.Dispose(bool) | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.ASCIICustomButton.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.ASCIICustomButton.html",
    "title": "Class ASCIICustomButtonTest.ASCIICustomButton",
    "keywords": "Class ASCIICustomButtonTest.ASCIICustomButton Inheritance object Responder View Button ASCIICustomButtonTest.ASCIICustomButton Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Button.HotKey Button.IsDefault Button.NoDecorations Button.NoPadding Button.UpdateTextFormatterText() Button.OnClicked() Button.Clicked Button.MouseEvent(MouseEvent) Button.PositionCursor() View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class ASCIICustomButtonTest.ASCIICustomButton : Button, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ASCIICustomButton(string, string, Pos, Pos, int, int) Declaration public ASCIICustomButton(string id, string text, Pos x, Pos y, int width, int height) Parameters Type Name Description string id string text Pos x Pos y int width int height | Improve this Doc View Source ASCIICustomButton(string, Pos, Pos, int, int) Declaration public ASCIICustomButton(string text, Pos x, Pos y, int width, int height) Parameters Type Name Description string text Pos x Pos y int width int height Properties | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description string Methods | Improve this Doc View Source OnEnter(View) Method invoked when a view gets focus. Declaration public override bool OnEnter(View view) Parameters Type Name Description View view The view that is losing focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides Button.OnEnter(View) | Improve this Doc View Source OnLeave(View) Method invoked when a view loses focus. Declaration public override bool OnLeave(View view) Parameters Type Name Description View view The view that is getting focus. Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnLeave(View) | Improve this Doc View Source OnMouseEvent(MouseEvent) Method invoked when a mouse event is generated Declaration public override bool OnMouseEvent(MouseEvent mouseEvent) Parameters Type Name Description MouseEvent mouseEvent Returns Type Description bool true, if the event was handled, false otherwise. Overrides View.OnMouseEvent(MouseEvent) Events | Improve this Doc View Source PointerEnter Declaration public event Action<ASCIICustomButtonTest.ASCIICustomButton> PointerEnter Event Type Type Description Action<ASCIICustomButtonTest.ASCIICustomButton> Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.html",
    "title": "Class ASCIICustomButtonTest",
    "keywords": "Class ASCIICustomButtonTest Inheritance object Scenario ASCIICustomButtonTest Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ASCIICustomButtonTest\", \"ASCIICustomButton sample\")] [Scenario.ScenarioCategory(\"Controls\")] public class ASCIICustomButtonTest : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.ScrollViewTestWindow.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ASCIICustomButtonTest.ScrollViewTestWindow.html",
    "title": "Class ASCIICustomButtonTest.ScrollViewTestWindow",
    "keywords": "Class ASCIICustomButtonTest.ScrollViewTestWindow Inheritance object Responder View Toplevel Window ASCIICustomButtonTest.ScrollViewTestWindow Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class ASCIICustomButtonTest.ScrollViewTestWindow : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ScrollViewTestWindow() Declaration public ScrollViewTestWindow() Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.AutoSizeAndDirectionText.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.AutoSizeAndDirectionText.html",
    "title": "Class AutoSizeAndDirectionText",
    "keywords": "Class AutoSizeAndDirectionText Inheritance object Scenario AutoSizeAndDirectionText Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Direction and AutoSize\", \"Demos TextFormatter Direction and View AutoSize.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class AutoSizeAndDirectionText : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.BackgroundWorkerCollection.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BackgroundWorkerCollection.html",
    "title": "Class BackgroundWorkerCollection",
    "keywords": "Class BackgroundWorkerCollection Inheritance object Scenario BackgroundWorkerCollection Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"BackgroundWorker Collection\", \"A persisting multi Toplevel BackgroundWorker threading\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Controls\")] public class BackgroundWorkerCollection : Scenario, IDisposable Methods | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.BasicColors.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.BasicColors.html",
    "title": "Class BasicColors",
    "keywords": "Class BasicColors Inheritance object Scenario BasicColors Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Basic Colors\", \"Show all basic colors.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class BasicColors : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Buttons.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Buttons.html",
    "title": "Class Buttons",
    "keywords": "Class Buttons Inheritance object Scenario Buttons Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Buttons\", \"Demonstrates all sorts of Buttons.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Layout\")] public class Buttons : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.CharacterMap.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CharacterMap.html",
    "title": "Class CharacterMap",
    "keywords": "Class CharacterMap This Scenario demonstrates building a custom control (a class deriving from View) that: Provides a \"Character Map\" application (like Windows' charmap.exe). Helps test unicode character rendering in Terminal.Gui Illustrates how to use ScrollView to do infinite scrolling Inheritance object Scenario CharacterMap Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Character Map\", \"Unicode viewer demonstrating the ScrollView control.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ScrollView\")] public class CharacterMap : Scenario, IDisposable Fields | Improve this Doc View Source _errorLabel Declaration public Label _errorLabel Field Value Type Description Label Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ClassExplorer.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ClassExplorer.html",
    "title": "Class ClassExplorer",
    "keywords": "Class ClassExplorer Inheritance object Scenario ClassExplorer Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Class Explorer\", \"Tree view explorer for classes by namespace based on TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class ClassExplorer : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Clipping.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Clipping.html",
    "title": "Class Clipping",
    "keywords": "Class Clipping Inheritance object Scenario Clipping Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Clipping\", \"Used to test that things clip correctly\")] [Scenario.ScenarioCategory(\"Tests\")] public class Clipping : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.CollectionNavigatorTester.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CollectionNavigatorTester.html",
    "title": "Class CollectionNavigatorTester",
    "keywords": "Class CollectionNavigatorTester Inheritance object Scenario CollectionNavigatorTester Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Collection Navigator\", \"Demonstrates keyboard navigation in ListView & TreeView (CollectionNavigator).\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ListView\")] [Scenario.ScenarioCategory(\"TreeView\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class CollectionNavigatorTester : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ColorPickers.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ColorPickers.html",
    "title": "Class ColorPickers",
    "keywords": "Class ColorPickers Inheritance object Scenario ColorPickers Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Color Picker\", \"Color Picker.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Controls\")] public class ColorPickers : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Setup the scenario. Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.CombiningMarks.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CombiningMarks.html",
    "title": "Class CombiningMarks",
    "keywords": "Class CombiningMarks Inheritance object Scenario CombiningMarks Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Combining Marks\", \"Illustrates how Unicode Combining Marks work (or don't).\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class CombiningMarks : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ComboBoxIteration.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ComboBoxIteration.html",
    "title": "Class ComboBoxIteration",
    "keywords": "Class ComboBoxIteration Inheritance object Scenario ComboBoxIteration Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ComboBoxIteration\", \"ComboBox iteration.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ComboBox\")] public class ComboBoxIteration : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ComputedLayout.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ComputedLayout.html",
    "title": "Class ComputedLayout",
    "keywords": "Class ComputedLayout This Scenario demonstrates how to use Termina.gui's Dim and Pos Layout System. [x] - Using Dim.Fill to fill a window [x] - Using Dim.Fill and Dim.Pos to automatically align controls based on an initial control [ ] - ... Inheritance object Scenario ComputedLayout Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Computed Layout\", \"Demonstrates the Computed (Dim and Pos) Layout System.\")] [Scenario.ScenarioCategory(\"Layout\")] public class ComputedLayout : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ConfigurationEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ConfigurationEditor.html",
    "title": "Class ConfigurationEditor",
    "keywords": "Class ConfigurationEditor Inheritance object Scenario ConfigurationEditor Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Configuration Editor\", \"Edits Terminal.Gui Config Files.\")] [Scenario.ScenarioCategory(\"TabView\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Files and IO\")] [Scenario.ScenarioCategory(\"TextView\")] public class ConfigurationEditor : Scenario, IDisposable Properties | Improve this Doc View Source EditorColorScheme Declaration public static ColorScheme EditorColorScheme { get; set; } Property Value Type Description ColorScheme Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ContextMenus.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ContextMenus.html",
    "title": "Class ContextMenus",
    "keywords": "Class ContextMenus Inheritance object Scenario ContextMenus Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ContextMenus\", \"Context Menu Sample.\")] [Scenario.ScenarioCategory(\"Menus\")] public class ContextMenus : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.CsvEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.CsvEditor.html",
    "title": "Class CsvEditor",
    "keywords": "Class CsvEditor Inheritance object Scenario CsvEditor Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Csv Editor\", \"Open and edit simple CSV files using the TableView class.\")] [Scenario.ScenarioCategory(\"TableView\")] [Scenario.ScenarioCategory(\"TextView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class CsvEditor : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Dialogs.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Dialogs.html",
    "title": "Class Dialogs",
    "keywords": "Class Dialogs Inheritance object Scenario Dialogs Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dialogs\", \"Demonstrates how to the Dialog class\")] [Scenario.ScenarioCategory(\"Dialogs\")] public class Dialogs : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.Binding.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.Binding.html",
    "title": "Class DynamicMenuBar.Binding",
    "keywords": "Class DynamicMenuBar.Binding Inheritance object DynamicMenuBar.Binding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.Binding Constructors | Improve this Doc View Source Binding(View, string, View, string, IValueConverter) Declaration public Binding(View source, string sourcePropertyName, View target, string targetPropertyName, DynamicMenuBar.IValueConverter valueConverter = null) Parameters Type Name Description View source string sourcePropertyName View target string targetPropertyName DynamicMenuBar.IValueConverter valueConverter Properties | Improve this Doc View Source Source Declaration public View Source { get; } Property Value Type Description View | Improve this Doc View Source SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description string | Improve this Doc View Source Target Declaration public View Target { get; } Property Value Type Description View | Improve this Doc View Source TargetPropertyName Declaration public string TargetPropertyName { get; } Property Value Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarDetails.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarDetails.html",
    "title": "Class DynamicMenuBar.DynamicMenuBarDetails",
    "keywords": "Class DynamicMenuBar.DynamicMenuBarDetails Inheritance object Responder View FrameView DynamicMenuBar.DynamicMenuBarDetails Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members FrameView.DefaultBorderStyle FrameView.OnEnter(View) View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.DynamicMenuBarDetails : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicMenuBarDetails(string) Declaration public DynamicMenuBarDetails(string title) Parameters Type Name Description string title | Improve this Doc View Source DynamicMenuBarDetails(MenuItem, bool) Declaration public DynamicMenuBarDetails(MenuItem menuItem = null, bool hasParent = false) Parameters Type Name Description MenuItem menuItem bool hasParent Fields | Improve this Doc View Source _ckbIsTopLevel Declaration public CheckBox _ckbIsTopLevel Field Value Type Description CheckBox | Improve this Doc View Source _ckbNullCheck Declaration public CheckBox _ckbNullCheck Field Value Type Description CheckBox | Improve this Doc View Source _ckbSubMenu Declaration public CheckBox _ckbSubMenu Field Value Type Description CheckBox | Improve this Doc View Source _menuItem Declaration public MenuItem _menuItem Field Value Type Description MenuItem | Improve this Doc View Source _rbChkStyle Declaration public RadioGroup _rbChkStyle Field Value Type Description RadioGroup | Improve this Doc View Source _txtAction Declaration public TextView _txtAction Field Value Type Description TextView | Improve this Doc View Source _txtHelp Declaration public TextField _txtHelp Field Value Type Description TextField | Improve this Doc View Source _txtShortcut Declaration public TextField _txtShortcut Field Value Type Description TextField | Improve this Doc View Source _txtTitle Declaration public TextField _txtTitle Field Value Type Description TextField Methods | Improve this Doc View Source CreateAction(MenuItem, DynamicMenuItem) Declaration public Action CreateAction(MenuItem menuItem, DynamicMenuBar.DynamicMenuItem item) Parameters Type Name Description MenuItem menuItem DynamicMenuBar.DynamicMenuItem item Returns Type Description Action | Improve this Doc View Source EditMenuBarItem(MenuItem) Declaration public void EditMenuBarItem(MenuItem menuItem) Parameters Type Name Description MenuItem menuItem | Improve this Doc View Source EnterMenuItem() Declaration public DynamicMenuBar.DynamicMenuItem EnterMenuItem() Returns Type Description DynamicMenuBar.DynamicMenuItem | Improve this Doc View Source UpdateParent(ref MenuItem) Declaration public void UpdateParent(ref MenuItem menuItem) Parameters Type Name Description MenuItem menuItem Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarSample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuBarSample.html",
    "title": "Class DynamicMenuBar.DynamicMenuBarSample",
    "keywords": "Class DynamicMenuBar.DynamicMenuBarSample Inheritance object Responder View Toplevel Window DynamicMenuBar.DynamicMenuBarSample Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.DynamicMenuBarSample : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicMenuBarSample() Declaration public DynamicMenuBarSample() Properties | Improve this Doc View Source DataContext Declaration public DynamicMenuBar.DynamicMenuItemModel DataContext { get; set; } Property Value Type Description DynamicMenuBar.DynamicMenuItemModel Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItem.html",
    "title": "Class DynamicMenuBar.DynamicMenuItem",
    "keywords": "Class DynamicMenuBar.DynamicMenuItem Inheritance object DynamicMenuBar.DynamicMenuItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.DynamicMenuItem Constructors | Improve this Doc View Source DynamicMenuItem() Declaration public DynamicMenuItem() | Improve this Doc View Source DynamicMenuItem(string, bool) Declaration public DynamicMenuItem(string title, bool hasSubMenu = false) Parameters Type Name Description string title bool hasSubMenu | Improve this Doc View Source DynamicMenuItem(string, string, string, bool, bool, MenuItemCheckStyle, string, bool) Declaration public DynamicMenuItem(string title, string help, string action, bool isTopLevel, bool hasSubMenu, MenuItemCheckStyle checkStyle = MenuItemCheckStyle.NoCheck, string shortcut = null, bool allowNullChecked = false) Parameters Type Name Description string title string help string action bool isTopLevel bool hasSubMenu MenuItemCheckStyle checkStyle string shortcut bool allowNullChecked Fields | Improve this Doc View Source action Declaration public string action Field Value Type Description string | Improve this Doc View Source allowNullChecked Declaration public bool allowNullChecked Field Value Type Description bool | Improve this Doc View Source checkStyle Declaration public MenuItemCheckStyle checkStyle Field Value Type Description MenuItemCheckStyle | Improve this Doc View Source hasSubMenu Declaration public bool hasSubMenu Field Value Type Description bool | Improve this Doc View Source help Declaration public string help Field Value Type Description string | Improve this Doc View Source isTopLevel Declaration public bool isTopLevel Field Value Type Description bool | Improve this Doc View Source shortcut Declaration public string shortcut Field Value Type Description string | Improve this Doc View Source title Declaration public string title Field Value Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemList.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemList.html",
    "title": "Class DynamicMenuBar.DynamicMenuItemList",
    "keywords": "Class DynamicMenuBar.DynamicMenuItemList Inheritance object DynamicMenuBar.DynamicMenuItemList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.DynamicMenuItemList Constructors | Improve this Doc View Source DynamicMenuItemList() Declaration public DynamicMenuItemList() | Improve this Doc View Source DynamicMenuItemList(string, MenuItem) Declaration public DynamicMenuItemList(string title, MenuItem menuItem) Parameters Type Name Description string title MenuItem menuItem Properties | Improve this Doc View Source MenuItem Declaration public MenuItem MenuItem { get; set; } Property Value Type Description MenuItem | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description string Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemModel.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.DynamicMenuItemModel.html",
    "title": "Class DynamicMenuBar.DynamicMenuItemModel",
    "keywords": "Class DynamicMenuBar.DynamicMenuItemModel Inheritance object DynamicMenuBar.DynamicMenuItemModel Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.DynamicMenuItemModel : INotifyPropertyChanged Constructors | Improve this Doc View Source DynamicMenuItemModel() Declaration public DynamicMenuItemModel() Properties | Improve this Doc View Source MenuBar Declaration public string MenuBar { get; set; } Property Value Type Description string | Improve this Doc View Source Menus Declaration public List<DynamicMenuBar.DynamicMenuItemList> Menus { get; set; } Property Value Type Description List<DynamicMenuBar.DynamicMenuItemList> | Improve this Doc View Source Parent Declaration public string Parent { get; set; } Property Value Type Description string Methods | Improve this Doc View Source GetPropertyName(string) Declaration public string GetPropertyName(string propertyName = null) Parameters Type Name Description string propertyName Returns Type Description string Events | Improve this Doc View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.html",
    "title": "Class DynamicMenuBar",
    "keywords": "Class DynamicMenuBar Inheritance object Scenario DynamicMenuBar Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dynamic MenuBar\", \"Demonstrates how to change a MenuBar dynamically.\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Menus\")] public class DynamicMenuBar : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.IValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.IValueConverter.html",
    "title": "Interface DynamicMenuBar.IValueConverter",
    "keywords": "Interface DynamicMenuBar.IValueConverter Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public interface DynamicMenuBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.ListWrapperConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.ListWrapperConverter.html",
    "title": "Class DynamicMenuBar.ListWrapperConverter",
    "keywords": "Class DynamicMenuBar.ListWrapperConverter Inheritance object DynamicMenuBar.ListWrapperConverter Implements DynamicMenuBar.IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.ListWrapperConverter : DynamicMenuBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Implements DynamicMenuBar.IValueConverter Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.UStringValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicMenuBar.UStringValueConverter.html",
    "title": "Class DynamicMenuBar.UStringValueConverter",
    "keywords": "Class DynamicMenuBar.UStringValueConverter Inheritance object DynamicMenuBar.UStringValueConverter Implements DynamicMenuBar.IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicMenuBar.UStringValueConverter : DynamicMenuBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Implements DynamicMenuBar.IValueConverter Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.Binding.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.Binding.html",
    "title": "Class DynamicStatusBar.Binding",
    "keywords": "Class DynamicStatusBar.Binding Inheritance object DynamicStatusBar.Binding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.Binding Constructors | Improve this Doc View Source Binding(View, string, View, string, IValueConverter) Declaration public Binding(View source, string sourcePropertyName, View target, string targetPropertyName, DynamicStatusBar.IValueConverter valueConverter = null) Parameters Type Name Description View source string sourcePropertyName View target string targetPropertyName DynamicStatusBar.IValueConverter valueConverter Properties | Improve this Doc View Source Source Declaration public View Source { get; } Property Value Type Description View | Improve this Doc View Source SourcePropertyName Declaration public string SourcePropertyName { get; } Property Value Type Description string | Improve this Doc View Source Target Declaration public View Target { get; } Property Value Type Description View | Improve this Doc View Source TargetPropertyName Declaration public string TargetPropertyName { get; } Property Value Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarDetails.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarDetails.html",
    "title": "Class DynamicStatusBar.DynamicStatusBarDetails",
    "keywords": "Class DynamicStatusBar.DynamicStatusBarDetails Inheritance object Responder View FrameView DynamicStatusBar.DynamicStatusBarDetails Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members FrameView.DefaultBorderStyle FrameView.OnEnter(View) View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.DynamicStatusBarDetails : FrameView, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicStatusBarDetails(string) Declaration public DynamicStatusBarDetails(string title) Parameters Type Name Description string title | Improve this Doc View Source DynamicStatusBarDetails(StatusItem) Declaration public DynamicStatusBarDetails(StatusItem statusItem = null) Parameters Type Name Description StatusItem statusItem Fields | Improve this Doc View Source _statusItem Declaration public StatusItem _statusItem Field Value Type Description StatusItem | Improve this Doc View Source _txtAction Declaration public TextView _txtAction Field Value Type Description TextView | Improve this Doc View Source _txtShortcut Declaration public TextField _txtShortcut Field Value Type Description TextField | Improve this Doc View Source _txtTitle Declaration public TextField _txtTitle Field Value Type Description TextField Methods | Improve this Doc View Source CreateAction(DynamicStatusItem) Declaration public Action CreateAction(DynamicStatusBar.DynamicStatusItem item) Parameters Type Name Description DynamicStatusBar.DynamicStatusItem item Returns Type Description Action | Improve this Doc View Source EditStatusItem(StatusItem) Declaration public void EditStatusItem(StatusItem statusItem) Parameters Type Name Description StatusItem statusItem | Improve this Doc View Source EnterStatusItem() Declaration public DynamicStatusBar.DynamicStatusItem EnterStatusItem() Returns Type Description DynamicStatusBar.DynamicStatusItem Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarSample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusBarSample.html",
    "title": "Class DynamicStatusBar.DynamicStatusBarSample",
    "keywords": "Class DynamicStatusBar.DynamicStatusBarSample Inheritance object Responder View Toplevel Window DynamicStatusBar.DynamicStatusBarSample Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.DynamicStatusBarSample : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source DynamicStatusBarSample() Declaration public DynamicStatusBarSample() Properties | Improve this Doc View Source DataContext Declaration public DynamicStatusBar.DynamicStatusItemModel DataContext { get; set; } Property Value Type Description DynamicStatusBar.DynamicStatusItemModel Methods | Improve this Doc View Source SetTitleText(string, string) Declaration public static string SetTitleText(string title, string shortcut) Parameters Type Name Description string title string shortcut Returns Type Description string Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItem.html",
    "title": "Class DynamicStatusBar.DynamicStatusItem",
    "keywords": "Class DynamicStatusBar.DynamicStatusItem Inheritance object DynamicStatusBar.DynamicStatusItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.DynamicStatusItem Constructors | Improve this Doc View Source DynamicStatusItem() Declaration public DynamicStatusItem() | Improve this Doc View Source DynamicStatusItem(string, string, string) Declaration public DynamicStatusItem(string title, string action, string shortcut = null) Parameters Type Name Description string title string action string shortcut | Improve this Doc View Source DynamicStatusItem(string) Declaration public DynamicStatusItem(string title) Parameters Type Name Description string title Fields | Improve this Doc View Source action Declaration public string action Field Value Type Description string | Improve this Doc View Source shortcut Declaration public string shortcut Field Value Type Description string | Improve this Doc View Source title Declaration public string title Field Value Type Description string Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemList.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemList.html",
    "title": "Class DynamicStatusBar.DynamicStatusItemList",
    "keywords": "Class DynamicStatusBar.DynamicStatusItemList Inheritance object DynamicStatusBar.DynamicStatusItemList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.DynamicStatusItemList Constructors | Improve this Doc View Source DynamicStatusItemList() Declaration public DynamicStatusItemList() | Improve this Doc View Source DynamicStatusItemList(string, StatusItem) Declaration public DynamicStatusItemList(string title, StatusItem statusItem) Parameters Type Name Description string title StatusItem statusItem Properties | Improve this Doc View Source StatusItem Declaration public StatusItem StatusItem { get; set; } Property Value Type Description StatusItem | Improve this Doc View Source Title Declaration public string Title { get; set; } Property Value Type Description string Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemModel.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.DynamicStatusItemModel.html",
    "title": "Class DynamicStatusBar.DynamicStatusItemModel",
    "keywords": "Class DynamicStatusBar.DynamicStatusItemModel Inheritance object DynamicStatusBar.DynamicStatusItemModel Implements INotifyPropertyChanged Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.DynamicStatusItemModel : INotifyPropertyChanged Constructors | Improve this Doc View Source DynamicStatusItemModel() Declaration public DynamicStatusItemModel() Properties | Improve this Doc View Source Items Declaration public List<DynamicStatusBar.DynamicStatusItemList> Items { get; set; } Property Value Type Description List<DynamicStatusBar.DynamicStatusItemList> | Improve this Doc View Source StatusBar Declaration public string StatusBar { get; set; } Property Value Type Description string Methods | Improve this Doc View Source GetPropertyName(string) Declaration public string GetPropertyName(string propertyName = null) Parameters Type Name Description string propertyName Returns Type Description string Events | Improve this Doc View Source PropertyChanged Occurs when a property value changes. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler Implements INotifyPropertyChanged Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.html",
    "title": "Class DynamicStatusBar",
    "keywords": "Class DynamicStatusBar Inheritance object Scenario DynamicStatusBar Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Dynamic StatusBar\", \"Demonstrates how to add and remove a StatusBar and change items dynamically.\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class DynamicStatusBar : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.IValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.IValueConverter.html",
    "title": "Interface DynamicStatusBar.IValueConverter",
    "keywords": "Interface DynamicStatusBar.IValueConverter Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public interface DynamicStatusBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.ListWrapperConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.ListWrapperConverter.html",
    "title": "Class DynamicStatusBar.ListWrapperConverter",
    "keywords": "Class DynamicStatusBar.ListWrapperConverter Inheritance object DynamicStatusBar.ListWrapperConverter Implements DynamicStatusBar.IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.ListWrapperConverter : DynamicStatusBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Implements DynamicStatusBar.IValueConverter Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.UStringValueConverter.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.DynamicStatusBar.UStringValueConverter.html",
    "title": "Class DynamicStatusBar.UStringValueConverter",
    "keywords": "Class DynamicStatusBar.UStringValueConverter Inheritance object DynamicStatusBar.UStringValueConverter Implements DynamicStatusBar.IValueConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class DynamicStatusBar.UStringValueConverter : DynamicStatusBar.IValueConverter Methods | Improve this Doc View Source Convert(object, object) Declaration public object Convert(object value, object parameter = null) Parameters Type Name Description object value object parameter Returns Type Description object Implements DynamicStatusBar.IValueConverter Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Editor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Editor.html",
    "title": "Class Editor",
    "keywords": "Class Editor Inheritance object Scenario Editor Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Editor\", \"A Text Editor using the TextView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] [Scenario.ScenarioCategory(\"TextView\")] public class Editor : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.EventExtensions.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.EventExtensions.html",
    "title": "Class EventExtensions",
    "keywords": "Class EventExtensions Inheritance object EventExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public static class EventExtensions Methods | Improve this Doc View Source ClearEventHandlers(object, string) Declaration public static void ClearEventHandlers(this object obj, string eventName) Parameters Type Name Description object obj string eventName"
  },
  "api/UICatalog/UICatalog.Scenarios.FileDialogExamples.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.FileDialogExamples.html",
    "title": "Class FileDialogExamples",
    "keywords": "Class FileDialogExamples Inheritance object Scenario FileDialogExamples Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"FileDialog\", \"Demonstrates how to the FileDialog class\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class FileDialogExamples : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Frames.FrameEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Frames.FrameEditor.html",
    "title": "Class Frames.FrameEditor",
    "keywords": "Class Frames.FrameEditor Inheritance object Responder View Frames.FrameEditor Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.Dispose(bool) View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.OnDrawContent(Rect) View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.OnKeyDown(KeyEventArgs) View.KeyDown View.OnKeyUp(KeyEventArgs) View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(View) View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.RemoveAll() View.Remove(View) View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.CanFocus View.OnEnter(View) View.OnLeave(View) View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.PositionCursor() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.MouseEvent(MouseEvent) Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class Frames.FrameEditor : View, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FrameEditor() Declaration public FrameEditor() Properties | Improve this Doc View Source Color Declaration public Attribute Color { get; set; } Property Value Type Description Attribute | Improve this Doc View Source Thickness Declaration public Thickness Thickness { get; set; } Property Value Type Description Thickness Events | Improve this Doc View Source AttributeChanged Declaration public event EventHandler<Attribute> AttributeChanged Event Type Type Description EventHandler<Attribute> | Improve this Doc View Source ThicknessChanged Declaration public event EventHandler<ThicknessEventArgs> ThicknessChanged Event Type Type Description EventHandler<ThicknessEventArgs> Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Frames.FramesEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Frames.FramesEditor.html",
    "title": "Class Frames.FramesEditor",
    "keywords": "Class Frames.FramesEditor Inheritance object Responder View Toplevel Window Frames.FramesEditor Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class Frames.FramesEditor : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source FramesEditor() Declaration public FramesEditor() Properties | Improve this Doc View Source ViewToEdit Declaration public View ViewToEdit { get; set; } Property Value Type Description View Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Frames.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Frames.html",
    "title": "Class Frames",
    "keywords": "Class Frames Inheritance object Scenario Frames Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Frames Demo\", \"Demonstrates Margin, Border, and Padding on Views.\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Borders\")] public class Frames : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.GraphViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.GraphViewExample.html",
    "title": "Class GraphViewExample",
    "keywords": "Class GraphViewExample Inheritance object Scenario GraphViewExample Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Graph View\", \"Demos the GraphView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Drawing\")] public class GraphViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.HexEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.HexEditor.html",
    "title": "Class HexEditor",
    "keywords": "Class HexEditor Inheritance object Scenario HexEditor Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"HexEditor\", \"A binary (hex) editor using the HexView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class HexEditor : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.html",
    "title": "Namespace UICatalog.Scenarios",
    "keywords": "Namespace UICatalog.Scenarios Classes AllViewsTester Animation Animation.BitmapToBraille Renders an image as unicode Braille. ASCIICustomButtonTest ASCIICustomButtonTest.ASCIICustomButton ASCIICustomButtonTest.ScrollViewTestWindow AutoSizeAndDirectionText BackgroundWorkerCollection BasicColors Buttons CharacterMap This Scenario demonstrates building a custom control (a class deriving from View) that: Provides a \"Character Map\" application (like Windows' charmap.exe). Helps test unicode character rendering in Terminal.Gui Illustrates how to use ScrollView to do infinite scrolling ClassExplorer Clipping CollectionNavigatorTester ColorPickers CombiningMarks ComboBoxIteration ComputedLayout This Scenario demonstrates how to use Termina.gui's Dim and Pos Layout System. [x] - Using Dim.Fill to fill a window [x] - Using Dim.Fill and Dim.Pos to automatically align controls based on an initial control [ ] - ... ConfigurationEditor ContextMenus CsvEditor Dialogs DynamicMenuBar DynamicMenuBar.Binding DynamicMenuBar.DynamicMenuBarDetails DynamicMenuBar.DynamicMenuBarSample DynamicMenuBar.DynamicMenuItem DynamicMenuBar.DynamicMenuItemList DynamicMenuBar.DynamicMenuItemModel DynamicMenuBar.ListWrapperConverter DynamicMenuBar.UStringValueConverter DynamicStatusBar DynamicStatusBar.Binding DynamicStatusBar.DynamicStatusBarDetails DynamicStatusBar.DynamicStatusBarSample DynamicStatusBar.DynamicStatusItem DynamicStatusBar.DynamicStatusItemList DynamicStatusBar.DynamicStatusItemModel DynamicStatusBar.ListWrapperConverter DynamicStatusBar.UStringValueConverter Editor EventExtensions FileDialogExamples Frames Frames.FrameEditor Frames.FramesEditor GraphViewExample HexEditor Images InteractiveTree InvertColors Keys LabelsAsLabels LineCanvasExperiment LineDrawing LineViewExample ListColumns ListsAndCombos ListViewWithSelection Localization MessageBoxes Mouse MultiColouredTable MyScenario Notepad ProcessTable Progress ProgressBarStyles RuneWidthGreaterThanOne RunTExample RunTExample.ExampleWindow Scrolling SendKeys SingleBackgroundWorker SingleBackgroundWorker.MainApp SingleBackgroundWorker.StagingUIController Sliders Snake SpinnerViewStyles SyntaxHighlighting TableEditor TabViewExample Text TextAlignments TextAlignmentsAndDirections TextFormatterDemo TextViewAutocompletePopup Threading TileViewNesting TimeAndDate TreeUseCases TreeViewFileSystem TrueColors UcdApiClient UnicodeInMenu ViewExperiments VkeyPacketSimulator WindowsAndFrameViews WizardAsView Wizards Interfaces DynamicMenuBar.IValueConverter DynamicStatusBar.IValueConverter"
  },
  "api/UICatalog/UICatalog.Scenarios.Images.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Images.html",
    "title": "Class Images",
    "keywords": "Class Images Inheritance object Scenario Images Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Images\", \"Demonstration of how to render an image with/without true color support.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Drawing\")] public class Images : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.InteractiveTree.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.InteractiveTree.html",
    "title": "Class InteractiveTree",
    "keywords": "Class InteractiveTree Inheritance object Scenario InteractiveTree Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Interactive Tree\", \"Create nodes and child nodes in TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class InteractiveTree : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.InvertColors.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.InvertColors.html",
    "title": "Class InvertColors",
    "keywords": "Class InvertColors Inheritance object Scenario InvertColors Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Invert Colors\", \"Invert the foreground and the background colors.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class InvertColors : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Keys.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Keys.html",
    "title": "Class Keys",
    "keywords": "Class Keys Inheritance object Scenario Keys Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Keys\", \"Shows keyboard input handling.\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class Keys : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.LabelsAsLabels.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LabelsAsLabels.html",
    "title": "Class LabelsAsLabels",
    "keywords": "Class LabelsAsLabels Inheritance object Scenario LabelsAsLabels Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Labels As Buttons\", \"Illustrates that Button is really just a Label++\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Proof of Concept\")] public class LabelsAsLabels : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.LineCanvasExperiment.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LineCanvasExperiment.html",
    "title": "Class LineCanvasExperiment",
    "keywords": "Class LineCanvasExperiment Inheritance object Scenario LineCanvasExperiment Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"LineCanvas Experiments\", \"Experiments with LineCanvas\")] [Scenario.ScenarioCategory(\"Drawing\")] [Scenario.ScenarioCategory(\"Borders\")] [Scenario.ScenarioCategory(\"Proof of Concept\")] public class LineCanvasExperiment : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Setup the scenario. Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.LineDrawing.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LineDrawing.html",
    "title": "Class LineDrawing",
    "keywords": "Class LineDrawing Inheritance object Scenario LineDrawing Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Line Drawing\", \"Demonstrates LineCanvas.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Drawing\")] public class LineDrawing : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.LineViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.LineViewExample.html",
    "title": "Class LineViewExample",
    "keywords": "Class LineViewExample Inheritance object Scenario LineViewExample Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Line View\", \"Demonstrates drawing lines using the LineView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"LineView\")] [Scenario.ScenarioCategory(\"Borders\")] public class LineViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ListColumns.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ListColumns.html",
    "title": "Class ListColumns",
    "keywords": "Class ListColumns Inheritance object Scenario ListColumns Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ListColumns\", \"Implements a columned list via a data table.\")] [Scenario.ScenarioCategory(\"TableView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class ListColumns : Scenario, IDisposable Methods | Improve this Doc View Source BuildSimpleList(int) Builds a simple list in which values are the index. This helps testing that scrolling etc is working correctly and not skipping out values when paging Declaration public static IList BuildSimpleList(int items) Parameters Type Name Description int items Returns Type Description IList | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ListsAndCombos.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ListsAndCombos.html",
    "title": "Class ListsAndCombos",
    "keywords": "Class ListsAndCombos Inheritance object Scenario ListsAndCombos Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ListView & ComboBox\", \"Demonstrates a ListView populating a ComboBox that acts as a filter.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ListView\")] [Scenario.ScenarioCategory(\"ComboBox\")] public class ListsAndCombos : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ListViewWithSelection.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ListViewWithSelection.html",
    "title": "Class ListViewWithSelection",
    "keywords": "Class ListViewWithSelection Inheritance object Scenario ListViewWithSelection Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"List View With Selection\", \"ListView with columns and selection\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ListView\")] public class ListViewWithSelection : Scenario, IDisposable Fields | Improve this Doc View Source _allowMarkingCB Declaration public CheckBox _allowMarkingCB Field Value Type Description CheckBox | Improve this Doc View Source _allowMultipleCB Declaration public CheckBox _allowMultipleCB Field Value Type Description CheckBox | Improve this Doc View Source _customRenderCB Declaration public CheckBox _customRenderCB Field Value Type Description CheckBox | Improve this Doc View Source _listView Declaration public ListView _listView Field Value Type Description ListView | Improve this Doc View Source _scenarios Declaration public List<Scenario> _scenarios Field Value Type Description List<Scenario> Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Localization.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Localization.html",
    "title": "Class Localization",
    "keywords": "Class Localization Inheritance object Scenario Localization Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Localization\", \"Test for localization resources.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Tests\")] public class Localization : Scenario, IDisposable Properties | Improve this Doc View Source CurrentCulture Declaration public CultureInfo CurrentCulture { get; } Property Value Type Description CultureInfo Methods | Improve this Doc View Source Quit() Declaration public void Quit() | Improve this Doc View Source SetCulture(CultureInfo) Declaration public void SetCulture(CultureInfo culture) Parameters Type Name Description CultureInfo culture | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() | Improve this Doc View Source ShowFileDialog(bool) Declaration public void ShowFileDialog(bool isSaveFile) Parameters Type Name Description bool isSaveFile | Improve this Doc View Source ShowWizard() Declaration public void ShowWizard() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.MessageBoxes.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MessageBoxes.html",
    "title": "Class MessageBoxes",
    "keywords": "Class MessageBoxes Inheritance object Scenario MessageBoxes Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"MessageBoxes\", \"Demonstrates how to use the MessageBox class.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] public class MessageBoxes : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Mouse.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Mouse.html",
    "title": "Class Mouse",
    "keywords": "Class Mouse Inheritance object Scenario Mouse Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Mouse\", \"Demonstrates how to capture mouse events\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class Mouse : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.MultiColouredTable.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MultiColouredTable.html",
    "title": "Class MultiColouredTable",
    "keywords": "Class MultiColouredTable Inheritance object Scenario MultiColouredTable Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"MultiColouredTable\", \"Demonstrates how to multi color cell contents.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"TableView\")] public class MultiColouredTable : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.MyScenario.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.MyScenario.html",
    "title": "Class MyScenario",
    "keywords": "Class MyScenario Inheritance object Scenario MyScenario Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Generic\", \"Generic sample - A template for creating new Scenarios\")] [Scenario.ScenarioCategory(\"Controls\")] public class MyScenario : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Notepad.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Notepad.html",
    "title": "Class Notepad",
    "keywords": "Class Notepad Inheritance object Scenario Notepad Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Notepad\", \"Multi-tab text editor using the TabView control.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TabView\")] [Scenario.ScenarioCategory(\"TextView\")] public class Notepad : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Save() Declaration public void Save() | Improve this Doc View Source Save(TabView, Tab) Declaration public void Save(TabView tabViewToSave, Tab tabToSave) Parameters Type Name Description TabView tabViewToSave Tab tabToSave | Improve this Doc View Source SaveAs() Declaration public bool SaveAs() Returns Type Description bool | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ProcessTable.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ProcessTable.html",
    "title": "Class ProcessTable",
    "keywords": "Class ProcessTable Inheritance object Scenario ProcessTable Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ProcessTable\", \"Demonstrates TableView with the currently running processes.\")] [Scenario.ScenarioCategory(\"TableView\")] public class ProcessTable : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Progress.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Progress.html",
    "title": "Class Progress",
    "keywords": "Class Progress Inheritance object Scenario Progress Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Progress\", \"Shows off ProgressBar and Threading.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Progress\")] public class Progress : Scenario, IDisposable Methods | Improve this Doc View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Scenario.Dispose(bool) | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ProgressBarStyles.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ProgressBarStyles.html",
    "title": "Class ProgressBarStyles",
    "keywords": "Class ProgressBarStyles Inheritance object Scenario ProgressBarStyles Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"ProgressBar Styles\", \"Shows the ProgressBar Styles.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Progress\")] [Scenario.ScenarioCategory(\"Threading\")] public class ProgressBarStyles : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.RuneWidthGreaterThanOne.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.RuneWidthGreaterThanOne.html",
    "title": "Class RuneWidthGreaterThanOne",
    "keywords": "Class RuneWidthGreaterThanOne Inheritance object Scenario RuneWidthGreaterThanOne Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"RuneWidthGreaterThanOne\", \"Test rune width greater than one\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Tests\")] public class RuneWidthGreaterThanOne : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.RunTExample.ExampleWindow.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.RunTExample.ExampleWindow.html",
    "title": "Class RunTExample.ExampleWindow",
    "keywords": "Class RunTExample.ExampleWindow Inheritance object Responder View Toplevel Window RunTExample.ExampleWindow Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class RunTExample.ExampleWindow : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source ExampleWindow() Declaration public ExampleWindow() Fields | Improve this Doc View Source usernameText Declaration public TextField usernameText Field Value Type Description TextField Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.RunTExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.RunTExample.html",
    "title": "Class RunTExample",
    "keywords": "Class RunTExample Inheritance object Scenario RunTExample Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Run<T> Example\", \"Illustrates using Application.Run<T> to run a custom class\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class RunTExample : Scenario, IDisposable Methods | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Scrolling.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Scrolling.html",
    "title": "Class Scrolling",
    "keywords": "Class Scrolling Inheritance object Scenario Scrolling Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Scrolling\", \"Demonstrates ScrollView etc...\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"ScrollView\")] [Scenario.ScenarioCategory(\"Tests\")] public class Scrolling : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SendKeys.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SendKeys.html",
    "title": "Class SendKeys",
    "keywords": "Class SendKeys Inheritance object Scenario SendKeys Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"SendKeys\", \"SendKeys sample - Send key combinations.\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class SendKeys : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.html",
    "title": "Class SingleBackgroundWorker",
    "keywords": "Class SingleBackgroundWorker Inheritance object Scenario SingleBackgroundWorker Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Single BackgroundWorker\", \"A single BackgroundWorker threading opening another Toplevel\")] [Scenario.ScenarioCategory(\"Threading\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class SingleBackgroundWorker : Scenario, IDisposable Methods | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.MainApp.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.MainApp.html",
    "title": "Class SingleBackgroundWorker.MainApp",
    "keywords": "Class SingleBackgroundWorker.MainApp Inheritance object Responder View Toplevel SingleBackgroundWorker.MainApp Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class SingleBackgroundWorker.MainApp : Toplevel, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source MainApp() Declaration public MainApp() Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.StagingUIController.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SingleBackgroundWorker.StagingUIController.html",
    "title": "Class SingleBackgroundWorker.StagingUIController",
    "keywords": "Class SingleBackgroundWorker.StagingUIController Inheritance object Responder View Toplevel Window SingleBackgroundWorker.StagingUIController Implements IDisposable ISupportInitializeNotification ISupportInitialize Inherited Members Window.DefaultBorderStyle Toplevel.Running Toplevel.Loaded Toplevel.Ready Toplevel.Unloaded Toplevel.Activate Toplevel.Deactivate Toplevel.ChildClosed Toplevel.AllChildClosed Toplevel.Closing Toplevel.Closed Toplevel.ChildLoaded Toplevel.ChildUnloaded Toplevel.SizeChanging Toplevel.OnLoaded() Toplevel.AlternateForwardKeyChanged Toplevel.OnAlternateForwardKeyChanged(KeyChangedEventArgs) Toplevel.AlternateBackwardKeyChanged Toplevel.OnAlternateBackwardKeyChanged(KeyChangedEventArgs) Toplevel.QuitKeyChanged Toplevel.OnQuitKeyChanged(KeyChangedEventArgs) Toplevel.Create() Toplevel.CanFocus Toplevel.Modal Toplevel.MenuBar Toplevel.StatusBar Toplevel.IsLoaded Toplevel.OnKeyDown(KeyEventArgs) Toplevel.OnKeyUp(KeyEventArgs) Toplevel.Add(View) Toplevel.Remove(View) Toplevel.RemoveAll() Toplevel.PositionToplevel(Toplevel) Toplevel.OnDrawContent(Rect) Toplevel.MouseEvent(MouseEvent) Toplevel.RequestStop() Toplevel.RequestStop(Toplevel) Toplevel.PositionCursor() Toplevel.OnEnter(View) Toplevel.OnLeave(View) Toplevel.Dispose(bool) Toplevel.IsOverlappedContainer Toplevel.IsOverlapped View.Frame View.Margin View.Border View.BorderStyle View.Padding View.GetFramesThickness() View.GetBoundsOffset() View.LayoutStyle View.Bounds View.X View.Y View.Width View.Height View.ForceValidatePosDim View.OnResizeNeeded() View.ClearLayoutNeeded() View.ScreenToFrame(int, int) View.ScreenToBounds(int, int) View.BoundsToScreen(int, int, out int, out int, bool) View.BoundsToScreen(Rect) View.FrameToScreen() View.LayoutStarted View.LayoutComplete View.Initialized View.LayoutSubviews() View.AutoSize View.GetAutoSize() View.FindDeepestView(View, int, int, out int, out int) View.IsInitialized View.BeginInit() View.EndInit() View.Driver View.Data View.Id View.Title View.OnTitleChanging(string, string) View.TitleChanging View.OnTitleChanged(string, string) View.TitleChanged View.EnabledChanged View.OnEnabledChanged() View.Enabled View.VisibleChanged View.OnVisibleChanged() View.ClearOnVisibleFalse View.Visible View.ToString() View.ColorScheme View.GetNormalColor() View.GetFocusColor() View.GetHotNormalColor() View.AddRune(int, int, Rune) View.ClearNeedsDisplay() View.NeedsDisplay View.SetNeedsDisplay() View.SetNeedsDisplay(Rect) View.SubViewNeedsDisplay View.SetSubViewNeedsDisplay() View.Clear() View.Clear(Rect) View.ClipToBounds() View.DrawHotString(string, Attribute, Attribute) View.DrawHotString(string, bool, ColorScheme) View.Move(int, int) View.LineCanvas View.SuperViewRendersLineCanvas View.OnDrawFrames() View.Draw() View.OnRenderLineCanvas() View.DrawContent View.DrawContentComplete View.OnDrawContentComplete(Rect) View.HotKeyChanged View.HotKey View.HotKeySpecifier View.TabIndexes View.TabIndex View.TabStop View.KeyDown View.KeyUp View.ProcessKeyPressed(KeyEventArgs) View.OnKeyPressed(KeyEventArgs) View.KeyPressed View.OnInvokeKeyBindings(KeyEventArgs) View.InvokingKeyBindings View.InvokeKeyBindings(KeyEventArgs) View.InvokeCommand(Command) View.AddKeyBinding(Key, params Command[]) View.ReplaceKeyBinding(Key, Key) View.ContainsKeyBinding(Key) View.GetKeyBindings(Key) View.ClearKeyBindings() View.ClearKeyBinding(Key) View.ClearKeyBinding(params Command[]) View.AddCommand(Command, Func<bool?>) View.GetSupportedCommands() View.GetKeyFromCommand(params Command[]) View.MouseEnter View.MouseLeave View.MouseClick View.OnMouseEnter(MouseEvent) View.OnMouseLeave(MouseEvent) View.OnMouseEvent(MouseEvent) View.OnMouseClick(MouseEventEventArgs) View.WantMousePositionReports View.WantContinuousButtonPressed View.SuperView View.Subviews View.IsCurrentTop View.Added View.Add(params View[]) View.OnAdded(SuperViewChangedEventArgs) View.IsAdded View.Removed View.OnRemoved(SuperViewChangedEventArgs) View.BringSubviewToFront(View) View.SendSubviewToBack(View) View.SendSubviewBackwards(View) View.BringSubviewForward(View) View.GetTopSuperView(View, View) View.Enter View.Leave View.HasFocus View.CanFocusChanged View.OnCanFocusChanged() View.Focused View.MostFocused View.SetFocus() View.EnsureFocus() View.FocusFirst() View.FocusLast() View.FocusPrev() View.FocusNext() View.Text View.TextFormatter View.UpdateTextFormatterText() View.PreserveTrailingSpaces View.TextAlignment View.VerticalTextAlignment View.TextDirection View.GetHotKeySpecifierLength(bool) View.GetSizeNeededForTextWithoutHotKey() View.GetTextFormatterSizeNeededForTextAndHotKey() Responder.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class SingleBackgroundWorker.StagingUIController : Window, IDisposable, ISupportInitializeNotification, ISupportInitialize Constructors | Improve this Doc View Source StagingUIController(DateTime?, List<string>) Declaration public StagingUIController(DateTime? start, List<string> list) Parameters Type Name Description DateTime? start List<string> list Methods | Improve this Doc View Source Load() Declaration public void Load() Implements IDisposable ISupportInitializeNotification ISupportInitialize Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Sliders.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Sliders.html",
    "title": "Class Sliders",
    "keywords": "Class Sliders Inheritance object Scenario Sliders Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Sliders\", \"Demonstrates the Slider view.\")] [Scenario.ScenarioCategory(\"Controls\")] public class Sliders : Scenario, IDisposable Methods | Improve this Doc View Source MakeSliders(View, List<object>) Declaration public void MakeSliders(View v, List<object> options) Parameters Type Name Description View v List<object> options | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Snake.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Snake.html",
    "title": "Class Snake",
    "keywords": "Class Snake Inheritance object Scenario Snake Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Snake\", \"The game of apple eating.\")] [Scenario.ScenarioCategory(\"Colors\")] [Scenario.ScenarioCategory(\"Drawing\")] public class Snake : Scenario, IDisposable Methods | Improve this Doc View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Scenario.Dispose(bool) | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SpinnerViewStyles.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SpinnerViewStyles.html",
    "title": "Class SpinnerViewStyles",
    "keywords": "Class SpinnerViewStyles Inheritance object Scenario SpinnerViewStyles Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"SpinnerView Styles\", \"Shows the SpinnerView Styles.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Progress\")] public class SpinnerViewStyles : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.SyntaxHighlighting.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.SyntaxHighlighting.html",
    "title": "Class SyntaxHighlighting",
    "keywords": "Class SyntaxHighlighting Inheritance object Scenario SyntaxHighlighting Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Syntax Highlighting\", \"Text editor with keyword highlighting using the TextView control.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TextView\")] public class SyntaxHighlighting : Scenario, IDisposable Methods | Improve this Doc View Source ReadFromJsonFile<T>(string) Reads an object instance from an Json file. Object type must have a parameterless constructor. Declaration public static T ReadFromJsonFile<T>(string filePath) where T : new() Parameters Type Name Description string filePath The file path to read the object instance from. Returns Type Description T Returns a new instance of the object read from the Json file. Type Parameters Name Description T The type of object to read from the file. | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() | Improve this Doc View Source WriteToJsonFile<T>(string, T, bool) Writes the given object instance to a Json file. Object type must have a parameterless constructor. Only Public properties and variables will be written to the file. These can be any type though, even other classes. If there are public properties/variables that you do not want written to the file, decorate them with the [JsonIgnore] attribute. Declaration public static void WriteToJsonFile<T>(string filePath, T objectToWrite, bool append = false) where T : new() Parameters Type Name Description string filePath The file path to write the object instance to. T objectToWrite The object instance to write to the file. bool append If false the file will be overwritten if it already exists. If true the contents will be appended to the file. Type Parameters Name Description T The type of object being written to the file. Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TableEditor.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TableEditor.html",
    "title": "Class TableEditor",
    "keywords": "Class TableEditor Inheritance object Scenario TableEditor Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TableEditor\", \"Implements data table editor using the TableView control.\")] [Scenario.ScenarioCategory(\"TableView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] public class TableEditor : Scenario, IDisposable Methods | Improve this Doc View Source BuildDemoDataTable(int, int) Generates a new demo DataTable with the given number of cols (min 5) and rows Declaration public static DataTable BuildDemoDataTable(int cols, int rows) Parameters Type Name Description int cols int rows Returns Type Description DataTable | Improve this Doc View Source BuildSimpleDataTable(int, int) Builds a simple table in which cell values contents are the index of the cell. This helps testing that scrolling etc is working correctly and not skipping out any rows/columns when paging Declaration public static DataTable BuildSimpleDataTable(int cols, int rows) Parameters Type Name Description int cols int rows Returns Type Description DataTable | Improve this Doc View Source Dispose(bool) Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Scenario.Dispose(bool) | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TabViewExample.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TabViewExample.html",
    "title": "Class TabViewExample",
    "keywords": "Class TabViewExample Inheritance object Scenario TabViewExample Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Tab View\", \"Demos TabView control with limited screen space in Absolute layout.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TabView\")] public class TabViewExample : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Text.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Text.html",
    "title": "Class Text",
    "keywords": "Class Text Inheritance object Scenario Text Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Input Controls\", \"Tests all text input controls\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class Text : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TextAlignments.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextAlignments.html",
    "title": "Class TextAlignments",
    "keywords": "Class TextAlignments Inheritance object Scenario TextAlignments Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Simple Text Alignment\", \"Demonstrates horizontal text alignment\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextAlignments : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TextAlignmentsAndDirections.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextAlignmentsAndDirections.html",
    "title": "Class TextAlignmentsAndDirections",
    "keywords": "Class TextAlignmentsAndDirections Inheritance object Scenario TextAlignmentsAndDirections Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Text Alignment and Direction\", \"Demos horiztonal and vertical text alignment and text direction.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextAlignmentsAndDirections : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TextFormatterDemo.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextFormatterDemo.html",
    "title": "Class TextFormatterDemo",
    "keywords": "Class TextFormatterDemo Inheritance object Scenario TextFormatterDemo Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TextFormatter Demo\", \"Demos and tests the TextFormatter class.\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] public class TextFormatterDemo : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TextViewAutocompletePopup.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TextViewAutocompletePopup.html",
    "title": "Class TextViewAutocompletePopup",
    "keywords": "Class TextViewAutocompletePopup Inheritance object Scenario TextViewAutocompletePopup Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"TextView Autocomplete Popup\", \"Shows five TextView Autocomplete Popup effects\")] [Scenario.ScenarioCategory(\"TextView\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class TextViewAutocompletePopup : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Threading.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Threading.html",
    "title": "Class Threading",
    "keywords": "Class Threading Inheritance object Scenario Threading Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Threading\", \"Demonstration of how to use threading in different ways\")] [Scenario.ScenarioCategory(\"Threading\")] public class Threading : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TileViewNesting.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TileViewNesting.html",
    "title": "Class TileViewNesting",
    "keywords": "Class TileViewNesting Inheritance object Scenario TileViewNesting Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Tile View Nesting\", \"Demonstrates recursive nesting of TileViews\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"LineView\")] public class TileViewNesting : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Setup the scenario. Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TimeAndDate.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TimeAndDate.html",
    "title": "Class TimeAndDate",
    "keywords": "Class TimeAndDate Inheritance object Scenario TimeAndDate Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Time And Date\", \"Illustrates TimeField and time & date handling\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"DateTime\")] public class TimeAndDate : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TreeUseCases.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TreeUseCases.html",
    "title": "Class TreeUseCases",
    "keywords": "Class TreeUseCases Inheritance object Scenario TreeUseCases Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Tree View\", \"Simple tree view examples.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] public class TreeUseCases : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TreeViewFileSystem.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TreeViewFileSystem.html",
    "title": "Class TreeViewFileSystem",
    "keywords": "Class TreeViewFileSystem Inheritance object Scenario TreeViewFileSystem Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"File System Explorer\", \"Hierarchical file system explorer demonstrating TreeView.\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"TreeView\")] [Scenario.ScenarioCategory(\"Files and IO\")] public class TreeViewFileSystem : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.TrueColors.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.TrueColors.html",
    "title": "Class TrueColors",
    "keywords": "Class TrueColors Inheritance object Scenario TrueColors Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"True Colors\", \"Demonstration of true color support.\")] [Scenario.ScenarioCategory(\"Colors\")] public class TrueColors : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.UcdApiClient.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.UcdApiClient.html",
    "title": "Class UcdApiClient",
    "keywords": "Class UcdApiClient Inheritance object UcdApiClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax public class UcdApiClient Fields | Improve this Doc View Source BaseUrl Declaration public const string BaseUrl = \"https://ucdapi.org/unicode/latest/\" Field Value Type Description string Methods | Improve this Doc View Source GetChars(string) Declaration public Task<string> GetChars(string chars) Parameters Type Name Description string chars Returns Type Description Task<string> | Improve this Doc View Source GetCharsName(string) Declaration public Task<string> GetCharsName(string chars) Parameters Type Name Description string chars Returns Type Description Task<string> | Improve this Doc View Source GetCodepointDec(int) Declaration public Task<string> GetCodepointDec(int dec) Parameters Type Name Description int dec Returns Type Description Task<string> | Improve this Doc View Source GetCodepointHex(string) Declaration public Task<string> GetCodepointHex(string hex) Parameters Type Name Description string hex Returns Type Description Task<string> Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.UnicodeInMenu.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.UnicodeInMenu.html",
    "title": "Class UnicodeInMenu",
    "keywords": "Class UnicodeInMenu Inheritance object Scenario UnicodeInMenu Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Unicode\", \"Tries to test Unicode in all controls (#204)\")] [Scenario.ScenarioCategory(\"Text and Formatting\")] [Scenario.ScenarioCategory(\"Controls\")] public class UnicodeInMenu : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.ViewExperiments.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.ViewExperiments.html",
    "title": "Class ViewExperiments",
    "keywords": "Class ViewExperiments Inheritance object Scenario ViewExperiments Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"View Experiments\", \"v2 View Experiments\")] [Scenario.ScenarioCategory(\"Controls\")] [Scenario.ScenarioCategory(\"Borders\")] [Scenario.ScenarioCategory(\"Layout\")] [Scenario.ScenarioCategory(\"Proof of Concept\")] public class ViewExperiments : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.VkeyPacketSimulator.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.VkeyPacketSimulator.html",
    "title": "Class VkeyPacketSimulator",
    "keywords": "Class VkeyPacketSimulator Inheritance object Scenario VkeyPacketSimulator Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"VkeyPacketSimulator\", \"Simulates the Virtual Key Packet\")] [Scenario.ScenarioCategory(\"Mouse and Keyboard\")] public class VkeyPacketSimulator : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.WindowsAndFrameViews.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.WindowsAndFrameViews.html",
    "title": "Class WindowsAndFrameViews",
    "keywords": "Class WindowsAndFrameViews Inheritance object Scenario WindowsAndFrameViews Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Windows & FrameViews\", \"Stress Tests Windows, sub-Windows, and FrameViews.\")] [Scenario.ScenarioCategory(\"Layout\")] public class WindowsAndFrameViews : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.WizardAsView.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.WizardAsView.html",
    "title": "Class WizardAsView",
    "keywords": "Class WizardAsView Inheritance object Scenario WizardAsView Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Setup() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"WizardAsView\", \"Shows using the Wizard class in an non-modal way\")] [Scenario.ScenarioCategory(\"Wizards\")] public class WizardAsView : Scenario, IDisposable Methods | Improve this Doc View Source Init() Helper that provides the default Window implementation with a frame and label showing the name of the Scenario and logic to exit back to the Scenario picker UI. Override Init() to provide any Toplevel behavior needed. Declaration public override void Init() Overrides Scenario.Init() | Improve this Doc View Source Run() Runs the Scenario. Override to start the Scenario using a Toplevel different than Top. Declaration public override void Run() Overrides Scenario.Run() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "api/UICatalog/UICatalog.Scenarios.Wizards.html": {
    "href": "api/UICatalog/UICatalog.Scenarios.Wizards.html",
    "title": "Class Wizards",
    "keywords": "Class Wizards Inheritance object Scenario Wizards Implements IDisposable Inherited Members Scenario.Theme Scenario.TopLevelColorScheme Scenario.Win Scenario.Init() Scenario.GetName() Scenario.GetDescription() Scenario.GetCategories() Scenario.ToString() Scenario.Run() Scenario.RequestStop() Scenario.GetScenarios() Scenario.Dispose(bool) Scenario.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: UICatalog.Scenarios Assembly: UICatalog.dll Syntax [Scenario.ScenarioMetadata(\"Wizards\", \"Demonstrates the Wizard class\")] [Scenario.ScenarioCategory(\"Dialogs\")] [Scenario.ScenarioCategory(\"Top Level Windows\")] [Scenario.ScenarioCategory(\"Wizards\")] public class Wizards : Scenario, IDisposable Methods | Improve this Doc View Source Setup() Override this to implement the Scenario setup logic (create controls, etc...). Declaration public override void Setup() Overrides Scenario.Setup() Implements IDisposable Extension Methods EventExtensions.ClearEventHandlers(object, string)"
  },
  "articles/config.html": {
    "href": "articles/config.html",
    "title": "Configuration Management",
    "keywords": "Configuration Management Terminal.Gui provides configuration and theme management for Terminal.Gui applications via the [ConfigurationManager](~/api/Terminal.Gui/Terminal.Gui. Settings. Settings are applied to the Application class. Settings are accessed via the Settings property of the ConfigurationManager class. Themes. Themes are a named collection of settings impacting how applications look. The default theme is named \"Default\". The built-in configuration stored within the Terminal.Gui library defines two additional themes: \"Dark\", and \"Light\". Additional themes can be defined in the configuration files. AppSettings. AppSettings allow applicaitons to use the ConfigurationManager to store and retrieve application-specific settings. The The ConfigurationManager will look for configuration files in the .tui folder in the user's home directory (e.g. C:/Users/username/.tui or /usr/username/.tui), the folder where the Terminal.Gui application was launched from (e.g. ./.tui), or as a resource within the Terminal.Gui application's main assembly. Settings that will apply to all applications (global settings) reside in files named config.json. Settings that will apply to a specific Terminal.Gui application reside in files named appname.config.json, where appname is the assembly name of the application (e.g. UICatalog.config.json). Settings are applied using the following precedence (higher precedence settings overwrite lower precedence settings): App specific settings found in the users's home directory (~/.tui/appname.config.json). -- Highest precedence. App specific settings found in the directory the app was launched from (./.tui/appname.config.json). App settings in app resources (Resources/config.json). Global settings found in the the user's home directory (~/.tui/config.json). Global settings found in the directory the app was launched from (./.tui/config.json). Default settings defined in the Terminal.Gui assembly -- Lowest precedence. The UI Catalog application provides an example of how to use the ConfigurationManager class to load and save configuration files. The Configuration Editor scenario provides an editor that allows users to edit the configuration files. UI Catalog also uses a file system watcher to detect changes to the configuration files to tell ConfigurationManager to reaload them; allowing users to change settings without having to restart the application. What Can Be Configured Settings (Note, this list may not be complete; search the source code for SerializableConfigurationProperty to find all settings that can be configured.) * [Application.QuitKey](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_QuitKey) * [Application.AlternateForwardKey](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_AlternateForwardKey) * [Application.AlternateBackwardKey](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_AlternateBackwardKey) * [Application.UseSystemConsole](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_UseSystemConsole) * [Application.IsMouseDisabled](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_IsMouseDisabled) * [Application.EnableConsoleScrolling](~/api/Terminal.Gui/Terminal.Gui.Application.yml#Terminal_Gui_Application_EnableConsoleScrolling) Glyphs Defines the standard set of glyphs used for standard views (e.g. the default indicator for Button) and line drawing (e.g. LineCanvas). The value can be either a decimal number or a string. The string may be: A unicode char (e.g. \"☑\") A hex value in U+ format (e.g. \"U+2611\") A hex value in UTF-16 format (e.g. \"\\u2611\") \"Glyphs\": { \"RightArrow\": \"►\", \"LeftArrow\": \"U+25C4\", \"DownArrow\": \"\\\\u25BC\", \"UpArrow\": 965010 } Themes A Theme is a named collection of settings that impact the visual style of Terminal.Gui applications. The default theme is named \"Default\". The built-in configuration stored within the Terminal.Gui library defines two more themes: \"Dark\", and \"Light\". Additional themes can be defined in the configuration files. The Json property Theme defines the name of the theme that will be used. If the theme is not found, the default theme will be used. Themes support defining ColorSchemes as well as various default settings for Views. Both the default color schemes and user defined color schemes can be configured. See ColorSchemes for more information. Example Configuration File { \"$schema\": \"https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json\", \"Application.QuitKey\": { \"Key\": \"Esc\" }, \"AppSettings\": { \"UICatalog.StatusBar\": false }, \"Theme\": \"UI Catalog Theme\", \"Themes\": [ { \"UI Catalog Theme\": { \"ColorSchemes\": [ { \"UI Catalog Scheme\": { \"Normal\": { \"Foreground\": \"White\", \"Background\": \"Green\" }, \"Focus\": { \"Foreground\": \"Green\", \"Background\": \"White\" }, \"HotNormal\": { \"Foreground\": \"Blue\", \"Background\": \"Green\" }, \"HotFocus\": { \"Foreground\": \"BrightRed\", \"Background\": \"White\" }, \"Disabled\": { \"Foreground\": \"BrightGreen\", \"Background\": \"Gray\" } } }, { \"TopLevel\": { \"Normal\": { \"Foreground\": \"DarkGray\", \"Background\": \"White\" ... } } } ], \"Dialog.DefaultEffect3D\": false } } ] } Configuration File Schema Settings are defined in JSON format, according to the schema found here: https://gui-cs.github.io/Terminal.Gui/schemas/tui-config-schema.json"
  },
  "articles/drivers.html": {
    "href": "articles/drivers.html",
    "title": "Cross-Platform Driver Model",
    "keywords": "Cross-Platform Driver Model Terminal.Gui has support for ncurses, System.Console, and a full Win32 Console front-end. ncurses is used on Mac/Linux/Unix with color support based on what your library is compiled with; the Windows driver supports full color and mouse, and an easy-to-debug System.Console can be used on Windows and Unix, but lacks mouse support. You can force the use of System.Console on Unix as well; see Core.cs."
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Conceptual Documentation",
    "keywords": "Conceptual Documentation Terminal.Gui Overview List of Views Keyboard Event Processing Event Processing and the Application Main Loop Cross-platform Driver Model Configuration and Theme Manager TableView Deep Dive TreeView Deep Dive"
  },
  "articles/keyboard.html": {
    "href": "articles/keyboard.html",
    "title": "Keyboard Event Processing",
    "keywords": "Keyboard Event Processing Terminal.Gui respects common Linux, Mac, and Windows keyboard idioms. For example, clipboard operations use the familiar Control/Command-C, X, V model. CTRL-Q is used for exiting views (and apps). The input handling of Terminal.Gui is similar in some ways to Emacs and the Midnight Commander, so you can expect some of the special key combinations to be active. The key ESC can act as an Alt modifier (or Meta in Emacs parlance), to allow input on terminals that do not have an alt key. So to produce the sequence Alt-F, you can press either Alt-F, or ESC followed by the key F. To enter the key ESC, you can either press ESC and wait 100 milliseconds, or you can press ESC twice. ESC-0, and ESC-1 through ESC-9 have a special meaning, they map to F10, and F1 to F9 respectively. Apps can change key bindings using the AddKeyBinding API. Keyboard events are sent by the Main Loop to the Application class for processing. The keyboard events are sent exclusively to the current Toplevel, this being either the default that is created when you call Application.Init, or one that you created an passed to Application.Run(Toplevel). Flow Keystrokes are first processes as hotkeys, then as regular keys, and there is a final cold post-processing event that is invoked if no view processed the key. HotKey Processing Events are first send to all views as a \"HotKey\", this means that the View.ProcessHotKey method is invoked on the current toplevel, which in turns propagates this to all the views in the hierarchy. If any view decides to process the event, no further processing takes place. This is how hotkeys for buttons are implemented. For example, the keystroke \"Alt-A\" is handled by Buttons that have a hot-letter \"A\" to activate the button. Regular Processing Unlike the hotkey processing, the regular processing is only sent to the currently focused view in the focus chain. The regular key processing is only invoked if no hotkey was caught. Cold-key Processing This stage only is executed if the focused view did not process the event, and is broadcast to all the views in the Toplevel. This method can be overwritten by views that want to provide accelerator functionality (Alt-key for example), but without interfering with normal ProcessKey behavior. Key Bindings Terminal.Gui supports rebinding keys. For example the default key for activating a button is Enter. You can change this using the ClearKeybinding and AddKeybinding methods: var btn = new Button (\"Press Me\"); btn.ClearKeybinding (Command.Accept); btn.AddKeyBinding (Key.b, Command.Accept); The Command enum lists generic operations that are implemented by views. For example Command.Accept in a Button results in the Clicked event firing while in TableView it is bound to CellActivated. Not all commands are implemented by all views (e.g. you cannot scroll in a Button). To see which commands are implemented by a View you can use the GetSupportedCommands() method. Not all controls have the same key bound for a given command, for example Command.Accept defaults to Key.Enter in a Button but defaults to Key.Space in RadioGroup. Global Key Handler Sometimes you may want to define global key handling logic for your entire application that is invoked regardless of what Window/View has focus. This can be achieved by using the Application.RootKeyEvent event."
  },
  "articles/mainloop.html": {
    "href": "articles/mainloop.html",
    "title": "Event Processing and the Application Main Loop",
    "keywords": "Event Processing and the Application Main Loop See also Cross-platform Driver Model The method Application.Run that we covered before will wait for events from either the keyboard or mouse and route those events to the proper view. The job of waiting for events and dispatching them in the Application is implemented by an instance of the MainLoop class. Mainloops are a common idiom in many user interface toolkits so many of the concepts will be familiar to you if you have used other toolkits before. This class provides the following capabilities: Keyboard and mouse processing .NET Async support Timers processing Invoking of UI code from a background thread Idle processing handlers Possibility of integration with other mainloops. On Unix systems, it can monitor file descriptors for readability or writability. The MainLoop property in the the Application provides access to these functions. When your code invokes Application.Run (Toplevel), the application will prepare the current Toplevel instance by redrawing the screen appropriately and then calling the mainloop to run. You can configure the Mainloop before calling Application.Run, or you can configure the MainLoop in response to events during the execution. The keyboard inputs is dispatched by the application class to the current TopLevel window this is covered in more detail in the Keyboard Event Processing document. Async Execution On startup, the Application class configured the .NET Asynchronous machinery to allow you to use the await keyword to run tasks in the background and have the execution of those tasks resume on the context of the main thread running the main loop. Once you invoke Application.Main the async machinery will be ready to use, and you can merely call methods using await from your main thread, and the awaited code will resume execution on the main thread. Timers Processing You can register timers to be executed at specified intervals by calling the AddTimeout method, like this: void UpdateTimer () { time.Text = DateTime.Now.ToString (); } var token = Application.MainLoop.AddTimeout (TimeSpan.FromSeconds (20), UpdateTimer); The return value from AddTimeout is a token value that you can use if you desire to cancel the timer before it runs: Application.MainLoop.RemoveTimeout (token); Idle Handlers You can register code to be executed when the application is idling and there are no events to process by calling the AddIdle method. This method takes as a parameter a function that will be invoked when the application is idling. Idle functions should return true if they should be invoked again, and false if the idle invocations should stop. Like the timer APIs, the return value is a token that can be used to cancel the scheduled idle function from being executed. Threading Like other UI toolkits, Terminal.Gui is generally not thread safe. You should avoid calling methods in the UI classes from a background thread as there is no guarantee that they will not corrupt the state of the UI application. Generally, as there is not much state, you will get lucky, but the application will not behave properly. You will be served better off by using C# async machinery and the various APIs in the System.Threading.Tasks.Task APIs. But if you absolutely must work with threads on your own you should only invoke APIs in Terminal.Gui from the main thread. To make this simple, you can use the Application.MainLoop.Invoke method and pass an Action. This action will be queued for execution on the main thread at an appropriate time and will run your code there. For example, the following shows how to properly update a label from a background thread: void BackgroundThreadUpdateProgress () { Application.MainLoop.Invoke (() => { progress.Text = $\"Progress: {bytesDownloaded/totalBytes}\"; }); } Integration With Other Main Loop Drivers It is possible to run the main loop in a way that it does not take over control of your application, but rather in a cooperative way. To do this, you must use the lower-level APIs in Application: the Begin method to prepare a toplevel for execution, followed by calls to MainLoop.EventsPending to determine whether the events must be processed, and in that case, calling RunLoop method and finally completing the process by calling End. The method Run is implemented like this: void Run (Toplevel top) { var runToken = Begin (view); RunLoop (runToken); End (runToken); } Unix File Descriptor Monitoring On Unix, it is possible to monitor file descriptors for input being available, or for the file descriptor being available for data to be written without blocking the application. To do this, you on Unix, you can cast the MainLoop instance to a UnixMainLoop and use the AddWatch method to register an interest on a particular condition."
  },
  "articles/overview.html": {
    "href": "articles/overview.html",
    "title": "Terminal.Gui API Overview",
    "keywords": "Terminal.Gui API Overview Terminal.Gui is a library intended to create console-based applications using C#. The framework has been designed to make it easy to write applications that will work on monochrome terminals, as well as modern color terminals with mouse support. This library works across Windows, Linux and MacOS. This library provides a text-based toolkit as works in a way similar to graphic toolkits. There are many controls that can be used to create your applications and it is event based, meaning that you create the user interface, hook up various events and then let the a processing loop run your application, and your code is invoked via one or more callbacks. The simplest application looks like this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var n = MessageBox.Query (50, 7, \"Question\", \"Do you like console apps?\", \"Yes\", \"No\"); Application.Shutdown (); return n; } } This example shows a prompt and returns an integer value depending on which value was selected by the user (Yes, No, or if they use chose not to make a decision and instead pressed the ESC key). More interesting user interfaces can be created by composing some of the various views that are included. In the following sections, you will see how applications are put together. In the example above, you can see that we have initialized the runtime by calling the Init method in the Application class - this sets up the environment, initializes the color schemes available for your application and clears the screen to start your application. The Application class, additionally creates an instance of the Toplevel class that is ready to be consumed, this instance is available in the Application.Top property, and can be used like this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var label = new Label (\"Hello World\") { X = Pos.Center (), Y = Pos.Center (), Height = 1, }; Application.Top.Add (label); Application.Run (); Application.Shutdown (); } } Typically, you will want your application to have more than a label, you might want a menu, and a region for your application to live in, the following code does this: using Terminal.Gui; class Demo { static int Main () { Application.Init (); var menu = new MenuBar (new MenuBarItem [] { new MenuBarItem (\"_File\", new MenuItem [] { new MenuItem (\"_Quit\", \"\", () => { Application.RequestStop (); }) }), }); var win = new Window (\"Hello\") { X = 0, Y = 1, Width = Dim.Fill (), Height = Dim.Fill () - 1 }; // Add both menu and win in a single call Application.Top.Add (menu, win); Application.Run (); Application.Shutdown (); } } Views All visible elements on a Terminal.Gui application are implemented as Views. Views are self-contained objects that take care of displaying themselves, can receive keyboard and mouse input and participate in the focus mechanism. See the full list of Views provided by the Terminal.Gui library here. Every view can contain an arbitrary number of children views. These are called the Subviews. You can add a view to an existing view, by calling the Add method, for example, to add a couple of buttons to a UI, you can do this: void SetupMyView (View myView) { var label = new Label (\"Username: \") { X = 1, Y = 1, Width = 20, Height = 1 }; myView.Add (label); var username = new TextField (\"\") { X = 1, Y = 2, Width = 30, Height = 1 }; myView.Add (username); } The container of a given view is called the SuperView and it is a property of every View. Layout Terminal.Gui supports two different layout systems, absolute and computed (controlled by the LayoutStyle property on the view. The absolute system is used when you want the view to be positioned exactly in one location and want to manually control where the view is. This is done by invoking your View constructor with an argument of type Rect. When you do this, to change the position of the View, you can change the Frame property on the View. The computed layout system offers a few additional capabilities, like automatic centering, expanding of dimensions and a handful of other features. To use this you construct your object without an initial Frame, but set the X, Y, Width and Height properties after the object has been created. Examples: // Dynamically computed var label = new Label (\"Hello\") { X = 1, Y = Pos.Center (), Width = Dim.Fill (), Height = 1 }; // Absolute position using the provided rectangle var label2 = new Label (new Rect (1, 2, 20, 1), \"World\") The computed layout system does not take integers, instead the X and Y properties are of type Pos and the Width and Height properties are of type Dim both which can be created implicitly from integer values. The Pos Type The Pos type on X and Y offers a few options: Absolute position, by passing an integer Percentage of the parent's view size - Pos.Percent(n) Anchored from the end of the dimension - AnchorEnd(int margin=0) Centered, using Center() Reference the Left (X), Top (Y), Bottom, Right positions of another view The Pos values can be added or subtracted, like this: // Set the X coordinate to 10 characters left from the center view.X = Pos.Center () - 10; view.Y = Pos.Percent (20); anotherView.X = AnchorEnd (10); anotherView.Width = 9; myView.X = Pos.X (view); myView.Y = Pos.Bottom (anotherView); The Dim Type The Dim type is used for the Width and Height properties on the View and offers the following options: Absolute size, by passing an integer Percentage of the parent's view size - Dim.Percent(n) Fill to the end - Dim.Fill () Reference the Width or Height of another view Like, Pos, objects of type Dim can be added an subtracted, like this: // Set the Width to be 10 characters less than filling // the remaining portion of the screen view.Width = Dim.Fill () - 10; view.Height = Dim.Percent(20) - 1; anotherView.Height = Dim.Height (view)+1 TopLevels, Windows and Dialogs. Among the many kinds of views, you typically will create a Toplevel view (or any of its subclasses, like Window or Dialog which is special kind of views that can be executed modally - that is, the view can take over all input and returns only when the user chooses to complete their work there. The following sections cover the differences. TopLevel Views Toplevel views have no visible user interface elements and occupy an arbitrary portion of the screen. You would use a toplevel Modal view for example to launch an entire new experience in your application, one where you would have a new top-level menu for example. You typically would add a Menu and a Window to your Toplevel, it would look like this: using Terminal.Gui; class Demo { static void Edit (string filename) { var top = new Toplevel () { X = 0, Y = 0, Width = Dim.Fill (), Height = Dim.Fill () }; var menu = new MenuBar (new MenuBarItem [] { new MenuBarItem (\"_File\", new MenuItem [] { new MenuItem (\"_Close\", \"\", () => { Application.RequestStop (); }) }), }); // nest a window for the editor var win = new Window (filename) { X = 0, Y = 1, Width = Dim.Fill (), Height = Dim.Fill () - 1 }; var editor = new TextView () { X = 0, Y = 0, Width = Dim.Fill (), Height = Dim.Fill () }; editor.Text = System.IO.File.ReadAllText (filename); win.Add (editor); // Add both menu and win in a single call top.Add (win, menu); Application.Run (top); Application.Shutdown (); } } Window Views Window views extend the Toplevel view by providing a frame and a title around the toplevel - and can be moved on the screen with the mouse (caveat: code is currently disabled) From a user interface perspective, you might have more than one Window on the screen at a given time. Dialogs Dialog are Window objects that happen to be centered in the middle of the screen. Dialogs are instances of a Window that are centered in the screen, and are intended to be used modally - that is, they run, and they are expected to return a result before resuming execution of your application. Dialogs are a subclass of Window and additionally expose the AddButton API which manages the layout of any button passed to it, ensuring that the buttons are at the bottom of the dialog. Example: bool okpressed = false; var ok = new Button(\"Ok\"); var cancel = new Button(\"Cancel\"); var dialog = new Dialog (\"Quit\", 60, 7, ok, cancel); Which will show something like this: +- Quit -----------------------------------------------+ | | | | | [ Ok ] [ Cancel ] | +------------------------------------------------------+ Running Modally To run your Dialog, Window or Toplevel modally, you will invoke the Application.Run method on the toplevel. It is up to your code and event handlers to invoke the Application.RequestStop() method to terminate the modal execution. bool okpressed = false; var ok = new Button(3, 14, \"Ok\") { Clicked = () => { Application.RequestStop (); okpressed = true; } }; var cancel = new Button(10, 14, \"Cancel\") { Clicked = () => Application.RequestStop () }; var dialog = new Dialog (\"Login\", 60, 18, ok, cancel); var entry = new TextField () { X = 1, Y = 1, Width = Dim.Fill (), Height = 1 }; dialog.Add (entry); Application.Run (dialog); if (okpressed) Console.WriteLine (\"The user entered: \" + entry.Text); There is no return value from running modally, so your code will need to have a mechanism of indicating the reason that the execution of the modal dialog was completed, in the case above, the okpressed value is set to true if the user pressed or selected the Ok button. Input Handling Every view has a focused view, and if that view has nested views, one of those is the focused view. This is called the focus chain, and at any given time, only one View has the focus. The library binds the key Tab to focus the next logical view, and the Shift-Tab combination to focus the previous logical view. Keyboard processing is divided in three stages: HotKey processing, regular processing and cold key processing. Hot key processing happens first, and it gives all the views in the current toplevel a chance to monitor whether the key needs to be treated specially. This for example handles the scenarios where the user pressed Alt-o, and a view with a highlighted \"o\" is being displayed. If no view processed the hotkey, then the key is sent to the currently focused view. If the key was not processed by the normal processing, all views are given a chance to process the keystroke in their cold processing stage. Examples include the processing of the \"return\" key in a dialog when a button in the dialog has been flagged as the \"default\" action. The most common case is the normal processing, which sends the keystrokes to the currently focused view. Mouse events are processed in visual order, and the event will be sent to the view on the screen. The only exception is that no mouse events are delivered to background views when a modal view is running. More details are available on the Keyboard Event Processing document. Colors and Color Schemes All views have been configured with a color scheme that will work both in color terminals as well as the more limited black and white terminals. The various styles are captured in the Colors class which defined color schemes for the toplevel, the normal views, the menu bar, popup dialog boxes and error dialog boxes, that you can use like this: Colors.Toplevel Colors.Base Colors.Menu Colors.Dialog Colors.Error You can use them for example like this to set the colors for a new Window: var w = new Window (\"Hello\"); w.ColorScheme = Colors.Error The ColorScheme represents four values, the color used for Normal text, the color used for normal text when a view is focused an the colors for the hot-keys both in focused and unfocused modes. By using ColorSchemes you ensure that your application will work correctbly both in color and black and white terminals. Some views support setting individual color attributes, you create an attribute for a particular pair of Foreground/Background like this: var myColor = Application.Driver.MakeAttribute (Color.Blue, Color.Red); var label = new Label (...); label.TextColor = myColor MainLoop, Threads and Input Handling Detailed description of the mainloop is described on the Event Processing and the Application Main Loop document. Cross-Platform Drivers See Cross-platform Driver Model."
  },
  "articles/tableview.html": {
    "href": "articles/tableview.html",
    "title": "Table View",
    "keywords": "Table View This control supports viewing and editing tabular data. It provides a view of a System.DataTable. System.DataTable is a core class of .net standard and can be created very easily TableView API Reference Csv Example You can create a DataTable from a CSV file by creating a new instance and adding columns and rows as you read them. For a robust solution however you might want to look into a CSV parser library that deals with escaping, multi line rows etc. var dt = new DataTable(); var lines = File.ReadAllLines(filename); foreach(var h in lines[0].Split(',')){ dt.Columns.Add(h); } foreach(var line in lines.Skip(1)) { dt.Rows.Add(line.Split(',')); } Database Example All Ado.net database providers (Oracle, MySql, SqlServer etc) support reading data as DataTables for example: var dt = new DataTable(); using(var con = new SqlConnection(\"Server=myServerAddress;Database=myDataBase;Trusted_Connection=True;\")) { con.Open(); var cmd = new SqlCommand(\"select * from myTable;\",con); var adapter = new SqlDataAdapter(cmd); adapter.Fill(dt); } Displaying the table Once you have set up your data table set it in the view: tableView = new TableView () { X = 0, Y = 0, Width = 50, Height = 10, }; tableView.Table = new DataTableSource(yourDataTable); Object data If your data objects are not stored in a System.Data.DataTable then you can instead create a table using EnumerableTableSource<T> or implementing your own ITableSource class. For example to render data for the currently running processes: tableView.Table = new EnumerableTableDataSource<Process> (Process.GetProcesses (), new Dictionary<string, Func<Process, object>>() { { \"ID\",(p)=>p.Id}, { \"Name\",(p)=>p.ProcessName}, { \"Threads\",(p)=>p.Threads.Count}, { \"Virtual Memory\",(p)=>p.VirtualMemorySize64}, { \"Working Memory\",(p)=>p.WorkingSet64}, }); Table Rendering TableView supports any size of table. You can have thousands of columns and/or millions of rows if you want. Horizontal and vertical scrolling can be done using the mouse or keyboard. TableView uses ColumnOffset and RowOffset to determine the first visible cell of the System.DataTable. Rendering then continues until the avaialble console space is exhausted. Updating the ColumnOffset and RowOffset changes which part of the table is rendered (scrolls the viewport). This approach ensures that no matter how big the table, only a small number of columns/rows need to be evaluated for rendering."
  },
  "articles/treeview.html": {
    "href": "articles/treeview.html",
    "title": "Tree View",
    "keywords": "Tree View TreeView is a control for navigating hierarchical objects. It comes in two forms TreeView and TreeView<T>. TreeView API Reference Using TreeView The basic non generic TreeView class is populated by ITreeNode objects. The simplest tree you can make would look something like: var tree = new TreeView() { X = 0, Y = 0, Width = 40, Height = 20 }; var root1 = new TreeNode(\"Root1\"); root1.Children.Add(new TreeNode(\"Child1.1\")); root1.Children.Add(new TreeNode(\"Child1.2\")); var root2 = new TreeNode(\"Root2\"); root2.Children.Add(new TreeNode(\"Child2.1\")); root2.Children.Add(new TreeNode(\"Child2.2\")); tree.AddObject(root1); tree.AddObject(root2); Having to create a bunch of TreeNode objects can be a pain especially if you already have your own objects e.g. House, Room etc. There are two ways to use your own classes without having to create nodes manually. Firstly you can implement the ITreeNode interface: // Your data class private class House : TreeNode { // Your properties public string Address {get;set;} public List<Room> Rooms {get;set;} // ITreeNode member: public override IList<ITreeNode> Children => Rooms.Cast<ITreeNode>().ToList(); public override string Text { get => Address; set => Address = value; } } // Your other data class private class Room : TreeNode{ public string Name {get;set;} public override string Text{get=>Name;set{Name=value;}} } After implementing the interface you can add your objects directly to the tree var myHouse = new House() { Address = \"23 Nowhere Street\", Rooms = new List<Room>{ new Room(){Name = \"Ballroom\"}, new Room(){Name = \"Bedroom 1\"}, new Room(){Name = \"Bedroom 2\"} } }; var tree = new TreeView() { X = 0, Y = 0, Width = 40, Height = 20 }; tree.AddObject(myHouse); Alternatively you can simply tell the tree how the objects relate to one another by implementing ITreeBuilder<T>. This is a good option if you don't have control of the data objects you are working with. TreeView<T> The generic Treeview<T> allows you to store any object hierarchy where nodes implement Type T. For example if you are working with DirectoryInfo and FileInfo objects then you could create a TreeView<FileSystemInfo>. If you don't have a shared interface/base class for all nodes you can still declare a TreeView<object>. In order to use TreeView<T> you need to tell the tree how objects relate to one another (who are children of who). To do this you must provide an ITreeBuilder<T>. Implementing ITreeBuilder<T> Consider a simple data model that already exists in your program: private abstract class GameObject { } private class Army : GameObject { public string Designation {get;set;} public List<Unit> Units {get;set;} public override string ToString () { return Designation; } } private class Unit : GameObject { public string Name {get;set;} public override string ToString () { return Name; } } An ITreeBuilder<T> for these classes might look like: private class GameObjectTreeBuilder : ITreeBuilder<GameObject> { public bool SupportsCanExpand => true; public bool CanExpand (GameObject model) { return model is Army; } public IEnumerable<GameObject> GetChildren (GameObject model) { if(model is Army a) return a.Units; return Enumerable.Empty<GameObject>(); } } To use the builder in a tree you would use: var army1 = new Army() { Designation = \"3rd Infantry\", Units = new List<Unit>{ new Unit(){Name = \"Orc\"}, new Unit(){Name = \"Troll\"}, new Unit(){Name = \"Goblin\"}, } }; var tree = new TreeView<GameObject>() { X = 0, Y = 0, Width = 40, Height = 20, TreeBuilder = new GameObjectTreeBuilder() }; tree.AddObject(army1); Alternatively you can use DelegateTreeBuilder<T> instead of implementing your own ITreeBuilder<T>. For example: tree.TreeBuilder = new DelegateTreeBuilder<GameObject>( (o)=>o is Army a ? a.Units : Enumerable.Empty<GameObject>()); Node Text and ToString The default behavior of TreeView is to use the ToString method on the objects for rendering. You can customise this by changing the AspectGetter. For example: treeViewFiles.AspectGetter = (f)=>f.FullName;"
  },
  "articles/views.html": {
    "href": "articles/views.html",
    "title": "",
    "keywords": "Terminal.Gui provides a rich set of views and controls for building terminal user interfaces: Button - A View that provides an item that invokes an System.Action when activated by the user. CheckBox - Shows an on/off toggle that the user can set. ColorPicker - Enables to user to pick a color. ComboBox - Provides a drop-down list of items the user can select from. Dialog - A pop-up Window that contains one or more Buttons. OpenDialog - A Dialog providing an interactive pop-up Window for users to select files or directories. SaveDialog - A Dialog providing an interactive pop-up Window for users to save files. FrameView - A container View that draws a frame around its contents. Similar to a GroupBox in Windows. GraphView - A View for rendering graphs (bar, scatter etc). Hex viewer/editor - A hex viewer and editor that operates over a file stream. Label - Displays a string at a given position and supports multiple lines. ListView - Displays a scrollable list of data where each item can be activated to perform an action. MenuBar - Provides a menu bar with drop-down and cascading menus. MessageBox - Displays a modal (pup-up) message to the user, with a title, a message and a series of options that the user can choose from. ProgressBar - Displays a progress Bar indicating progress of an activity. RadioGroup - Displays a group of labels each with a selected indicator. Only one of those can be selected at a given time ScrollView - Present a window into a virtual space where subviews are added. Similar to the iOS UIScrollView. ScrollBarView - display a 1-character scrollbar, either horizontal or vertical. StatusBar - A View that snaps to the bottom of a Toplevel displaying set of status items. Includes support for global app keyboard shortcuts. TableView - A View for tabular data based on a System.Data.DataTable. TimeField & DateField - Enables structured editing of dates and times. TextField - Provides a single-line text entry. TextValidateField - Text field that validates input through a ITextValidateProvider. TextView- A multi-line text editing View supporting word-wrap, auto-complete, context menus, undo/redo, and clipboard operations, TopLevel - The base class for modal/pop-up Windows. TreeView - A hierarchical tree view with expandable branches. Branch objects are dynamically determined when expanded using a user defined ITreeBuilder. View - The base class for all views on the screen and represents a visible element that can render itself and contains zero or more nested views. Window - A Toplevel view that draws a border around its Frame with a title at the top. Wizard - Provides navigation and a user interface to collect related data across multiple steps."
  },
  "index.html": {
    "href": "index.html",
    "title": "Terminal.Gui - Cross Platform Terminal UI toolkit for .NET",
    "keywords": "Terminal.Gui - Cross Platform Terminal UI toolkit for .NET A toolkit for building rich console apps for .NET, .NET Core, and Mono that works on Windows, the Mac, and Linux/Unix. Terminal.Gui Project on GitHub Terminal.Gui API Documentation API Reference Views and controls built into the Terminal.Gui library Terminal.Gui API Overview Keyboard Event Processing Event Processing and the Application Main Loop Cross-platform Driver Model Configuration and Theme Manager TableView Deep Dive TreeView Deep Dive UI Catalog UI Catalog is a comprehensive sample library for Terminal.Gui. It provides a simple UI for adding to the catalog of scenarios. UI Catalog API Reference UI Catalog Source"
  },
  "README.html": {
    "href": "README.html",
    "title": "To Generate the Docs Locally",
    "keywords": "This folder generates the API docs for Terminal.Gui. The API documentation is generated via a GitHub Action (.github/workflows/api-docs.yml) using DocFX. The Action publishes the docs to the gh-pages branch, which gets published to https://gui-cs.github.io/Terminal.Gui/. To Generate the Docs Locally Install DotFX https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html Change to the ./docfx folder and run ./build.ps1 Browse to http://localhost:8080 and verify everything looks good. Hit ctrl-c to stop the script. If docfx fails with a Stackoverflow error. Just run it again. And again. Sometimes it takes a few times. If that doesn't work, create a fresh clone or delete the docfx/api, docfx/obj, and docs/ folders and run the steps above again. Note the ./docfx/build.ps1 script will create a ./docs folder. This folder is ignored by .gitignore."
  }
}